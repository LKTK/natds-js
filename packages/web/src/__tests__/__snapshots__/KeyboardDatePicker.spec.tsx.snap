// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`KeyboardDatePicker components should match to snapshot - Default state: KeyboardDatePicker default state snapshot 1`] = `
<Component
  onChange={[Function]}
  theme={
    Object {
      "avatarSizes": Object {
        "huge": Object {
          "fontSize": "1.5rem",
          "size": 80,
        },
        "large": Object {
          "fontSize": "1rem",
          "size": 48,
        },
        "small": Object {
          "fontSize": ".875rem",
          "size": 32,
        },
        "standard": Object {
          "fontSize": "1rem",
          "size": 40,
        },
        "tiny": Object {
          "fontSize": ".625rem",
          "size": 24,
        },
      },
      "buttonSizes": Object {
        "large": Object {
          "minHeight": 48,
          "paddingBottom": 16,
          "paddingLeft": 16,
          "paddingRight": 16,
          "paddingTop": 16,
        },
        "medium": Object {
          "minHeight": 40,
          "paddingBottom": 12,
          "paddingLeft": 16,
          "paddingRight": 16,
          "paddingTop": 12,
        },
        "small": Object {
          "minHeight": 32,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
        },
      },
      "iconSizes": Object {
        "huge": 144,
        "hugex": 192,
        "hugexx": 256,
        "large": 72,
        "largex": 96,
        "largexx": 128,
        "medium": 64,
        "micro": 16,
        "small": 32,
        "standard": 48,
        "tiny": 24,
      },
      "overrides": Object {
        "MuiAvatar": Object {
          "colorDefault": Object {
            "color": "#333333",
          },
        },
        "MuiBadge": Object {
          "badge": Object {
            "padding": "0 4px",
          },
        },
        "MuiButton": Object {
          "outlinedPrimary": Object {
            "color": "#333333",
          },
          "outlinedSecondary": Object {
            "color": "#333333",
          },
          "root": Object {
            "fontSize": "0.875rem",
            "minHeight": "40px",
            "padding": "8px 16px",
          },
          "sizeLarge": Object {
            "fontSize": "0.875rem",
            "minHeight": "48px",
          },
          "sizeSmall": Object {
            "fontSize": "0.875rem",
            "minHeight": "32px",
          },
          "textPrimary": Object {
            "color": "#333333",
          },
        },
        "MuiChip": Object {
          "clickableColorPrimary": Object {
            "&:hover": Object {
              "backgroundColor": "#EF8426",
            },
          },
          "clickableColorSecondary": Object {
            "&:hover": Object {
              "backgroundColor": "#EF8426",
            },
          },
          "deleteIcon": Object {
            "&:hover": Object {
              "color": "#000000",
            },
            "color": "rgba(0, 0, 0, 0.8)",
            "fontSize": "24px",
            "height": "24px",
            "width": "24px",
          },
          "deleteIconColorPrimary": Object {
            "&:hover": Object {
              "color": "#FFFFFF",
            },
            "color": "rgba(255, 255, 255, 0.8)",
          },
          "deleteIconColorSecondary": Object {
            "&:hover": Object {
              "color": "#FFFFFF",
            },
            "color": "rgba(255, 255, 255, 0.8)",
          },
          "deleteIconSmall": Object {
            "fontSize": "16px",
            "height": "16px",
            "width": "16px",
          },
          "icon": Object {
            "fontSize": "24px",
          },
          "iconSmall": Object {
            "fontSize": "16px",
            "height": "16px",
            "marginTop": "1px",
            "width": "16px",
          },
          "outlined": Object {
            "borderColor": "rgba(0, 0, 0, 0.12)",
            "color": "#000000",
          },
          "outlinedPrimary": Object {
            "color": "#000000",
          },
          "outlinedSecondary": Object {
            "color": "#000000",
          },
          "root": Object {
            "& $avatar": Object {
              "backgroundColor": "rgba(0, 0, 0, 0.24)",
              "color": "#333333",
            },
            "&$disabled": Object {
              "opacity": 0.4,
            },
            "backgroundColor": "rgba(0, 0, 0, 0.12)",
            "color": "#333333",
            "fontSize": "0.875rem",
          },
        },
        "MuiExpansionPanel": Object {
          "root": Object {
            "&$disabled": Object {
              "backgroundColor": "#FFFFFF",
              "opacity": 0.32,
            },
            "&$expanded": Object {
              "borderColor": "#F4AB34",
            },
            "border": "transparent 1px solid",
          },
        },
        "MuiExpansionPanelSummary": Object {
          "root": Object {
            "&$disabled": Object {
              "opacity": 1,
            },
            "alignItems": "flex-start",
            "marginTop": "8px",
          },
        },
        "MuiFormLabel": Object {
          "formControl": Object {
            "marginTop": "-4px",
            "transform": "none",
          },
          "root": Object {
            "&.Mui-focused": Object {
              "color": "#777777",
              "fontSize": "0.875rem",
            },
            "fontSize": "0.875rem",
          },
        },
        "MuiIconButton": Object {
          "root": Object {
            "color": "#333333",
            "padding": "8px",
          },
          "sizeSmall": Object {
            "padding": "4px",
          },
        },
        "MuiInputAdornment": Object {
          "root": Object {
            "position": "absolute",
            "right": "0",
          },
        },
        "MuiInputBase": Object {
          "input": Object {
            "&.Mui-disabled": Object {
              "&:hover": Object {
                "boxShadow": "#333333 0 0 0 1px",
              },
              "opacity": 0.24,
            },
            "&:focus": Object {
              "boxShadow": "#F4AB34 0 0 0 2px",
            },
            "&:focus:not(:read-only)": Object {
              "boxShadow": "#F4AB34 0 0 0 2px",
            },
            "&:hover": Object {
              "boxShadow": "#777777 0 0 0 1px",
            },
            "&:hover:not(:placeholder-shown)": Object {
              "boxShadow": "#777777 0 0 0 1px",
            },
            "&:hover:not(:read-only):not(:disabled):not(:focus)": Object {
              "boxShadow": "#777777 0 0 0 1px",
            },
            "&:not(:placeholder-shown)": Object {
              "boxShadow": "#333333 0 0 0 1px",
            },
            "&:placeholder-shown": Object {
              "boxShadow": "#BBBBBB 0 0 0 1px",
            },
            "borderRadius": "4px",
            "boxShadow": "#BBBBBB 0 0 0 1px",
            "color": "#333333",
            "minHeight": "24px",
            "padding": "16px 35px 16px 16px",
          },
          "root": Object {
            "&.MuiInput-underline.Mui-disabled:before": Object {
              "borderBottom": "none",
            },
            "&.MuiInput-underline:after": Object {
              "borderBottom": "none",
            },
            "&.MuiInput-underline:before": Object {
              "borderBottom": "none",
            },
            "&.MuiInput-underline:hover:not(.Mui-disabled):before": Object {
              "borderBottom": "none",
            },
            "color": "#333333",
          },
        },
        "MuiInputLabel": Object {
          "formControl": Object {
            "marginTop": "-4px",
            "transform": "none",
          },
          "shrink": Object {
            "marginTop": "-4px",
            "transform": "none",
          },
        },
        "MuiListItem": Object {
          "button": Object {
            "&:hover": Object {
              "backgroundColor": "rgba(0, 0, 0, 0.04)",
            },
          },
          "root": Object {
            "&$selected": Object {
              "&:hover": Object {
                "backgroundColor": "rgba(0, 0, 0, 0.04)",
              },
              "backgroundColor": "rgba(255, 107, 11, 0.16)",
            },
            "&.Mui-disabled": Object {
              "opacity": 0.32,
            },
          },
        },
        "MuiTab": Object {
          "root": Object {
            "&$disabled": Object {
              "opacity": 0.24,
            },
          },
          "textColorInherit": Object {
            "&$disabled": Object {
              "opacity": 0.24,
            },
          },
          "wrapper": Object {
            "& > *:first-child": Object {
              "marginBottom": "2px !important",
            },
          },
        },
        "MuiTextField": Object {
          "& .MuiInputLabel": Object {
            "marginTop": "20px",
          },
        },
        "MuiToolbar": Object {
          "dense": Object {
            "@media (min-width: 600px)": Object {
              "minHeight": "56px",
            },
            "minHeight": "56px",
          },
          "gutters": Object {
            "@media (min-width: 600px)": Object {
              "padding": "0 16px",
            },
            "padding": "0 16px",
          },
          "regular": Object {
            "@media (min-width: 600px)": Object {
              "minHeight": "56px",
            },
            "minHeight": "56px",
          },
          "root": Object {
            "@media (min-width: 600px)": Object {
              "padding": "0 16px",
            },
            "padding": "0 16px",
          },
        },
      },
      "palette": Object {
        "action": Object {
          "disabled": "rgba(51, 51, 51, 0.24)",
        },
        "background": Object {
          "default": "#FAFAFA",
          "defaultContrastText": "#333333",
          "paper": "#FFFFFF",
          "paperContrastText": "#333333",
        },
        "complementary": Object {
          "highlight": "#000000",
          "link": "#227BBD",
          "linkContrastText": "#FFFFFF",
          "warning": "#FCC433",
          "warningContrastText": "#333333",
        },
        "error": Object {
          "contrastText": "#FFFFFF",
          "main": "#E74627",
        },
        "primary": Object {
          "contrastText": "#333333",
          "dark": "#EF8426",
          "light": "#FEFDE8",
          "main": "#F4AB34",
        },
        "secondary": Object {
          "contrastText": "#000000",
          "dark": "#FF5808",
          "light": "#FFF8E1",
          "main": "#FF6B0B",
        },
        "success": Object {
          "contrastText": "#FFFFFF",
          "main": "#569A32",
        },
        "text": Object {
          "disabled": "#BBBBBB",
          "hint": "#BBBBBB",
          "primary": "#333333",
          "secondary": "#777777",
        },
      },
      "shadows": Object {
        "0": "none",
        "1": "0 1px 1px 0 rgba(0, 0, 0, 0.14)",
        "12": "0 12px 17px 0 rgba(0, 0, 0, 0.14)",
        "16": "0 16px 24px 0 rgba(0, 0, 0, 0.14)",
        "2": "0 2px 2px 0 rgba(0, 0, 0, 0.14)",
        "24": "0 24px 38px 0 rgba(0, 0, 0, 0.14)",
        "3": "0 3px 4px 0 rgba(0, 0, 0, 0.14)",
        "4": "0 4px 5px 0 rgba(0, 0, 0, 0.14)",
        "6": "0 6px 10px 0 rgba(0, 0, 0, 0.14)",
        "8": "0 8px 10px 0 rgba(0, 0, 0, 0.14)",
        "9": "0 9px 12px 0 rgba(0, 0, 0, 0.14)",
      },
      "shape": Object {
        "badgeBorderRadius": 100,
        "borderRadius": 4,
      },
      "sizes": Object {
        "huge": 96,
        "hugex": 128,
        "hugexx": 144,
        "hugexxx": 192,
        "large": 64,
        "largex": 72,
        "largexx": 80,
        "largexxx": 88,
        "medium": 48,
        "mediumx": 56,
        "micro": 4,
        "none": 0,
        "semi": 32,
        "semix": 40,
        "small": 16,
        "standard": 24,
        "tiny": 8,
        "veryhuge": 256,
      },
      "spacing": 8,
      "typography": Object {
        "body1": Object {
          "fontSize": "1rem",
          "fontWeight": 400,
        },
        "body2": Object {
          "fontSize": "0.875rem",
          "fontWeight": 400,
        },
        "button": Object {
          "fontSize": "0.875rem",
          "fontWeight": 600,
        },
        "caption": Object {
          "fontSize": "0.75rem",
          "fontWeight": 400,
        },
        "fontFamily": "\\"Roboto\\", sans-serif",
        "fontFamilyBrand1": "\\"Helvetica Now Display\\"",
        "fontFamilyBrand2": "\\"Helvetica Now Text\\"",
        "fontFamilyBrand3": undefined,
        "fontWeightBold": 700,
        "fontWeightLight": 300,
        "fontWeightMedium": 500,
        "fontWeightRegular": 400,
        "h1": Object {
          "fontSize": "6rem",
          "fontWeight": 300,
        },
        "h2": Object {
          "fontSize": "3.75rem",
          "fontWeight": 300,
        },
        "h3": Object {
          "fontSize": "3rem",
          "fontWeight": 400,
        },
        "h4": Object {
          "fontSize": "2.125rem",
          "fontWeight": 400,
        },
        "h5": Object {
          "fontSize": "1.5rem",
          "fontWeight": 400,
        },
        "h6": Object {
          "fontSize": "1.25rem",
          "fontWeight": 600,
        },
        "overline": Object {
          "fontSize": "0.75rem",
          "fontWeight": 400,
        },
        "subtitle1": Object {
          "fontSize": "1rem",
          "fontWeight": 400,
        },
        "subtitle2": Object {
          "fontSize": "0.875rem",
          "fontWeight": 500,
        },
      },
    }
  }
  value={2020-02-01T03:00:00.000Z}
>
  <Component
    utils={[Function]}
  >
    <WithTheme(ForwardRef)
      label="Only calendar"
      onChange={[Function]}
      theme={
        Object {
          "avatarSizes": Object {
            "huge": Object {
              "fontSize": "1.5rem",
              "size": 80,
            },
            "large": Object {
              "fontSize": "1rem",
              "size": 48,
            },
            "small": Object {
              "fontSize": ".875rem",
              "size": 32,
            },
            "standard": Object {
              "fontSize": "1rem",
              "size": 40,
            },
            "tiny": Object {
              "fontSize": ".625rem",
              "size": 24,
            },
          },
          "buttonSizes": Object {
            "large": Object {
              "minHeight": 48,
              "paddingBottom": 16,
              "paddingLeft": 16,
              "paddingRight": 16,
              "paddingTop": 16,
            },
            "medium": Object {
              "minHeight": 40,
              "paddingBottom": 12,
              "paddingLeft": 16,
              "paddingRight": 16,
              "paddingTop": 12,
            },
            "small": Object {
              "minHeight": 32,
              "paddingBottom": 8,
              "paddingLeft": 8,
              "paddingRight": 8,
              "paddingTop": 8,
            },
          },
          "iconSizes": Object {
            "huge": 144,
            "hugex": 192,
            "hugexx": 256,
            "large": 72,
            "largex": 96,
            "largexx": 128,
            "medium": 64,
            "micro": 16,
            "small": 32,
            "standard": 48,
            "tiny": 24,
          },
          "overrides": Object {
            "MuiAvatar": Object {
              "colorDefault": Object {
                "color": "#333333",
              },
            },
            "MuiBadge": Object {
              "badge": Object {
                "padding": "0 4px",
              },
            },
            "MuiButton": Object {
              "outlinedPrimary": Object {
                "color": "#333333",
              },
              "outlinedSecondary": Object {
                "color": "#333333",
              },
              "root": Object {
                "fontSize": "0.875rem",
                "minHeight": "40px",
                "padding": "8px 16px",
              },
              "sizeLarge": Object {
                "fontSize": "0.875rem",
                "minHeight": "48px",
              },
              "sizeSmall": Object {
                "fontSize": "0.875rem",
                "minHeight": "32px",
              },
              "textPrimary": Object {
                "color": "#333333",
              },
            },
            "MuiChip": Object {
              "clickableColorPrimary": Object {
                "&:hover": Object {
                  "backgroundColor": "#EF8426",
                },
              },
              "clickableColorSecondary": Object {
                "&:hover": Object {
                  "backgroundColor": "#EF8426",
                },
              },
              "deleteIcon": Object {
                "&:hover": Object {
                  "color": "#000000",
                },
                "color": "rgba(0, 0, 0, 0.8)",
                "fontSize": "24px",
                "height": "24px",
                "width": "24px",
              },
              "deleteIconColorPrimary": Object {
                "&:hover": Object {
                  "color": "#FFFFFF",
                },
                "color": "rgba(255, 255, 255, 0.8)",
              },
              "deleteIconColorSecondary": Object {
                "&:hover": Object {
                  "color": "#FFFFFF",
                },
                "color": "rgba(255, 255, 255, 0.8)",
              },
              "deleteIconSmall": Object {
                "fontSize": "16px",
                "height": "16px",
                "width": "16px",
              },
              "icon": Object {
                "fontSize": "24px",
              },
              "iconSmall": Object {
                "fontSize": "16px",
                "height": "16px",
                "marginTop": "1px",
                "width": "16px",
              },
              "outlined": Object {
                "borderColor": "rgba(0, 0, 0, 0.12)",
                "color": "#000000",
              },
              "outlinedPrimary": Object {
                "color": "#000000",
              },
              "outlinedSecondary": Object {
                "color": "#000000",
              },
              "root": Object {
                "& $avatar": Object {
                  "backgroundColor": "rgba(0, 0, 0, 0.24)",
                  "color": "#333333",
                },
                "&$disabled": Object {
                  "opacity": 0.4,
                },
                "backgroundColor": "rgba(0, 0, 0, 0.12)",
                "color": "#333333",
                "fontSize": "0.875rem",
              },
            },
            "MuiExpansionPanel": Object {
              "root": Object {
                "&$disabled": Object {
                  "backgroundColor": "#FFFFFF",
                  "opacity": 0.32,
                },
                "&$expanded": Object {
                  "borderColor": "#F4AB34",
                },
                "border": "transparent 1px solid",
              },
            },
            "MuiExpansionPanelSummary": Object {
              "root": Object {
                "&$disabled": Object {
                  "opacity": 1,
                },
                "alignItems": "flex-start",
                "marginTop": "8px",
              },
            },
            "MuiFormLabel": Object {
              "formControl": Object {
                "marginTop": "-4px",
                "transform": "none",
              },
              "root": Object {
                "&.Mui-focused": Object {
                  "color": "#777777",
                  "fontSize": "0.875rem",
                },
                "fontSize": "0.875rem",
              },
            },
            "MuiIconButton": Object {
              "root": Object {
                "color": "#333333",
                "padding": "8px",
              },
              "sizeSmall": Object {
                "padding": "4px",
              },
            },
            "MuiInputAdornment": Object {
              "root": Object {
                "position": "absolute",
                "right": "0",
              },
            },
            "MuiInputBase": Object {
              "input": Object {
                "&.Mui-disabled": Object {
                  "&:hover": Object {
                    "boxShadow": "#333333 0 0 0 1px",
                  },
                  "opacity": 0.24,
                },
                "&:focus": Object {
                  "boxShadow": "#F4AB34 0 0 0 2px",
                },
                "&:focus:not(:read-only)": Object {
                  "boxShadow": "#F4AB34 0 0 0 2px",
                },
                "&:hover": Object {
                  "boxShadow": "#777777 0 0 0 1px",
                },
                "&:hover:not(:placeholder-shown)": Object {
                  "boxShadow": "#777777 0 0 0 1px",
                },
                "&:hover:not(:read-only):not(:disabled):not(:focus)": Object {
                  "boxShadow": "#777777 0 0 0 1px",
                },
                "&:not(:placeholder-shown)": Object {
                  "boxShadow": "#333333 0 0 0 1px",
                },
                "&:placeholder-shown": Object {
                  "boxShadow": "#BBBBBB 0 0 0 1px",
                },
                "borderRadius": "4px",
                "boxShadow": "#BBBBBB 0 0 0 1px",
                "color": "#333333",
                "minHeight": "24px",
                "padding": "16px 35px 16px 16px",
              },
              "root": Object {
                "&.MuiInput-underline.Mui-disabled:before": Object {
                  "borderBottom": "none",
                },
                "&.MuiInput-underline:after": Object {
                  "borderBottom": "none",
                },
                "&.MuiInput-underline:before": Object {
                  "borderBottom": "none",
                },
                "&.MuiInput-underline:hover:not(.Mui-disabled):before": Object {
                  "borderBottom": "none",
                },
                "color": "#333333",
              },
            },
            "MuiInputLabel": Object {
              "formControl": Object {
                "marginTop": "-4px",
                "transform": "none",
              },
              "shrink": Object {
                "marginTop": "-4px",
                "transform": "none",
              },
            },
            "MuiListItem": Object {
              "button": Object {
                "&:hover": Object {
                  "backgroundColor": "rgba(0, 0, 0, 0.04)",
                },
              },
              "root": Object {
                "&$selected": Object {
                  "&:hover": Object {
                    "backgroundColor": "rgba(0, 0, 0, 0.04)",
                  },
                  "backgroundColor": "rgba(255, 107, 11, 0.16)",
                },
                "&.Mui-disabled": Object {
                  "opacity": 0.32,
                },
              },
            },
            "MuiTab": Object {
              "root": Object {
                "&$disabled": Object {
                  "opacity": 0.24,
                },
              },
              "textColorInherit": Object {
                "&$disabled": Object {
                  "opacity": 0.24,
                },
              },
              "wrapper": Object {
                "& > *:first-child": Object {
                  "marginBottom": "2px !important",
                },
              },
            },
            "MuiTextField": Object {
              "& .MuiInputLabel": Object {
                "marginTop": "20px",
              },
            },
            "MuiToolbar": Object {
              "dense": Object {
                "@media (min-width: 600px)": Object {
                  "minHeight": "56px",
                },
                "minHeight": "56px",
              },
              "gutters": Object {
                "@media (min-width: 600px)": Object {
                  "padding": "0 16px",
                },
                "padding": "0 16px",
              },
              "regular": Object {
                "@media (min-width: 600px)": Object {
                  "minHeight": "56px",
                },
                "minHeight": "56px",
              },
              "root": Object {
                "@media (min-width: 600px)": Object {
                  "padding": "0 16px",
                },
                "padding": "0 16px",
              },
            },
          },
          "palette": Object {
            "action": Object {
              "disabled": "rgba(51, 51, 51, 0.24)",
            },
            "background": Object {
              "default": "#FAFAFA",
              "defaultContrastText": "#333333",
              "paper": "#FFFFFF",
              "paperContrastText": "#333333",
            },
            "complementary": Object {
              "highlight": "#000000",
              "link": "#227BBD",
              "linkContrastText": "#FFFFFF",
              "warning": "#FCC433",
              "warningContrastText": "#333333",
            },
            "error": Object {
              "contrastText": "#FFFFFF",
              "main": "#E74627",
            },
            "primary": Object {
              "contrastText": "#333333",
              "dark": "#EF8426",
              "light": "#FEFDE8",
              "main": "#F4AB34",
            },
            "secondary": Object {
              "contrastText": "#000000",
              "dark": "#FF5808",
              "light": "#FFF8E1",
              "main": "#FF6B0B",
            },
            "success": Object {
              "contrastText": "#FFFFFF",
              "main": "#569A32",
            },
            "text": Object {
              "disabled": "#BBBBBB",
              "hint": "#BBBBBB",
              "primary": "#333333",
              "secondary": "#777777",
            },
          },
          "shadows": Object {
            "0": "none",
            "1": "0 1px 1px 0 rgba(0, 0, 0, 0.14)",
            "12": "0 12px 17px 0 rgba(0, 0, 0, 0.14)",
            "16": "0 16px 24px 0 rgba(0, 0, 0, 0.14)",
            "2": "0 2px 2px 0 rgba(0, 0, 0, 0.14)",
            "24": "0 24px 38px 0 rgba(0, 0, 0, 0.14)",
            "3": "0 3px 4px 0 rgba(0, 0, 0, 0.14)",
            "4": "0 4px 5px 0 rgba(0, 0, 0, 0.14)",
            "6": "0 6px 10px 0 rgba(0, 0, 0, 0.14)",
            "8": "0 8px 10px 0 rgba(0, 0, 0, 0.14)",
            "9": "0 9px 12px 0 rgba(0, 0, 0, 0.14)",
          },
          "shape": Object {
            "badgeBorderRadius": 100,
            "borderRadius": 4,
          },
          "sizes": Object {
            "huge": 96,
            "hugex": 128,
            "hugexx": 144,
            "hugexxx": 192,
            "large": 64,
            "largex": 72,
            "largexx": 80,
            "largexxx": 88,
            "medium": 48,
            "mediumx": 56,
            "micro": 4,
            "none": 0,
            "semi": 32,
            "semix": 40,
            "small": 16,
            "standard": 24,
            "tiny": 8,
            "veryhuge": 256,
          },
          "spacing": 8,
          "typography": Object {
            "body1": Object {
              "fontSize": "1rem",
              "fontWeight": 400,
            },
            "body2": Object {
              "fontSize": "0.875rem",
              "fontWeight": 400,
            },
            "button": Object {
              "fontSize": "0.875rem",
              "fontWeight": 600,
            },
            "caption": Object {
              "fontSize": "0.75rem",
              "fontWeight": 400,
            },
            "fontFamily": "\\"Roboto\\", sans-serif",
            "fontFamilyBrand1": "\\"Helvetica Now Display\\"",
            "fontFamilyBrand2": "\\"Helvetica Now Text\\"",
            "fontFamilyBrand3": undefined,
            "fontWeightBold": 700,
            "fontWeightLight": 300,
            "fontWeightMedium": 500,
            "fontWeightRegular": 400,
            "h1": Object {
              "fontSize": "6rem",
              "fontWeight": 300,
            },
            "h2": Object {
              "fontSize": "3.75rem",
              "fontWeight": 300,
            },
            "h3": Object {
              "fontSize": "3rem",
              "fontWeight": 400,
            },
            "h4": Object {
              "fontSize": "2.125rem",
              "fontWeight": 400,
            },
            "h5": Object {
              "fontSize": "1.5rem",
              "fontWeight": 400,
            },
            "h6": Object {
              "fontSize": "1.25rem",
              "fontWeight": 600,
            },
            "overline": Object {
              "fontSize": "0.75rem",
              "fontWeight": 400,
            },
            "subtitle1": Object {
              "fontSize": "1rem",
              "fontWeight": 400,
            },
            "subtitle2": Object {
              "fontSize": "0.875rem",
              "fontWeight": 500,
            },
          },
        }
      }
      value={2020-02-01T03:00:00.000Z}
      variant="dialog"
    >
      <ForwardRef
        label="Only calendar"
        onChange={[Function]}
        theme={
          Object {
            "avatarSizes": Object {
              "huge": Object {
                "fontSize": "1.5rem",
                "size": 80,
              },
              "large": Object {
                "fontSize": "1rem",
                "size": 48,
              },
              "small": Object {
                "fontSize": ".875rem",
                "size": 32,
              },
              "standard": Object {
                "fontSize": "1rem",
                "size": 40,
              },
              "tiny": Object {
                "fontSize": ".625rem",
                "size": 24,
              },
            },
            "buttonSizes": Object {
              "large": Object {
                "minHeight": 48,
                "paddingBottom": 16,
                "paddingLeft": 16,
                "paddingRight": 16,
                "paddingTop": 16,
              },
              "medium": Object {
                "minHeight": 40,
                "paddingBottom": 12,
                "paddingLeft": 16,
                "paddingRight": 16,
                "paddingTop": 12,
              },
              "small": Object {
                "minHeight": 32,
                "paddingBottom": 8,
                "paddingLeft": 8,
                "paddingRight": 8,
                "paddingTop": 8,
              },
            },
            "iconSizes": Object {
              "huge": 144,
              "hugex": 192,
              "hugexx": 256,
              "large": 72,
              "largex": 96,
              "largexx": 128,
              "medium": 64,
              "micro": 16,
              "small": 32,
              "standard": 48,
              "tiny": 24,
            },
            "overrides": Object {
              "MuiAvatar": Object {
                "colorDefault": Object {
                  "color": "#333333",
                },
              },
              "MuiBadge": Object {
                "badge": Object {
                  "padding": "0 4px",
                },
              },
              "MuiButton": Object {
                "outlinedPrimary": Object {
                  "color": "#333333",
                },
                "outlinedSecondary": Object {
                  "color": "#333333",
                },
                "root": Object {
                  "fontSize": "0.875rem",
                  "minHeight": "40px",
                  "padding": "8px 16px",
                },
                "sizeLarge": Object {
                  "fontSize": "0.875rem",
                  "minHeight": "48px",
                },
                "sizeSmall": Object {
                  "fontSize": "0.875rem",
                  "minHeight": "32px",
                },
                "textPrimary": Object {
                  "color": "#333333",
                },
              },
              "MuiChip": Object {
                "clickableColorPrimary": Object {
                  "&:hover": Object {
                    "backgroundColor": "#EF8426",
                  },
                },
                "clickableColorSecondary": Object {
                  "&:hover": Object {
                    "backgroundColor": "#EF8426",
                  },
                },
                "deleteIcon": Object {
                  "&:hover": Object {
                    "color": "#000000",
                  },
                  "color": "rgba(0, 0, 0, 0.8)",
                  "fontSize": "24px",
                  "height": "24px",
                  "width": "24px",
                },
                "deleteIconColorPrimary": Object {
                  "&:hover": Object {
                    "color": "#FFFFFF",
                  },
                  "color": "rgba(255, 255, 255, 0.8)",
                },
                "deleteIconColorSecondary": Object {
                  "&:hover": Object {
                    "color": "#FFFFFF",
                  },
                  "color": "rgba(255, 255, 255, 0.8)",
                },
                "deleteIconSmall": Object {
                  "fontSize": "16px",
                  "height": "16px",
                  "width": "16px",
                },
                "icon": Object {
                  "fontSize": "24px",
                },
                "iconSmall": Object {
                  "fontSize": "16px",
                  "height": "16px",
                  "marginTop": "1px",
                  "width": "16px",
                },
                "outlined": Object {
                  "borderColor": "rgba(0, 0, 0, 0.12)",
                  "color": "#000000",
                },
                "outlinedPrimary": Object {
                  "color": "#000000",
                },
                "outlinedSecondary": Object {
                  "color": "#000000",
                },
                "root": Object {
                  "& $avatar": Object {
                    "backgroundColor": "rgba(0, 0, 0, 0.24)",
                    "color": "#333333",
                  },
                  "&$disabled": Object {
                    "opacity": 0.4,
                  },
                  "backgroundColor": "rgba(0, 0, 0, 0.12)",
                  "color": "#333333",
                  "fontSize": "0.875rem",
                },
              },
              "MuiExpansionPanel": Object {
                "root": Object {
                  "&$disabled": Object {
                    "backgroundColor": "#FFFFFF",
                    "opacity": 0.32,
                  },
                  "&$expanded": Object {
                    "borderColor": "#F4AB34",
                  },
                  "border": "transparent 1px solid",
                },
              },
              "MuiExpansionPanelSummary": Object {
                "root": Object {
                  "&$disabled": Object {
                    "opacity": 1,
                  },
                  "alignItems": "flex-start",
                  "marginTop": "8px",
                },
              },
              "MuiFormLabel": Object {
                "formControl": Object {
                  "marginTop": "-4px",
                  "transform": "none",
                },
                "root": Object {
                  "&.Mui-focused": Object {
                    "color": "#777777",
                    "fontSize": "0.875rem",
                  },
                  "fontSize": "0.875rem",
                },
              },
              "MuiIconButton": Object {
                "root": Object {
                  "color": "#333333",
                  "padding": "8px",
                },
                "sizeSmall": Object {
                  "padding": "4px",
                },
              },
              "MuiInputAdornment": Object {
                "root": Object {
                  "position": "absolute",
                  "right": "0",
                },
              },
              "MuiInputBase": Object {
                "input": Object {
                  "&.Mui-disabled": Object {
                    "&:hover": Object {
                      "boxShadow": "#333333 0 0 0 1px",
                    },
                    "opacity": 0.24,
                  },
                  "&:focus": Object {
                    "boxShadow": "#F4AB34 0 0 0 2px",
                  },
                  "&:focus:not(:read-only)": Object {
                    "boxShadow": "#F4AB34 0 0 0 2px",
                  },
                  "&:hover": Object {
                    "boxShadow": "#777777 0 0 0 1px",
                  },
                  "&:hover:not(:placeholder-shown)": Object {
                    "boxShadow": "#777777 0 0 0 1px",
                  },
                  "&:hover:not(:read-only):not(:disabled):not(:focus)": Object {
                    "boxShadow": "#777777 0 0 0 1px",
                  },
                  "&:not(:placeholder-shown)": Object {
                    "boxShadow": "#333333 0 0 0 1px",
                  },
                  "&:placeholder-shown": Object {
                    "boxShadow": "#BBBBBB 0 0 0 1px",
                  },
                  "borderRadius": "4px",
                  "boxShadow": "#BBBBBB 0 0 0 1px",
                  "color": "#333333",
                  "minHeight": "24px",
                  "padding": "16px 35px 16px 16px",
                },
                "root": Object {
                  "&.MuiInput-underline.Mui-disabled:before": Object {
                    "borderBottom": "none",
                  },
                  "&.MuiInput-underline:after": Object {
                    "borderBottom": "none",
                  },
                  "&.MuiInput-underline:before": Object {
                    "borderBottom": "none",
                  },
                  "&.MuiInput-underline:hover:not(.Mui-disabled):before": Object {
                    "borderBottom": "none",
                  },
                  "color": "#333333",
                },
              },
              "MuiInputLabel": Object {
                "formControl": Object {
                  "marginTop": "-4px",
                  "transform": "none",
                },
                "shrink": Object {
                  "marginTop": "-4px",
                  "transform": "none",
                },
              },
              "MuiListItem": Object {
                "button": Object {
                  "&:hover": Object {
                    "backgroundColor": "rgba(0, 0, 0, 0.04)",
                  },
                },
                "root": Object {
                  "&$selected": Object {
                    "&:hover": Object {
                      "backgroundColor": "rgba(0, 0, 0, 0.04)",
                    },
                    "backgroundColor": "rgba(255, 107, 11, 0.16)",
                  },
                  "&.Mui-disabled": Object {
                    "opacity": 0.32,
                  },
                },
              },
              "MuiTab": Object {
                "root": Object {
                  "&$disabled": Object {
                    "opacity": 0.24,
                  },
                },
                "textColorInherit": Object {
                  "&$disabled": Object {
                    "opacity": 0.24,
                  },
                },
                "wrapper": Object {
                  "& > *:first-child": Object {
                    "marginBottom": "2px !important",
                  },
                },
              },
              "MuiTextField": Object {
                "& .MuiInputLabel": Object {
                  "marginTop": "20px",
                },
              },
              "MuiToolbar": Object {
                "dense": Object {
                  "@media (min-width: 600px)": Object {
                    "minHeight": "56px",
                  },
                  "minHeight": "56px",
                },
                "gutters": Object {
                  "@media (min-width: 600px)": Object {
                    "padding": "0 16px",
                  },
                  "padding": "0 16px",
                },
                "regular": Object {
                  "@media (min-width: 600px)": Object {
                    "minHeight": "56px",
                  },
                  "minHeight": "56px",
                },
                "root": Object {
                  "@media (min-width: 600px)": Object {
                    "padding": "0 16px",
                  },
                  "padding": "0 16px",
                },
              },
            },
            "palette": Object {
              "action": Object {
                "disabled": "rgba(51, 51, 51, 0.24)",
              },
              "background": Object {
                "default": "#FAFAFA",
                "defaultContrastText": "#333333",
                "paper": "#FFFFFF",
                "paperContrastText": "#333333",
              },
              "complementary": Object {
                "highlight": "#000000",
                "link": "#227BBD",
                "linkContrastText": "#FFFFFF",
                "warning": "#FCC433",
                "warningContrastText": "#333333",
              },
              "error": Object {
                "contrastText": "#FFFFFF",
                "main": "#E74627",
              },
              "primary": Object {
                "contrastText": "#333333",
                "dark": "#EF8426",
                "light": "#FEFDE8",
                "main": "#F4AB34",
              },
              "secondary": Object {
                "contrastText": "#000000",
                "dark": "#FF5808",
                "light": "#FFF8E1",
                "main": "#FF6B0B",
              },
              "success": Object {
                "contrastText": "#FFFFFF",
                "main": "#569A32",
              },
              "text": Object {
                "disabled": "#BBBBBB",
                "hint": "#BBBBBB",
                "primary": "#333333",
                "secondary": "#777777",
              },
            },
            "shadows": Object {
              "0": "none",
              "1": "0 1px 1px 0 rgba(0, 0, 0, 0.14)",
              "12": "0 12px 17px 0 rgba(0, 0, 0, 0.14)",
              "16": "0 16px 24px 0 rgba(0, 0, 0, 0.14)",
              "2": "0 2px 2px 0 rgba(0, 0, 0, 0.14)",
              "24": "0 24px 38px 0 rgba(0, 0, 0, 0.14)",
              "3": "0 3px 4px 0 rgba(0, 0, 0, 0.14)",
              "4": "0 4px 5px 0 rgba(0, 0, 0, 0.14)",
              "6": "0 6px 10px 0 rgba(0, 0, 0, 0.14)",
              "8": "0 8px 10px 0 rgba(0, 0, 0, 0.14)",
              "9": "0 9px 12px 0 rgba(0, 0, 0, 0.14)",
            },
            "shape": Object {
              "badgeBorderRadius": 100,
              "borderRadius": 4,
            },
            "sizes": Object {
              "huge": 96,
              "hugex": 128,
              "hugexx": 144,
              "hugexxx": 192,
              "large": 64,
              "largex": 72,
              "largexx": 80,
              "largexxx": 88,
              "medium": 48,
              "mediumx": 56,
              "micro": 4,
              "none": 0,
              "semi": 32,
              "semix": 40,
              "small": 16,
              "standard": 24,
              "tiny": 8,
              "veryhuge": 256,
            },
            "spacing": 8,
            "typography": Object {
              "body1": Object {
                "fontSize": "1rem",
                "fontWeight": 400,
              },
              "body2": Object {
                "fontSize": "0.875rem",
                "fontWeight": 400,
              },
              "button": Object {
                "fontSize": "0.875rem",
                "fontWeight": 600,
              },
              "caption": Object {
                "fontSize": "0.75rem",
                "fontWeight": 400,
              },
              "fontFamily": "\\"Roboto\\", sans-serif",
              "fontFamilyBrand1": "\\"Helvetica Now Display\\"",
              "fontFamilyBrand2": "\\"Helvetica Now Text\\"",
              "fontFamilyBrand3": undefined,
              "fontWeightBold": 700,
              "fontWeightLight": 300,
              "fontWeightMedium": 500,
              "fontWeightRegular": 400,
              "h1": Object {
                "fontSize": "6rem",
                "fontWeight": 300,
              },
              "h2": Object {
                "fontSize": "3.75rem",
                "fontWeight": 300,
              },
              "h3": Object {
                "fontSize": "3rem",
                "fontWeight": 400,
              },
              "h4": Object {
                "fontSize": "2.125rem",
                "fontWeight": 400,
              },
              "h5": Object {
                "fontSize": "1.5rem",
                "fontWeight": 400,
              },
              "h6": Object {
                "fontSize": "1.25rem",
                "fontWeight": 600,
              },
              "overline": Object {
                "fontSize": "0.75rem",
                "fontWeight": 400,
              },
              "subtitle1": Object {
                "fontSize": "1rem",
                "fontWeight": 400,
              },
              "subtitle2": Object {
                "fontSize": "0.875rem",
                "fontWeight": 500,
              },
            },
          }
        }
        value={2020-02-01T03:00:00.000Z}
        variant="dialog"
      >
        <Component
          label="Only calendar"
          onChange={[Function]}
          theme={
            Object {
              "avatarSizes": Object {
                "huge": Object {
                  "fontSize": "1.5rem",
                  "size": 80,
                },
                "large": Object {
                  "fontSize": "1rem",
                  "size": 48,
                },
                "small": Object {
                  "fontSize": ".875rem",
                  "size": 32,
                },
                "standard": Object {
                  "fontSize": "1rem",
                  "size": 40,
                },
                "tiny": Object {
                  "fontSize": ".625rem",
                  "size": 24,
                },
              },
              "buttonSizes": Object {
                "large": Object {
                  "minHeight": 48,
                  "paddingBottom": 16,
                  "paddingLeft": 16,
                  "paddingRight": 16,
                  "paddingTop": 16,
                },
                "medium": Object {
                  "minHeight": 40,
                  "paddingBottom": 12,
                  "paddingLeft": 16,
                  "paddingRight": 16,
                  "paddingTop": 12,
                },
                "small": Object {
                  "minHeight": 32,
                  "paddingBottom": 8,
                  "paddingLeft": 8,
                  "paddingRight": 8,
                  "paddingTop": 8,
                },
              },
              "iconSizes": Object {
                "huge": 144,
                "hugex": 192,
                "hugexx": 256,
                "large": 72,
                "largex": 96,
                "largexx": 128,
                "medium": 64,
                "micro": 16,
                "small": 32,
                "standard": 48,
                "tiny": 24,
              },
              "overrides": Object {
                "MuiAvatar": Object {
                  "colorDefault": Object {
                    "color": "#333333",
                  },
                },
                "MuiBadge": Object {
                  "badge": Object {
                    "padding": "0 4px",
                  },
                },
                "MuiButton": Object {
                  "outlinedPrimary": Object {
                    "color": "#333333",
                  },
                  "outlinedSecondary": Object {
                    "color": "#333333",
                  },
                  "root": Object {
                    "fontSize": "0.875rem",
                    "minHeight": "40px",
                    "padding": "8px 16px",
                  },
                  "sizeLarge": Object {
                    "fontSize": "0.875rem",
                    "minHeight": "48px",
                  },
                  "sizeSmall": Object {
                    "fontSize": "0.875rem",
                    "minHeight": "32px",
                  },
                  "textPrimary": Object {
                    "color": "#333333",
                  },
                },
                "MuiChip": Object {
                  "clickableColorPrimary": Object {
                    "&:hover": Object {
                      "backgroundColor": "#EF8426",
                    },
                  },
                  "clickableColorSecondary": Object {
                    "&:hover": Object {
                      "backgroundColor": "#EF8426",
                    },
                  },
                  "deleteIcon": Object {
                    "&:hover": Object {
                      "color": "#000000",
                    },
                    "color": "rgba(0, 0, 0, 0.8)",
                    "fontSize": "24px",
                    "height": "24px",
                    "width": "24px",
                  },
                  "deleteIconColorPrimary": Object {
                    "&:hover": Object {
                      "color": "#FFFFFF",
                    },
                    "color": "rgba(255, 255, 255, 0.8)",
                  },
                  "deleteIconColorSecondary": Object {
                    "&:hover": Object {
                      "color": "#FFFFFF",
                    },
                    "color": "rgba(255, 255, 255, 0.8)",
                  },
                  "deleteIconSmall": Object {
                    "fontSize": "16px",
                    "height": "16px",
                    "width": "16px",
                  },
                  "icon": Object {
                    "fontSize": "24px",
                  },
                  "iconSmall": Object {
                    "fontSize": "16px",
                    "height": "16px",
                    "marginTop": "1px",
                    "width": "16px",
                  },
                  "outlined": Object {
                    "borderColor": "rgba(0, 0, 0, 0.12)",
                    "color": "#000000",
                  },
                  "outlinedPrimary": Object {
                    "color": "#000000",
                  },
                  "outlinedSecondary": Object {
                    "color": "#000000",
                  },
                  "root": Object {
                    "& $avatar": Object {
                      "backgroundColor": "rgba(0, 0, 0, 0.24)",
                      "color": "#333333",
                    },
                    "&$disabled": Object {
                      "opacity": 0.4,
                    },
                    "backgroundColor": "rgba(0, 0, 0, 0.12)",
                    "color": "#333333",
                    "fontSize": "0.875rem",
                  },
                },
                "MuiExpansionPanel": Object {
                  "root": Object {
                    "&$disabled": Object {
                      "backgroundColor": "#FFFFFF",
                      "opacity": 0.32,
                    },
                    "&$expanded": Object {
                      "borderColor": "#F4AB34",
                    },
                    "border": "transparent 1px solid",
                  },
                },
                "MuiExpansionPanelSummary": Object {
                  "root": Object {
                    "&$disabled": Object {
                      "opacity": 1,
                    },
                    "alignItems": "flex-start",
                    "marginTop": "8px",
                  },
                },
                "MuiFormLabel": Object {
                  "formControl": Object {
                    "marginTop": "-4px",
                    "transform": "none",
                  },
                  "root": Object {
                    "&.Mui-focused": Object {
                      "color": "#777777",
                      "fontSize": "0.875rem",
                    },
                    "fontSize": "0.875rem",
                  },
                },
                "MuiIconButton": Object {
                  "root": Object {
                    "color": "#333333",
                    "padding": "8px",
                  },
                  "sizeSmall": Object {
                    "padding": "4px",
                  },
                },
                "MuiInputAdornment": Object {
                  "root": Object {
                    "position": "absolute",
                    "right": "0",
                  },
                },
                "MuiInputBase": Object {
                  "input": Object {
                    "&.Mui-disabled": Object {
                      "&:hover": Object {
                        "boxShadow": "#333333 0 0 0 1px",
                      },
                      "opacity": 0.24,
                    },
                    "&:focus": Object {
                      "boxShadow": "#F4AB34 0 0 0 2px",
                    },
                    "&:focus:not(:read-only)": Object {
                      "boxShadow": "#F4AB34 0 0 0 2px",
                    },
                    "&:hover": Object {
                      "boxShadow": "#777777 0 0 0 1px",
                    },
                    "&:hover:not(:placeholder-shown)": Object {
                      "boxShadow": "#777777 0 0 0 1px",
                    },
                    "&:hover:not(:read-only):not(:disabled):not(:focus)": Object {
                      "boxShadow": "#777777 0 0 0 1px",
                    },
                    "&:not(:placeholder-shown)": Object {
                      "boxShadow": "#333333 0 0 0 1px",
                    },
                    "&:placeholder-shown": Object {
                      "boxShadow": "#BBBBBB 0 0 0 1px",
                    },
                    "borderRadius": "4px",
                    "boxShadow": "#BBBBBB 0 0 0 1px",
                    "color": "#333333",
                    "minHeight": "24px",
                    "padding": "16px 35px 16px 16px",
                  },
                  "root": Object {
                    "&.MuiInput-underline.Mui-disabled:before": Object {
                      "borderBottom": "none",
                    },
                    "&.MuiInput-underline:after": Object {
                      "borderBottom": "none",
                    },
                    "&.MuiInput-underline:before": Object {
                      "borderBottom": "none",
                    },
                    "&.MuiInput-underline:hover:not(.Mui-disabled):before": Object {
                      "borderBottom": "none",
                    },
                    "color": "#333333",
                  },
                },
                "MuiInputLabel": Object {
                  "formControl": Object {
                    "marginTop": "-4px",
                    "transform": "none",
                  },
                  "shrink": Object {
                    "marginTop": "-4px",
                    "transform": "none",
                  },
                },
                "MuiListItem": Object {
                  "button": Object {
                    "&:hover": Object {
                      "backgroundColor": "rgba(0, 0, 0, 0.04)",
                    },
                  },
                  "root": Object {
                    "&$selected": Object {
                      "&:hover": Object {
                        "backgroundColor": "rgba(0, 0, 0, 0.04)",
                      },
                      "backgroundColor": "rgba(255, 107, 11, 0.16)",
                    },
                    "&.Mui-disabled": Object {
                      "opacity": 0.32,
                    },
                  },
                },
                "MuiTab": Object {
                  "root": Object {
                    "&$disabled": Object {
                      "opacity": 0.24,
                    },
                  },
                  "textColorInherit": Object {
                    "&$disabled": Object {
                      "opacity": 0.24,
                    },
                  },
                  "wrapper": Object {
                    "& > *:first-child": Object {
                      "marginBottom": "2px !important",
                    },
                  },
                },
                "MuiTextField": Object {
                  "& .MuiInputLabel": Object {
                    "marginTop": "20px",
                  },
                },
                "MuiToolbar": Object {
                  "dense": Object {
                    "@media (min-width: 600px)": Object {
                      "minHeight": "56px",
                    },
                    "minHeight": "56px",
                  },
                  "gutters": Object {
                    "@media (min-width: 600px)": Object {
                      "padding": "0 16px",
                    },
                    "padding": "0 16px",
                  },
                  "regular": Object {
                    "@media (min-width: 600px)": Object {
                      "minHeight": "56px",
                    },
                    "minHeight": "56px",
                  },
                  "root": Object {
                    "@media (min-width: 600px)": Object {
                      "padding": "0 16px",
                    },
                    "padding": "0 16px",
                  },
                },
              },
              "palette": Object {
                "action": Object {
                  "disabled": "rgba(51, 51, 51, 0.24)",
                },
                "background": Object {
                  "default": "#FAFAFA",
                  "defaultContrastText": "#333333",
                  "paper": "#FFFFFF",
                  "paperContrastText": "#333333",
                },
                "complementary": Object {
                  "highlight": "#000000",
                  "link": "#227BBD",
                  "linkContrastText": "#FFFFFF",
                  "warning": "#FCC433",
                  "warningContrastText": "#333333",
                },
                "error": Object {
                  "contrastText": "#FFFFFF",
                  "main": "#E74627",
                },
                "primary": Object {
                  "contrastText": "#333333",
                  "dark": "#EF8426",
                  "light": "#FEFDE8",
                  "main": "#F4AB34",
                },
                "secondary": Object {
                  "contrastText": "#000000",
                  "dark": "#FF5808",
                  "light": "#FFF8E1",
                  "main": "#FF6B0B",
                },
                "success": Object {
                  "contrastText": "#FFFFFF",
                  "main": "#569A32",
                },
                "text": Object {
                  "disabled": "#BBBBBB",
                  "hint": "#BBBBBB",
                  "primary": "#333333",
                  "secondary": "#777777",
                },
              },
              "shadows": Object {
                "0": "none",
                "1": "0 1px 1px 0 rgba(0, 0, 0, 0.14)",
                "12": "0 12px 17px 0 rgba(0, 0, 0, 0.14)",
                "16": "0 16px 24px 0 rgba(0, 0, 0, 0.14)",
                "2": "0 2px 2px 0 rgba(0, 0, 0, 0.14)",
                "24": "0 24px 38px 0 rgba(0, 0, 0, 0.14)",
                "3": "0 3px 4px 0 rgba(0, 0, 0, 0.14)",
                "4": "0 4px 5px 0 rgba(0, 0, 0, 0.14)",
                "6": "0 6px 10px 0 rgba(0, 0, 0, 0.14)",
                "8": "0 8px 10px 0 rgba(0, 0, 0, 0.14)",
                "9": "0 9px 12px 0 rgba(0, 0, 0, 0.14)",
              },
              "shape": Object {
                "badgeBorderRadius": 100,
                "borderRadius": 4,
              },
              "sizes": Object {
                "huge": 96,
                "hugex": 128,
                "hugexx": 144,
                "hugexxx": 192,
                "large": 64,
                "largex": 72,
                "largexx": 80,
                "largexxx": 88,
                "medium": 48,
                "mediumx": 56,
                "micro": 4,
                "none": 0,
                "semi": 32,
                "semix": 40,
                "small": 16,
                "standard": 24,
                "tiny": 8,
                "veryhuge": 256,
              },
              "spacing": 8,
              "typography": Object {
                "body1": Object {
                  "fontSize": "1rem",
                  "fontWeight": 400,
                },
                "body2": Object {
                  "fontSize": "0.875rem",
                  "fontWeight": 400,
                },
                "button": Object {
                  "fontSize": "0.875rem",
                  "fontWeight": 600,
                },
                "caption": Object {
                  "fontSize": "0.75rem",
                  "fontWeight": 400,
                },
                "fontFamily": "\\"Roboto\\", sans-serif",
                "fontFamilyBrand1": "\\"Helvetica Now Display\\"",
                "fontFamilyBrand2": "\\"Helvetica Now Text\\"",
                "fontFamilyBrand3": undefined,
                "fontWeightBold": 700,
                "fontWeightLight": 300,
                "fontWeightMedium": 500,
                "fontWeightRegular": 400,
                "h1": Object {
                  "fontSize": "6rem",
                  "fontWeight": 300,
                },
                "h2": Object {
                  "fontSize": "3.75rem",
                  "fontWeight": 300,
                },
                "h3": Object {
                  "fontSize": "3rem",
                  "fontWeight": 400,
                },
                "h4": Object {
                  "fontSize": "2.125rem",
                  "fontWeight": 400,
                },
                "h5": Object {
                  "fontSize": "1.5rem",
                  "fontWeight": 400,
                },
                "h6": Object {
                  "fontSize": "1.25rem",
                  "fontWeight": 600,
                },
                "overline": Object {
                  "fontSize": "0.75rem",
                  "fontWeight": 400,
                },
                "subtitle1": Object {
                  "fontSize": "1rem",
                  "fontWeight": 400,
                },
                "subtitle2": Object {
                  "fontSize": "0.875rem",
                  "fontWeight": 500,
                },
              },
            }
          }
          value={2020-02-01T03:00:00.000Z}
          variant="dialog"
        >
          <styled.div
            theme={
              Object {
                "avatarSizes": Object {
                  "huge": Object {
                    "fontSize": "1.5rem",
                    "size": 80,
                  },
                  "large": Object {
                    "fontSize": "1rem",
                    "size": 48,
                  },
                  "small": Object {
                    "fontSize": ".875rem",
                    "size": 32,
                  },
                  "standard": Object {
                    "fontSize": "1rem",
                    "size": 40,
                  },
                  "tiny": Object {
                    "fontSize": ".625rem",
                    "size": 24,
                  },
                },
                "buttonSizes": Object {
                  "large": Object {
                    "minHeight": 48,
                    "paddingBottom": 16,
                    "paddingLeft": 16,
                    "paddingRight": 16,
                    "paddingTop": 16,
                  },
                  "medium": Object {
                    "minHeight": 40,
                    "paddingBottom": 12,
                    "paddingLeft": 16,
                    "paddingRight": 16,
                    "paddingTop": 12,
                  },
                  "small": Object {
                    "minHeight": 32,
                    "paddingBottom": 8,
                    "paddingLeft": 8,
                    "paddingRight": 8,
                    "paddingTop": 8,
                  },
                },
                "iconSizes": Object {
                  "huge": 144,
                  "hugex": 192,
                  "hugexx": 256,
                  "large": 72,
                  "largex": 96,
                  "largexx": 128,
                  "medium": 64,
                  "micro": 16,
                  "small": 32,
                  "standard": 48,
                  "tiny": 24,
                },
                "overrides": Object {
                  "MuiAvatar": Object {
                    "colorDefault": Object {
                      "color": "#333333",
                    },
                  },
                  "MuiBadge": Object {
                    "badge": Object {
                      "padding": "0 4px",
                    },
                  },
                  "MuiButton": Object {
                    "outlinedPrimary": Object {
                      "color": "#333333",
                    },
                    "outlinedSecondary": Object {
                      "color": "#333333",
                    },
                    "root": Object {
                      "fontSize": "0.875rem",
                      "minHeight": "40px",
                      "padding": "8px 16px",
                    },
                    "sizeLarge": Object {
                      "fontSize": "0.875rem",
                      "minHeight": "48px",
                    },
                    "sizeSmall": Object {
                      "fontSize": "0.875rem",
                      "minHeight": "32px",
                    },
                    "textPrimary": Object {
                      "color": "#333333",
                    },
                  },
                  "MuiChip": Object {
                    "clickableColorPrimary": Object {
                      "&:hover": Object {
                        "backgroundColor": "#EF8426",
                      },
                    },
                    "clickableColorSecondary": Object {
                      "&:hover": Object {
                        "backgroundColor": "#EF8426",
                      },
                    },
                    "deleteIcon": Object {
                      "&:hover": Object {
                        "color": "#000000",
                      },
                      "color": "rgba(0, 0, 0, 0.8)",
                      "fontSize": "24px",
                      "height": "24px",
                      "width": "24px",
                    },
                    "deleteIconColorPrimary": Object {
                      "&:hover": Object {
                        "color": "#FFFFFF",
                      },
                      "color": "rgba(255, 255, 255, 0.8)",
                    },
                    "deleteIconColorSecondary": Object {
                      "&:hover": Object {
                        "color": "#FFFFFF",
                      },
                      "color": "rgba(255, 255, 255, 0.8)",
                    },
                    "deleteIconSmall": Object {
                      "fontSize": "16px",
                      "height": "16px",
                      "width": "16px",
                    },
                    "icon": Object {
                      "fontSize": "24px",
                    },
                    "iconSmall": Object {
                      "fontSize": "16px",
                      "height": "16px",
                      "marginTop": "1px",
                      "width": "16px",
                    },
                    "outlined": Object {
                      "borderColor": "rgba(0, 0, 0, 0.12)",
                      "color": "#000000",
                    },
                    "outlinedPrimary": Object {
                      "color": "#000000",
                    },
                    "outlinedSecondary": Object {
                      "color": "#000000",
                    },
                    "root": Object {
                      "& $avatar": Object {
                        "backgroundColor": "rgba(0, 0, 0, 0.24)",
                        "color": "#333333",
                      },
                      "&$disabled": Object {
                        "opacity": 0.4,
                      },
                      "backgroundColor": "rgba(0, 0, 0, 0.12)",
                      "color": "#333333",
                      "fontSize": "0.875rem",
                    },
                  },
                  "MuiExpansionPanel": Object {
                    "root": Object {
                      "&$disabled": Object {
                        "backgroundColor": "#FFFFFF",
                        "opacity": 0.32,
                      },
                      "&$expanded": Object {
                        "borderColor": "#F4AB34",
                      },
                      "border": "transparent 1px solid",
                    },
                  },
                  "MuiExpansionPanelSummary": Object {
                    "root": Object {
                      "&$disabled": Object {
                        "opacity": 1,
                      },
                      "alignItems": "flex-start",
                      "marginTop": "8px",
                    },
                  },
                  "MuiFormLabel": Object {
                    "formControl": Object {
                      "marginTop": "-4px",
                      "transform": "none",
                    },
                    "root": Object {
                      "&.Mui-focused": Object {
                        "color": "#777777",
                        "fontSize": "0.875rem",
                      },
                      "fontSize": "0.875rem",
                    },
                  },
                  "MuiIconButton": Object {
                    "root": Object {
                      "color": "#333333",
                      "padding": "8px",
                    },
                    "sizeSmall": Object {
                      "padding": "4px",
                    },
                  },
                  "MuiInputAdornment": Object {
                    "root": Object {
                      "position": "absolute",
                      "right": "0",
                    },
                  },
                  "MuiInputBase": Object {
                    "input": Object {
                      "&.Mui-disabled": Object {
                        "&:hover": Object {
                          "boxShadow": "#333333 0 0 0 1px",
                        },
                        "opacity": 0.24,
                      },
                      "&:focus": Object {
                        "boxShadow": "#F4AB34 0 0 0 2px",
                      },
                      "&:focus:not(:read-only)": Object {
                        "boxShadow": "#F4AB34 0 0 0 2px",
                      },
                      "&:hover": Object {
                        "boxShadow": "#777777 0 0 0 1px",
                      },
                      "&:hover:not(:placeholder-shown)": Object {
                        "boxShadow": "#777777 0 0 0 1px",
                      },
                      "&:hover:not(:read-only):not(:disabled):not(:focus)": Object {
                        "boxShadow": "#777777 0 0 0 1px",
                      },
                      "&:not(:placeholder-shown)": Object {
                        "boxShadow": "#333333 0 0 0 1px",
                      },
                      "&:placeholder-shown": Object {
                        "boxShadow": "#BBBBBB 0 0 0 1px",
                      },
                      "borderRadius": "4px",
                      "boxShadow": "#BBBBBB 0 0 0 1px",
                      "color": "#333333",
                      "minHeight": "24px",
                      "padding": "16px 35px 16px 16px",
                    },
                    "root": Object {
                      "&.MuiInput-underline.Mui-disabled:before": Object {
                        "borderBottom": "none",
                      },
                      "&.MuiInput-underline:after": Object {
                        "borderBottom": "none",
                      },
                      "&.MuiInput-underline:before": Object {
                        "borderBottom": "none",
                      },
                      "&.MuiInput-underline:hover:not(.Mui-disabled):before": Object {
                        "borderBottom": "none",
                      },
                      "color": "#333333",
                    },
                  },
                  "MuiInputLabel": Object {
                    "formControl": Object {
                      "marginTop": "-4px",
                      "transform": "none",
                    },
                    "shrink": Object {
                      "marginTop": "-4px",
                      "transform": "none",
                    },
                  },
                  "MuiListItem": Object {
                    "button": Object {
                      "&:hover": Object {
                        "backgroundColor": "rgba(0, 0, 0, 0.04)",
                      },
                    },
                    "root": Object {
                      "&$selected": Object {
                        "&:hover": Object {
                          "backgroundColor": "rgba(0, 0, 0, 0.04)",
                        },
                        "backgroundColor": "rgba(255, 107, 11, 0.16)",
                      },
                      "&.Mui-disabled": Object {
                        "opacity": 0.32,
                      },
                    },
                  },
                  "MuiTab": Object {
                    "root": Object {
                      "&$disabled": Object {
                        "opacity": 0.24,
                      },
                    },
                    "textColorInherit": Object {
                      "&$disabled": Object {
                        "opacity": 0.24,
                      },
                    },
                    "wrapper": Object {
                      "& > *:first-child": Object {
                        "marginBottom": "2px !important",
                      },
                    },
                  },
                  "MuiTextField": Object {
                    "& .MuiInputLabel": Object {
                      "marginTop": "20px",
                    },
                  },
                  "MuiToolbar": Object {
                    "dense": Object {
                      "@media (min-width: 600px)": Object {
                        "minHeight": "56px",
                      },
                      "minHeight": "56px",
                    },
                    "gutters": Object {
                      "@media (min-width: 600px)": Object {
                        "padding": "0 16px",
                      },
                      "padding": "0 16px",
                    },
                    "regular": Object {
                      "@media (min-width: 600px)": Object {
                        "minHeight": "56px",
                      },
                      "minHeight": "56px",
                    },
                    "root": Object {
                      "@media (min-width: 600px)": Object {
                        "padding": "0 16px",
                      },
                      "padding": "0 16px",
                    },
                  },
                },
                "palette": Object {
                  "action": Object {
                    "disabled": "rgba(51, 51, 51, 0.24)",
                  },
                  "background": Object {
                    "default": "#FAFAFA",
                    "defaultContrastText": "#333333",
                    "paper": "#FFFFFF",
                    "paperContrastText": "#333333",
                  },
                  "complementary": Object {
                    "highlight": "#000000",
                    "link": "#227BBD",
                    "linkContrastText": "#FFFFFF",
                    "warning": "#FCC433",
                    "warningContrastText": "#333333",
                  },
                  "error": Object {
                    "contrastText": "#FFFFFF",
                    "main": "#E74627",
                  },
                  "primary": Object {
                    "contrastText": "#333333",
                    "dark": "#EF8426",
                    "light": "#FEFDE8",
                    "main": "#F4AB34",
                  },
                  "secondary": Object {
                    "contrastText": "#000000",
                    "dark": "#FF5808",
                    "light": "#FFF8E1",
                    "main": "#FF6B0B",
                  },
                  "success": Object {
                    "contrastText": "#FFFFFF",
                    "main": "#569A32",
                  },
                  "text": Object {
                    "disabled": "#BBBBBB",
                    "hint": "#BBBBBB",
                    "primary": "#333333",
                    "secondary": "#777777",
                  },
                },
                "shadows": Object {
                  "0": "none",
                  "1": "0 1px 1px 0 rgba(0, 0, 0, 0.14)",
                  "12": "0 12px 17px 0 rgba(0, 0, 0, 0.14)",
                  "16": "0 16px 24px 0 rgba(0, 0, 0, 0.14)",
                  "2": "0 2px 2px 0 rgba(0, 0, 0, 0.14)",
                  "24": "0 24px 38px 0 rgba(0, 0, 0, 0.14)",
                  "3": "0 3px 4px 0 rgba(0, 0, 0, 0.14)",
                  "4": "0 4px 5px 0 rgba(0, 0, 0, 0.14)",
                  "6": "0 6px 10px 0 rgba(0, 0, 0, 0.14)",
                  "8": "0 8px 10px 0 rgba(0, 0, 0, 0.14)",
                  "9": "0 9px 12px 0 rgba(0, 0, 0, 0.14)",
                },
                "shape": Object {
                  "badgeBorderRadius": 100,
                  "borderRadius": 4,
                },
                "sizes": Object {
                  "huge": 96,
                  "hugex": 128,
                  "hugexx": 144,
                  "hugexxx": 192,
                  "large": 64,
                  "largex": 72,
                  "largexx": 80,
                  "largexxx": 88,
                  "medium": 48,
                  "mediumx": 56,
                  "micro": 4,
                  "none": 0,
                  "semi": 32,
                  "semix": 40,
                  "small": 16,
                  "standard": 24,
                  "tiny": 8,
                  "veryhuge": 256,
                },
                "spacing": 8,
                "typography": Object {
                  "body1": Object {
                    "fontSize": "1rem",
                    "fontWeight": 400,
                  },
                  "body2": Object {
                    "fontSize": "0.875rem",
                    "fontWeight": 400,
                  },
                  "button": Object {
                    "fontSize": "0.875rem",
                    "fontWeight": 600,
                  },
                  "caption": Object {
                    "fontSize": "0.75rem",
                    "fontWeight": 400,
                  },
                  "fontFamily": "\\"Roboto\\", sans-serif",
                  "fontFamilyBrand1": "\\"Helvetica Now Display\\"",
                  "fontFamilyBrand2": "\\"Helvetica Now Text\\"",
                  "fontFamilyBrand3": undefined,
                  "fontWeightBold": 700,
                  "fontWeightLight": 300,
                  "fontWeightMedium": 500,
                  "fontWeightRegular": 400,
                  "h1": Object {
                    "fontSize": "6rem",
                    "fontWeight": 300,
                  },
                  "h2": Object {
                    "fontSize": "3.75rem",
                    "fontWeight": 300,
                  },
                  "h3": Object {
                    "fontSize": "3rem",
                    "fontWeight": 400,
                  },
                  "h4": Object {
                    "fontSize": "2.125rem",
                    "fontWeight": 400,
                  },
                  "h5": Object {
                    "fontSize": "1.5rem",
                    "fontWeight": 400,
                  },
                  "h6": Object {
                    "fontSize": "1.25rem",
                    "fontWeight": 600,
                  },
                  "overline": Object {
                    "fontSize": "0.75rem",
                    "fontWeight": 400,
                  },
                  "subtitle1": Object {
                    "fontSize": "1rem",
                    "fontWeight": 400,
                  },
                  "subtitle2": Object {
                    "fontSize": "0.875rem",
                    "fontWeight": 500,
                  },
                },
              }
            }
          >
            <StyledComponent
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-gqjmRU",
                    "isStatic": false,
                    "lastClassName": "hYFWIQ",
                    "rules": Array [
                      "
  display: flex;
  flex-flow: column nowrap;
  font-family: ",
                      [Function],
                      ";
",
                    ],
                  },
                  "displayName": "styled.div",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "sc-gqjmRU",
                  "target": "div",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
              theme={
                Object {
                  "avatarSizes": Object {
                    "huge": Object {
                      "fontSize": "1.5rem",
                      "size": 80,
                    },
                    "large": Object {
                      "fontSize": "1rem",
                      "size": 48,
                    },
                    "small": Object {
                      "fontSize": ".875rem",
                      "size": 32,
                    },
                    "standard": Object {
                      "fontSize": "1rem",
                      "size": 40,
                    },
                    "tiny": Object {
                      "fontSize": ".625rem",
                      "size": 24,
                    },
                  },
                  "buttonSizes": Object {
                    "large": Object {
                      "minHeight": 48,
                      "paddingBottom": 16,
                      "paddingLeft": 16,
                      "paddingRight": 16,
                      "paddingTop": 16,
                    },
                    "medium": Object {
                      "minHeight": 40,
                      "paddingBottom": 12,
                      "paddingLeft": 16,
                      "paddingRight": 16,
                      "paddingTop": 12,
                    },
                    "small": Object {
                      "minHeight": 32,
                      "paddingBottom": 8,
                      "paddingLeft": 8,
                      "paddingRight": 8,
                      "paddingTop": 8,
                    },
                  },
                  "iconSizes": Object {
                    "huge": 144,
                    "hugex": 192,
                    "hugexx": 256,
                    "large": 72,
                    "largex": 96,
                    "largexx": 128,
                    "medium": 64,
                    "micro": 16,
                    "small": 32,
                    "standard": 48,
                    "tiny": 24,
                  },
                  "overrides": Object {
                    "MuiAvatar": Object {
                      "colorDefault": Object {
                        "color": "#333333",
                      },
                    },
                    "MuiBadge": Object {
                      "badge": Object {
                        "padding": "0 4px",
                      },
                    },
                    "MuiButton": Object {
                      "outlinedPrimary": Object {
                        "color": "#333333",
                      },
                      "outlinedSecondary": Object {
                        "color": "#333333",
                      },
                      "root": Object {
                        "fontSize": "0.875rem",
                        "minHeight": "40px",
                        "padding": "8px 16px",
                      },
                      "sizeLarge": Object {
                        "fontSize": "0.875rem",
                        "minHeight": "48px",
                      },
                      "sizeSmall": Object {
                        "fontSize": "0.875rem",
                        "minHeight": "32px",
                      },
                      "textPrimary": Object {
                        "color": "#333333",
                      },
                    },
                    "MuiChip": Object {
                      "clickableColorPrimary": Object {
                        "&:hover": Object {
                          "backgroundColor": "#EF8426",
                        },
                      },
                      "clickableColorSecondary": Object {
                        "&:hover": Object {
                          "backgroundColor": "#EF8426",
                        },
                      },
                      "deleteIcon": Object {
                        "&:hover": Object {
                          "color": "#000000",
                        },
                        "color": "rgba(0, 0, 0, 0.8)",
                        "fontSize": "24px",
                        "height": "24px",
                        "width": "24px",
                      },
                      "deleteIconColorPrimary": Object {
                        "&:hover": Object {
                          "color": "#FFFFFF",
                        },
                        "color": "rgba(255, 255, 255, 0.8)",
                      },
                      "deleteIconColorSecondary": Object {
                        "&:hover": Object {
                          "color": "#FFFFFF",
                        },
                        "color": "rgba(255, 255, 255, 0.8)",
                      },
                      "deleteIconSmall": Object {
                        "fontSize": "16px",
                        "height": "16px",
                        "width": "16px",
                      },
                      "icon": Object {
                        "fontSize": "24px",
                      },
                      "iconSmall": Object {
                        "fontSize": "16px",
                        "height": "16px",
                        "marginTop": "1px",
                        "width": "16px",
                      },
                      "outlined": Object {
                        "borderColor": "rgba(0, 0, 0, 0.12)",
                        "color": "#000000",
                      },
                      "outlinedPrimary": Object {
                        "color": "#000000",
                      },
                      "outlinedSecondary": Object {
                        "color": "#000000",
                      },
                      "root": Object {
                        "& $avatar": Object {
                          "backgroundColor": "rgba(0, 0, 0, 0.24)",
                          "color": "#333333",
                        },
                        "&$disabled": Object {
                          "opacity": 0.4,
                        },
                        "backgroundColor": "rgba(0, 0, 0, 0.12)",
                        "color": "#333333",
                        "fontSize": "0.875rem",
                      },
                    },
                    "MuiExpansionPanel": Object {
                      "root": Object {
                        "&$disabled": Object {
                          "backgroundColor": "#FFFFFF",
                          "opacity": 0.32,
                        },
                        "&$expanded": Object {
                          "borderColor": "#F4AB34",
                        },
                        "border": "transparent 1px solid",
                      },
                    },
                    "MuiExpansionPanelSummary": Object {
                      "root": Object {
                        "&$disabled": Object {
                          "opacity": 1,
                        },
                        "alignItems": "flex-start",
                        "marginTop": "8px",
                      },
                    },
                    "MuiFormLabel": Object {
                      "formControl": Object {
                        "marginTop": "-4px",
                        "transform": "none",
                      },
                      "root": Object {
                        "&.Mui-focused": Object {
                          "color": "#777777",
                          "fontSize": "0.875rem",
                        },
                        "fontSize": "0.875rem",
                      },
                    },
                    "MuiIconButton": Object {
                      "root": Object {
                        "color": "#333333",
                        "padding": "8px",
                      },
                      "sizeSmall": Object {
                        "padding": "4px",
                      },
                    },
                    "MuiInputAdornment": Object {
                      "root": Object {
                        "position": "absolute",
                        "right": "0",
                      },
                    },
                    "MuiInputBase": Object {
                      "input": Object {
                        "&.Mui-disabled": Object {
                          "&:hover": Object {
                            "boxShadow": "#333333 0 0 0 1px",
                          },
                          "opacity": 0.24,
                        },
                        "&:focus": Object {
                          "boxShadow": "#F4AB34 0 0 0 2px",
                        },
                        "&:focus:not(:read-only)": Object {
                          "boxShadow": "#F4AB34 0 0 0 2px",
                        },
                        "&:hover": Object {
                          "boxShadow": "#777777 0 0 0 1px",
                        },
                        "&:hover:not(:placeholder-shown)": Object {
                          "boxShadow": "#777777 0 0 0 1px",
                        },
                        "&:hover:not(:read-only):not(:disabled):not(:focus)": Object {
                          "boxShadow": "#777777 0 0 0 1px",
                        },
                        "&:not(:placeholder-shown)": Object {
                          "boxShadow": "#333333 0 0 0 1px",
                        },
                        "&:placeholder-shown": Object {
                          "boxShadow": "#BBBBBB 0 0 0 1px",
                        },
                        "borderRadius": "4px",
                        "boxShadow": "#BBBBBB 0 0 0 1px",
                        "color": "#333333",
                        "minHeight": "24px",
                        "padding": "16px 35px 16px 16px",
                      },
                      "root": Object {
                        "&.MuiInput-underline.Mui-disabled:before": Object {
                          "borderBottom": "none",
                        },
                        "&.MuiInput-underline:after": Object {
                          "borderBottom": "none",
                        },
                        "&.MuiInput-underline:before": Object {
                          "borderBottom": "none",
                        },
                        "&.MuiInput-underline:hover:not(.Mui-disabled):before": Object {
                          "borderBottom": "none",
                        },
                        "color": "#333333",
                      },
                    },
                    "MuiInputLabel": Object {
                      "formControl": Object {
                        "marginTop": "-4px",
                        "transform": "none",
                      },
                      "shrink": Object {
                        "marginTop": "-4px",
                        "transform": "none",
                      },
                    },
                    "MuiListItem": Object {
                      "button": Object {
                        "&:hover": Object {
                          "backgroundColor": "rgba(0, 0, 0, 0.04)",
                        },
                      },
                      "root": Object {
                        "&$selected": Object {
                          "&:hover": Object {
                            "backgroundColor": "rgba(0, 0, 0, 0.04)",
                          },
                          "backgroundColor": "rgba(255, 107, 11, 0.16)",
                        },
                        "&.Mui-disabled": Object {
                          "opacity": 0.32,
                        },
                      },
                    },
                    "MuiTab": Object {
                      "root": Object {
                        "&$disabled": Object {
                          "opacity": 0.24,
                        },
                      },
                      "textColorInherit": Object {
                        "&$disabled": Object {
                          "opacity": 0.24,
                        },
                      },
                      "wrapper": Object {
                        "& > *:first-child": Object {
                          "marginBottom": "2px !important",
                        },
                      },
                    },
                    "MuiTextField": Object {
                      "& .MuiInputLabel": Object {
                        "marginTop": "20px",
                      },
                    },
                    "MuiToolbar": Object {
                      "dense": Object {
                        "@media (min-width: 600px)": Object {
                          "minHeight": "56px",
                        },
                        "minHeight": "56px",
                      },
                      "gutters": Object {
                        "@media (min-width: 600px)": Object {
                          "padding": "0 16px",
                        },
                        "padding": "0 16px",
                      },
                      "regular": Object {
                        "@media (min-width: 600px)": Object {
                          "minHeight": "56px",
                        },
                        "minHeight": "56px",
                      },
                      "root": Object {
                        "@media (min-width: 600px)": Object {
                          "padding": "0 16px",
                        },
                        "padding": "0 16px",
                      },
                    },
                  },
                  "palette": Object {
                    "action": Object {
                      "disabled": "rgba(51, 51, 51, 0.24)",
                    },
                    "background": Object {
                      "default": "#FAFAFA",
                      "defaultContrastText": "#333333",
                      "paper": "#FFFFFF",
                      "paperContrastText": "#333333",
                    },
                    "complementary": Object {
                      "highlight": "#000000",
                      "link": "#227BBD",
                      "linkContrastText": "#FFFFFF",
                      "warning": "#FCC433",
                      "warningContrastText": "#333333",
                    },
                    "error": Object {
                      "contrastText": "#FFFFFF",
                      "main": "#E74627",
                    },
                    "primary": Object {
                      "contrastText": "#333333",
                      "dark": "#EF8426",
                      "light": "#FEFDE8",
                      "main": "#F4AB34",
                    },
                    "secondary": Object {
                      "contrastText": "#000000",
                      "dark": "#FF5808",
                      "light": "#FFF8E1",
                      "main": "#FF6B0B",
                    },
                    "success": Object {
                      "contrastText": "#FFFFFF",
                      "main": "#569A32",
                    },
                    "text": Object {
                      "disabled": "#BBBBBB",
                      "hint": "#BBBBBB",
                      "primary": "#333333",
                      "secondary": "#777777",
                    },
                  },
                  "shadows": Object {
                    "0": "none",
                    "1": "0 1px 1px 0 rgba(0, 0, 0, 0.14)",
                    "12": "0 12px 17px 0 rgba(0, 0, 0, 0.14)",
                    "16": "0 16px 24px 0 rgba(0, 0, 0, 0.14)",
                    "2": "0 2px 2px 0 rgba(0, 0, 0, 0.14)",
                    "24": "0 24px 38px 0 rgba(0, 0, 0, 0.14)",
                    "3": "0 3px 4px 0 rgba(0, 0, 0, 0.14)",
                    "4": "0 4px 5px 0 rgba(0, 0, 0, 0.14)",
                    "6": "0 6px 10px 0 rgba(0, 0, 0, 0.14)",
                    "8": "0 8px 10px 0 rgba(0, 0, 0, 0.14)",
                    "9": "0 9px 12px 0 rgba(0, 0, 0, 0.14)",
                  },
                  "shape": Object {
                    "badgeBorderRadius": 100,
                    "borderRadius": 4,
                  },
                  "sizes": Object {
                    "huge": 96,
                    "hugex": 128,
                    "hugexx": 144,
                    "hugexxx": 192,
                    "large": 64,
                    "largex": 72,
                    "largexx": 80,
                    "largexxx": 88,
                    "medium": 48,
                    "mediumx": 56,
                    "micro": 4,
                    "none": 0,
                    "semi": 32,
                    "semix": 40,
                    "small": 16,
                    "standard": 24,
                    "tiny": 8,
                    "veryhuge": 256,
                  },
                  "spacing": 8,
                  "typography": Object {
                    "body1": Object {
                      "fontSize": "1rem",
                      "fontWeight": 400,
                    },
                    "body2": Object {
                      "fontSize": "0.875rem",
                      "fontWeight": 400,
                    },
                    "button": Object {
                      "fontSize": "0.875rem",
                      "fontWeight": 600,
                    },
                    "caption": Object {
                      "fontSize": "0.75rem",
                      "fontWeight": 400,
                    },
                    "fontFamily": "\\"Roboto\\", sans-serif",
                    "fontFamilyBrand1": "\\"Helvetica Now Display\\"",
                    "fontFamilyBrand2": "\\"Helvetica Now Text\\"",
                    "fontFamilyBrand3": undefined,
                    "fontWeightBold": 700,
                    "fontWeightLight": 300,
                    "fontWeightMedium": 500,
                    "fontWeightRegular": 400,
                    "h1": Object {
                      "fontSize": "6rem",
                      "fontWeight": 300,
                    },
                    "h2": Object {
                      "fontSize": "3.75rem",
                      "fontWeight": 300,
                    },
                    "h3": Object {
                      "fontSize": "3rem",
                      "fontWeight": 400,
                    },
                    "h4": Object {
                      "fontSize": "2.125rem",
                      "fontWeight": 400,
                    },
                    "h5": Object {
                      "fontSize": "1.5rem",
                      "fontWeight": 400,
                    },
                    "h6": Object {
                      "fontSize": "1.25rem",
                      "fontWeight": 600,
                    },
                    "overline": Object {
                      "fontSize": "0.75rem",
                      "fontWeight": 400,
                    },
                    "subtitle1": Object {
                      "fontSize": "1rem",
                      "fontWeight": 400,
                    },
                    "subtitle2": Object {
                      "fontSize": "0.875rem",
                      "fontWeight": 500,
                    },
                  },
                }
              }
            >
              <div
                className="sc-gqjmRU hYFWIQ"
              >
                <styled.label
                  disabled={false}
                  theme={
                    Object {
                      "avatarSizes": Object {
                        "huge": Object {
                          "fontSize": "1.5rem",
                          "size": 80,
                        },
                        "large": Object {
                          "fontSize": "1rem",
                          "size": 48,
                        },
                        "small": Object {
                          "fontSize": ".875rem",
                          "size": 32,
                        },
                        "standard": Object {
                          "fontSize": "1rem",
                          "size": 40,
                        },
                        "tiny": Object {
                          "fontSize": ".625rem",
                          "size": 24,
                        },
                      },
                      "buttonSizes": Object {
                        "large": Object {
                          "minHeight": 48,
                          "paddingBottom": 16,
                          "paddingLeft": 16,
                          "paddingRight": 16,
                          "paddingTop": 16,
                        },
                        "medium": Object {
                          "minHeight": 40,
                          "paddingBottom": 12,
                          "paddingLeft": 16,
                          "paddingRight": 16,
                          "paddingTop": 12,
                        },
                        "small": Object {
                          "minHeight": 32,
                          "paddingBottom": 8,
                          "paddingLeft": 8,
                          "paddingRight": 8,
                          "paddingTop": 8,
                        },
                      },
                      "iconSizes": Object {
                        "huge": 144,
                        "hugex": 192,
                        "hugexx": 256,
                        "large": 72,
                        "largex": 96,
                        "largexx": 128,
                        "medium": 64,
                        "micro": 16,
                        "small": 32,
                        "standard": 48,
                        "tiny": 24,
                      },
                      "overrides": Object {
                        "MuiAvatar": Object {
                          "colorDefault": Object {
                            "color": "#333333",
                          },
                        },
                        "MuiBadge": Object {
                          "badge": Object {
                            "padding": "0 4px",
                          },
                        },
                        "MuiButton": Object {
                          "outlinedPrimary": Object {
                            "color": "#333333",
                          },
                          "outlinedSecondary": Object {
                            "color": "#333333",
                          },
                          "root": Object {
                            "fontSize": "0.875rem",
                            "minHeight": "40px",
                            "padding": "8px 16px",
                          },
                          "sizeLarge": Object {
                            "fontSize": "0.875rem",
                            "minHeight": "48px",
                          },
                          "sizeSmall": Object {
                            "fontSize": "0.875rem",
                            "minHeight": "32px",
                          },
                          "textPrimary": Object {
                            "color": "#333333",
                          },
                        },
                        "MuiChip": Object {
                          "clickableColorPrimary": Object {
                            "&:hover": Object {
                              "backgroundColor": "#EF8426",
                            },
                          },
                          "clickableColorSecondary": Object {
                            "&:hover": Object {
                              "backgroundColor": "#EF8426",
                            },
                          },
                          "deleteIcon": Object {
                            "&:hover": Object {
                              "color": "#000000",
                            },
                            "color": "rgba(0, 0, 0, 0.8)",
                            "fontSize": "24px",
                            "height": "24px",
                            "width": "24px",
                          },
                          "deleteIconColorPrimary": Object {
                            "&:hover": Object {
                              "color": "#FFFFFF",
                            },
                            "color": "rgba(255, 255, 255, 0.8)",
                          },
                          "deleteIconColorSecondary": Object {
                            "&:hover": Object {
                              "color": "#FFFFFF",
                            },
                            "color": "rgba(255, 255, 255, 0.8)",
                          },
                          "deleteIconSmall": Object {
                            "fontSize": "16px",
                            "height": "16px",
                            "width": "16px",
                          },
                          "icon": Object {
                            "fontSize": "24px",
                          },
                          "iconSmall": Object {
                            "fontSize": "16px",
                            "height": "16px",
                            "marginTop": "1px",
                            "width": "16px",
                          },
                          "outlined": Object {
                            "borderColor": "rgba(0, 0, 0, 0.12)",
                            "color": "#000000",
                          },
                          "outlinedPrimary": Object {
                            "color": "#000000",
                          },
                          "outlinedSecondary": Object {
                            "color": "#000000",
                          },
                          "root": Object {
                            "& $avatar": Object {
                              "backgroundColor": "rgba(0, 0, 0, 0.24)",
                              "color": "#333333",
                            },
                            "&$disabled": Object {
                              "opacity": 0.4,
                            },
                            "backgroundColor": "rgba(0, 0, 0, 0.12)",
                            "color": "#333333",
                            "fontSize": "0.875rem",
                          },
                        },
                        "MuiExpansionPanel": Object {
                          "root": Object {
                            "&$disabled": Object {
                              "backgroundColor": "#FFFFFF",
                              "opacity": 0.32,
                            },
                            "&$expanded": Object {
                              "borderColor": "#F4AB34",
                            },
                            "border": "transparent 1px solid",
                          },
                        },
                        "MuiExpansionPanelSummary": Object {
                          "root": Object {
                            "&$disabled": Object {
                              "opacity": 1,
                            },
                            "alignItems": "flex-start",
                            "marginTop": "8px",
                          },
                        },
                        "MuiFormLabel": Object {
                          "formControl": Object {
                            "marginTop": "-4px",
                            "transform": "none",
                          },
                          "root": Object {
                            "&.Mui-focused": Object {
                              "color": "#777777",
                              "fontSize": "0.875rem",
                            },
                            "fontSize": "0.875rem",
                          },
                        },
                        "MuiIconButton": Object {
                          "root": Object {
                            "color": "#333333",
                            "padding": "8px",
                          },
                          "sizeSmall": Object {
                            "padding": "4px",
                          },
                        },
                        "MuiInputAdornment": Object {
                          "root": Object {
                            "position": "absolute",
                            "right": "0",
                          },
                        },
                        "MuiInputBase": Object {
                          "input": Object {
                            "&.Mui-disabled": Object {
                              "&:hover": Object {
                                "boxShadow": "#333333 0 0 0 1px",
                              },
                              "opacity": 0.24,
                            },
                            "&:focus": Object {
                              "boxShadow": "#F4AB34 0 0 0 2px",
                            },
                            "&:focus:not(:read-only)": Object {
                              "boxShadow": "#F4AB34 0 0 0 2px",
                            },
                            "&:hover": Object {
                              "boxShadow": "#777777 0 0 0 1px",
                            },
                            "&:hover:not(:placeholder-shown)": Object {
                              "boxShadow": "#777777 0 0 0 1px",
                            },
                            "&:hover:not(:read-only):not(:disabled):not(:focus)": Object {
                              "boxShadow": "#777777 0 0 0 1px",
                            },
                            "&:not(:placeholder-shown)": Object {
                              "boxShadow": "#333333 0 0 0 1px",
                            },
                            "&:placeholder-shown": Object {
                              "boxShadow": "#BBBBBB 0 0 0 1px",
                            },
                            "borderRadius": "4px",
                            "boxShadow": "#BBBBBB 0 0 0 1px",
                            "color": "#333333",
                            "minHeight": "24px",
                            "padding": "16px 35px 16px 16px",
                          },
                          "root": Object {
                            "&.MuiInput-underline.Mui-disabled:before": Object {
                              "borderBottom": "none",
                            },
                            "&.MuiInput-underline:after": Object {
                              "borderBottom": "none",
                            },
                            "&.MuiInput-underline:before": Object {
                              "borderBottom": "none",
                            },
                            "&.MuiInput-underline:hover:not(.Mui-disabled):before": Object {
                              "borderBottom": "none",
                            },
                            "color": "#333333",
                          },
                        },
                        "MuiInputLabel": Object {
                          "formControl": Object {
                            "marginTop": "-4px",
                            "transform": "none",
                          },
                          "shrink": Object {
                            "marginTop": "-4px",
                            "transform": "none",
                          },
                        },
                        "MuiListItem": Object {
                          "button": Object {
                            "&:hover": Object {
                              "backgroundColor": "rgba(0, 0, 0, 0.04)",
                            },
                          },
                          "root": Object {
                            "&$selected": Object {
                              "&:hover": Object {
                                "backgroundColor": "rgba(0, 0, 0, 0.04)",
                              },
                              "backgroundColor": "rgba(255, 107, 11, 0.16)",
                            },
                            "&.Mui-disabled": Object {
                              "opacity": 0.32,
                            },
                          },
                        },
                        "MuiTab": Object {
                          "root": Object {
                            "&$disabled": Object {
                              "opacity": 0.24,
                            },
                          },
                          "textColorInherit": Object {
                            "&$disabled": Object {
                              "opacity": 0.24,
                            },
                          },
                          "wrapper": Object {
                            "& > *:first-child": Object {
                              "marginBottom": "2px !important",
                            },
                          },
                        },
                        "MuiTextField": Object {
                          "& .MuiInputLabel": Object {
                            "marginTop": "20px",
                          },
                        },
                        "MuiToolbar": Object {
                          "dense": Object {
                            "@media (min-width: 600px)": Object {
                              "minHeight": "56px",
                            },
                            "minHeight": "56px",
                          },
                          "gutters": Object {
                            "@media (min-width: 600px)": Object {
                              "padding": "0 16px",
                            },
                            "padding": "0 16px",
                          },
                          "regular": Object {
                            "@media (min-width: 600px)": Object {
                              "minHeight": "56px",
                            },
                            "minHeight": "56px",
                          },
                          "root": Object {
                            "@media (min-width: 600px)": Object {
                              "padding": "0 16px",
                            },
                            "padding": "0 16px",
                          },
                        },
                      },
                      "palette": Object {
                        "action": Object {
                          "disabled": "rgba(51, 51, 51, 0.24)",
                        },
                        "background": Object {
                          "default": "#FAFAFA",
                          "defaultContrastText": "#333333",
                          "paper": "#FFFFFF",
                          "paperContrastText": "#333333",
                        },
                        "complementary": Object {
                          "highlight": "#000000",
                          "link": "#227BBD",
                          "linkContrastText": "#FFFFFF",
                          "warning": "#FCC433",
                          "warningContrastText": "#333333",
                        },
                        "error": Object {
                          "contrastText": "#FFFFFF",
                          "main": "#E74627",
                        },
                        "primary": Object {
                          "contrastText": "#333333",
                          "dark": "#EF8426",
                          "light": "#FEFDE8",
                          "main": "#F4AB34",
                        },
                        "secondary": Object {
                          "contrastText": "#000000",
                          "dark": "#FF5808",
                          "light": "#FFF8E1",
                          "main": "#FF6B0B",
                        },
                        "success": Object {
                          "contrastText": "#FFFFFF",
                          "main": "#569A32",
                        },
                        "text": Object {
                          "disabled": "#BBBBBB",
                          "hint": "#BBBBBB",
                          "primary": "#333333",
                          "secondary": "#777777",
                        },
                      },
                      "shadows": Object {
                        "0": "none",
                        "1": "0 1px 1px 0 rgba(0, 0, 0, 0.14)",
                        "12": "0 12px 17px 0 rgba(0, 0, 0, 0.14)",
                        "16": "0 16px 24px 0 rgba(0, 0, 0, 0.14)",
                        "2": "0 2px 2px 0 rgba(0, 0, 0, 0.14)",
                        "24": "0 24px 38px 0 rgba(0, 0, 0, 0.14)",
                        "3": "0 3px 4px 0 rgba(0, 0, 0, 0.14)",
                        "4": "0 4px 5px 0 rgba(0, 0, 0, 0.14)",
                        "6": "0 6px 10px 0 rgba(0, 0, 0, 0.14)",
                        "8": "0 8px 10px 0 rgba(0, 0, 0, 0.14)",
                        "9": "0 9px 12px 0 rgba(0, 0, 0, 0.14)",
                      },
                      "shape": Object {
                        "badgeBorderRadius": 100,
                        "borderRadius": 4,
                      },
                      "sizes": Object {
                        "huge": 96,
                        "hugex": 128,
                        "hugexx": 144,
                        "hugexxx": 192,
                        "large": 64,
                        "largex": 72,
                        "largexx": 80,
                        "largexxx": 88,
                        "medium": 48,
                        "mediumx": 56,
                        "micro": 4,
                        "none": 0,
                        "semi": 32,
                        "semix": 40,
                        "small": 16,
                        "standard": 24,
                        "tiny": 8,
                        "veryhuge": 256,
                      },
                      "spacing": 8,
                      "typography": Object {
                        "body1": Object {
                          "fontSize": "1rem",
                          "fontWeight": 400,
                        },
                        "body2": Object {
                          "fontSize": "0.875rem",
                          "fontWeight": 400,
                        },
                        "button": Object {
                          "fontSize": "0.875rem",
                          "fontWeight": 600,
                        },
                        "caption": Object {
                          "fontSize": "0.75rem",
                          "fontWeight": 400,
                        },
                        "fontFamily": "\\"Roboto\\", sans-serif",
                        "fontFamilyBrand1": "\\"Helvetica Now Display\\"",
                        "fontFamilyBrand2": "\\"Helvetica Now Text\\"",
                        "fontFamilyBrand3": undefined,
                        "fontWeightBold": 700,
                        "fontWeightLight": 300,
                        "fontWeightMedium": 500,
                        "fontWeightRegular": 400,
                        "h1": Object {
                          "fontSize": "6rem",
                          "fontWeight": 300,
                        },
                        "h2": Object {
                          "fontSize": "3.75rem",
                          "fontWeight": 300,
                        },
                        "h3": Object {
                          "fontSize": "3rem",
                          "fontWeight": 400,
                        },
                        "h4": Object {
                          "fontSize": "2.125rem",
                          "fontWeight": 400,
                        },
                        "h5": Object {
                          "fontSize": "1.5rem",
                          "fontWeight": 400,
                        },
                        "h6": Object {
                          "fontSize": "1.25rem",
                          "fontWeight": 600,
                        },
                        "overline": Object {
                          "fontSize": "0.75rem",
                          "fontWeight": 400,
                        },
                        "subtitle1": Object {
                          "fontSize": "1rem",
                          "fontWeight": 400,
                        },
                        "subtitle2": Object {
                          "fontSize": "0.875rem",
                          "fontWeight": 500,
                        },
                      },
                    }
                  }
                >
                  <StyledComponent
                    disabled={false}
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "sc-VigVT",
                          "isStatic": false,
                          "lastClassName": "gcVfqj",
                          "rules": Array [
                            "
  font-size: ",
                            [Function],
                            ";
  font-weight: ",
                            [Function],
                            ";
  color: ",
                            [Function],
                            ";
  line-height: 1.2;
  padding: 0 0 ",
                            "4",
                            "px;
  font-family: ",
                            [Function],
                            ";
",
                          ],
                        },
                        "displayName": "styled.label",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "sc-VigVT",
                        "target": "label",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                    theme={
                      Object {
                        "avatarSizes": Object {
                          "huge": Object {
                            "fontSize": "1.5rem",
                            "size": 80,
                          },
                          "large": Object {
                            "fontSize": "1rem",
                            "size": 48,
                          },
                          "small": Object {
                            "fontSize": ".875rem",
                            "size": 32,
                          },
                          "standard": Object {
                            "fontSize": "1rem",
                            "size": 40,
                          },
                          "tiny": Object {
                            "fontSize": ".625rem",
                            "size": 24,
                          },
                        },
                        "buttonSizes": Object {
                          "large": Object {
                            "minHeight": 48,
                            "paddingBottom": 16,
                            "paddingLeft": 16,
                            "paddingRight": 16,
                            "paddingTop": 16,
                          },
                          "medium": Object {
                            "minHeight": 40,
                            "paddingBottom": 12,
                            "paddingLeft": 16,
                            "paddingRight": 16,
                            "paddingTop": 12,
                          },
                          "small": Object {
                            "minHeight": 32,
                            "paddingBottom": 8,
                            "paddingLeft": 8,
                            "paddingRight": 8,
                            "paddingTop": 8,
                          },
                        },
                        "iconSizes": Object {
                          "huge": 144,
                          "hugex": 192,
                          "hugexx": 256,
                          "large": 72,
                          "largex": 96,
                          "largexx": 128,
                          "medium": 64,
                          "micro": 16,
                          "small": 32,
                          "standard": 48,
                          "tiny": 24,
                        },
                        "overrides": Object {
                          "MuiAvatar": Object {
                            "colorDefault": Object {
                              "color": "#333333",
                            },
                          },
                          "MuiBadge": Object {
                            "badge": Object {
                              "padding": "0 4px",
                            },
                          },
                          "MuiButton": Object {
                            "outlinedPrimary": Object {
                              "color": "#333333",
                            },
                            "outlinedSecondary": Object {
                              "color": "#333333",
                            },
                            "root": Object {
                              "fontSize": "0.875rem",
                              "minHeight": "40px",
                              "padding": "8px 16px",
                            },
                            "sizeLarge": Object {
                              "fontSize": "0.875rem",
                              "minHeight": "48px",
                            },
                            "sizeSmall": Object {
                              "fontSize": "0.875rem",
                              "minHeight": "32px",
                            },
                            "textPrimary": Object {
                              "color": "#333333",
                            },
                          },
                          "MuiChip": Object {
                            "clickableColorPrimary": Object {
                              "&:hover": Object {
                                "backgroundColor": "#EF8426",
                              },
                            },
                            "clickableColorSecondary": Object {
                              "&:hover": Object {
                                "backgroundColor": "#EF8426",
                              },
                            },
                            "deleteIcon": Object {
                              "&:hover": Object {
                                "color": "#000000",
                              },
                              "color": "rgba(0, 0, 0, 0.8)",
                              "fontSize": "24px",
                              "height": "24px",
                              "width": "24px",
                            },
                            "deleteIconColorPrimary": Object {
                              "&:hover": Object {
                                "color": "#FFFFFF",
                              },
                              "color": "rgba(255, 255, 255, 0.8)",
                            },
                            "deleteIconColorSecondary": Object {
                              "&:hover": Object {
                                "color": "#FFFFFF",
                              },
                              "color": "rgba(255, 255, 255, 0.8)",
                            },
                            "deleteIconSmall": Object {
                              "fontSize": "16px",
                              "height": "16px",
                              "width": "16px",
                            },
                            "icon": Object {
                              "fontSize": "24px",
                            },
                            "iconSmall": Object {
                              "fontSize": "16px",
                              "height": "16px",
                              "marginTop": "1px",
                              "width": "16px",
                            },
                            "outlined": Object {
                              "borderColor": "rgba(0, 0, 0, 0.12)",
                              "color": "#000000",
                            },
                            "outlinedPrimary": Object {
                              "color": "#000000",
                            },
                            "outlinedSecondary": Object {
                              "color": "#000000",
                            },
                            "root": Object {
                              "& $avatar": Object {
                                "backgroundColor": "rgba(0, 0, 0, 0.24)",
                                "color": "#333333",
                              },
                              "&$disabled": Object {
                                "opacity": 0.4,
                              },
                              "backgroundColor": "rgba(0, 0, 0, 0.12)",
                              "color": "#333333",
                              "fontSize": "0.875rem",
                            },
                          },
                          "MuiExpansionPanel": Object {
                            "root": Object {
                              "&$disabled": Object {
                                "backgroundColor": "#FFFFFF",
                                "opacity": 0.32,
                              },
                              "&$expanded": Object {
                                "borderColor": "#F4AB34",
                              },
                              "border": "transparent 1px solid",
                            },
                          },
                          "MuiExpansionPanelSummary": Object {
                            "root": Object {
                              "&$disabled": Object {
                                "opacity": 1,
                              },
                              "alignItems": "flex-start",
                              "marginTop": "8px",
                            },
                          },
                          "MuiFormLabel": Object {
                            "formControl": Object {
                              "marginTop": "-4px",
                              "transform": "none",
                            },
                            "root": Object {
                              "&.Mui-focused": Object {
                                "color": "#777777",
                                "fontSize": "0.875rem",
                              },
                              "fontSize": "0.875rem",
                            },
                          },
                          "MuiIconButton": Object {
                            "root": Object {
                              "color": "#333333",
                              "padding": "8px",
                            },
                            "sizeSmall": Object {
                              "padding": "4px",
                            },
                          },
                          "MuiInputAdornment": Object {
                            "root": Object {
                              "position": "absolute",
                              "right": "0",
                            },
                          },
                          "MuiInputBase": Object {
                            "input": Object {
                              "&.Mui-disabled": Object {
                                "&:hover": Object {
                                  "boxShadow": "#333333 0 0 0 1px",
                                },
                                "opacity": 0.24,
                              },
                              "&:focus": Object {
                                "boxShadow": "#F4AB34 0 0 0 2px",
                              },
                              "&:focus:not(:read-only)": Object {
                                "boxShadow": "#F4AB34 0 0 0 2px",
                              },
                              "&:hover": Object {
                                "boxShadow": "#777777 0 0 0 1px",
                              },
                              "&:hover:not(:placeholder-shown)": Object {
                                "boxShadow": "#777777 0 0 0 1px",
                              },
                              "&:hover:not(:read-only):not(:disabled):not(:focus)": Object {
                                "boxShadow": "#777777 0 0 0 1px",
                              },
                              "&:not(:placeholder-shown)": Object {
                                "boxShadow": "#333333 0 0 0 1px",
                              },
                              "&:placeholder-shown": Object {
                                "boxShadow": "#BBBBBB 0 0 0 1px",
                              },
                              "borderRadius": "4px",
                              "boxShadow": "#BBBBBB 0 0 0 1px",
                              "color": "#333333",
                              "minHeight": "24px",
                              "padding": "16px 35px 16px 16px",
                            },
                            "root": Object {
                              "&.MuiInput-underline.Mui-disabled:before": Object {
                                "borderBottom": "none",
                              },
                              "&.MuiInput-underline:after": Object {
                                "borderBottom": "none",
                              },
                              "&.MuiInput-underline:before": Object {
                                "borderBottom": "none",
                              },
                              "&.MuiInput-underline:hover:not(.Mui-disabled):before": Object {
                                "borderBottom": "none",
                              },
                              "color": "#333333",
                            },
                          },
                          "MuiInputLabel": Object {
                            "formControl": Object {
                              "marginTop": "-4px",
                              "transform": "none",
                            },
                            "shrink": Object {
                              "marginTop": "-4px",
                              "transform": "none",
                            },
                          },
                          "MuiListItem": Object {
                            "button": Object {
                              "&:hover": Object {
                                "backgroundColor": "rgba(0, 0, 0, 0.04)",
                              },
                            },
                            "root": Object {
                              "&$selected": Object {
                                "&:hover": Object {
                                  "backgroundColor": "rgba(0, 0, 0, 0.04)",
                                },
                                "backgroundColor": "rgba(255, 107, 11, 0.16)",
                              },
                              "&.Mui-disabled": Object {
                                "opacity": 0.32,
                              },
                            },
                          },
                          "MuiTab": Object {
                            "root": Object {
                              "&$disabled": Object {
                                "opacity": 0.24,
                              },
                            },
                            "textColorInherit": Object {
                              "&$disabled": Object {
                                "opacity": 0.24,
                              },
                            },
                            "wrapper": Object {
                              "& > *:first-child": Object {
                                "marginBottom": "2px !important",
                              },
                            },
                          },
                          "MuiTextField": Object {
                            "& .MuiInputLabel": Object {
                              "marginTop": "20px",
                            },
                          },
                          "MuiToolbar": Object {
                            "dense": Object {
                              "@media (min-width: 600px)": Object {
                                "minHeight": "56px",
                              },
                              "minHeight": "56px",
                            },
                            "gutters": Object {
                              "@media (min-width: 600px)": Object {
                                "padding": "0 16px",
                              },
                              "padding": "0 16px",
                            },
                            "regular": Object {
                              "@media (min-width: 600px)": Object {
                                "minHeight": "56px",
                              },
                              "minHeight": "56px",
                            },
                            "root": Object {
                              "@media (min-width: 600px)": Object {
                                "padding": "0 16px",
                              },
                              "padding": "0 16px",
                            },
                          },
                        },
                        "palette": Object {
                          "action": Object {
                            "disabled": "rgba(51, 51, 51, 0.24)",
                          },
                          "background": Object {
                            "default": "#FAFAFA",
                            "defaultContrastText": "#333333",
                            "paper": "#FFFFFF",
                            "paperContrastText": "#333333",
                          },
                          "complementary": Object {
                            "highlight": "#000000",
                            "link": "#227BBD",
                            "linkContrastText": "#FFFFFF",
                            "warning": "#FCC433",
                            "warningContrastText": "#333333",
                          },
                          "error": Object {
                            "contrastText": "#FFFFFF",
                            "main": "#E74627",
                          },
                          "primary": Object {
                            "contrastText": "#333333",
                            "dark": "#EF8426",
                            "light": "#FEFDE8",
                            "main": "#F4AB34",
                          },
                          "secondary": Object {
                            "contrastText": "#000000",
                            "dark": "#FF5808",
                            "light": "#FFF8E1",
                            "main": "#FF6B0B",
                          },
                          "success": Object {
                            "contrastText": "#FFFFFF",
                            "main": "#569A32",
                          },
                          "text": Object {
                            "disabled": "#BBBBBB",
                            "hint": "#BBBBBB",
                            "primary": "#333333",
                            "secondary": "#777777",
                          },
                        },
                        "shadows": Object {
                          "0": "none",
                          "1": "0 1px 1px 0 rgba(0, 0, 0, 0.14)",
                          "12": "0 12px 17px 0 rgba(0, 0, 0, 0.14)",
                          "16": "0 16px 24px 0 rgba(0, 0, 0, 0.14)",
                          "2": "0 2px 2px 0 rgba(0, 0, 0, 0.14)",
                          "24": "0 24px 38px 0 rgba(0, 0, 0, 0.14)",
                          "3": "0 3px 4px 0 rgba(0, 0, 0, 0.14)",
                          "4": "0 4px 5px 0 rgba(0, 0, 0, 0.14)",
                          "6": "0 6px 10px 0 rgba(0, 0, 0, 0.14)",
                          "8": "0 8px 10px 0 rgba(0, 0, 0, 0.14)",
                          "9": "0 9px 12px 0 rgba(0, 0, 0, 0.14)",
                        },
                        "shape": Object {
                          "badgeBorderRadius": 100,
                          "borderRadius": 4,
                        },
                        "sizes": Object {
                          "huge": 96,
                          "hugex": 128,
                          "hugexx": 144,
                          "hugexxx": 192,
                          "large": 64,
                          "largex": 72,
                          "largexx": 80,
                          "largexxx": 88,
                          "medium": 48,
                          "mediumx": 56,
                          "micro": 4,
                          "none": 0,
                          "semi": 32,
                          "semix": 40,
                          "small": 16,
                          "standard": 24,
                          "tiny": 8,
                          "veryhuge": 256,
                        },
                        "spacing": 8,
                        "typography": Object {
                          "body1": Object {
                            "fontSize": "1rem",
                            "fontWeight": 400,
                          },
                          "body2": Object {
                            "fontSize": "0.875rem",
                            "fontWeight": 400,
                          },
                          "button": Object {
                            "fontSize": "0.875rem",
                            "fontWeight": 600,
                          },
                          "caption": Object {
                            "fontSize": "0.75rem",
                            "fontWeight": 400,
                          },
                          "fontFamily": "\\"Roboto\\", sans-serif",
                          "fontFamilyBrand1": "\\"Helvetica Now Display\\"",
                          "fontFamilyBrand2": "\\"Helvetica Now Text\\"",
                          "fontFamilyBrand3": undefined,
                          "fontWeightBold": 700,
                          "fontWeightLight": 300,
                          "fontWeightMedium": 500,
                          "fontWeightRegular": 400,
                          "h1": Object {
                            "fontSize": "6rem",
                            "fontWeight": 300,
                          },
                          "h2": Object {
                            "fontSize": "3.75rem",
                            "fontWeight": 300,
                          },
                          "h3": Object {
                            "fontSize": "3rem",
                            "fontWeight": 400,
                          },
                          "h4": Object {
                            "fontSize": "2.125rem",
                            "fontWeight": 400,
                          },
                          "h5": Object {
                            "fontSize": "1.5rem",
                            "fontWeight": 400,
                          },
                          "h6": Object {
                            "fontSize": "1.25rem",
                            "fontWeight": 600,
                          },
                          "overline": Object {
                            "fontSize": "0.75rem",
                            "fontWeight": 400,
                          },
                          "subtitle1": Object {
                            "fontSize": "1rem",
                            "fontWeight": 400,
                          },
                          "subtitle2": Object {
                            "fontSize": "0.875rem",
                            "fontWeight": 500,
                          },
                        },
                      }
                    }
                  >
                    <label
                      className="sc-VigVT gcVfqj"
                      disabled={false}
                    >
                      Only calendar
                    </label>
                  </StyledComponent>
                </styled.label>
                <PickerWithState
                  allowKeyboardControl={true}
                  helperText=""
                  inputProps={Object {}}
                  invalidDateMessage="Invalid Date Format"
                  keyboardIcon={
                    <ForwardRef(WithTheme)
                      name="outlined-action-calendar"
                      size="tiny"
                    />
                  }
                  label=""
                  maxDate={2100-01-01T00:00:00.000Z}
                  maxDateMessage="Date should not be after maximal date"
                  minDate={1900-01-01T00:00:00.000Z}
                  minDateMessage="Date should not be before minimal date"
                  onChange={[Function]}
                  openTo="date"
                  required={false}
                  theme={
                    Object {
                      "avatarSizes": Object {
                        "huge": Object {
                          "fontSize": "1.5rem",
                          "size": 80,
                        },
                        "large": Object {
                          "fontSize": "1rem",
                          "size": 48,
                        },
                        "small": Object {
                          "fontSize": ".875rem",
                          "size": 32,
                        },
                        "standard": Object {
                          "fontSize": "1rem",
                          "size": 40,
                        },
                        "tiny": Object {
                          "fontSize": ".625rem",
                          "size": 24,
                        },
                      },
                      "buttonSizes": Object {
                        "large": Object {
                          "minHeight": 48,
                          "paddingBottom": 16,
                          "paddingLeft": 16,
                          "paddingRight": 16,
                          "paddingTop": 16,
                        },
                        "medium": Object {
                          "minHeight": 40,
                          "paddingBottom": 12,
                          "paddingLeft": 16,
                          "paddingRight": 16,
                          "paddingTop": 12,
                        },
                        "small": Object {
                          "minHeight": 32,
                          "paddingBottom": 8,
                          "paddingLeft": 8,
                          "paddingRight": 8,
                          "paddingTop": 8,
                        },
                      },
                      "iconSizes": Object {
                        "huge": 144,
                        "hugex": 192,
                        "hugexx": 256,
                        "large": 72,
                        "largex": 96,
                        "largexx": 128,
                        "medium": 64,
                        "micro": 16,
                        "small": 32,
                        "standard": 48,
                        "tiny": 24,
                      },
                      "overrides": Object {
                        "MuiAvatar": Object {
                          "colorDefault": Object {
                            "color": "#333333",
                          },
                        },
                        "MuiBadge": Object {
                          "badge": Object {
                            "padding": "0 4px",
                          },
                        },
                        "MuiButton": Object {
                          "outlinedPrimary": Object {
                            "color": "#333333",
                          },
                          "outlinedSecondary": Object {
                            "color": "#333333",
                          },
                          "root": Object {
                            "fontSize": "0.875rem",
                            "minHeight": "40px",
                            "padding": "8px 16px",
                          },
                          "sizeLarge": Object {
                            "fontSize": "0.875rem",
                            "minHeight": "48px",
                          },
                          "sizeSmall": Object {
                            "fontSize": "0.875rem",
                            "minHeight": "32px",
                          },
                          "textPrimary": Object {
                            "color": "#333333",
                          },
                        },
                        "MuiChip": Object {
                          "clickableColorPrimary": Object {
                            "&:hover": Object {
                              "backgroundColor": "#EF8426",
                            },
                          },
                          "clickableColorSecondary": Object {
                            "&:hover": Object {
                              "backgroundColor": "#EF8426",
                            },
                          },
                          "deleteIcon": Object {
                            "&:hover": Object {
                              "color": "#000000",
                            },
                            "color": "rgba(0, 0, 0, 0.8)",
                            "fontSize": "24px",
                            "height": "24px",
                            "width": "24px",
                          },
                          "deleteIconColorPrimary": Object {
                            "&:hover": Object {
                              "color": "#FFFFFF",
                            },
                            "color": "rgba(255, 255, 255, 0.8)",
                          },
                          "deleteIconColorSecondary": Object {
                            "&:hover": Object {
                              "color": "#FFFFFF",
                            },
                            "color": "rgba(255, 255, 255, 0.8)",
                          },
                          "deleteIconSmall": Object {
                            "fontSize": "16px",
                            "height": "16px",
                            "width": "16px",
                          },
                          "icon": Object {
                            "fontSize": "24px",
                          },
                          "iconSmall": Object {
                            "fontSize": "16px",
                            "height": "16px",
                            "marginTop": "1px",
                            "width": "16px",
                          },
                          "outlined": Object {
                            "borderColor": "rgba(0, 0, 0, 0.12)",
                            "color": "#000000",
                          },
                          "outlinedPrimary": Object {
                            "color": "#000000",
                          },
                          "outlinedSecondary": Object {
                            "color": "#000000",
                          },
                          "root": Object {
                            "& $avatar": Object {
                              "backgroundColor": "rgba(0, 0, 0, 0.24)",
                              "color": "#333333",
                            },
                            "&$disabled": Object {
                              "opacity": 0.4,
                            },
                            "backgroundColor": "rgba(0, 0, 0, 0.12)",
                            "color": "#333333",
                            "fontSize": "0.875rem",
                          },
                        },
                        "MuiExpansionPanel": Object {
                          "root": Object {
                            "&$disabled": Object {
                              "backgroundColor": "#FFFFFF",
                              "opacity": 0.32,
                            },
                            "&$expanded": Object {
                              "borderColor": "#F4AB34",
                            },
                            "border": "transparent 1px solid",
                          },
                        },
                        "MuiExpansionPanelSummary": Object {
                          "root": Object {
                            "&$disabled": Object {
                              "opacity": 1,
                            },
                            "alignItems": "flex-start",
                            "marginTop": "8px",
                          },
                        },
                        "MuiFormLabel": Object {
                          "formControl": Object {
                            "marginTop": "-4px",
                            "transform": "none",
                          },
                          "root": Object {
                            "&.Mui-focused": Object {
                              "color": "#777777",
                              "fontSize": "0.875rem",
                            },
                            "fontSize": "0.875rem",
                          },
                        },
                        "MuiIconButton": Object {
                          "root": Object {
                            "color": "#333333",
                            "padding": "8px",
                          },
                          "sizeSmall": Object {
                            "padding": "4px",
                          },
                        },
                        "MuiInputAdornment": Object {
                          "root": Object {
                            "position": "absolute",
                            "right": "0",
                          },
                        },
                        "MuiInputBase": Object {
                          "input": Object {
                            "&.Mui-disabled": Object {
                              "&:hover": Object {
                                "boxShadow": "#333333 0 0 0 1px",
                              },
                              "opacity": 0.24,
                            },
                            "&:focus": Object {
                              "boxShadow": "#F4AB34 0 0 0 2px",
                            },
                            "&:focus:not(:read-only)": Object {
                              "boxShadow": "#F4AB34 0 0 0 2px",
                            },
                            "&:hover": Object {
                              "boxShadow": "#777777 0 0 0 1px",
                            },
                            "&:hover:not(:placeholder-shown)": Object {
                              "boxShadow": "#777777 0 0 0 1px",
                            },
                            "&:hover:not(:read-only):not(:disabled):not(:focus)": Object {
                              "boxShadow": "#777777 0 0 0 1px",
                            },
                            "&:not(:placeholder-shown)": Object {
                              "boxShadow": "#333333 0 0 0 1px",
                            },
                            "&:placeholder-shown": Object {
                              "boxShadow": "#BBBBBB 0 0 0 1px",
                            },
                            "borderRadius": "4px",
                            "boxShadow": "#BBBBBB 0 0 0 1px",
                            "color": "#333333",
                            "minHeight": "24px",
                            "padding": "16px 35px 16px 16px",
                          },
                          "root": Object {
                            "&.MuiInput-underline.Mui-disabled:before": Object {
                              "borderBottom": "none",
                            },
                            "&.MuiInput-underline:after": Object {
                              "borderBottom": "none",
                            },
                            "&.MuiInput-underline:before": Object {
                              "borderBottom": "none",
                            },
                            "&.MuiInput-underline:hover:not(.Mui-disabled):before": Object {
                              "borderBottom": "none",
                            },
                            "color": "#333333",
                          },
                        },
                        "MuiInputLabel": Object {
                          "formControl": Object {
                            "marginTop": "-4px",
                            "transform": "none",
                          },
                          "shrink": Object {
                            "marginTop": "-4px",
                            "transform": "none",
                          },
                        },
                        "MuiListItem": Object {
                          "button": Object {
                            "&:hover": Object {
                              "backgroundColor": "rgba(0, 0, 0, 0.04)",
                            },
                          },
                          "root": Object {
                            "&$selected": Object {
                              "&:hover": Object {
                                "backgroundColor": "rgba(0, 0, 0, 0.04)",
                              },
                              "backgroundColor": "rgba(255, 107, 11, 0.16)",
                            },
                            "&.Mui-disabled": Object {
                              "opacity": 0.32,
                            },
                          },
                        },
                        "MuiTab": Object {
                          "root": Object {
                            "&$disabled": Object {
                              "opacity": 0.24,
                            },
                          },
                          "textColorInherit": Object {
                            "&$disabled": Object {
                              "opacity": 0.24,
                            },
                          },
                          "wrapper": Object {
                            "& > *:first-child": Object {
                              "marginBottom": "2px !important",
                            },
                          },
                        },
                        "MuiTextField": Object {
                          "& .MuiInputLabel": Object {
                            "marginTop": "20px",
                          },
                        },
                        "MuiToolbar": Object {
                          "dense": Object {
                            "@media (min-width: 600px)": Object {
                              "minHeight": "56px",
                            },
                            "minHeight": "56px",
                          },
                          "gutters": Object {
                            "@media (min-width: 600px)": Object {
                              "padding": "0 16px",
                            },
                            "padding": "0 16px",
                          },
                          "regular": Object {
                            "@media (min-width: 600px)": Object {
                              "minHeight": "56px",
                            },
                            "minHeight": "56px",
                          },
                          "root": Object {
                            "@media (min-width: 600px)": Object {
                              "padding": "0 16px",
                            },
                            "padding": "0 16px",
                          },
                        },
                      },
                      "palette": Object {
                        "action": Object {
                          "disabled": "rgba(51, 51, 51, 0.24)",
                        },
                        "background": Object {
                          "default": "#FAFAFA",
                          "defaultContrastText": "#333333",
                          "paper": "#FFFFFF",
                          "paperContrastText": "#333333",
                        },
                        "complementary": Object {
                          "highlight": "#000000",
                          "link": "#227BBD",
                          "linkContrastText": "#FFFFFF",
                          "warning": "#FCC433",
                          "warningContrastText": "#333333",
                        },
                        "error": Object {
                          "contrastText": "#FFFFFF",
                          "main": "#E74627",
                        },
                        "primary": Object {
                          "contrastText": "#333333",
                          "dark": "#EF8426",
                          "light": "#FEFDE8",
                          "main": "#F4AB34",
                        },
                        "secondary": Object {
                          "contrastText": "#000000",
                          "dark": "#FF5808",
                          "light": "#FFF8E1",
                          "main": "#FF6B0B",
                        },
                        "success": Object {
                          "contrastText": "#FFFFFF",
                          "main": "#569A32",
                        },
                        "text": Object {
                          "disabled": "#BBBBBB",
                          "hint": "#BBBBBB",
                          "primary": "#333333",
                          "secondary": "#777777",
                        },
                      },
                      "shadows": Object {
                        "0": "none",
                        "1": "0 1px 1px 0 rgba(0, 0, 0, 0.14)",
                        "12": "0 12px 17px 0 rgba(0, 0, 0, 0.14)",
                        "16": "0 16px 24px 0 rgba(0, 0, 0, 0.14)",
                        "2": "0 2px 2px 0 rgba(0, 0, 0, 0.14)",
                        "24": "0 24px 38px 0 rgba(0, 0, 0, 0.14)",
                        "3": "0 3px 4px 0 rgba(0, 0, 0, 0.14)",
                        "4": "0 4px 5px 0 rgba(0, 0, 0, 0.14)",
                        "6": "0 6px 10px 0 rgba(0, 0, 0, 0.14)",
                        "8": "0 8px 10px 0 rgba(0, 0, 0, 0.14)",
                        "9": "0 9px 12px 0 rgba(0, 0, 0, 0.14)",
                      },
                      "shape": Object {
                        "badgeBorderRadius": 100,
                        "borderRadius": 4,
                      },
                      "sizes": Object {
                        "huge": 96,
                        "hugex": 128,
                        "hugexx": 144,
                        "hugexxx": 192,
                        "large": 64,
                        "largex": 72,
                        "largexx": 80,
                        "largexxx": 88,
                        "medium": 48,
                        "mediumx": 56,
                        "micro": 4,
                        "none": 0,
                        "semi": 32,
                        "semix": 40,
                        "small": 16,
                        "standard": 24,
                        "tiny": 8,
                        "veryhuge": 256,
                      },
                      "spacing": 8,
                      "typography": Object {
                        "body1": Object {
                          "fontSize": "1rem",
                          "fontWeight": 400,
                        },
                        "body2": Object {
                          "fontSize": "0.875rem",
                          "fontWeight": 400,
                        },
                        "button": Object {
                          "fontSize": "0.875rem",
                          "fontWeight": 600,
                        },
                        "caption": Object {
                          "fontSize": "0.75rem",
                          "fontWeight": 400,
                        },
                        "fontFamily": "\\"Roboto\\", sans-serif",
                        "fontFamilyBrand1": "\\"Helvetica Now Display\\"",
                        "fontFamilyBrand2": "\\"Helvetica Now Text\\"",
                        "fontFamilyBrand3": undefined,
                        "fontWeightBold": 700,
                        "fontWeightLight": 300,
                        "fontWeightMedium": 500,
                        "fontWeightRegular": 400,
                        "h1": Object {
                          "fontSize": "6rem",
                          "fontWeight": 300,
                        },
                        "h2": Object {
                          "fontSize": "3.75rem",
                          "fontWeight": 300,
                        },
                        "h3": Object {
                          "fontSize": "3rem",
                          "fontWeight": 400,
                        },
                        "h4": Object {
                          "fontSize": "2.125rem",
                          "fontWeight": 400,
                        },
                        "h5": Object {
                          "fontSize": "1.5rem",
                          "fontWeight": 400,
                        },
                        "h6": Object {
                          "fontSize": "1.25rem",
                          "fontWeight": 600,
                        },
                        "overline": Object {
                          "fontSize": "0.75rem",
                          "fontWeight": 400,
                        },
                        "subtitle1": Object {
                          "fontSize": "1rem",
                          "fontWeight": 400,
                        },
                        "subtitle2": Object {
                          "fontSize": "0.875rem",
                          "fontWeight": 500,
                        },
                      },
                    }
                  }
                  value={2020-02-01T03:00:00.000Z}
                  variant="dialog"
                  views={
                    Array [
                      "year",
                      "date",
                    ]
                  }
                >
                  <Component
                    DateInputProps={
                      Object {
                        "format": "MMMM do",
                        "inputValue": "February 1st",
                        "onChange": [Function],
                        "openPicker": [Function],
                        "validationError": "",
                      }
                    }
                    InputComponent={[Function]}
                    format="MMMM do"
                    helperText=""
                    inputProps={Object {}}
                    keyboardIcon={
                      <ForwardRef(WithTheme)
                        name="outlined-action-calendar"
                        size="tiny"
                      />
                    }
                    label=""
                    onAccept={[Function]}
                    onClear={[Function]}
                    onDismiss={[Function]}
                    onSetToday={[Function]}
                    open={false}
                    required={false}
                    theme={
                      Object {
                        "avatarSizes": Object {
                          "huge": Object {
                            "fontSize": "1.5rem",
                            "size": 80,
                          },
                          "large": Object {
                            "fontSize": "1rem",
                            "size": 48,
                          },
                          "small": Object {
                            "fontSize": ".875rem",
                            "size": 32,
                          },
                          "standard": Object {
                            "fontSize": "1rem",
                            "size": 40,
                          },
                          "tiny": Object {
                            "fontSize": ".625rem",
                            "size": 24,
                          },
                        },
                        "buttonSizes": Object {
                          "large": Object {
                            "minHeight": 48,
                            "paddingBottom": 16,
                            "paddingLeft": 16,
                            "paddingRight": 16,
                            "paddingTop": 16,
                          },
                          "medium": Object {
                            "minHeight": 40,
                            "paddingBottom": 12,
                            "paddingLeft": 16,
                            "paddingRight": 16,
                            "paddingTop": 12,
                          },
                          "small": Object {
                            "minHeight": 32,
                            "paddingBottom": 8,
                            "paddingLeft": 8,
                            "paddingRight": 8,
                            "paddingTop": 8,
                          },
                        },
                        "iconSizes": Object {
                          "huge": 144,
                          "hugex": 192,
                          "hugexx": 256,
                          "large": 72,
                          "largex": 96,
                          "largexx": 128,
                          "medium": 64,
                          "micro": 16,
                          "small": 32,
                          "standard": 48,
                          "tiny": 24,
                        },
                        "overrides": Object {
                          "MuiAvatar": Object {
                            "colorDefault": Object {
                              "color": "#333333",
                            },
                          },
                          "MuiBadge": Object {
                            "badge": Object {
                              "padding": "0 4px",
                            },
                          },
                          "MuiButton": Object {
                            "outlinedPrimary": Object {
                              "color": "#333333",
                            },
                            "outlinedSecondary": Object {
                              "color": "#333333",
                            },
                            "root": Object {
                              "fontSize": "0.875rem",
                              "minHeight": "40px",
                              "padding": "8px 16px",
                            },
                            "sizeLarge": Object {
                              "fontSize": "0.875rem",
                              "minHeight": "48px",
                            },
                            "sizeSmall": Object {
                              "fontSize": "0.875rem",
                              "minHeight": "32px",
                            },
                            "textPrimary": Object {
                              "color": "#333333",
                            },
                          },
                          "MuiChip": Object {
                            "clickableColorPrimary": Object {
                              "&:hover": Object {
                                "backgroundColor": "#EF8426",
                              },
                            },
                            "clickableColorSecondary": Object {
                              "&:hover": Object {
                                "backgroundColor": "#EF8426",
                              },
                            },
                            "deleteIcon": Object {
                              "&:hover": Object {
                                "color": "#000000",
                              },
                              "color": "rgba(0, 0, 0, 0.8)",
                              "fontSize": "24px",
                              "height": "24px",
                              "width": "24px",
                            },
                            "deleteIconColorPrimary": Object {
                              "&:hover": Object {
                                "color": "#FFFFFF",
                              },
                              "color": "rgba(255, 255, 255, 0.8)",
                            },
                            "deleteIconColorSecondary": Object {
                              "&:hover": Object {
                                "color": "#FFFFFF",
                              },
                              "color": "rgba(255, 255, 255, 0.8)",
                            },
                            "deleteIconSmall": Object {
                              "fontSize": "16px",
                              "height": "16px",
                              "width": "16px",
                            },
                            "icon": Object {
                              "fontSize": "24px",
                            },
                            "iconSmall": Object {
                              "fontSize": "16px",
                              "height": "16px",
                              "marginTop": "1px",
                              "width": "16px",
                            },
                            "outlined": Object {
                              "borderColor": "rgba(0, 0, 0, 0.12)",
                              "color": "#000000",
                            },
                            "outlinedPrimary": Object {
                              "color": "#000000",
                            },
                            "outlinedSecondary": Object {
                              "color": "#000000",
                            },
                            "root": Object {
                              "& $avatar": Object {
                                "backgroundColor": "rgba(0, 0, 0, 0.24)",
                                "color": "#333333",
                              },
                              "&$disabled": Object {
                                "opacity": 0.4,
                              },
                              "backgroundColor": "rgba(0, 0, 0, 0.12)",
                              "color": "#333333",
                              "fontSize": "0.875rem",
                            },
                          },
                          "MuiExpansionPanel": Object {
                            "root": Object {
                              "&$disabled": Object {
                                "backgroundColor": "#FFFFFF",
                                "opacity": 0.32,
                              },
                              "&$expanded": Object {
                                "borderColor": "#F4AB34",
                              },
                              "border": "transparent 1px solid",
                            },
                          },
                          "MuiExpansionPanelSummary": Object {
                            "root": Object {
                              "&$disabled": Object {
                                "opacity": 1,
                              },
                              "alignItems": "flex-start",
                              "marginTop": "8px",
                            },
                          },
                          "MuiFormLabel": Object {
                            "formControl": Object {
                              "marginTop": "-4px",
                              "transform": "none",
                            },
                            "root": Object {
                              "&.Mui-focused": Object {
                                "color": "#777777",
                                "fontSize": "0.875rem",
                              },
                              "fontSize": "0.875rem",
                            },
                          },
                          "MuiIconButton": Object {
                            "root": Object {
                              "color": "#333333",
                              "padding": "8px",
                            },
                            "sizeSmall": Object {
                              "padding": "4px",
                            },
                          },
                          "MuiInputAdornment": Object {
                            "root": Object {
                              "position": "absolute",
                              "right": "0",
                            },
                          },
                          "MuiInputBase": Object {
                            "input": Object {
                              "&.Mui-disabled": Object {
                                "&:hover": Object {
                                  "boxShadow": "#333333 0 0 0 1px",
                                },
                                "opacity": 0.24,
                              },
                              "&:focus": Object {
                                "boxShadow": "#F4AB34 0 0 0 2px",
                              },
                              "&:focus:not(:read-only)": Object {
                                "boxShadow": "#F4AB34 0 0 0 2px",
                              },
                              "&:hover": Object {
                                "boxShadow": "#777777 0 0 0 1px",
                              },
                              "&:hover:not(:placeholder-shown)": Object {
                                "boxShadow": "#777777 0 0 0 1px",
                              },
                              "&:hover:not(:read-only):not(:disabled):not(:focus)": Object {
                                "boxShadow": "#777777 0 0 0 1px",
                              },
                              "&:not(:placeholder-shown)": Object {
                                "boxShadow": "#333333 0 0 0 1px",
                              },
                              "&:placeholder-shown": Object {
                                "boxShadow": "#BBBBBB 0 0 0 1px",
                              },
                              "borderRadius": "4px",
                              "boxShadow": "#BBBBBB 0 0 0 1px",
                              "color": "#333333",
                              "minHeight": "24px",
                              "padding": "16px 35px 16px 16px",
                            },
                            "root": Object {
                              "&.MuiInput-underline.Mui-disabled:before": Object {
                                "borderBottom": "none",
                              },
                              "&.MuiInput-underline:after": Object {
                                "borderBottom": "none",
                              },
                              "&.MuiInput-underline:before": Object {
                                "borderBottom": "none",
                              },
                              "&.MuiInput-underline:hover:not(.Mui-disabled):before": Object {
                                "borderBottom": "none",
                              },
                              "color": "#333333",
                            },
                          },
                          "MuiInputLabel": Object {
                            "formControl": Object {
                              "marginTop": "-4px",
                              "transform": "none",
                            },
                            "shrink": Object {
                              "marginTop": "-4px",
                              "transform": "none",
                            },
                          },
                          "MuiListItem": Object {
                            "button": Object {
                              "&:hover": Object {
                                "backgroundColor": "rgba(0, 0, 0, 0.04)",
                              },
                            },
                            "root": Object {
                              "&$selected": Object {
                                "&:hover": Object {
                                  "backgroundColor": "rgba(0, 0, 0, 0.04)",
                                },
                                "backgroundColor": "rgba(255, 107, 11, 0.16)",
                              },
                              "&.Mui-disabled": Object {
                                "opacity": 0.32,
                              },
                            },
                          },
                          "MuiTab": Object {
                            "root": Object {
                              "&$disabled": Object {
                                "opacity": 0.24,
                              },
                            },
                            "textColorInherit": Object {
                              "&$disabled": Object {
                                "opacity": 0.24,
                              },
                            },
                            "wrapper": Object {
                              "& > *:first-child": Object {
                                "marginBottom": "2px !important",
                              },
                            },
                          },
                          "MuiTextField": Object {
                            "& .MuiInputLabel": Object {
                              "marginTop": "20px",
                            },
                          },
                          "MuiToolbar": Object {
                            "dense": Object {
                              "@media (min-width: 600px)": Object {
                                "minHeight": "56px",
                              },
                              "minHeight": "56px",
                            },
                            "gutters": Object {
                              "@media (min-width: 600px)": Object {
                                "padding": "0 16px",
                              },
                              "padding": "0 16px",
                            },
                            "regular": Object {
                              "@media (min-width: 600px)": Object {
                                "minHeight": "56px",
                              },
                              "minHeight": "56px",
                            },
                            "root": Object {
                              "@media (min-width: 600px)": Object {
                                "padding": "0 16px",
                              },
                              "padding": "0 16px",
                            },
                          },
                        },
                        "palette": Object {
                          "action": Object {
                            "disabled": "rgba(51, 51, 51, 0.24)",
                          },
                          "background": Object {
                            "default": "#FAFAFA",
                            "defaultContrastText": "#333333",
                            "paper": "#FFFFFF",
                            "paperContrastText": "#333333",
                          },
                          "complementary": Object {
                            "highlight": "#000000",
                            "link": "#227BBD",
                            "linkContrastText": "#FFFFFF",
                            "warning": "#FCC433",
                            "warningContrastText": "#333333",
                          },
                          "error": Object {
                            "contrastText": "#FFFFFF",
                            "main": "#E74627",
                          },
                          "primary": Object {
                            "contrastText": "#333333",
                            "dark": "#EF8426",
                            "light": "#FEFDE8",
                            "main": "#F4AB34",
                          },
                          "secondary": Object {
                            "contrastText": "#000000",
                            "dark": "#FF5808",
                            "light": "#FFF8E1",
                            "main": "#FF6B0B",
                          },
                          "success": Object {
                            "contrastText": "#FFFFFF",
                            "main": "#569A32",
                          },
                          "text": Object {
                            "disabled": "#BBBBBB",
                            "hint": "#BBBBBB",
                            "primary": "#333333",
                            "secondary": "#777777",
                          },
                        },
                        "shadows": Object {
                          "0": "none",
                          "1": "0 1px 1px 0 rgba(0, 0, 0, 0.14)",
                          "12": "0 12px 17px 0 rgba(0, 0, 0, 0.14)",
                          "16": "0 16px 24px 0 rgba(0, 0, 0, 0.14)",
                          "2": "0 2px 2px 0 rgba(0, 0, 0, 0.14)",
                          "24": "0 24px 38px 0 rgba(0, 0, 0, 0.14)",
                          "3": "0 3px 4px 0 rgba(0, 0, 0, 0.14)",
                          "4": "0 4px 5px 0 rgba(0, 0, 0, 0.14)",
                          "6": "0 6px 10px 0 rgba(0, 0, 0, 0.14)",
                          "8": "0 8px 10px 0 rgba(0, 0, 0, 0.14)",
                          "9": "0 9px 12px 0 rgba(0, 0, 0, 0.14)",
                        },
                        "shape": Object {
                          "badgeBorderRadius": 100,
                          "borderRadius": 4,
                        },
                        "sizes": Object {
                          "huge": 96,
                          "hugex": 128,
                          "hugexx": 144,
                          "hugexxx": 192,
                          "large": 64,
                          "largex": 72,
                          "largexx": 80,
                          "largexxx": 88,
                          "medium": 48,
                          "mediumx": 56,
                          "micro": 4,
                          "none": 0,
                          "semi": 32,
                          "semix": 40,
                          "small": 16,
                          "standard": 24,
                          "tiny": 8,
                          "veryhuge": 256,
                        },
                        "spacing": 8,
                        "typography": Object {
                          "body1": Object {
                            "fontSize": "1rem",
                            "fontWeight": 400,
                          },
                          "body2": Object {
                            "fontSize": "0.875rem",
                            "fontWeight": 400,
                          },
                          "button": Object {
                            "fontSize": "0.875rem",
                            "fontWeight": 600,
                          },
                          "caption": Object {
                            "fontSize": "0.75rem",
                            "fontWeight": 400,
                          },
                          "fontFamily": "\\"Roboto\\", sans-serif",
                          "fontFamilyBrand1": "\\"Helvetica Now Display\\"",
                          "fontFamilyBrand2": "\\"Helvetica Now Text\\"",
                          "fontFamilyBrand3": undefined,
                          "fontWeightBold": 700,
                          "fontWeightLight": 300,
                          "fontWeightMedium": 500,
                          "fontWeightRegular": 400,
                          "h1": Object {
                            "fontSize": "6rem",
                            "fontWeight": 300,
                          },
                          "h2": Object {
                            "fontSize": "3.75rem",
                            "fontWeight": 300,
                          },
                          "h3": Object {
                            "fontSize": "3rem",
                            "fontWeight": 400,
                          },
                          "h4": Object {
                            "fontSize": "2.125rem",
                            "fontWeight": 400,
                          },
                          "h5": Object {
                            "fontSize": "1.5rem",
                            "fontWeight": 400,
                          },
                          "h6": Object {
                            "fontSize": "1.25rem",
                            "fontWeight": 600,
                          },
                          "overline": Object {
                            "fontSize": "0.75rem",
                            "fontWeight": 400,
                          },
                          "subtitle1": Object {
                            "fontSize": "1rem",
                            "fontWeight": 400,
                          },
                          "subtitle2": Object {
                            "fontSize": "0.875rem",
                            "fontWeight": 500,
                          },
                        },
                      }
                    }
                    variant="dialog"
                  >
                    <Component
                      DateInputProps={
                        Object {
                          "format": "MMMM do",
                          "inputValue": "February 1st",
                          "onChange": [Function],
                          "openPicker": [Function],
                          "validationError": "",
                        }
                      }
                      InputComponent={[Function]}
                      cancelLabel="Cancel"
                      clearLabel="Clear"
                      clearable={false}
                      format="MMMM do"
                      helperText=""
                      inputProps={Object {}}
                      keyboardIcon={
                        <ForwardRef(WithTheme)
                          name="outlined-action-calendar"
                          size="tiny"
                        />
                      }
                      label=""
                      okLabel="OK"
                      onAccept={[Function]}
                      onClear={[Function]}
                      onDismiss={[Function]}
                      onSetToday={[Function]}
                      open={false}
                      required={false}
                      showTodayButton={false}
                      theme={
                        Object {
                          "avatarSizes": Object {
                            "huge": Object {
                              "fontSize": "1.5rem",
                              "size": 80,
                            },
                            "large": Object {
                              "fontSize": "1rem",
                              "size": 48,
                            },
                            "small": Object {
                              "fontSize": ".875rem",
                              "size": 32,
                            },
                            "standard": Object {
                              "fontSize": "1rem",
                              "size": 40,
                            },
                            "tiny": Object {
                              "fontSize": ".625rem",
                              "size": 24,
                            },
                          },
                          "buttonSizes": Object {
                            "large": Object {
                              "minHeight": 48,
                              "paddingBottom": 16,
                              "paddingLeft": 16,
                              "paddingRight": 16,
                              "paddingTop": 16,
                            },
                            "medium": Object {
                              "minHeight": 40,
                              "paddingBottom": 12,
                              "paddingLeft": 16,
                              "paddingRight": 16,
                              "paddingTop": 12,
                            },
                            "small": Object {
                              "minHeight": 32,
                              "paddingBottom": 8,
                              "paddingLeft": 8,
                              "paddingRight": 8,
                              "paddingTop": 8,
                            },
                          },
                          "iconSizes": Object {
                            "huge": 144,
                            "hugex": 192,
                            "hugexx": 256,
                            "large": 72,
                            "largex": 96,
                            "largexx": 128,
                            "medium": 64,
                            "micro": 16,
                            "small": 32,
                            "standard": 48,
                            "tiny": 24,
                          },
                          "overrides": Object {
                            "MuiAvatar": Object {
                              "colorDefault": Object {
                                "color": "#333333",
                              },
                            },
                            "MuiBadge": Object {
                              "badge": Object {
                                "padding": "0 4px",
                              },
                            },
                            "MuiButton": Object {
                              "outlinedPrimary": Object {
                                "color": "#333333",
                              },
                              "outlinedSecondary": Object {
                                "color": "#333333",
                              },
                              "root": Object {
                                "fontSize": "0.875rem",
                                "minHeight": "40px",
                                "padding": "8px 16px",
                              },
                              "sizeLarge": Object {
                                "fontSize": "0.875rem",
                                "minHeight": "48px",
                              },
                              "sizeSmall": Object {
                                "fontSize": "0.875rem",
                                "minHeight": "32px",
                              },
                              "textPrimary": Object {
                                "color": "#333333",
                              },
                            },
                            "MuiChip": Object {
                              "clickableColorPrimary": Object {
                                "&:hover": Object {
                                  "backgroundColor": "#EF8426",
                                },
                              },
                              "clickableColorSecondary": Object {
                                "&:hover": Object {
                                  "backgroundColor": "#EF8426",
                                },
                              },
                              "deleteIcon": Object {
                                "&:hover": Object {
                                  "color": "#000000",
                                },
                                "color": "rgba(0, 0, 0, 0.8)",
                                "fontSize": "24px",
                                "height": "24px",
                                "width": "24px",
                              },
                              "deleteIconColorPrimary": Object {
                                "&:hover": Object {
                                  "color": "#FFFFFF",
                                },
                                "color": "rgba(255, 255, 255, 0.8)",
                              },
                              "deleteIconColorSecondary": Object {
                                "&:hover": Object {
                                  "color": "#FFFFFF",
                                },
                                "color": "rgba(255, 255, 255, 0.8)",
                              },
                              "deleteIconSmall": Object {
                                "fontSize": "16px",
                                "height": "16px",
                                "width": "16px",
                              },
                              "icon": Object {
                                "fontSize": "24px",
                              },
                              "iconSmall": Object {
                                "fontSize": "16px",
                                "height": "16px",
                                "marginTop": "1px",
                                "width": "16px",
                              },
                              "outlined": Object {
                                "borderColor": "rgba(0, 0, 0, 0.12)",
                                "color": "#000000",
                              },
                              "outlinedPrimary": Object {
                                "color": "#000000",
                              },
                              "outlinedSecondary": Object {
                                "color": "#000000",
                              },
                              "root": Object {
                                "& $avatar": Object {
                                  "backgroundColor": "rgba(0, 0, 0, 0.24)",
                                  "color": "#333333",
                                },
                                "&$disabled": Object {
                                  "opacity": 0.4,
                                },
                                "backgroundColor": "rgba(0, 0, 0, 0.12)",
                                "color": "#333333",
                                "fontSize": "0.875rem",
                              },
                            },
                            "MuiExpansionPanel": Object {
                              "root": Object {
                                "&$disabled": Object {
                                  "backgroundColor": "#FFFFFF",
                                  "opacity": 0.32,
                                },
                                "&$expanded": Object {
                                  "borderColor": "#F4AB34",
                                },
                                "border": "transparent 1px solid",
                              },
                            },
                            "MuiExpansionPanelSummary": Object {
                              "root": Object {
                                "&$disabled": Object {
                                  "opacity": 1,
                                },
                                "alignItems": "flex-start",
                                "marginTop": "8px",
                              },
                            },
                            "MuiFormLabel": Object {
                              "formControl": Object {
                                "marginTop": "-4px",
                                "transform": "none",
                              },
                              "root": Object {
                                "&.Mui-focused": Object {
                                  "color": "#777777",
                                  "fontSize": "0.875rem",
                                },
                                "fontSize": "0.875rem",
                              },
                            },
                            "MuiIconButton": Object {
                              "root": Object {
                                "color": "#333333",
                                "padding": "8px",
                              },
                              "sizeSmall": Object {
                                "padding": "4px",
                              },
                            },
                            "MuiInputAdornment": Object {
                              "root": Object {
                                "position": "absolute",
                                "right": "0",
                              },
                            },
                            "MuiInputBase": Object {
                              "input": Object {
                                "&.Mui-disabled": Object {
                                  "&:hover": Object {
                                    "boxShadow": "#333333 0 0 0 1px",
                                  },
                                  "opacity": 0.24,
                                },
                                "&:focus": Object {
                                  "boxShadow": "#F4AB34 0 0 0 2px",
                                },
                                "&:focus:not(:read-only)": Object {
                                  "boxShadow": "#F4AB34 0 0 0 2px",
                                },
                                "&:hover": Object {
                                  "boxShadow": "#777777 0 0 0 1px",
                                },
                                "&:hover:not(:placeholder-shown)": Object {
                                  "boxShadow": "#777777 0 0 0 1px",
                                },
                                "&:hover:not(:read-only):not(:disabled):not(:focus)": Object {
                                  "boxShadow": "#777777 0 0 0 1px",
                                },
                                "&:not(:placeholder-shown)": Object {
                                  "boxShadow": "#333333 0 0 0 1px",
                                },
                                "&:placeholder-shown": Object {
                                  "boxShadow": "#BBBBBB 0 0 0 1px",
                                },
                                "borderRadius": "4px",
                                "boxShadow": "#BBBBBB 0 0 0 1px",
                                "color": "#333333",
                                "minHeight": "24px",
                                "padding": "16px 35px 16px 16px",
                              },
                              "root": Object {
                                "&.MuiInput-underline.Mui-disabled:before": Object {
                                  "borderBottom": "none",
                                },
                                "&.MuiInput-underline:after": Object {
                                  "borderBottom": "none",
                                },
                                "&.MuiInput-underline:before": Object {
                                  "borderBottom": "none",
                                },
                                "&.MuiInput-underline:hover:not(.Mui-disabled):before": Object {
                                  "borderBottom": "none",
                                },
                                "color": "#333333",
                              },
                            },
                            "MuiInputLabel": Object {
                              "formControl": Object {
                                "marginTop": "-4px",
                                "transform": "none",
                              },
                              "shrink": Object {
                                "marginTop": "-4px",
                                "transform": "none",
                              },
                            },
                            "MuiListItem": Object {
                              "button": Object {
                                "&:hover": Object {
                                  "backgroundColor": "rgba(0, 0, 0, 0.04)",
                                },
                              },
                              "root": Object {
                                "&$selected": Object {
                                  "&:hover": Object {
                                    "backgroundColor": "rgba(0, 0, 0, 0.04)",
                                  },
                                  "backgroundColor": "rgba(255, 107, 11, 0.16)",
                                },
                                "&.Mui-disabled": Object {
                                  "opacity": 0.32,
                                },
                              },
                            },
                            "MuiTab": Object {
                              "root": Object {
                                "&$disabled": Object {
                                  "opacity": 0.24,
                                },
                              },
                              "textColorInherit": Object {
                                "&$disabled": Object {
                                  "opacity": 0.24,
                                },
                              },
                              "wrapper": Object {
                                "& > *:first-child": Object {
                                  "marginBottom": "2px !important",
                                },
                              },
                            },
                            "MuiTextField": Object {
                              "& .MuiInputLabel": Object {
                                "marginTop": "20px",
                              },
                            },
                            "MuiToolbar": Object {
                              "dense": Object {
                                "@media (min-width: 600px)": Object {
                                  "minHeight": "56px",
                                },
                                "minHeight": "56px",
                              },
                              "gutters": Object {
                                "@media (min-width: 600px)": Object {
                                  "padding": "0 16px",
                                },
                                "padding": "0 16px",
                              },
                              "regular": Object {
                                "@media (min-width: 600px)": Object {
                                  "minHeight": "56px",
                                },
                                "minHeight": "56px",
                              },
                              "root": Object {
                                "@media (min-width: 600px)": Object {
                                  "padding": "0 16px",
                                },
                                "padding": "0 16px",
                              },
                            },
                          },
                          "palette": Object {
                            "action": Object {
                              "disabled": "rgba(51, 51, 51, 0.24)",
                            },
                            "background": Object {
                              "default": "#FAFAFA",
                              "defaultContrastText": "#333333",
                              "paper": "#FFFFFF",
                              "paperContrastText": "#333333",
                            },
                            "complementary": Object {
                              "highlight": "#000000",
                              "link": "#227BBD",
                              "linkContrastText": "#FFFFFF",
                              "warning": "#FCC433",
                              "warningContrastText": "#333333",
                            },
                            "error": Object {
                              "contrastText": "#FFFFFF",
                              "main": "#E74627",
                            },
                            "primary": Object {
                              "contrastText": "#333333",
                              "dark": "#EF8426",
                              "light": "#FEFDE8",
                              "main": "#F4AB34",
                            },
                            "secondary": Object {
                              "contrastText": "#000000",
                              "dark": "#FF5808",
                              "light": "#FFF8E1",
                              "main": "#FF6B0B",
                            },
                            "success": Object {
                              "contrastText": "#FFFFFF",
                              "main": "#569A32",
                            },
                            "text": Object {
                              "disabled": "#BBBBBB",
                              "hint": "#BBBBBB",
                              "primary": "#333333",
                              "secondary": "#777777",
                            },
                          },
                          "shadows": Object {
                            "0": "none",
                            "1": "0 1px 1px 0 rgba(0, 0, 0, 0.14)",
                            "12": "0 12px 17px 0 rgba(0, 0, 0, 0.14)",
                            "16": "0 16px 24px 0 rgba(0, 0, 0, 0.14)",
                            "2": "0 2px 2px 0 rgba(0, 0, 0, 0.14)",
                            "24": "0 24px 38px 0 rgba(0, 0, 0, 0.14)",
                            "3": "0 3px 4px 0 rgba(0, 0, 0, 0.14)",
                            "4": "0 4px 5px 0 rgba(0, 0, 0, 0.14)",
                            "6": "0 6px 10px 0 rgba(0, 0, 0, 0.14)",
                            "8": "0 8px 10px 0 rgba(0, 0, 0, 0.14)",
                            "9": "0 9px 12px 0 rgba(0, 0, 0, 0.14)",
                          },
                          "shape": Object {
                            "badgeBorderRadius": 100,
                            "borderRadius": 4,
                          },
                          "sizes": Object {
                            "huge": 96,
                            "hugex": 128,
                            "hugexx": 144,
                            "hugexxx": 192,
                            "large": 64,
                            "largex": 72,
                            "largexx": 80,
                            "largexxx": 88,
                            "medium": 48,
                            "mediumx": 56,
                            "micro": 4,
                            "none": 0,
                            "semi": 32,
                            "semix": 40,
                            "small": 16,
                            "standard": 24,
                            "tiny": 8,
                            "veryhuge": 256,
                          },
                          "spacing": 8,
                          "typography": Object {
                            "body1": Object {
                              "fontSize": "1rem",
                              "fontWeight": 400,
                            },
                            "body2": Object {
                              "fontSize": "0.875rem",
                              "fontWeight": 400,
                            },
                            "button": Object {
                              "fontSize": "0.875rem",
                              "fontWeight": 600,
                            },
                            "caption": Object {
                              "fontSize": "0.75rem",
                              "fontWeight": 400,
                            },
                            "fontFamily": "\\"Roboto\\", sans-serif",
                            "fontFamilyBrand1": "\\"Helvetica Now Display\\"",
                            "fontFamilyBrand2": "\\"Helvetica Now Text\\"",
                            "fontFamilyBrand3": undefined,
                            "fontWeightBold": 700,
                            "fontWeightLight": 300,
                            "fontWeightMedium": 500,
                            "fontWeightRegular": 400,
                            "h1": Object {
                              "fontSize": "6rem",
                              "fontWeight": 300,
                            },
                            "h2": Object {
                              "fontSize": "3.75rem",
                              "fontWeight": 300,
                            },
                            "h3": Object {
                              "fontSize": "3rem",
                              "fontWeight": 400,
                            },
                            "h4": Object {
                              "fontSize": "2.125rem",
                              "fontWeight": 400,
                            },
                            "h5": Object {
                              "fontSize": "1.5rem",
                              "fontWeight": 400,
                            },
                            "h6": Object {
                              "fontSize": "1.25rem",
                              "fontWeight": 600,
                            },
                            "overline": Object {
                              "fontSize": "0.75rem",
                              "fontWeight": 400,
                            },
                            "subtitle1": Object {
                              "fontSize": "1rem",
                              "fontWeight": 400,
                            },
                            "subtitle2": Object {
                              "fontSize": "0.875rem",
                              "fontWeight": 500,
                            },
                          },
                        }
                      }
                      todayLabel="Today"
                    >
                      <Component
                        format="MMMM do"
                        helperText=""
                        inputProps={Object {}}
                        inputValue="February 1st"
                        keyboardIcon={
                          <ForwardRef(WithTheme)
                            name="outlined-action-calendar"
                            size="tiny"
                          />
                        }
                        label=""
                        onChange={[Function]}
                        openPicker={[Function]}
                        required={false}
                        theme={
                          Object {
                            "avatarSizes": Object {
                              "huge": Object {
                                "fontSize": "1.5rem",
                                "size": 80,
                              },
                              "large": Object {
                                "fontSize": "1rem",
                                "size": 48,
                              },
                              "small": Object {
                                "fontSize": ".875rem",
                                "size": 32,
                              },
                              "standard": Object {
                                "fontSize": "1rem",
                                "size": 40,
                              },
                              "tiny": Object {
                                "fontSize": ".625rem",
                                "size": 24,
                              },
                            },
                            "buttonSizes": Object {
                              "large": Object {
                                "minHeight": 48,
                                "paddingBottom": 16,
                                "paddingLeft": 16,
                                "paddingRight": 16,
                                "paddingTop": 16,
                              },
                              "medium": Object {
                                "minHeight": 40,
                                "paddingBottom": 12,
                                "paddingLeft": 16,
                                "paddingRight": 16,
                                "paddingTop": 12,
                              },
                              "small": Object {
                                "minHeight": 32,
                                "paddingBottom": 8,
                                "paddingLeft": 8,
                                "paddingRight": 8,
                                "paddingTop": 8,
                              },
                            },
                            "iconSizes": Object {
                              "huge": 144,
                              "hugex": 192,
                              "hugexx": 256,
                              "large": 72,
                              "largex": 96,
                              "largexx": 128,
                              "medium": 64,
                              "micro": 16,
                              "small": 32,
                              "standard": 48,
                              "tiny": 24,
                            },
                            "overrides": Object {
                              "MuiAvatar": Object {
                                "colorDefault": Object {
                                  "color": "#333333",
                                },
                              },
                              "MuiBadge": Object {
                                "badge": Object {
                                  "padding": "0 4px",
                                },
                              },
                              "MuiButton": Object {
                                "outlinedPrimary": Object {
                                  "color": "#333333",
                                },
                                "outlinedSecondary": Object {
                                  "color": "#333333",
                                },
                                "root": Object {
                                  "fontSize": "0.875rem",
                                  "minHeight": "40px",
                                  "padding": "8px 16px",
                                },
                                "sizeLarge": Object {
                                  "fontSize": "0.875rem",
                                  "minHeight": "48px",
                                },
                                "sizeSmall": Object {
                                  "fontSize": "0.875rem",
                                  "minHeight": "32px",
                                },
                                "textPrimary": Object {
                                  "color": "#333333",
                                },
                              },
                              "MuiChip": Object {
                                "clickableColorPrimary": Object {
                                  "&:hover": Object {
                                    "backgroundColor": "#EF8426",
                                  },
                                },
                                "clickableColorSecondary": Object {
                                  "&:hover": Object {
                                    "backgroundColor": "#EF8426",
                                  },
                                },
                                "deleteIcon": Object {
                                  "&:hover": Object {
                                    "color": "#000000",
                                  },
                                  "color": "rgba(0, 0, 0, 0.8)",
                                  "fontSize": "24px",
                                  "height": "24px",
                                  "width": "24px",
                                },
                                "deleteIconColorPrimary": Object {
                                  "&:hover": Object {
                                    "color": "#FFFFFF",
                                  },
                                  "color": "rgba(255, 255, 255, 0.8)",
                                },
                                "deleteIconColorSecondary": Object {
                                  "&:hover": Object {
                                    "color": "#FFFFFF",
                                  },
                                  "color": "rgba(255, 255, 255, 0.8)",
                                },
                                "deleteIconSmall": Object {
                                  "fontSize": "16px",
                                  "height": "16px",
                                  "width": "16px",
                                },
                                "icon": Object {
                                  "fontSize": "24px",
                                },
                                "iconSmall": Object {
                                  "fontSize": "16px",
                                  "height": "16px",
                                  "marginTop": "1px",
                                  "width": "16px",
                                },
                                "outlined": Object {
                                  "borderColor": "rgba(0, 0, 0, 0.12)",
                                  "color": "#000000",
                                },
                                "outlinedPrimary": Object {
                                  "color": "#000000",
                                },
                                "outlinedSecondary": Object {
                                  "color": "#000000",
                                },
                                "root": Object {
                                  "& $avatar": Object {
                                    "backgroundColor": "rgba(0, 0, 0, 0.24)",
                                    "color": "#333333",
                                  },
                                  "&$disabled": Object {
                                    "opacity": 0.4,
                                  },
                                  "backgroundColor": "rgba(0, 0, 0, 0.12)",
                                  "color": "#333333",
                                  "fontSize": "0.875rem",
                                },
                              },
                              "MuiExpansionPanel": Object {
                                "root": Object {
                                  "&$disabled": Object {
                                    "backgroundColor": "#FFFFFF",
                                    "opacity": 0.32,
                                  },
                                  "&$expanded": Object {
                                    "borderColor": "#F4AB34",
                                  },
                                  "border": "transparent 1px solid",
                                },
                              },
                              "MuiExpansionPanelSummary": Object {
                                "root": Object {
                                  "&$disabled": Object {
                                    "opacity": 1,
                                  },
                                  "alignItems": "flex-start",
                                  "marginTop": "8px",
                                },
                              },
                              "MuiFormLabel": Object {
                                "formControl": Object {
                                  "marginTop": "-4px",
                                  "transform": "none",
                                },
                                "root": Object {
                                  "&.Mui-focused": Object {
                                    "color": "#777777",
                                    "fontSize": "0.875rem",
                                  },
                                  "fontSize": "0.875rem",
                                },
                              },
                              "MuiIconButton": Object {
                                "root": Object {
                                  "color": "#333333",
                                  "padding": "8px",
                                },
                                "sizeSmall": Object {
                                  "padding": "4px",
                                },
                              },
                              "MuiInputAdornment": Object {
                                "root": Object {
                                  "position": "absolute",
                                  "right": "0",
                                },
                              },
                              "MuiInputBase": Object {
                                "input": Object {
                                  "&.Mui-disabled": Object {
                                    "&:hover": Object {
                                      "boxShadow": "#333333 0 0 0 1px",
                                    },
                                    "opacity": 0.24,
                                  },
                                  "&:focus": Object {
                                    "boxShadow": "#F4AB34 0 0 0 2px",
                                  },
                                  "&:focus:not(:read-only)": Object {
                                    "boxShadow": "#F4AB34 0 0 0 2px",
                                  },
                                  "&:hover": Object {
                                    "boxShadow": "#777777 0 0 0 1px",
                                  },
                                  "&:hover:not(:placeholder-shown)": Object {
                                    "boxShadow": "#777777 0 0 0 1px",
                                  },
                                  "&:hover:not(:read-only):not(:disabled):not(:focus)": Object {
                                    "boxShadow": "#777777 0 0 0 1px",
                                  },
                                  "&:not(:placeholder-shown)": Object {
                                    "boxShadow": "#333333 0 0 0 1px",
                                  },
                                  "&:placeholder-shown": Object {
                                    "boxShadow": "#BBBBBB 0 0 0 1px",
                                  },
                                  "borderRadius": "4px",
                                  "boxShadow": "#BBBBBB 0 0 0 1px",
                                  "color": "#333333",
                                  "minHeight": "24px",
                                  "padding": "16px 35px 16px 16px",
                                },
                                "root": Object {
                                  "&.MuiInput-underline.Mui-disabled:before": Object {
                                    "borderBottom": "none",
                                  },
                                  "&.MuiInput-underline:after": Object {
                                    "borderBottom": "none",
                                  },
                                  "&.MuiInput-underline:before": Object {
                                    "borderBottom": "none",
                                  },
                                  "&.MuiInput-underline:hover:not(.Mui-disabled):before": Object {
                                    "borderBottom": "none",
                                  },
                                  "color": "#333333",
                                },
                              },
                              "MuiInputLabel": Object {
                                "formControl": Object {
                                  "marginTop": "-4px",
                                  "transform": "none",
                                },
                                "shrink": Object {
                                  "marginTop": "-4px",
                                  "transform": "none",
                                },
                              },
                              "MuiListItem": Object {
                                "button": Object {
                                  "&:hover": Object {
                                    "backgroundColor": "rgba(0, 0, 0, 0.04)",
                                  },
                                },
                                "root": Object {
                                  "&$selected": Object {
                                    "&:hover": Object {
                                      "backgroundColor": "rgba(0, 0, 0, 0.04)",
                                    },
                                    "backgroundColor": "rgba(255, 107, 11, 0.16)",
                                  },
                                  "&.Mui-disabled": Object {
                                    "opacity": 0.32,
                                  },
                                },
                              },
                              "MuiTab": Object {
                                "root": Object {
                                  "&$disabled": Object {
                                    "opacity": 0.24,
                                  },
                                },
                                "textColorInherit": Object {
                                  "&$disabled": Object {
                                    "opacity": 0.24,
                                  },
                                },
                                "wrapper": Object {
                                  "& > *:first-child": Object {
                                    "marginBottom": "2px !important",
                                  },
                                },
                              },
                              "MuiTextField": Object {
                                "& .MuiInputLabel": Object {
                                  "marginTop": "20px",
                                },
                              },
                              "MuiToolbar": Object {
                                "dense": Object {
                                  "@media (min-width: 600px)": Object {
                                    "minHeight": "56px",
                                  },
                                  "minHeight": "56px",
                                },
                                "gutters": Object {
                                  "@media (min-width: 600px)": Object {
                                    "padding": "0 16px",
                                  },
                                  "padding": "0 16px",
                                },
                                "regular": Object {
                                  "@media (min-width: 600px)": Object {
                                    "minHeight": "56px",
                                  },
                                  "minHeight": "56px",
                                },
                                "root": Object {
                                  "@media (min-width: 600px)": Object {
                                    "padding": "0 16px",
                                  },
                                  "padding": "0 16px",
                                },
                              },
                            },
                            "palette": Object {
                              "action": Object {
                                "disabled": "rgba(51, 51, 51, 0.24)",
                              },
                              "background": Object {
                                "default": "#FAFAFA",
                                "defaultContrastText": "#333333",
                                "paper": "#FFFFFF",
                                "paperContrastText": "#333333",
                              },
                              "complementary": Object {
                                "highlight": "#000000",
                                "link": "#227BBD",
                                "linkContrastText": "#FFFFFF",
                                "warning": "#FCC433",
                                "warningContrastText": "#333333",
                              },
                              "error": Object {
                                "contrastText": "#FFFFFF",
                                "main": "#E74627",
                              },
                              "primary": Object {
                                "contrastText": "#333333",
                                "dark": "#EF8426",
                                "light": "#FEFDE8",
                                "main": "#F4AB34",
                              },
                              "secondary": Object {
                                "contrastText": "#000000",
                                "dark": "#FF5808",
                                "light": "#FFF8E1",
                                "main": "#FF6B0B",
                              },
                              "success": Object {
                                "contrastText": "#FFFFFF",
                                "main": "#569A32",
                              },
                              "text": Object {
                                "disabled": "#BBBBBB",
                                "hint": "#BBBBBB",
                                "primary": "#333333",
                                "secondary": "#777777",
                              },
                            },
                            "shadows": Object {
                              "0": "none",
                              "1": "0 1px 1px 0 rgba(0, 0, 0, 0.14)",
                              "12": "0 12px 17px 0 rgba(0, 0, 0, 0.14)",
                              "16": "0 16px 24px 0 rgba(0, 0, 0, 0.14)",
                              "2": "0 2px 2px 0 rgba(0, 0, 0, 0.14)",
                              "24": "0 24px 38px 0 rgba(0, 0, 0, 0.14)",
                              "3": "0 3px 4px 0 rgba(0, 0, 0, 0.14)",
                              "4": "0 4px 5px 0 rgba(0, 0, 0, 0.14)",
                              "6": "0 6px 10px 0 rgba(0, 0, 0, 0.14)",
                              "8": "0 8px 10px 0 rgba(0, 0, 0, 0.14)",
                              "9": "0 9px 12px 0 rgba(0, 0, 0, 0.14)",
                            },
                            "shape": Object {
                              "badgeBorderRadius": 100,
                              "borderRadius": 4,
                            },
                            "sizes": Object {
                              "huge": 96,
                              "hugex": 128,
                              "hugexx": 144,
                              "hugexxx": 192,
                              "large": 64,
                              "largex": 72,
                              "largexx": 80,
                              "largexxx": 88,
                              "medium": 48,
                              "mediumx": 56,
                              "micro": 4,
                              "none": 0,
                              "semi": 32,
                              "semix": 40,
                              "small": 16,
                              "standard": 24,
                              "tiny": 8,
                              "veryhuge": 256,
                            },
                            "spacing": 8,
                            "typography": Object {
                              "body1": Object {
                                "fontSize": "1rem",
                                "fontWeight": 400,
                              },
                              "body2": Object {
                                "fontSize": "0.875rem",
                                "fontWeight": 400,
                              },
                              "button": Object {
                                "fontSize": "0.875rem",
                                "fontWeight": 600,
                              },
                              "caption": Object {
                                "fontSize": "0.75rem",
                                "fontWeight": 400,
                              },
                              "fontFamily": "\\"Roboto\\", sans-serif",
                              "fontFamilyBrand1": "\\"Helvetica Now Display\\"",
                              "fontFamilyBrand2": "\\"Helvetica Now Text\\"",
                              "fontFamilyBrand3": undefined,
                              "fontWeightBold": 700,
                              "fontWeightLight": 300,
                              "fontWeightMedium": 500,
                              "fontWeightRegular": 400,
                              "h1": Object {
                                "fontSize": "6rem",
                                "fontWeight": 300,
                              },
                              "h2": Object {
                                "fontSize": "3.75rem",
                                "fontWeight": 300,
                              },
                              "h3": Object {
                                "fontSize": "3rem",
                                "fontWeight": 400,
                              },
                              "h4": Object {
                                "fontSize": "2.125rem",
                                "fontWeight": 400,
                              },
                              "h5": Object {
                                "fontSize": "1.5rem",
                                "fontWeight": 400,
                              },
                              "h6": Object {
                                "fontSize": "1.25rem",
                                "fontWeight": 600,
                              },
                              "overline": Object {
                                "fontSize": "0.75rem",
                                "fontWeight": 400,
                              },
                              "subtitle1": Object {
                                "fontSize": "1rem",
                                "fontWeight": 400,
                              },
                              "subtitle2": Object {
                                "fontSize": "0.875rem",
                                "fontWeight": 500,
                              },
                            },
                          }
                        }
                        validationError=""
                      >
                        <Rifm
                          format={[Function]}
                          key="____ __"
                          onChange={[Function]}
                          refuse={/\\[\\^\\\\d\\]\\+/gi}
                          value="February 1st"
                        >
                          <WithStyles(ForwardRef(TextField))
                            InputProps={
                              Object {
                                "endAdornment": <ForwardRef(WithStyles)
                                  position="end"
                                >
                                  <ForwardRef(WithStyles)
                                    onClick={[Function]}
                                  >
                                    <ForwardRef(WithTheme)
                                      name="outlined-action-calendar"
                                      size="tiny"
                                    />
                                  </ForwardRef(WithStyles)>
                                </ForwardRef(WithStyles)>,
                              }
                            }
                            error={false}
                            helperText=""
                            inputProps={Object {}}
                            label=""
                            onChange={[Function]}
                            required={false}
                            theme={
                              Object {
                                "avatarSizes": Object {
                                  "huge": Object {
                                    "fontSize": "1.5rem",
                                    "size": 80,
                                  },
                                  "large": Object {
                                    "fontSize": "1rem",
                                    "size": 48,
                                  },
                                  "small": Object {
                                    "fontSize": ".875rem",
                                    "size": 32,
                                  },
                                  "standard": Object {
                                    "fontSize": "1rem",
                                    "size": 40,
                                  },
                                  "tiny": Object {
                                    "fontSize": ".625rem",
                                    "size": 24,
                                  },
                                },
                                "buttonSizes": Object {
                                  "large": Object {
                                    "minHeight": 48,
                                    "paddingBottom": 16,
                                    "paddingLeft": 16,
                                    "paddingRight": 16,
                                    "paddingTop": 16,
                                  },
                                  "medium": Object {
                                    "minHeight": 40,
                                    "paddingBottom": 12,
                                    "paddingLeft": 16,
                                    "paddingRight": 16,
                                    "paddingTop": 12,
                                  },
                                  "small": Object {
                                    "minHeight": 32,
                                    "paddingBottom": 8,
                                    "paddingLeft": 8,
                                    "paddingRight": 8,
                                    "paddingTop": 8,
                                  },
                                },
                                "iconSizes": Object {
                                  "huge": 144,
                                  "hugex": 192,
                                  "hugexx": 256,
                                  "large": 72,
                                  "largex": 96,
                                  "largexx": 128,
                                  "medium": 64,
                                  "micro": 16,
                                  "small": 32,
                                  "standard": 48,
                                  "tiny": 24,
                                },
                                "overrides": Object {
                                  "MuiAvatar": Object {
                                    "colorDefault": Object {
                                      "color": "#333333",
                                    },
                                  },
                                  "MuiBadge": Object {
                                    "badge": Object {
                                      "padding": "0 4px",
                                    },
                                  },
                                  "MuiButton": Object {
                                    "outlinedPrimary": Object {
                                      "color": "#333333",
                                    },
                                    "outlinedSecondary": Object {
                                      "color": "#333333",
                                    },
                                    "root": Object {
                                      "fontSize": "0.875rem",
                                      "minHeight": "40px",
                                      "padding": "8px 16px",
                                    },
                                    "sizeLarge": Object {
                                      "fontSize": "0.875rem",
                                      "minHeight": "48px",
                                    },
                                    "sizeSmall": Object {
                                      "fontSize": "0.875rem",
                                      "minHeight": "32px",
                                    },
                                    "textPrimary": Object {
                                      "color": "#333333",
                                    },
                                  },
                                  "MuiChip": Object {
                                    "clickableColorPrimary": Object {
                                      "&:hover": Object {
                                        "backgroundColor": "#EF8426",
                                      },
                                    },
                                    "clickableColorSecondary": Object {
                                      "&:hover": Object {
                                        "backgroundColor": "#EF8426",
                                      },
                                    },
                                    "deleteIcon": Object {
                                      "&:hover": Object {
                                        "color": "#000000",
                                      },
                                      "color": "rgba(0, 0, 0, 0.8)",
                                      "fontSize": "24px",
                                      "height": "24px",
                                      "width": "24px",
                                    },
                                    "deleteIconColorPrimary": Object {
                                      "&:hover": Object {
                                        "color": "#FFFFFF",
                                      },
                                      "color": "rgba(255, 255, 255, 0.8)",
                                    },
                                    "deleteIconColorSecondary": Object {
                                      "&:hover": Object {
                                        "color": "#FFFFFF",
                                      },
                                      "color": "rgba(255, 255, 255, 0.8)",
                                    },
                                    "deleteIconSmall": Object {
                                      "fontSize": "16px",
                                      "height": "16px",
                                      "width": "16px",
                                    },
                                    "icon": Object {
                                      "fontSize": "24px",
                                    },
                                    "iconSmall": Object {
                                      "fontSize": "16px",
                                      "height": "16px",
                                      "marginTop": "1px",
                                      "width": "16px",
                                    },
                                    "outlined": Object {
                                      "borderColor": "rgba(0, 0, 0, 0.12)",
                                      "color": "#000000",
                                    },
                                    "outlinedPrimary": Object {
                                      "color": "#000000",
                                    },
                                    "outlinedSecondary": Object {
                                      "color": "#000000",
                                    },
                                    "root": Object {
                                      "& $avatar": Object {
                                        "backgroundColor": "rgba(0, 0, 0, 0.24)",
                                        "color": "#333333",
                                      },
                                      "&$disabled": Object {
                                        "opacity": 0.4,
                                      },
                                      "backgroundColor": "rgba(0, 0, 0, 0.12)",
                                      "color": "#333333",
                                      "fontSize": "0.875rem",
                                    },
                                  },
                                  "MuiExpansionPanel": Object {
                                    "root": Object {
                                      "&$disabled": Object {
                                        "backgroundColor": "#FFFFFF",
                                        "opacity": 0.32,
                                      },
                                      "&$expanded": Object {
                                        "borderColor": "#F4AB34",
                                      },
                                      "border": "transparent 1px solid",
                                    },
                                  },
                                  "MuiExpansionPanelSummary": Object {
                                    "root": Object {
                                      "&$disabled": Object {
                                        "opacity": 1,
                                      },
                                      "alignItems": "flex-start",
                                      "marginTop": "8px",
                                    },
                                  },
                                  "MuiFormLabel": Object {
                                    "formControl": Object {
                                      "marginTop": "-4px",
                                      "transform": "none",
                                    },
                                    "root": Object {
                                      "&.Mui-focused": Object {
                                        "color": "#777777",
                                        "fontSize": "0.875rem",
                                      },
                                      "fontSize": "0.875rem",
                                    },
                                  },
                                  "MuiIconButton": Object {
                                    "root": Object {
                                      "color": "#333333",
                                      "padding": "8px",
                                    },
                                    "sizeSmall": Object {
                                      "padding": "4px",
                                    },
                                  },
                                  "MuiInputAdornment": Object {
                                    "root": Object {
                                      "position": "absolute",
                                      "right": "0",
                                    },
                                  },
                                  "MuiInputBase": Object {
                                    "input": Object {
                                      "&.Mui-disabled": Object {
                                        "&:hover": Object {
                                          "boxShadow": "#333333 0 0 0 1px",
                                        },
                                        "opacity": 0.24,
                                      },
                                      "&:focus": Object {
                                        "boxShadow": "#F4AB34 0 0 0 2px",
                                      },
                                      "&:focus:not(:read-only)": Object {
                                        "boxShadow": "#F4AB34 0 0 0 2px",
                                      },
                                      "&:hover": Object {
                                        "boxShadow": "#777777 0 0 0 1px",
                                      },
                                      "&:hover:not(:placeholder-shown)": Object {
                                        "boxShadow": "#777777 0 0 0 1px",
                                      },
                                      "&:hover:not(:read-only):not(:disabled):not(:focus)": Object {
                                        "boxShadow": "#777777 0 0 0 1px",
                                      },
                                      "&:not(:placeholder-shown)": Object {
                                        "boxShadow": "#333333 0 0 0 1px",
                                      },
                                      "&:placeholder-shown": Object {
                                        "boxShadow": "#BBBBBB 0 0 0 1px",
                                      },
                                      "borderRadius": "4px",
                                      "boxShadow": "#BBBBBB 0 0 0 1px",
                                      "color": "#333333",
                                      "minHeight": "24px",
                                      "padding": "16px 35px 16px 16px",
                                    },
                                    "root": Object {
                                      "&.MuiInput-underline.Mui-disabled:before": Object {
                                        "borderBottom": "none",
                                      },
                                      "&.MuiInput-underline:after": Object {
                                        "borderBottom": "none",
                                      },
                                      "&.MuiInput-underline:before": Object {
                                        "borderBottom": "none",
                                      },
                                      "&.MuiInput-underline:hover:not(.Mui-disabled):before": Object {
                                        "borderBottom": "none",
                                      },
                                      "color": "#333333",
                                    },
                                  },
                                  "MuiInputLabel": Object {
                                    "formControl": Object {
                                      "marginTop": "-4px",
                                      "transform": "none",
                                    },
                                    "shrink": Object {
                                      "marginTop": "-4px",
                                      "transform": "none",
                                    },
                                  },
                                  "MuiListItem": Object {
                                    "button": Object {
                                      "&:hover": Object {
                                        "backgroundColor": "rgba(0, 0, 0, 0.04)",
                                      },
                                    },
                                    "root": Object {
                                      "&$selected": Object {
                                        "&:hover": Object {
                                          "backgroundColor": "rgba(0, 0, 0, 0.04)",
                                        },
                                        "backgroundColor": "rgba(255, 107, 11, 0.16)",
                                      },
                                      "&.Mui-disabled": Object {
                                        "opacity": 0.32,
                                      },
                                    },
                                  },
                                  "MuiTab": Object {
                                    "root": Object {
                                      "&$disabled": Object {
                                        "opacity": 0.24,
                                      },
                                    },
                                    "textColorInherit": Object {
                                      "&$disabled": Object {
                                        "opacity": 0.24,
                                      },
                                    },
                                    "wrapper": Object {
                                      "& > *:first-child": Object {
                                        "marginBottom": "2px !important",
                                      },
                                    },
                                  },
                                  "MuiTextField": Object {
                                    "& .MuiInputLabel": Object {
                                      "marginTop": "20px",
                                    },
                                  },
                                  "MuiToolbar": Object {
                                    "dense": Object {
                                      "@media (min-width: 600px)": Object {
                                        "minHeight": "56px",
                                      },
                                      "minHeight": "56px",
                                    },
                                    "gutters": Object {
                                      "@media (min-width: 600px)": Object {
                                        "padding": "0 16px",
                                      },
                                      "padding": "0 16px",
                                    },
                                    "regular": Object {
                                      "@media (min-width: 600px)": Object {
                                        "minHeight": "56px",
                                      },
                                      "minHeight": "56px",
                                    },
                                    "root": Object {
                                      "@media (min-width: 600px)": Object {
                                        "padding": "0 16px",
                                      },
                                      "padding": "0 16px",
                                    },
                                  },
                                },
                                "palette": Object {
                                  "action": Object {
                                    "disabled": "rgba(51, 51, 51, 0.24)",
                                  },
                                  "background": Object {
                                    "default": "#FAFAFA",
                                    "defaultContrastText": "#333333",
                                    "paper": "#FFFFFF",
                                    "paperContrastText": "#333333",
                                  },
                                  "complementary": Object {
                                    "highlight": "#000000",
                                    "link": "#227BBD",
                                    "linkContrastText": "#FFFFFF",
                                    "warning": "#FCC433",
                                    "warningContrastText": "#333333",
                                  },
                                  "error": Object {
                                    "contrastText": "#FFFFFF",
                                    "main": "#E74627",
                                  },
                                  "primary": Object {
                                    "contrastText": "#333333",
                                    "dark": "#EF8426",
                                    "light": "#FEFDE8",
                                    "main": "#F4AB34",
                                  },
                                  "secondary": Object {
                                    "contrastText": "#000000",
                                    "dark": "#FF5808",
                                    "light": "#FFF8E1",
                                    "main": "#FF6B0B",
                                  },
                                  "success": Object {
                                    "contrastText": "#FFFFFF",
                                    "main": "#569A32",
                                  },
                                  "text": Object {
                                    "disabled": "#BBBBBB",
                                    "hint": "#BBBBBB",
                                    "primary": "#333333",
                                    "secondary": "#777777",
                                  },
                                },
                                "shadows": Object {
                                  "0": "none",
                                  "1": "0 1px 1px 0 rgba(0, 0, 0, 0.14)",
                                  "12": "0 12px 17px 0 rgba(0, 0, 0, 0.14)",
                                  "16": "0 16px 24px 0 rgba(0, 0, 0, 0.14)",
                                  "2": "0 2px 2px 0 rgba(0, 0, 0, 0.14)",
                                  "24": "0 24px 38px 0 rgba(0, 0, 0, 0.14)",
                                  "3": "0 3px 4px 0 rgba(0, 0, 0, 0.14)",
                                  "4": "0 4px 5px 0 rgba(0, 0, 0, 0.14)",
                                  "6": "0 6px 10px 0 rgba(0, 0, 0, 0.14)",
                                  "8": "0 8px 10px 0 rgba(0, 0, 0, 0.14)",
                                  "9": "0 9px 12px 0 rgba(0, 0, 0, 0.14)",
                                },
                                "shape": Object {
                                  "badgeBorderRadius": 100,
                                  "borderRadius": 4,
                                },
                                "sizes": Object {
                                  "huge": 96,
                                  "hugex": 128,
                                  "hugexx": 144,
                                  "hugexxx": 192,
                                  "large": 64,
                                  "largex": 72,
                                  "largexx": 80,
                                  "largexxx": 88,
                                  "medium": 48,
                                  "mediumx": 56,
                                  "micro": 4,
                                  "none": 0,
                                  "semi": 32,
                                  "semix": 40,
                                  "small": 16,
                                  "standard": 24,
                                  "tiny": 8,
                                  "veryhuge": 256,
                                },
                                "spacing": 8,
                                "typography": Object {
                                  "body1": Object {
                                    "fontSize": "1rem",
                                    "fontWeight": 400,
                                  },
                                  "body2": Object {
                                    "fontSize": "0.875rem",
                                    "fontWeight": 400,
                                  },
                                  "button": Object {
                                    "fontSize": "0.875rem",
                                    "fontWeight": 600,
                                  },
                                  "caption": Object {
                                    "fontSize": "0.75rem",
                                    "fontWeight": 400,
                                  },
                                  "fontFamily": "\\"Roboto\\", sans-serif",
                                  "fontFamilyBrand1": "\\"Helvetica Now Display\\"",
                                  "fontFamilyBrand2": "\\"Helvetica Now Text\\"",
                                  "fontFamilyBrand3": undefined,
                                  "fontWeightBold": 700,
                                  "fontWeightLight": 300,
                                  "fontWeightMedium": 500,
                                  "fontWeightRegular": 400,
                                  "h1": Object {
                                    "fontSize": "6rem",
                                    "fontWeight": 300,
                                  },
                                  "h2": Object {
                                    "fontSize": "3.75rem",
                                    "fontWeight": 300,
                                  },
                                  "h3": Object {
                                    "fontSize": "3rem",
                                    "fontWeight": 400,
                                  },
                                  "h4": Object {
                                    "fontSize": "2.125rem",
                                    "fontWeight": 400,
                                  },
                                  "h5": Object {
                                    "fontSize": "1.5rem",
                                    "fontWeight": 400,
                                  },
                                  "h6": Object {
                                    "fontSize": "1.25rem",
                                    "fontWeight": 600,
                                  },
                                  "overline": Object {
                                    "fontSize": "0.75rem",
                                    "fontWeight": 400,
                                  },
                                  "subtitle1": Object {
                                    "fontSize": "1rem",
                                    "fontWeight": 400,
                                  },
                                  "subtitle2": Object {
                                    "fontSize": "0.875rem",
                                    "fontWeight": 500,
                                  },
                                },
                              }
                            }
                            value="February 1st"
                          >
                            <ForwardRef(TextField)
                              InputProps={
                                Object {
                                  "endAdornment": <ForwardRef(WithStyles)
                                    position="end"
                                  >
                                    <ForwardRef(WithStyles)
                                      onClick={[Function]}
                                    >
                                      <ForwardRef(WithTheme)
                                        name="outlined-action-calendar"
                                        size="tiny"
                                      />
                                    </ForwardRef(WithStyles)>
                                  </ForwardRef(WithStyles)>,
                                }
                              }
                              classes={
                                Object {
                                  "root": "MuiTextField-root",
                                }
                              }
                              error={false}
                              helperText=""
                              inputProps={Object {}}
                              label=""
                              onChange={[Function]}
                              required={false}
                              theme={
                                Object {
                                  "avatarSizes": Object {
                                    "huge": Object {
                                      "fontSize": "1.5rem",
                                      "size": 80,
                                    },
                                    "large": Object {
                                      "fontSize": "1rem",
                                      "size": 48,
                                    },
                                    "small": Object {
                                      "fontSize": ".875rem",
                                      "size": 32,
                                    },
                                    "standard": Object {
                                      "fontSize": "1rem",
                                      "size": 40,
                                    },
                                    "tiny": Object {
                                      "fontSize": ".625rem",
                                      "size": 24,
                                    },
                                  },
                                  "buttonSizes": Object {
                                    "large": Object {
                                      "minHeight": 48,
                                      "paddingBottom": 16,
                                      "paddingLeft": 16,
                                      "paddingRight": 16,
                                      "paddingTop": 16,
                                    },
                                    "medium": Object {
                                      "minHeight": 40,
                                      "paddingBottom": 12,
                                      "paddingLeft": 16,
                                      "paddingRight": 16,
                                      "paddingTop": 12,
                                    },
                                    "small": Object {
                                      "minHeight": 32,
                                      "paddingBottom": 8,
                                      "paddingLeft": 8,
                                      "paddingRight": 8,
                                      "paddingTop": 8,
                                    },
                                  },
                                  "iconSizes": Object {
                                    "huge": 144,
                                    "hugex": 192,
                                    "hugexx": 256,
                                    "large": 72,
                                    "largex": 96,
                                    "largexx": 128,
                                    "medium": 64,
                                    "micro": 16,
                                    "small": 32,
                                    "standard": 48,
                                    "tiny": 24,
                                  },
                                  "overrides": Object {
                                    "MuiAvatar": Object {
                                      "colorDefault": Object {
                                        "color": "#333333",
                                      },
                                    },
                                    "MuiBadge": Object {
                                      "badge": Object {
                                        "padding": "0 4px",
                                      },
                                    },
                                    "MuiButton": Object {
                                      "outlinedPrimary": Object {
                                        "color": "#333333",
                                      },
                                      "outlinedSecondary": Object {
                                        "color": "#333333",
                                      },
                                      "root": Object {
                                        "fontSize": "0.875rem",
                                        "minHeight": "40px",
                                        "padding": "8px 16px",
                                      },
                                      "sizeLarge": Object {
                                        "fontSize": "0.875rem",
                                        "minHeight": "48px",
                                      },
                                      "sizeSmall": Object {
                                        "fontSize": "0.875rem",
                                        "minHeight": "32px",
                                      },
                                      "textPrimary": Object {
                                        "color": "#333333",
                                      },
                                    },
                                    "MuiChip": Object {
                                      "clickableColorPrimary": Object {
                                        "&:hover": Object {
                                          "backgroundColor": "#EF8426",
                                        },
                                      },
                                      "clickableColorSecondary": Object {
                                        "&:hover": Object {
                                          "backgroundColor": "#EF8426",
                                        },
                                      },
                                      "deleteIcon": Object {
                                        "&:hover": Object {
                                          "color": "#000000",
                                        },
                                        "color": "rgba(0, 0, 0, 0.8)",
                                        "fontSize": "24px",
                                        "height": "24px",
                                        "width": "24px",
                                      },
                                      "deleteIconColorPrimary": Object {
                                        "&:hover": Object {
                                          "color": "#FFFFFF",
                                        },
                                        "color": "rgba(255, 255, 255, 0.8)",
                                      },
                                      "deleteIconColorSecondary": Object {
                                        "&:hover": Object {
                                          "color": "#FFFFFF",
                                        },
                                        "color": "rgba(255, 255, 255, 0.8)",
                                      },
                                      "deleteIconSmall": Object {
                                        "fontSize": "16px",
                                        "height": "16px",
                                        "width": "16px",
                                      },
                                      "icon": Object {
                                        "fontSize": "24px",
                                      },
                                      "iconSmall": Object {
                                        "fontSize": "16px",
                                        "height": "16px",
                                        "marginTop": "1px",
                                        "width": "16px",
                                      },
                                      "outlined": Object {
                                        "borderColor": "rgba(0, 0, 0, 0.12)",
                                        "color": "#000000",
                                      },
                                      "outlinedPrimary": Object {
                                        "color": "#000000",
                                      },
                                      "outlinedSecondary": Object {
                                        "color": "#000000",
                                      },
                                      "root": Object {
                                        "& $avatar": Object {
                                          "backgroundColor": "rgba(0, 0, 0, 0.24)",
                                          "color": "#333333",
                                        },
                                        "&$disabled": Object {
                                          "opacity": 0.4,
                                        },
                                        "backgroundColor": "rgba(0, 0, 0, 0.12)",
                                        "color": "#333333",
                                        "fontSize": "0.875rem",
                                      },
                                    },
                                    "MuiExpansionPanel": Object {
                                      "root": Object {
                                        "&$disabled": Object {
                                          "backgroundColor": "#FFFFFF",
                                          "opacity": 0.32,
                                        },
                                        "&$expanded": Object {
                                          "borderColor": "#F4AB34",
                                        },
                                        "border": "transparent 1px solid",
                                      },
                                    },
                                    "MuiExpansionPanelSummary": Object {
                                      "root": Object {
                                        "&$disabled": Object {
                                          "opacity": 1,
                                        },
                                        "alignItems": "flex-start",
                                        "marginTop": "8px",
                                      },
                                    },
                                    "MuiFormLabel": Object {
                                      "formControl": Object {
                                        "marginTop": "-4px",
                                        "transform": "none",
                                      },
                                      "root": Object {
                                        "&.Mui-focused": Object {
                                          "color": "#777777",
                                          "fontSize": "0.875rem",
                                        },
                                        "fontSize": "0.875rem",
                                      },
                                    },
                                    "MuiIconButton": Object {
                                      "root": Object {
                                        "color": "#333333",
                                        "padding": "8px",
                                      },
                                      "sizeSmall": Object {
                                        "padding": "4px",
                                      },
                                    },
                                    "MuiInputAdornment": Object {
                                      "root": Object {
                                        "position": "absolute",
                                        "right": "0",
                                      },
                                    },
                                    "MuiInputBase": Object {
                                      "input": Object {
                                        "&.Mui-disabled": Object {
                                          "&:hover": Object {
                                            "boxShadow": "#333333 0 0 0 1px",
                                          },
                                          "opacity": 0.24,
                                        },
                                        "&:focus": Object {
                                          "boxShadow": "#F4AB34 0 0 0 2px",
                                        },
                                        "&:focus:not(:read-only)": Object {
                                          "boxShadow": "#F4AB34 0 0 0 2px",
                                        },
                                        "&:hover": Object {
                                          "boxShadow": "#777777 0 0 0 1px",
                                        },
                                        "&:hover:not(:placeholder-shown)": Object {
                                          "boxShadow": "#777777 0 0 0 1px",
                                        },
                                        "&:hover:not(:read-only):not(:disabled):not(:focus)": Object {
                                          "boxShadow": "#777777 0 0 0 1px",
                                        },
                                        "&:not(:placeholder-shown)": Object {
                                          "boxShadow": "#333333 0 0 0 1px",
                                        },
                                        "&:placeholder-shown": Object {
                                          "boxShadow": "#BBBBBB 0 0 0 1px",
                                        },
                                        "borderRadius": "4px",
                                        "boxShadow": "#BBBBBB 0 0 0 1px",
                                        "color": "#333333",
                                        "minHeight": "24px",
                                        "padding": "16px 35px 16px 16px",
                                      },
                                      "root": Object {
                                        "&.MuiInput-underline.Mui-disabled:before": Object {
                                          "borderBottom": "none",
                                        },
                                        "&.MuiInput-underline:after": Object {
                                          "borderBottom": "none",
                                        },
                                        "&.MuiInput-underline:before": Object {
                                          "borderBottom": "none",
                                        },
                                        "&.MuiInput-underline:hover:not(.Mui-disabled):before": Object {
                                          "borderBottom": "none",
                                        },
                                        "color": "#333333",
                                      },
                                    },
                                    "MuiInputLabel": Object {
                                      "formControl": Object {
                                        "marginTop": "-4px",
                                        "transform": "none",
                                      },
                                      "shrink": Object {
                                        "marginTop": "-4px",
                                        "transform": "none",
                                      },
                                    },
                                    "MuiListItem": Object {
                                      "button": Object {
                                        "&:hover": Object {
                                          "backgroundColor": "rgba(0, 0, 0, 0.04)",
                                        },
                                      },
                                      "root": Object {
                                        "&$selected": Object {
                                          "&:hover": Object {
                                            "backgroundColor": "rgba(0, 0, 0, 0.04)",
                                          },
                                          "backgroundColor": "rgba(255, 107, 11, 0.16)",
                                        },
                                        "&.Mui-disabled": Object {
                                          "opacity": 0.32,
                                        },
                                      },
                                    },
                                    "MuiTab": Object {
                                      "root": Object {
                                        "&$disabled": Object {
                                          "opacity": 0.24,
                                        },
                                      },
                                      "textColorInherit": Object {
                                        "&$disabled": Object {
                                          "opacity": 0.24,
                                        },
                                      },
                                      "wrapper": Object {
                                        "& > *:first-child": Object {
                                          "marginBottom": "2px !important",
                                        },
                                      },
                                    },
                                    "MuiTextField": Object {
                                      "& .MuiInputLabel": Object {
                                        "marginTop": "20px",
                                      },
                                    },
                                    "MuiToolbar": Object {
                                      "dense": Object {
                                        "@media (min-width: 600px)": Object {
                                          "minHeight": "56px",
                                        },
                                        "minHeight": "56px",
                                      },
                                      "gutters": Object {
                                        "@media (min-width: 600px)": Object {
                                          "padding": "0 16px",
                                        },
                                        "padding": "0 16px",
                                      },
                                      "regular": Object {
                                        "@media (min-width: 600px)": Object {
                                          "minHeight": "56px",
                                        },
                                        "minHeight": "56px",
                                      },
                                      "root": Object {
                                        "@media (min-width: 600px)": Object {
                                          "padding": "0 16px",
                                        },
                                        "padding": "0 16px",
                                      },
                                    },
                                  },
                                  "palette": Object {
                                    "action": Object {
                                      "disabled": "rgba(51, 51, 51, 0.24)",
                                    },
                                    "background": Object {
                                      "default": "#FAFAFA",
                                      "defaultContrastText": "#333333",
                                      "paper": "#FFFFFF",
                                      "paperContrastText": "#333333",
                                    },
                                    "complementary": Object {
                                      "highlight": "#000000",
                                      "link": "#227BBD",
                                      "linkContrastText": "#FFFFFF",
                                      "warning": "#FCC433",
                                      "warningContrastText": "#333333",
                                    },
                                    "error": Object {
                                      "contrastText": "#FFFFFF",
                                      "main": "#E74627",
                                    },
                                    "primary": Object {
                                      "contrastText": "#333333",
                                      "dark": "#EF8426",
                                      "light": "#FEFDE8",
                                      "main": "#F4AB34",
                                    },
                                    "secondary": Object {
                                      "contrastText": "#000000",
                                      "dark": "#FF5808",
                                      "light": "#FFF8E1",
                                      "main": "#FF6B0B",
                                    },
                                    "success": Object {
                                      "contrastText": "#FFFFFF",
                                      "main": "#569A32",
                                    },
                                    "text": Object {
                                      "disabled": "#BBBBBB",
                                      "hint": "#BBBBBB",
                                      "primary": "#333333",
                                      "secondary": "#777777",
                                    },
                                  },
                                  "shadows": Object {
                                    "0": "none",
                                    "1": "0 1px 1px 0 rgba(0, 0, 0, 0.14)",
                                    "12": "0 12px 17px 0 rgba(0, 0, 0, 0.14)",
                                    "16": "0 16px 24px 0 rgba(0, 0, 0, 0.14)",
                                    "2": "0 2px 2px 0 rgba(0, 0, 0, 0.14)",
                                    "24": "0 24px 38px 0 rgba(0, 0, 0, 0.14)",
                                    "3": "0 3px 4px 0 rgba(0, 0, 0, 0.14)",
                                    "4": "0 4px 5px 0 rgba(0, 0, 0, 0.14)",
                                    "6": "0 6px 10px 0 rgba(0, 0, 0, 0.14)",
                                    "8": "0 8px 10px 0 rgba(0, 0, 0, 0.14)",
                                    "9": "0 9px 12px 0 rgba(0, 0, 0, 0.14)",
                                  },
                                  "shape": Object {
                                    "badgeBorderRadius": 100,
                                    "borderRadius": 4,
                                  },
                                  "sizes": Object {
                                    "huge": 96,
                                    "hugex": 128,
                                    "hugexx": 144,
                                    "hugexxx": 192,
                                    "large": 64,
                                    "largex": 72,
                                    "largexx": 80,
                                    "largexxx": 88,
                                    "medium": 48,
                                    "mediumx": 56,
                                    "micro": 4,
                                    "none": 0,
                                    "semi": 32,
                                    "semix": 40,
                                    "small": 16,
                                    "standard": 24,
                                    "tiny": 8,
                                    "veryhuge": 256,
                                  },
                                  "spacing": 8,
                                  "typography": Object {
                                    "body1": Object {
                                      "fontSize": "1rem",
                                      "fontWeight": 400,
                                    },
                                    "body2": Object {
                                      "fontSize": "0.875rem",
                                      "fontWeight": 400,
                                    },
                                    "button": Object {
                                      "fontSize": "0.875rem",
                                      "fontWeight": 600,
                                    },
                                    "caption": Object {
                                      "fontSize": "0.75rem",
                                      "fontWeight": 400,
                                    },
                                    "fontFamily": "\\"Roboto\\", sans-serif",
                                    "fontFamilyBrand1": "\\"Helvetica Now Display\\"",
                                    "fontFamilyBrand2": "\\"Helvetica Now Text\\"",
                                    "fontFamilyBrand3": undefined,
                                    "fontWeightBold": 700,
                                    "fontWeightLight": 300,
                                    "fontWeightMedium": 500,
                                    "fontWeightRegular": 400,
                                    "h1": Object {
                                      "fontSize": "6rem",
                                      "fontWeight": 300,
                                    },
                                    "h2": Object {
                                      "fontSize": "3.75rem",
                                      "fontWeight": 300,
                                    },
                                    "h3": Object {
                                      "fontSize": "3rem",
                                      "fontWeight": 400,
                                    },
                                    "h4": Object {
                                      "fontSize": "2.125rem",
                                      "fontWeight": 400,
                                    },
                                    "h5": Object {
                                      "fontSize": "1.5rem",
                                      "fontWeight": 400,
                                    },
                                    "h6": Object {
                                      "fontSize": "1.25rem",
                                      "fontWeight": 600,
                                    },
                                    "overline": Object {
                                      "fontSize": "0.75rem",
                                      "fontWeight": 400,
                                    },
                                    "subtitle1": Object {
                                      "fontSize": "1rem",
                                      "fontWeight": 400,
                                    },
                                    "subtitle2": Object {
                                      "fontSize": "0.875rem",
                                      "fontWeight": 500,
                                    },
                                  },
                                }
                              }
                              value="February 1st"
                            >
                              <WithStyles(ForwardRef(FormControl))
                                className="MuiTextField-root"
                                color="primary"
                                disabled={false}
                                error={false}
                                fullWidth={false}
                                required={false}
                                theme={
                                  Object {
                                    "avatarSizes": Object {
                                      "huge": Object {
                                        "fontSize": "1.5rem",
                                        "size": 80,
                                      },
                                      "large": Object {
                                        "fontSize": "1rem",
                                        "size": 48,
                                      },
                                      "small": Object {
                                        "fontSize": ".875rem",
                                        "size": 32,
                                      },
                                      "standard": Object {
                                        "fontSize": "1rem",
                                        "size": 40,
                                      },
                                      "tiny": Object {
                                        "fontSize": ".625rem",
                                        "size": 24,
                                      },
                                    },
                                    "buttonSizes": Object {
                                      "large": Object {
                                        "minHeight": 48,
                                        "paddingBottom": 16,
                                        "paddingLeft": 16,
                                        "paddingRight": 16,
                                        "paddingTop": 16,
                                      },
                                      "medium": Object {
                                        "minHeight": 40,
                                        "paddingBottom": 12,
                                        "paddingLeft": 16,
                                        "paddingRight": 16,
                                        "paddingTop": 12,
                                      },
                                      "small": Object {
                                        "minHeight": 32,
                                        "paddingBottom": 8,
                                        "paddingLeft": 8,
                                        "paddingRight": 8,
                                        "paddingTop": 8,
                                      },
                                    },
                                    "iconSizes": Object {
                                      "huge": 144,
                                      "hugex": 192,
                                      "hugexx": 256,
                                      "large": 72,
                                      "largex": 96,
                                      "largexx": 128,
                                      "medium": 64,
                                      "micro": 16,
                                      "small": 32,
                                      "standard": 48,
                                      "tiny": 24,
                                    },
                                    "overrides": Object {
                                      "MuiAvatar": Object {
                                        "colorDefault": Object {
                                          "color": "#333333",
                                        },
                                      },
                                      "MuiBadge": Object {
                                        "badge": Object {
                                          "padding": "0 4px",
                                        },
                                      },
                                      "MuiButton": Object {
                                        "outlinedPrimary": Object {
                                          "color": "#333333",
                                        },
                                        "outlinedSecondary": Object {
                                          "color": "#333333",
                                        },
                                        "root": Object {
                                          "fontSize": "0.875rem",
                                          "minHeight": "40px",
                                          "padding": "8px 16px",
                                        },
                                        "sizeLarge": Object {
                                          "fontSize": "0.875rem",
                                          "minHeight": "48px",
                                        },
                                        "sizeSmall": Object {
                                          "fontSize": "0.875rem",
                                          "minHeight": "32px",
                                        },
                                        "textPrimary": Object {
                                          "color": "#333333",
                                        },
                                      },
                                      "MuiChip": Object {
                                        "clickableColorPrimary": Object {
                                          "&:hover": Object {
                                            "backgroundColor": "#EF8426",
                                          },
                                        },
                                        "clickableColorSecondary": Object {
                                          "&:hover": Object {
                                            "backgroundColor": "#EF8426",
                                          },
                                        },
                                        "deleteIcon": Object {
                                          "&:hover": Object {
                                            "color": "#000000",
                                          },
                                          "color": "rgba(0, 0, 0, 0.8)",
                                          "fontSize": "24px",
                                          "height": "24px",
                                          "width": "24px",
                                        },
                                        "deleteIconColorPrimary": Object {
                                          "&:hover": Object {
                                            "color": "#FFFFFF",
                                          },
                                          "color": "rgba(255, 255, 255, 0.8)",
                                        },
                                        "deleteIconColorSecondary": Object {
                                          "&:hover": Object {
                                            "color": "#FFFFFF",
                                          },
                                          "color": "rgba(255, 255, 255, 0.8)",
                                        },
                                        "deleteIconSmall": Object {
                                          "fontSize": "16px",
                                          "height": "16px",
                                          "width": "16px",
                                        },
                                        "icon": Object {
                                          "fontSize": "24px",
                                        },
                                        "iconSmall": Object {
                                          "fontSize": "16px",
                                          "height": "16px",
                                          "marginTop": "1px",
                                          "width": "16px",
                                        },
                                        "outlined": Object {
                                          "borderColor": "rgba(0, 0, 0, 0.12)",
                                          "color": "#000000",
                                        },
                                        "outlinedPrimary": Object {
                                          "color": "#000000",
                                        },
                                        "outlinedSecondary": Object {
                                          "color": "#000000",
                                        },
                                        "root": Object {
                                          "& $avatar": Object {
                                            "backgroundColor": "rgba(0, 0, 0, 0.24)",
                                            "color": "#333333",
                                          },
                                          "&$disabled": Object {
                                            "opacity": 0.4,
                                          },
                                          "backgroundColor": "rgba(0, 0, 0, 0.12)",
                                          "color": "#333333",
                                          "fontSize": "0.875rem",
                                        },
                                      },
                                      "MuiExpansionPanel": Object {
                                        "root": Object {
                                          "&$disabled": Object {
                                            "backgroundColor": "#FFFFFF",
                                            "opacity": 0.32,
                                          },
                                          "&$expanded": Object {
                                            "borderColor": "#F4AB34",
                                          },
                                          "border": "transparent 1px solid",
                                        },
                                      },
                                      "MuiExpansionPanelSummary": Object {
                                        "root": Object {
                                          "&$disabled": Object {
                                            "opacity": 1,
                                          },
                                          "alignItems": "flex-start",
                                          "marginTop": "8px",
                                        },
                                      },
                                      "MuiFormLabel": Object {
                                        "formControl": Object {
                                          "marginTop": "-4px",
                                          "transform": "none",
                                        },
                                        "root": Object {
                                          "&.Mui-focused": Object {
                                            "color": "#777777",
                                            "fontSize": "0.875rem",
                                          },
                                          "fontSize": "0.875rem",
                                        },
                                      },
                                      "MuiIconButton": Object {
                                        "root": Object {
                                          "color": "#333333",
                                          "padding": "8px",
                                        },
                                        "sizeSmall": Object {
                                          "padding": "4px",
                                        },
                                      },
                                      "MuiInputAdornment": Object {
                                        "root": Object {
                                          "position": "absolute",
                                          "right": "0",
                                        },
                                      },
                                      "MuiInputBase": Object {
                                        "input": Object {
                                          "&.Mui-disabled": Object {
                                            "&:hover": Object {
                                              "boxShadow": "#333333 0 0 0 1px",
                                            },
                                            "opacity": 0.24,
                                          },
                                          "&:focus": Object {
                                            "boxShadow": "#F4AB34 0 0 0 2px",
                                          },
                                          "&:focus:not(:read-only)": Object {
                                            "boxShadow": "#F4AB34 0 0 0 2px",
                                          },
                                          "&:hover": Object {
                                            "boxShadow": "#777777 0 0 0 1px",
                                          },
                                          "&:hover:not(:placeholder-shown)": Object {
                                            "boxShadow": "#777777 0 0 0 1px",
                                          },
                                          "&:hover:not(:read-only):not(:disabled):not(:focus)": Object {
                                            "boxShadow": "#777777 0 0 0 1px",
                                          },
                                          "&:not(:placeholder-shown)": Object {
                                            "boxShadow": "#333333 0 0 0 1px",
                                          },
                                          "&:placeholder-shown": Object {
                                            "boxShadow": "#BBBBBB 0 0 0 1px",
                                          },
                                          "borderRadius": "4px",
                                          "boxShadow": "#BBBBBB 0 0 0 1px",
                                          "color": "#333333",
                                          "minHeight": "24px",
                                          "padding": "16px 35px 16px 16px",
                                        },
                                        "root": Object {
                                          "&.MuiInput-underline.Mui-disabled:before": Object {
                                            "borderBottom": "none",
                                          },
                                          "&.MuiInput-underline:after": Object {
                                            "borderBottom": "none",
                                          },
                                          "&.MuiInput-underline:before": Object {
                                            "borderBottom": "none",
                                          },
                                          "&.MuiInput-underline:hover:not(.Mui-disabled):before": Object {
                                            "borderBottom": "none",
                                          },
                                          "color": "#333333",
                                        },
                                      },
                                      "MuiInputLabel": Object {
                                        "formControl": Object {
                                          "marginTop": "-4px",
                                          "transform": "none",
                                        },
                                        "shrink": Object {
                                          "marginTop": "-4px",
                                          "transform": "none",
                                        },
                                      },
                                      "MuiListItem": Object {
                                        "button": Object {
                                          "&:hover": Object {
                                            "backgroundColor": "rgba(0, 0, 0, 0.04)",
                                          },
                                        },
                                        "root": Object {
                                          "&$selected": Object {
                                            "&:hover": Object {
                                              "backgroundColor": "rgba(0, 0, 0, 0.04)",
                                            },
                                            "backgroundColor": "rgba(255, 107, 11, 0.16)",
                                          },
                                          "&.Mui-disabled": Object {
                                            "opacity": 0.32,
                                          },
                                        },
                                      },
                                      "MuiTab": Object {
                                        "root": Object {
                                          "&$disabled": Object {
                                            "opacity": 0.24,
                                          },
                                        },
                                        "textColorInherit": Object {
                                          "&$disabled": Object {
                                            "opacity": 0.24,
                                          },
                                        },
                                        "wrapper": Object {
                                          "& > *:first-child": Object {
                                            "marginBottom": "2px !important",
                                          },
                                        },
                                      },
                                      "MuiTextField": Object {
                                        "& .MuiInputLabel": Object {
                                          "marginTop": "20px",
                                        },
                                      },
                                      "MuiToolbar": Object {
                                        "dense": Object {
                                          "@media (min-width: 600px)": Object {
                                            "minHeight": "56px",
                                          },
                                          "minHeight": "56px",
                                        },
                                        "gutters": Object {
                                          "@media (min-width: 600px)": Object {
                                            "padding": "0 16px",
                                          },
                                          "padding": "0 16px",
                                        },
                                        "regular": Object {
                                          "@media (min-width: 600px)": Object {
                                            "minHeight": "56px",
                                          },
                                          "minHeight": "56px",
                                        },
                                        "root": Object {
                                          "@media (min-width: 600px)": Object {
                                            "padding": "0 16px",
                                          },
                                          "padding": "0 16px",
                                        },
                                      },
                                    },
                                    "palette": Object {
                                      "action": Object {
                                        "disabled": "rgba(51, 51, 51, 0.24)",
                                      },
                                      "background": Object {
                                        "default": "#FAFAFA",
                                        "defaultContrastText": "#333333",
                                        "paper": "#FFFFFF",
                                        "paperContrastText": "#333333",
                                      },
                                      "complementary": Object {
                                        "highlight": "#000000",
                                        "link": "#227BBD",
                                        "linkContrastText": "#FFFFFF",
                                        "warning": "#FCC433",
                                        "warningContrastText": "#333333",
                                      },
                                      "error": Object {
                                        "contrastText": "#FFFFFF",
                                        "main": "#E74627",
                                      },
                                      "primary": Object {
                                        "contrastText": "#333333",
                                        "dark": "#EF8426",
                                        "light": "#FEFDE8",
                                        "main": "#F4AB34",
                                      },
                                      "secondary": Object {
                                        "contrastText": "#000000",
                                        "dark": "#FF5808",
                                        "light": "#FFF8E1",
                                        "main": "#FF6B0B",
                                      },
                                      "success": Object {
                                        "contrastText": "#FFFFFF",
                                        "main": "#569A32",
                                      },
                                      "text": Object {
                                        "disabled": "#BBBBBB",
                                        "hint": "#BBBBBB",
                                        "primary": "#333333",
                                        "secondary": "#777777",
                                      },
                                    },
                                    "shadows": Object {
                                      "0": "none",
                                      "1": "0 1px 1px 0 rgba(0, 0, 0, 0.14)",
                                      "12": "0 12px 17px 0 rgba(0, 0, 0, 0.14)",
                                      "16": "0 16px 24px 0 rgba(0, 0, 0, 0.14)",
                                      "2": "0 2px 2px 0 rgba(0, 0, 0, 0.14)",
                                      "24": "0 24px 38px 0 rgba(0, 0, 0, 0.14)",
                                      "3": "0 3px 4px 0 rgba(0, 0, 0, 0.14)",
                                      "4": "0 4px 5px 0 rgba(0, 0, 0, 0.14)",
                                      "6": "0 6px 10px 0 rgba(0, 0, 0, 0.14)",
                                      "8": "0 8px 10px 0 rgba(0, 0, 0, 0.14)",
                                      "9": "0 9px 12px 0 rgba(0, 0, 0, 0.14)",
                                    },
                                    "shape": Object {
                                      "badgeBorderRadius": 100,
                                      "borderRadius": 4,
                                    },
                                    "sizes": Object {
                                      "huge": 96,
                                      "hugex": 128,
                                      "hugexx": 144,
                                      "hugexxx": 192,
                                      "large": 64,
                                      "largex": 72,
                                      "largexx": 80,
                                      "largexxx": 88,
                                      "medium": 48,
                                      "mediumx": 56,
                                      "micro": 4,
                                      "none": 0,
                                      "semi": 32,
                                      "semix": 40,
                                      "small": 16,
                                      "standard": 24,
                                      "tiny": 8,
                                      "veryhuge": 256,
                                    },
                                    "spacing": 8,
                                    "typography": Object {
                                      "body1": Object {
                                        "fontSize": "1rem",
                                        "fontWeight": 400,
                                      },
                                      "body2": Object {
                                        "fontSize": "0.875rem",
                                        "fontWeight": 400,
                                      },
                                      "button": Object {
                                        "fontSize": "0.875rem",
                                        "fontWeight": 600,
                                      },
                                      "caption": Object {
                                        "fontSize": "0.75rem",
                                        "fontWeight": 400,
                                      },
                                      "fontFamily": "\\"Roboto\\", sans-serif",
                                      "fontFamilyBrand1": "\\"Helvetica Now Display\\"",
                                      "fontFamilyBrand2": "\\"Helvetica Now Text\\"",
                                      "fontFamilyBrand3": undefined,
                                      "fontWeightBold": 700,
                                      "fontWeightLight": 300,
                                      "fontWeightMedium": 500,
                                      "fontWeightRegular": 400,
                                      "h1": Object {
                                        "fontSize": "6rem",
                                        "fontWeight": 300,
                                      },
                                      "h2": Object {
                                        "fontSize": "3.75rem",
                                        "fontWeight": 300,
                                      },
                                      "h3": Object {
                                        "fontSize": "3rem",
                                        "fontWeight": 400,
                                      },
                                      "h4": Object {
                                        "fontSize": "2.125rem",
                                        "fontWeight": 400,
                                      },
                                      "h5": Object {
                                        "fontSize": "1.5rem",
                                        "fontWeight": 400,
                                      },
                                      "h6": Object {
                                        "fontSize": "1.25rem",
                                        "fontWeight": 600,
                                      },
                                      "overline": Object {
                                        "fontSize": "0.75rem",
                                        "fontWeight": 400,
                                      },
                                      "subtitle1": Object {
                                        "fontSize": "1rem",
                                        "fontWeight": 400,
                                      },
                                      "subtitle2": Object {
                                        "fontSize": "0.875rem",
                                        "fontWeight": 500,
                                      },
                                    },
                                  }
                                }
                                variant="standard"
                              >
                                <ForwardRef(FormControl)
                                  className="MuiTextField-root"
                                  classes={
                                    Object {
                                      "fullWidth": "MuiFormControl-fullWidth",
                                      "marginDense": "MuiFormControl-marginDense",
                                      "marginNormal": "MuiFormControl-marginNormal",
                                      "root": "MuiFormControl-root",
                                    }
                                  }
                                  color="primary"
                                  disabled={false}
                                  error={false}
                                  fullWidth={false}
                                  required={false}
                                  theme={
                                    Object {
                                      "avatarSizes": Object {
                                        "huge": Object {
                                          "fontSize": "1.5rem",
                                          "size": 80,
                                        },
                                        "large": Object {
                                          "fontSize": "1rem",
                                          "size": 48,
                                        },
                                        "small": Object {
                                          "fontSize": ".875rem",
                                          "size": 32,
                                        },
                                        "standard": Object {
                                          "fontSize": "1rem",
                                          "size": 40,
                                        },
                                        "tiny": Object {
                                          "fontSize": ".625rem",
                                          "size": 24,
                                        },
                                      },
                                      "buttonSizes": Object {
                                        "large": Object {
                                          "minHeight": 48,
                                          "paddingBottom": 16,
                                          "paddingLeft": 16,
                                          "paddingRight": 16,
                                          "paddingTop": 16,
                                        },
                                        "medium": Object {
                                          "minHeight": 40,
                                          "paddingBottom": 12,
                                          "paddingLeft": 16,
                                          "paddingRight": 16,
                                          "paddingTop": 12,
                                        },
                                        "small": Object {
                                          "minHeight": 32,
                                          "paddingBottom": 8,
                                          "paddingLeft": 8,
                                          "paddingRight": 8,
                                          "paddingTop": 8,
                                        },
                                      },
                                      "iconSizes": Object {
                                        "huge": 144,
                                        "hugex": 192,
                                        "hugexx": 256,
                                        "large": 72,
                                        "largex": 96,
                                        "largexx": 128,
                                        "medium": 64,
                                        "micro": 16,
                                        "small": 32,
                                        "standard": 48,
                                        "tiny": 24,
                                      },
                                      "overrides": Object {
                                        "MuiAvatar": Object {
                                          "colorDefault": Object {
                                            "color": "#333333",
                                          },
                                        },
                                        "MuiBadge": Object {
                                          "badge": Object {
                                            "padding": "0 4px",
                                          },
                                        },
                                        "MuiButton": Object {
                                          "outlinedPrimary": Object {
                                            "color": "#333333",
                                          },
                                          "outlinedSecondary": Object {
                                            "color": "#333333",
                                          },
                                          "root": Object {
                                            "fontSize": "0.875rem",
                                            "minHeight": "40px",
                                            "padding": "8px 16px",
                                          },
                                          "sizeLarge": Object {
                                            "fontSize": "0.875rem",
                                            "minHeight": "48px",
                                          },
                                          "sizeSmall": Object {
                                            "fontSize": "0.875rem",
                                            "minHeight": "32px",
                                          },
                                          "textPrimary": Object {
                                            "color": "#333333",
                                          },
                                        },
                                        "MuiChip": Object {
                                          "clickableColorPrimary": Object {
                                            "&:hover": Object {
                                              "backgroundColor": "#EF8426",
                                            },
                                          },
                                          "clickableColorSecondary": Object {
                                            "&:hover": Object {
                                              "backgroundColor": "#EF8426",
                                            },
                                          },
                                          "deleteIcon": Object {
                                            "&:hover": Object {
                                              "color": "#000000",
                                            },
                                            "color": "rgba(0, 0, 0, 0.8)",
                                            "fontSize": "24px",
                                            "height": "24px",
                                            "width": "24px",
                                          },
                                          "deleteIconColorPrimary": Object {
                                            "&:hover": Object {
                                              "color": "#FFFFFF",
                                            },
                                            "color": "rgba(255, 255, 255, 0.8)",
                                          },
                                          "deleteIconColorSecondary": Object {
                                            "&:hover": Object {
                                              "color": "#FFFFFF",
                                            },
                                            "color": "rgba(255, 255, 255, 0.8)",
                                          },
                                          "deleteIconSmall": Object {
                                            "fontSize": "16px",
                                            "height": "16px",
                                            "width": "16px",
                                          },
                                          "icon": Object {
                                            "fontSize": "24px",
                                          },
                                          "iconSmall": Object {
                                            "fontSize": "16px",
                                            "height": "16px",
                                            "marginTop": "1px",
                                            "width": "16px",
                                          },
                                          "outlined": Object {
                                            "borderColor": "rgba(0, 0, 0, 0.12)",
                                            "color": "#000000",
                                          },
                                          "outlinedPrimary": Object {
                                            "color": "#000000",
                                          },
                                          "outlinedSecondary": Object {
                                            "color": "#000000",
                                          },
                                          "root": Object {
                                            "& $avatar": Object {
                                              "backgroundColor": "rgba(0, 0, 0, 0.24)",
                                              "color": "#333333",
                                            },
                                            "&$disabled": Object {
                                              "opacity": 0.4,
                                            },
                                            "backgroundColor": "rgba(0, 0, 0, 0.12)",
                                            "color": "#333333",
                                            "fontSize": "0.875rem",
                                          },
                                        },
                                        "MuiExpansionPanel": Object {
                                          "root": Object {
                                            "&$disabled": Object {
                                              "backgroundColor": "#FFFFFF",
                                              "opacity": 0.32,
                                            },
                                            "&$expanded": Object {
                                              "borderColor": "#F4AB34",
                                            },
                                            "border": "transparent 1px solid",
                                          },
                                        },
                                        "MuiExpansionPanelSummary": Object {
                                          "root": Object {
                                            "&$disabled": Object {
                                              "opacity": 1,
                                            },
                                            "alignItems": "flex-start",
                                            "marginTop": "8px",
                                          },
                                        },
                                        "MuiFormLabel": Object {
                                          "formControl": Object {
                                            "marginTop": "-4px",
                                            "transform": "none",
                                          },
                                          "root": Object {
                                            "&.Mui-focused": Object {
                                              "color": "#777777",
                                              "fontSize": "0.875rem",
                                            },
                                            "fontSize": "0.875rem",
                                          },
                                        },
                                        "MuiIconButton": Object {
                                          "root": Object {
                                            "color": "#333333",
                                            "padding": "8px",
                                          },
                                          "sizeSmall": Object {
                                            "padding": "4px",
                                          },
                                        },
                                        "MuiInputAdornment": Object {
                                          "root": Object {
                                            "position": "absolute",
                                            "right": "0",
                                          },
                                        },
                                        "MuiInputBase": Object {
                                          "input": Object {
                                            "&.Mui-disabled": Object {
                                              "&:hover": Object {
                                                "boxShadow": "#333333 0 0 0 1px",
                                              },
                                              "opacity": 0.24,
                                            },
                                            "&:focus": Object {
                                              "boxShadow": "#F4AB34 0 0 0 2px",
                                            },
                                            "&:focus:not(:read-only)": Object {
                                              "boxShadow": "#F4AB34 0 0 0 2px",
                                            },
                                            "&:hover": Object {
                                              "boxShadow": "#777777 0 0 0 1px",
                                            },
                                            "&:hover:not(:placeholder-shown)": Object {
                                              "boxShadow": "#777777 0 0 0 1px",
                                            },
                                            "&:hover:not(:read-only):not(:disabled):not(:focus)": Object {
                                              "boxShadow": "#777777 0 0 0 1px",
                                            },
                                            "&:not(:placeholder-shown)": Object {
                                              "boxShadow": "#333333 0 0 0 1px",
                                            },
                                            "&:placeholder-shown": Object {
                                              "boxShadow": "#BBBBBB 0 0 0 1px",
                                            },
                                            "borderRadius": "4px",
                                            "boxShadow": "#BBBBBB 0 0 0 1px",
                                            "color": "#333333",
                                            "minHeight": "24px",
                                            "padding": "16px 35px 16px 16px",
                                          },
                                          "root": Object {
                                            "&.MuiInput-underline.Mui-disabled:before": Object {
                                              "borderBottom": "none",
                                            },
                                            "&.MuiInput-underline:after": Object {
                                              "borderBottom": "none",
                                            },
                                            "&.MuiInput-underline:before": Object {
                                              "borderBottom": "none",
                                            },
                                            "&.MuiInput-underline:hover:not(.Mui-disabled):before": Object {
                                              "borderBottom": "none",
                                            },
                                            "color": "#333333",
                                          },
                                        },
                                        "MuiInputLabel": Object {
                                          "formControl": Object {
                                            "marginTop": "-4px",
                                            "transform": "none",
                                          },
                                          "shrink": Object {
                                            "marginTop": "-4px",
                                            "transform": "none",
                                          },
                                        },
                                        "MuiListItem": Object {
                                          "button": Object {
                                            "&:hover": Object {
                                              "backgroundColor": "rgba(0, 0, 0, 0.04)",
                                            },
                                          },
                                          "root": Object {
                                            "&$selected": Object {
                                              "&:hover": Object {
                                                "backgroundColor": "rgba(0, 0, 0, 0.04)",
                                              },
                                              "backgroundColor": "rgba(255, 107, 11, 0.16)",
                                            },
                                            "&.Mui-disabled": Object {
                                              "opacity": 0.32,
                                            },
                                          },
                                        },
                                        "MuiTab": Object {
                                          "root": Object {
                                            "&$disabled": Object {
                                              "opacity": 0.24,
                                            },
                                          },
                                          "textColorInherit": Object {
                                            "&$disabled": Object {
                                              "opacity": 0.24,
                                            },
                                          },
                                          "wrapper": Object {
                                            "& > *:first-child": Object {
                                              "marginBottom": "2px !important",
                                            },
                                          },
                                        },
                                        "MuiTextField": Object {
                                          "& .MuiInputLabel": Object {
                                            "marginTop": "20px",
                                          },
                                        },
                                        "MuiToolbar": Object {
                                          "dense": Object {
                                            "@media (min-width: 600px)": Object {
                                              "minHeight": "56px",
                                            },
                                            "minHeight": "56px",
                                          },
                                          "gutters": Object {
                                            "@media (min-width: 600px)": Object {
                                              "padding": "0 16px",
                                            },
                                            "padding": "0 16px",
                                          },
                                          "regular": Object {
                                            "@media (min-width: 600px)": Object {
                                              "minHeight": "56px",
                                            },
                                            "minHeight": "56px",
                                          },
                                          "root": Object {
                                            "@media (min-width: 600px)": Object {
                                              "padding": "0 16px",
                                            },
                                            "padding": "0 16px",
                                          },
                                        },
                                      },
                                      "palette": Object {
                                        "action": Object {
                                          "disabled": "rgba(51, 51, 51, 0.24)",
                                        },
                                        "background": Object {
                                          "default": "#FAFAFA",
                                          "defaultContrastText": "#333333",
                                          "paper": "#FFFFFF",
                                          "paperContrastText": "#333333",
                                        },
                                        "complementary": Object {
                                          "highlight": "#000000",
                                          "link": "#227BBD",
                                          "linkContrastText": "#FFFFFF",
                                          "warning": "#FCC433",
                                          "warningContrastText": "#333333",
                                        },
                                        "error": Object {
                                          "contrastText": "#FFFFFF",
                                          "main": "#E74627",
                                        },
                                        "primary": Object {
                                          "contrastText": "#333333",
                                          "dark": "#EF8426",
                                          "light": "#FEFDE8",
                                          "main": "#F4AB34",
                                        },
                                        "secondary": Object {
                                          "contrastText": "#000000",
                                          "dark": "#FF5808",
                                          "light": "#FFF8E1",
                                          "main": "#FF6B0B",
                                        },
                                        "success": Object {
                                          "contrastText": "#FFFFFF",
                                          "main": "#569A32",
                                        },
                                        "text": Object {
                                          "disabled": "#BBBBBB",
                                          "hint": "#BBBBBB",
                                          "primary": "#333333",
                                          "secondary": "#777777",
                                        },
                                      },
                                      "shadows": Object {
                                        "0": "none",
                                        "1": "0 1px 1px 0 rgba(0, 0, 0, 0.14)",
                                        "12": "0 12px 17px 0 rgba(0, 0, 0, 0.14)",
                                        "16": "0 16px 24px 0 rgba(0, 0, 0, 0.14)",
                                        "2": "0 2px 2px 0 rgba(0, 0, 0, 0.14)",
                                        "24": "0 24px 38px 0 rgba(0, 0, 0, 0.14)",
                                        "3": "0 3px 4px 0 rgba(0, 0, 0, 0.14)",
                                        "4": "0 4px 5px 0 rgba(0, 0, 0, 0.14)",
                                        "6": "0 6px 10px 0 rgba(0, 0, 0, 0.14)",
                                        "8": "0 8px 10px 0 rgba(0, 0, 0, 0.14)",
                                        "9": "0 9px 12px 0 rgba(0, 0, 0, 0.14)",
                                      },
                                      "shape": Object {
                                        "badgeBorderRadius": 100,
                                        "borderRadius": 4,
                                      },
                                      "sizes": Object {
                                        "huge": 96,
                                        "hugex": 128,
                                        "hugexx": 144,
                                        "hugexxx": 192,
                                        "large": 64,
                                        "largex": 72,
                                        "largexx": 80,
                                        "largexxx": 88,
                                        "medium": 48,
                                        "mediumx": 56,
                                        "micro": 4,
                                        "none": 0,
                                        "semi": 32,
                                        "semix": 40,
                                        "small": 16,
                                        "standard": 24,
                                        "tiny": 8,
                                        "veryhuge": 256,
                                      },
                                      "spacing": 8,
                                      "typography": Object {
                                        "body1": Object {
                                          "fontSize": "1rem",
                                          "fontWeight": 400,
                                        },
                                        "body2": Object {
                                          "fontSize": "0.875rem",
                                          "fontWeight": 400,
                                        },
                                        "button": Object {
                                          "fontSize": "0.875rem",
                                          "fontWeight": 600,
                                        },
                                        "caption": Object {
                                          "fontSize": "0.75rem",
                                          "fontWeight": 400,
                                        },
                                        "fontFamily": "\\"Roboto\\", sans-serif",
                                        "fontFamilyBrand1": "\\"Helvetica Now Display\\"",
                                        "fontFamilyBrand2": "\\"Helvetica Now Text\\"",
                                        "fontFamilyBrand3": undefined,
                                        "fontWeightBold": 700,
                                        "fontWeightLight": 300,
                                        "fontWeightMedium": 500,
                                        "fontWeightRegular": 400,
                                        "h1": Object {
                                          "fontSize": "6rem",
                                          "fontWeight": 300,
                                        },
                                        "h2": Object {
                                          "fontSize": "3.75rem",
                                          "fontWeight": 300,
                                        },
                                        "h3": Object {
                                          "fontSize": "3rem",
                                          "fontWeight": 400,
                                        },
                                        "h4": Object {
                                          "fontSize": "2.125rem",
                                          "fontWeight": 400,
                                        },
                                        "h5": Object {
                                          "fontSize": "1.5rem",
                                          "fontWeight": 400,
                                        },
                                        "h6": Object {
                                          "fontSize": "1.25rem",
                                          "fontWeight": 600,
                                        },
                                        "overline": Object {
                                          "fontSize": "0.75rem",
                                          "fontWeight": 400,
                                        },
                                        "subtitle1": Object {
                                          "fontSize": "1rem",
                                          "fontWeight": 400,
                                        },
                                        "subtitle2": Object {
                                          "fontSize": "0.875rem",
                                          "fontWeight": 500,
                                        },
                                      },
                                    }
                                  }
                                  variant="standard"
                                >
                                  <div
                                    className="MuiFormControl-root MuiTextField-root"
                                    theme={
                                      Object {
                                        "avatarSizes": Object {
                                          "huge": Object {
                                            "fontSize": "1.5rem",
                                            "size": 80,
                                          },
                                          "large": Object {
                                            "fontSize": "1rem",
                                            "size": 48,
                                          },
                                          "small": Object {
                                            "fontSize": ".875rem",
                                            "size": 32,
                                          },
                                          "standard": Object {
                                            "fontSize": "1rem",
                                            "size": 40,
                                          },
                                          "tiny": Object {
                                            "fontSize": ".625rem",
                                            "size": 24,
                                          },
                                        },
                                        "buttonSizes": Object {
                                          "large": Object {
                                            "minHeight": 48,
                                            "paddingBottom": 16,
                                            "paddingLeft": 16,
                                            "paddingRight": 16,
                                            "paddingTop": 16,
                                          },
                                          "medium": Object {
                                            "minHeight": 40,
                                            "paddingBottom": 12,
                                            "paddingLeft": 16,
                                            "paddingRight": 16,
                                            "paddingTop": 12,
                                          },
                                          "small": Object {
                                            "minHeight": 32,
                                            "paddingBottom": 8,
                                            "paddingLeft": 8,
                                            "paddingRight": 8,
                                            "paddingTop": 8,
                                          },
                                        },
                                        "iconSizes": Object {
                                          "huge": 144,
                                          "hugex": 192,
                                          "hugexx": 256,
                                          "large": 72,
                                          "largex": 96,
                                          "largexx": 128,
                                          "medium": 64,
                                          "micro": 16,
                                          "small": 32,
                                          "standard": 48,
                                          "tiny": 24,
                                        },
                                        "overrides": Object {
                                          "MuiAvatar": Object {
                                            "colorDefault": Object {
                                              "color": "#333333",
                                            },
                                          },
                                          "MuiBadge": Object {
                                            "badge": Object {
                                              "padding": "0 4px",
                                            },
                                          },
                                          "MuiButton": Object {
                                            "outlinedPrimary": Object {
                                              "color": "#333333",
                                            },
                                            "outlinedSecondary": Object {
                                              "color": "#333333",
                                            },
                                            "root": Object {
                                              "fontSize": "0.875rem",
                                              "minHeight": "40px",
                                              "padding": "8px 16px",
                                            },
                                            "sizeLarge": Object {
                                              "fontSize": "0.875rem",
                                              "minHeight": "48px",
                                            },
                                            "sizeSmall": Object {
                                              "fontSize": "0.875rem",
                                              "minHeight": "32px",
                                            },
                                            "textPrimary": Object {
                                              "color": "#333333",
                                            },
                                          },
                                          "MuiChip": Object {
                                            "clickableColorPrimary": Object {
                                              "&:hover": Object {
                                                "backgroundColor": "#EF8426",
                                              },
                                            },
                                            "clickableColorSecondary": Object {
                                              "&:hover": Object {
                                                "backgroundColor": "#EF8426",
                                              },
                                            },
                                            "deleteIcon": Object {
                                              "&:hover": Object {
                                                "color": "#000000",
                                              },
                                              "color": "rgba(0, 0, 0, 0.8)",
                                              "fontSize": "24px",
                                              "height": "24px",
                                              "width": "24px",
                                            },
                                            "deleteIconColorPrimary": Object {
                                              "&:hover": Object {
                                                "color": "#FFFFFF",
                                              },
                                              "color": "rgba(255, 255, 255, 0.8)",
                                            },
                                            "deleteIconColorSecondary": Object {
                                              "&:hover": Object {
                                                "color": "#FFFFFF",
                                              },
                                              "color": "rgba(255, 255, 255, 0.8)",
                                            },
                                            "deleteIconSmall": Object {
                                              "fontSize": "16px",
                                              "height": "16px",
                                              "width": "16px",
                                            },
                                            "icon": Object {
                                              "fontSize": "24px",
                                            },
                                            "iconSmall": Object {
                                              "fontSize": "16px",
                                              "height": "16px",
                                              "marginTop": "1px",
                                              "width": "16px",
                                            },
                                            "outlined": Object {
                                              "borderColor": "rgba(0, 0, 0, 0.12)",
                                              "color": "#000000",
                                            },
                                            "outlinedPrimary": Object {
                                              "color": "#000000",
                                            },
                                            "outlinedSecondary": Object {
                                              "color": "#000000",
                                            },
                                            "root": Object {
                                              "& $avatar": Object {
                                                "backgroundColor": "rgba(0, 0, 0, 0.24)",
                                                "color": "#333333",
                                              },
                                              "&$disabled": Object {
                                                "opacity": 0.4,
                                              },
                                              "backgroundColor": "rgba(0, 0, 0, 0.12)",
                                              "color": "#333333",
                                              "fontSize": "0.875rem",
                                            },
                                          },
                                          "MuiExpansionPanel": Object {
                                            "root": Object {
                                              "&$disabled": Object {
                                                "backgroundColor": "#FFFFFF",
                                                "opacity": 0.32,
                                              },
                                              "&$expanded": Object {
                                                "borderColor": "#F4AB34",
                                              },
                                              "border": "transparent 1px solid",
                                            },
                                          },
                                          "MuiExpansionPanelSummary": Object {
                                            "root": Object {
                                              "&$disabled": Object {
                                                "opacity": 1,
                                              },
                                              "alignItems": "flex-start",
                                              "marginTop": "8px",
                                            },
                                          },
                                          "MuiFormLabel": Object {
                                            "formControl": Object {
                                              "marginTop": "-4px",
                                              "transform": "none",
                                            },
                                            "root": Object {
                                              "&.Mui-focused": Object {
                                                "color": "#777777",
                                                "fontSize": "0.875rem",
                                              },
                                              "fontSize": "0.875rem",
                                            },
                                          },
                                          "MuiIconButton": Object {
                                            "root": Object {
                                              "color": "#333333",
                                              "padding": "8px",
                                            },
                                            "sizeSmall": Object {
                                              "padding": "4px",
                                            },
                                          },
                                          "MuiInputAdornment": Object {
                                            "root": Object {
                                              "position": "absolute",
                                              "right": "0",
                                            },
                                          },
                                          "MuiInputBase": Object {
                                            "input": Object {
                                              "&.Mui-disabled": Object {
                                                "&:hover": Object {
                                                  "boxShadow": "#333333 0 0 0 1px",
                                                },
                                                "opacity": 0.24,
                                              },
                                              "&:focus": Object {
                                                "boxShadow": "#F4AB34 0 0 0 2px",
                                              },
                                              "&:focus:not(:read-only)": Object {
                                                "boxShadow": "#F4AB34 0 0 0 2px",
                                              },
                                              "&:hover": Object {
                                                "boxShadow": "#777777 0 0 0 1px",
                                              },
                                              "&:hover:not(:placeholder-shown)": Object {
                                                "boxShadow": "#777777 0 0 0 1px",
                                              },
                                              "&:hover:not(:read-only):not(:disabled):not(:focus)": Object {
                                                "boxShadow": "#777777 0 0 0 1px",
                                              },
                                              "&:not(:placeholder-shown)": Object {
                                                "boxShadow": "#333333 0 0 0 1px",
                                              },
                                              "&:placeholder-shown": Object {
                                                "boxShadow": "#BBBBBB 0 0 0 1px",
                                              },
                                              "borderRadius": "4px",
                                              "boxShadow": "#BBBBBB 0 0 0 1px",
                                              "color": "#333333",
                                              "minHeight": "24px",
                                              "padding": "16px 35px 16px 16px",
                                            },
                                            "root": Object {
                                              "&.MuiInput-underline.Mui-disabled:before": Object {
                                                "borderBottom": "none",
                                              },
                                              "&.MuiInput-underline:after": Object {
                                                "borderBottom": "none",
                                              },
                                              "&.MuiInput-underline:before": Object {
                                                "borderBottom": "none",
                                              },
                                              "&.MuiInput-underline:hover:not(.Mui-disabled):before": Object {
                                                "borderBottom": "none",
                                              },
                                              "color": "#333333",
                                            },
                                          },
                                          "MuiInputLabel": Object {
                                            "formControl": Object {
                                              "marginTop": "-4px",
                                              "transform": "none",
                                            },
                                            "shrink": Object {
                                              "marginTop": "-4px",
                                              "transform": "none",
                                            },
                                          },
                                          "MuiListItem": Object {
                                            "button": Object {
                                              "&:hover": Object {
                                                "backgroundColor": "rgba(0, 0, 0, 0.04)",
                                              },
                                            },
                                            "root": Object {
                                              "&$selected": Object {
                                                "&:hover": Object {
                                                  "backgroundColor": "rgba(0, 0, 0, 0.04)",
                                                },
                                                "backgroundColor": "rgba(255, 107, 11, 0.16)",
                                              },
                                              "&.Mui-disabled": Object {
                                                "opacity": 0.32,
                                              },
                                            },
                                          },
                                          "MuiTab": Object {
                                            "root": Object {
                                              "&$disabled": Object {
                                                "opacity": 0.24,
                                              },
                                            },
                                            "textColorInherit": Object {
                                              "&$disabled": Object {
                                                "opacity": 0.24,
                                              },
                                            },
                                            "wrapper": Object {
                                              "& > *:first-child": Object {
                                                "marginBottom": "2px !important",
                                              },
                                            },
                                          },
                                          "MuiTextField": Object {
                                            "& .MuiInputLabel": Object {
                                              "marginTop": "20px",
                                            },
                                          },
                                          "MuiToolbar": Object {
                                            "dense": Object {
                                              "@media (min-width: 600px)": Object {
                                                "minHeight": "56px",
                                              },
                                              "minHeight": "56px",
                                            },
                                            "gutters": Object {
                                              "@media (min-width: 600px)": Object {
                                                "padding": "0 16px",
                                              },
                                              "padding": "0 16px",
                                            },
                                            "regular": Object {
                                              "@media (min-width: 600px)": Object {
                                                "minHeight": "56px",
                                              },
                                              "minHeight": "56px",
                                            },
                                            "root": Object {
                                              "@media (min-width: 600px)": Object {
                                                "padding": "0 16px",
                                              },
                                              "padding": "0 16px",
                                            },
                                          },
                                        },
                                        "palette": Object {
                                          "action": Object {
                                            "disabled": "rgba(51, 51, 51, 0.24)",
                                          },
                                          "background": Object {
                                            "default": "#FAFAFA",
                                            "defaultContrastText": "#333333",
                                            "paper": "#FFFFFF",
                                            "paperContrastText": "#333333",
                                          },
                                          "complementary": Object {
                                            "highlight": "#000000",
                                            "link": "#227BBD",
                                            "linkContrastText": "#FFFFFF",
                                            "warning": "#FCC433",
                                            "warningContrastText": "#333333",
                                          },
                                          "error": Object {
                                            "contrastText": "#FFFFFF",
                                            "main": "#E74627",
                                          },
                                          "primary": Object {
                                            "contrastText": "#333333",
                                            "dark": "#EF8426",
                                            "light": "#FEFDE8",
                                            "main": "#F4AB34",
                                          },
                                          "secondary": Object {
                                            "contrastText": "#000000",
                                            "dark": "#FF5808",
                                            "light": "#FFF8E1",
                                            "main": "#FF6B0B",
                                          },
                                          "success": Object {
                                            "contrastText": "#FFFFFF",
                                            "main": "#569A32",
                                          },
                                          "text": Object {
                                            "disabled": "#BBBBBB",
                                            "hint": "#BBBBBB",
                                            "primary": "#333333",
                                            "secondary": "#777777",
                                          },
                                        },
                                        "shadows": Object {
                                          "0": "none",
                                          "1": "0 1px 1px 0 rgba(0, 0, 0, 0.14)",
                                          "12": "0 12px 17px 0 rgba(0, 0, 0, 0.14)",
                                          "16": "0 16px 24px 0 rgba(0, 0, 0, 0.14)",
                                          "2": "0 2px 2px 0 rgba(0, 0, 0, 0.14)",
                                          "24": "0 24px 38px 0 rgba(0, 0, 0, 0.14)",
                                          "3": "0 3px 4px 0 rgba(0, 0, 0, 0.14)",
                                          "4": "0 4px 5px 0 rgba(0, 0, 0, 0.14)",
                                          "6": "0 6px 10px 0 rgba(0, 0, 0, 0.14)",
                                          "8": "0 8px 10px 0 rgba(0, 0, 0, 0.14)",
                                          "9": "0 9px 12px 0 rgba(0, 0, 0, 0.14)",
                                        },
                                        "shape": Object {
                                          "badgeBorderRadius": 100,
                                          "borderRadius": 4,
                                        },
                                        "sizes": Object {
                                          "huge": 96,
                                          "hugex": 128,
                                          "hugexx": 144,
                                          "hugexxx": 192,
                                          "large": 64,
                                          "largex": 72,
                                          "largexx": 80,
                                          "largexxx": 88,
                                          "medium": 48,
                                          "mediumx": 56,
                                          "micro": 4,
                                          "none": 0,
                                          "semi": 32,
                                          "semix": 40,
                                          "small": 16,
                                          "standard": 24,
                                          "tiny": 8,
                                          "veryhuge": 256,
                                        },
                                        "spacing": 8,
                                        "typography": Object {
                                          "body1": Object {
                                            "fontSize": "1rem",
                                            "fontWeight": 400,
                                          },
                                          "body2": Object {
                                            "fontSize": "0.875rem",
                                            "fontWeight": 400,
                                          },
                                          "button": Object {
                                            "fontSize": "0.875rem",
                                            "fontWeight": 600,
                                          },
                                          "caption": Object {
                                            "fontSize": "0.75rem",
                                            "fontWeight": 400,
                                          },
                                          "fontFamily": "\\"Roboto\\", sans-serif",
                                          "fontFamilyBrand1": "\\"Helvetica Now Display\\"",
                                          "fontFamilyBrand2": "\\"Helvetica Now Text\\"",
                                          "fontFamilyBrand3": undefined,
                                          "fontWeightBold": 700,
                                          "fontWeightLight": 300,
                                          "fontWeightMedium": 500,
                                          "fontWeightRegular": 400,
                                          "h1": Object {
                                            "fontSize": "6rem",
                                            "fontWeight": 300,
                                          },
                                          "h2": Object {
                                            "fontSize": "3.75rem",
                                            "fontWeight": 300,
                                          },
                                          "h3": Object {
                                            "fontSize": "3rem",
                                            "fontWeight": 400,
                                          },
                                          "h4": Object {
                                            "fontSize": "2.125rem",
                                            "fontWeight": 400,
                                          },
                                          "h5": Object {
                                            "fontSize": "1.5rem",
                                            "fontWeight": 400,
                                          },
                                          "h6": Object {
                                            "fontSize": "1.25rem",
                                            "fontWeight": 600,
                                          },
                                          "overline": Object {
                                            "fontSize": "0.75rem",
                                            "fontWeight": 400,
                                          },
                                          "subtitle1": Object {
                                            "fontSize": "1rem",
                                            "fontWeight": 400,
                                          },
                                          "subtitle2": Object {
                                            "fontSize": "0.875rem",
                                            "fontWeight": 500,
                                          },
                                        },
                                      }
                                    }
                                  >
                                    <WithStyles(ForwardRef(Input))
                                      autoFocus={false}
                                      endAdornment={
                                        <ForwardRef(WithStyles)
                                          position="end"
                                        >
                                          <ForwardRef(WithStyles)
                                            onClick={[Function]}
                                          >
                                            <ForwardRef(WithTheme)
                                              name="outlined-action-calendar"
                                              size="tiny"
                                            />
                                          </ForwardRef(WithStyles)>
                                        </ForwardRef(WithStyles)>
                                      }
                                      fullWidth={false}
                                      inputProps={Object {}}
                                      multiline={false}
                                      onChange={[Function]}
                                      value="February 1st"
                                    >
                                      <ForwardRef(Input)
                                        autoFocus={false}
                                        classes={
                                          Object {
                                            "colorSecondary": "MuiInput-colorSecondary",
                                            "disabled": "Mui-disabled",
                                            "error": "Mui-error",
                                            "focused": "Mui-focused",
                                            "formControl": "MuiInput-formControl",
                                            "fullWidth": "MuiInput-fullWidth",
                                            "input": "MuiInput-input",
                                            "inputMarginDense": "MuiInput-inputMarginDense",
                                            "inputMultiline": "MuiInput-inputMultiline",
                                            "inputTypeSearch": "MuiInput-inputTypeSearch",
                                            "marginDense": "MuiInput-marginDense",
                                            "multiline": "MuiInput-multiline",
                                            "root": "MuiInput-root",
                                            "underline": "MuiInput-underline",
                                          }
                                        }
                                        endAdornment={
                                          <ForwardRef(WithStyles)
                                            position="end"
                                          >
                                            <ForwardRef(WithStyles)
                                              onClick={[Function]}
                                            >
                                              <ForwardRef(WithTheme)
                                                name="outlined-action-calendar"
                                                size="tiny"
                                              />
                                            </ForwardRef(WithStyles)>
                                          </ForwardRef(WithStyles)>
                                        }
                                        fullWidth={false}
                                        inputProps={Object {}}
                                        multiline={false}
                                        onChange={[Function]}
                                        value="February 1st"
                                      >
                                        <WithStyles(ForwardRef(InputBase))
                                          autoFocus={false}
                                          classes={
                                            Object {
                                              "colorSecondary": "MuiInput-colorSecondary",
                                              "disabled": "Mui-disabled",
                                              "error": "Mui-error",
                                              "focused": "Mui-focused",
                                              "formControl": "MuiInput-formControl",
                                              "fullWidth": "MuiInput-fullWidth",
                                              "input": "MuiInput-input",
                                              "inputMarginDense": "MuiInput-inputMarginDense",
                                              "inputMultiline": "MuiInput-inputMultiline",
                                              "inputTypeSearch": "MuiInput-inputTypeSearch",
                                              "marginDense": "MuiInput-marginDense",
                                              "multiline": "MuiInput-multiline",
                                              "root": "MuiInput-root MuiInput-underline",
                                              "underline": null,
                                            }
                                          }
                                          endAdornment={
                                            <ForwardRef(WithStyles)
                                              position="end"
                                            >
                                              <ForwardRef(WithStyles)
                                                onClick={[Function]}
                                              >
                                                <ForwardRef(WithTheme)
                                                  name="outlined-action-calendar"
                                                  size="tiny"
                                                />
                                              </ForwardRef(WithStyles)>
                                            </ForwardRef(WithStyles)>
                                          }
                                          fullWidth={false}
                                          inputComponent="input"
                                          inputProps={Object {}}
                                          multiline={false}
                                          onChange={[Function]}
                                          type="text"
                                          value="February 1st"
                                        >
                                          <ForwardRef(InputBase)
                                            autoFocus={false}
                                            classes={
                                              Object {
                                                "adornedEnd": "MuiInputBase-adornedEnd",
                                                "adornedStart": "MuiInputBase-adornedStart",
                                                "colorSecondary": "MuiInputBase-colorSecondary MuiInput-colorSecondary",
                                                "disabled": "Mui-disabled Mui-disabled",
                                                "error": "Mui-error Mui-error",
                                                "focused": "Mui-focused Mui-focused",
                                                "formControl": "MuiInputBase-formControl MuiInput-formControl",
                                                "fullWidth": "MuiInputBase-fullWidth MuiInput-fullWidth",
                                                "input": "MuiInputBase-input MuiInput-input",
                                                "inputAdornedEnd": "MuiInputBase-inputAdornedEnd",
                                                "inputAdornedStart": "MuiInputBase-inputAdornedStart",
                                                "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                                "inputMarginDense": "MuiInputBase-inputMarginDense MuiInput-inputMarginDense",
                                                "inputMultiline": "MuiInputBase-inputMultiline MuiInput-inputMultiline",
                                                "inputTypeSearch": "MuiInputBase-inputTypeSearch MuiInput-inputTypeSearch",
                                                "marginDense": "MuiInputBase-marginDense MuiInput-marginDense",
                                                "multiline": "MuiInputBase-multiline MuiInput-multiline",
                                                "root": "MuiInputBase-root MuiInput-root MuiInput-underline",
                                              }
                                            }
                                            endAdornment={
                                              <ForwardRef(WithStyles)
                                                position="end"
                                              >
                                                <ForwardRef(WithStyles)
                                                  onClick={[Function]}
                                                >
                                                  <ForwardRef(WithTheme)
                                                    name="outlined-action-calendar"
                                                    size="tiny"
                                                  />
                                                </ForwardRef(WithStyles)>
                                              </ForwardRef(WithStyles)>
                                            }
                                            fullWidth={false}
                                            inputComponent="input"
                                            inputProps={Object {}}
                                            multiline={false}
                                            onChange={[Function]}
                                            type="text"
                                            value="February 1st"
                                          >
                                            <div
                                              className="MuiInputBase-root MuiInput-root MuiInput-underline MuiInputBase-formControl MuiInput-formControl MuiInputBase-adornedEnd"
                                              onClick={[Function]}
                                            >
                                              <input
                                                aria-invalid={false}
                                                autoFocus={false}
                                                className="MuiInputBase-input MuiInput-input MuiInputBase-inputAdornedEnd"
                                                disabled={false}
                                                onAnimationStart={[Function]}
                                                onBlur={[Function]}
                                                onChange={[Function]}
                                                onFocus={[Function]}
                                                required={false}
                                                type="text"
                                                value="February 1st"
                                              />
                                              <WithStyles(ForwardRef(InputAdornment))
                                                position="end"
                                              >
                                                <ForwardRef(InputAdornment)
                                                  classes={
                                                    Object {
                                                      "disablePointerEvents": "MuiInputAdornment-disablePointerEvents",
                                                      "filled": "MuiInputAdornment-filled",
                                                      "hiddenLabel": "MuiInputAdornment-hiddenLabel",
                                                      "marginDense": "MuiInputAdornment-marginDense",
                                                      "positionEnd": "MuiInputAdornment-positionEnd",
                                                      "positionStart": "MuiInputAdornment-positionStart",
                                                      "root": "MuiInputAdornment-root",
                                                    }
                                                  }
                                                  position="end"
                                                >
                                                  <div
                                                    className="MuiInputAdornment-root MuiInputAdornment-positionEnd"
                                                  >
                                                    <WithStyles(ForwardRef(IconButton))
                                                      onClick={[Function]}
                                                    >
                                                      <ForwardRef(IconButton)
                                                        classes={
                                                          Object {
                                                            "colorInherit": "MuiIconButton-colorInherit",
                                                            "colorPrimary": "MuiIconButton-colorPrimary",
                                                            "colorSecondary": "MuiIconButton-colorSecondary",
                                                            "disabled": "Mui-disabled",
                                                            "edgeEnd": "MuiIconButton-edgeEnd",
                                                            "edgeStart": "MuiIconButton-edgeStart",
                                                            "label": "MuiIconButton-label",
                                                            "root": "MuiIconButton-root",
                                                            "sizeSmall": "MuiIconButton-sizeSmall",
                                                          }
                                                        }
                                                        onClick={[Function]}
                                                      >
                                                        <WithStyles(ForwardRef(ButtonBase))
                                                          centerRipple={true}
                                                          className="MuiIconButton-root"
                                                          disabled={false}
                                                          focusRipple={true}
                                                          onClick={[Function]}
                                                        >
                                                          <ForwardRef(ButtonBase)
                                                            centerRipple={true}
                                                            className="MuiIconButton-root"
                                                            classes={
                                                              Object {
                                                                "disabled": "Mui-disabled",
                                                                "focusVisible": "Mui-focusVisible",
                                                                "root": "MuiButtonBase-root",
                                                              }
                                                            }
                                                            disabled={false}
                                                            focusRipple={true}
                                                            onClick={[Function]}
                                                          >
                                                            <button
                                                              className="MuiButtonBase-root MuiIconButton-root"
                                                              disabled={false}
                                                              onBlur={[Function]}
                                                              onClick={[Function]}
                                                              onDragLeave={[Function]}
                                                              onFocus={[Function]}
                                                              onKeyDown={[Function]}
                                                              onKeyUp={[Function]}
                                                              onMouseDown={[Function]}
                                                              onMouseLeave={[Function]}
                                                              onMouseUp={[Function]}
                                                              onTouchEnd={[Function]}
                                                              onTouchMove={[Function]}
                                                              onTouchStart={[Function]}
                                                              tabIndex={0}
                                                              type="button"
                                                            >
                                                              <span
                                                                className="MuiIconButton-label"
                                                              >
                                                                <WithTheme(ForwardRef)
                                                                  name="outlined-action-calendar"
                                                                  size="tiny"
                                                                >
                                                                  <ForwardRef
                                                                    name="outlined-action-calendar"
                                                                    size="tiny"
                                                                  >
                                                                    <styled.i
                                                                      className="natds-icons natds-icons-outlined-action-calendar undefined"
                                                                      size="tiny"
                                                                    >
                                                                      <StyledComponent
                                                                        className="natds-icons natds-icons-outlined-action-calendar undefined"
                                                                        forwardedComponent={
                                                                          Object {
                                                                            "$$typeof": Symbol(react.forward_ref),
                                                                            "attrs": Array [],
                                                                            "componentStyle": ComponentStyle {
                                                                              "componentId": "sc-bdVaJa",
                                                                              "isStatic": false,
                                                                              "lastClassName": "jWbhAs",
                                                                              "rules": Array [
                                                                                "
  font-size: ",
                                                                                [Function],
                                                                                ";
",
                                                                              ],
                                                                            },
                                                                            "displayName": "styled.i",
                                                                            "foldedComponentIds": Array [],
                                                                            "render": [Function],
                                                                            "styledComponentId": "sc-bdVaJa",
                                                                            "target": "i",
                                                                            "toString": [Function],
                                                                            "warnTooManyClasses": [Function],
                                                                            "withComponent": [Function],
                                                                          }
                                                                        }
                                                                        forwardedRef={null}
                                                                        size="tiny"
                                                                      >
                                                                        <i
                                                                          className="sc-bdVaJa jWbhAs natds-icons natds-icons-outlined-action-calendar undefined"
                                                                          size="tiny"
                                                                        />
                                                                      </StyledComponent>
                                                                    </styled.i>
                                                                  </ForwardRef>
                                                                </WithTheme(ForwardRef)>
                                                              </span>
                                                              <NoSsr>
                                                                <WithStyles(memo)
                                                                  center={true}
                                                                >
                                                                  <ForwardRef(TouchRipple)
                                                                    center={true}
                                                                    classes={
                                                                      Object {
                                                                        "child": "MuiTouchRipple-child",
                                                                        "childLeaving": "MuiTouchRipple-childLeaving",
                                                                        "childPulsate": "MuiTouchRipple-childPulsate",
                                                                        "ripple": "MuiTouchRipple-ripple",
                                                                        "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                        "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                        "root": "MuiTouchRipple-root",
                                                                      }
                                                                    }
                                                                  >
                                                                    <span
                                                                      className="MuiTouchRipple-root"
                                                                    >
                                                                      <TransitionGroup
                                                                        childFactory={[Function]}
                                                                        component={null}
                                                                        exit={true}
                                                                      />
                                                                    </span>
                                                                  </ForwardRef(TouchRipple)>
                                                                </WithStyles(memo)>
                                                              </NoSsr>
                                                            </button>
                                                          </ForwardRef(ButtonBase)>
                                                        </WithStyles(ForwardRef(ButtonBase))>
                                                      </ForwardRef(IconButton)>
                                                    </WithStyles(ForwardRef(IconButton))>
                                                  </div>
                                                </ForwardRef(InputAdornment)>
                                              </WithStyles(ForwardRef(InputAdornment))>
                                            </div>
                                          </ForwardRef(InputBase)>
                                        </WithStyles(ForwardRef(InputBase))>
                                      </ForwardRef(Input)>
                                    </WithStyles(ForwardRef(Input))>
                                  </div>
                                </ForwardRef(FormControl)>
                              </WithStyles(ForwardRef(FormControl))>
                            </ForwardRef(TextField)>
                          </WithStyles(ForwardRef(TextField))>
                        </Rifm>
                      </Component>
                      <WithStyles(ModalDialog)
                        cancelLabel="Cancel"
                        clearLabel="Clear"
                        clearable={false}
                        okLabel="OK"
                        onAccept={[Function]}
                        onClear={[Function]}
                        onDismiss={[Function]}
                        onSetToday={[Function]}
                        open={false}
                        showTodayButton={false}
                        todayLabel="Today"
                      >
                        <ModalDialog
                          cancelLabel="Cancel"
                          classes={
                            Object {
                              "dialog": "MuiPickersModal-dialog",
                              "dialogRoot": "MuiPickersModal-dialogRoot",
                              "dialogRootWider": "MuiPickersModal-dialogRootWider",
                              "withAdditionalAction": "MuiPickersModal-withAdditionalAction",
                            }
                          }
                          clearLabel="Clear"
                          clearable={false}
                          okLabel="OK"
                          onAccept={[Function]}
                          onClear={[Function]}
                          onDismiss={[Function]}
                          onSetToday={[Function]}
                          open={false}
                          showTodayButton={false}
                          todayLabel="Today"
                        >
                          <WithStyles(ForwardRef(Dialog))
                            classes={
                              Object {
                                "paper": "MuiPickersModal-dialogRoot",
                              }
                            }
                            onClose={[Function]}
                            open={false}
                            role="dialog"
                          >
                            <ForwardRef(Dialog)
                              classes={
                                Object {
                                  "container": "MuiDialog-container",
                                  "paper": "MuiDialog-paper MuiPickersModal-dialogRoot",
                                  "paperFullScreen": "MuiDialog-paperFullScreen",
                                  "paperFullWidth": "MuiDialog-paperFullWidth",
                                  "paperScrollBody": "MuiDialog-paperScrollBody",
                                  "paperScrollPaper": "MuiDialog-paperScrollPaper",
                                  "paperWidthFalse": "MuiDialog-paperWidthFalse",
                                  "paperWidthLg": "MuiDialog-paperWidthLg",
                                  "paperWidthMd": "MuiDialog-paperWidthMd",
                                  "paperWidthSm": "MuiDialog-paperWidthSm",
                                  "paperWidthXl": "MuiDialog-paperWidthXl",
                                  "paperWidthXs": "MuiDialog-paperWidthXs",
                                  "root": "MuiDialog-root",
                                  "scrollBody": "MuiDialog-scrollBody",
                                  "scrollPaper": "MuiDialog-scrollPaper",
                                }
                              }
                              onClose={[Function]}
                              open={false}
                              role="dialog"
                            >
                              <ForwardRef(Modal)
                                BackdropComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "Naked": Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "propTypes": Object {
                                        "children": [Function],
                                        "className": [Function],
                                        "classes": [Function],
                                        "invisible": [Function],
                                        "open": [Function],
                                        "transitionDuration": [Function],
                                      },
                                      "render": [Function],
                                    },
                                    "displayName": "WithStyles(ForwardRef(Backdrop))",
                                    "options": Object {
                                      "defaultTheme": Object {
                                        "breakpoints": Object {
                                          "between": [Function],
                                          "down": [Function],
                                          "keys": Array [
                                            "xs",
                                            "sm",
                                            "md",
                                            "lg",
                                            "xl",
                                          ],
                                          "only": [Function],
                                          "up": [Function],
                                          "values": Object {
                                            "lg": 1280,
                                            "md": 960,
                                            "sm": 600,
                                            "xl": 1920,
                                            "xs": 0,
                                          },
                                          "width": [Function],
                                        },
                                        "direction": "ltr",
                                        "mixins": Object {
                                          "gutters": [Function],
                                          "toolbar": Object {
                                            "@media (min-width:0px) and (orientation: landscape)": Object {
                                              "minHeight": 48,
                                            },
                                            "@media (min-width:600px)": Object {
                                              "minHeight": 64,
                                            },
                                            "minHeight": 56,
                                          },
                                        },
                                        "overrides": Object {},
                                        "palette": Object {
                                          "action": Object {
                                            "active": "rgba(0, 0, 0, 0.54)",
                                            "disabled": "rgba(0, 0, 0, 0.26)",
                                            "disabledBackground": "rgba(0, 0, 0, 0.12)",
                                            "hover": "rgba(0, 0, 0, 0.08)",
                                            "hoverOpacity": 0.08,
                                            "selected": "rgba(0, 0, 0, 0.14)",
                                          },
                                          "augmentColor": [Function],
                                          "background": Object {
                                            "default": "#fafafa",
                                            "paper": "#fff",
                                          },
                                          "common": Object {
                                            "black": "#000",
                                            "white": "#fff",
                                          },
                                          "contrastThreshold": 3,
                                          "divider": "rgba(0, 0, 0, 0.12)",
                                          "error": Object {
                                            "contrastText": "#fff",
                                            "dark": "#d32f2f",
                                            "light": "#e57373",
                                            "main": "#f44336",
                                          },
                                          "getContrastText": [Function],
                                          "grey": Object {
                                            "100": "#f5f5f5",
                                            "200": "#eeeeee",
                                            "300": "#e0e0e0",
                                            "400": "#bdbdbd",
                                            "50": "#fafafa",
                                            "500": "#9e9e9e",
                                            "600": "#757575",
                                            "700": "#616161",
                                            "800": "#424242",
                                            "900": "#212121",
                                            "A100": "#d5d5d5",
                                            "A200": "#aaaaaa",
                                            "A400": "#303030",
                                            "A700": "#616161",
                                          },
                                          "info": Object {
                                            "contrastText": "#fff",
                                            "dark": "#1976d2",
                                            "light": "#64b5f6",
                                            "main": "#2196f3",
                                          },
                                          "primary": Object {
                                            "contrastText": "#fff",
                                            "dark": "#303f9f",
                                            "light": "#7986cb",
                                            "main": "#3f51b5",
                                          },
                                          "secondary": Object {
                                            "contrastText": "#fff",
                                            "dark": "#c51162",
                                            "light": "#ff4081",
                                            "main": "#f50057",
                                          },
                                          "success": Object {
                                            "contrastText": "rgba(0, 0, 0, 0.87)",
                                            "dark": "#388e3c",
                                            "light": "#81c784",
                                            "main": "#4caf50",
                                          },
                                          "text": Object {
                                            "disabled": "rgba(0, 0, 0, 0.38)",
                                            "hint": "rgba(0, 0, 0, 0.38)",
                                            "primary": "rgba(0, 0, 0, 0.87)",
                                            "secondary": "rgba(0, 0, 0, 0.54)",
                                          },
                                          "tonalOffset": 0.2,
                                          "type": "light",
                                          "warning": Object {
                                            "contrastText": "rgba(0, 0, 0, 0.87)",
                                            "dark": "#f57c00",
                                            "light": "#ffb74d",
                                            "main": "#ff9800",
                                          },
                                        },
                                        "props": Object {},
                                        "shadows": Array [
                                          "none",
                                          "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                          "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                          "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                          "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                          "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                          "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                          "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                          "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                          "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                          "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                          "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                          "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                          "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                          "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                          "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                          "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                          "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                          "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                          "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                          "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                          "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                          "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                          "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                          "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                                        ],
                                        "shape": Object {
                                          "borderRadius": 4,
                                        },
                                        "spacing": [Function],
                                        "transitions": Object {
                                          "create": [Function],
                                          "duration": Object {
                                            "complex": 375,
                                            "enteringScreen": 225,
                                            "leavingScreen": 195,
                                            "short": 250,
                                            "shorter": 200,
                                            "shortest": 150,
                                            "standard": 300,
                                          },
                                          "easing": Object {
                                            "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                            "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                            "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                            "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                                          },
                                          "getAutoHeightDuration": [Function],
                                        },
                                        "typography": Object {
                                          "body1": Object {
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": "1rem",
                                            "fontWeight": 400,
                                            "letterSpacing": "0.00938em",
                                            "lineHeight": 1.5,
                                          },
                                          "body2": Object {
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": "0.875rem",
                                            "fontWeight": 400,
                                            "letterSpacing": "0.01071em",
                                            "lineHeight": 1.43,
                                          },
                                          "button": Object {
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": "0.875rem",
                                            "fontWeight": 500,
                                            "letterSpacing": "0.02857em",
                                            "lineHeight": 1.75,
                                            "textTransform": "uppercase",
                                          },
                                          "caption": Object {
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": "0.75rem",
                                            "fontWeight": 400,
                                            "letterSpacing": "0.03333em",
                                            "lineHeight": 1.66,
                                          },
                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                          "fontSize": 14,
                                          "fontWeightBold": 700,
                                          "fontWeightLight": 300,
                                          "fontWeightMedium": 500,
                                          "fontWeightRegular": 400,
                                          "h1": Object {
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": "6rem",
                                            "fontWeight": 300,
                                            "letterSpacing": "-0.01562em",
                                            "lineHeight": 1.167,
                                          },
                                          "h2": Object {
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": "3.75rem",
                                            "fontWeight": 300,
                                            "letterSpacing": "-0.00833em",
                                            "lineHeight": 1.2,
                                          },
                                          "h3": Object {
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": "3rem",
                                            "fontWeight": 400,
                                            "letterSpacing": "0em",
                                            "lineHeight": 1.167,
                                          },
                                          "h4": Object {
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": "2.125rem",
                                            "fontWeight": 400,
                                            "letterSpacing": "0.00735em",
                                            "lineHeight": 1.235,
                                          },
                                          "h5": Object {
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": "1.5rem",
                                            "fontWeight": 400,
                                            "letterSpacing": "0em",
                                            "lineHeight": 1.334,
                                          },
                                          "h6": Object {
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": "1.25rem",
                                            "fontWeight": 500,
                                            "letterSpacing": "0.0075em",
                                            "lineHeight": 1.6,
                                          },
                                          "htmlFontSize": 16,
                                          "overline": Object {
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": "0.75rem",
                                            "fontWeight": 400,
                                            "letterSpacing": "0.08333em",
                                            "lineHeight": 2.66,
                                            "textTransform": "uppercase",
                                          },
                                          "pxToRem": [Function],
                                          "round": [Function],
                                          "subtitle1": Object {
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": "1rem",
                                            "fontWeight": 400,
                                            "letterSpacing": "0.00938em",
                                            "lineHeight": 1.75,
                                          },
                                          "subtitle2": Object {
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": "0.875rem",
                                            "fontWeight": 500,
                                            "letterSpacing": "0.00714em",
                                            "lineHeight": 1.57,
                                          },
                                        },
                                        "zIndex": Object {
                                          "appBar": 1100,
                                          "drawer": 1200,
                                          "mobileStepper": 1000,
                                          "modal": 1300,
                                          "snackbar": 1400,
                                          "speedDial": 1050,
                                          "tooltip": 1500,
                                        },
                                      },
                                      "name": "MuiBackdrop",
                                    },
                                    "propTypes": Object {
                                      "classes": [Function],
                                      "innerRef": [Function],
                                    },
                                    "render": [Function],
                                    "useStyles": [Function],
                                  }
                                }
                                BackdropProps={
                                  Object {
                                    "transitionDuration": Object {
                                      "enter": 225,
                                      "exit": 195,
                                    },
                                  }
                                }
                                className="MuiDialog-root"
                                closeAfterTransition={true}
                                disableBackdropClick={false}
                                disableEscapeKeyDown={false}
                                onClose={[Function]}
                                open={false}
                                role="dialog"
                              />
                            </ForwardRef(Dialog)>
                          </WithStyles(ForwardRef(Dialog))>
                        </ModalDialog>
                      </WithStyles(ModalDialog)>
                    </Component>
                  </Component>
                </PickerWithState>
              </div>
            </StyledComponent>
          </styled.div>
        </Component>
      </ForwardRef>
    </WithTheme(ForwardRef)>
  </Component>
</Component>
`;

exports[`KeyboardDatePicker components should match to snapshot - Disabled: KeyboardDatePicker disabled snapshot 1`] = `
<Component
  disabled={true}
  onChange={[Function]}
  value={2020-02-01T03:00:00.000Z}
>
  <Component
    utils={[Function]}
  >
    <WithTheme(ForwardRef)
      disabled={true}
      label="Only calendar"
      onChange={[Function]}
      value={2020-02-01T03:00:00.000Z}
      variant="dialog"
    >
      <ForwardRef
        disabled={true}
        label="Only calendar"
        onChange={[Function]}
        value={2020-02-01T03:00:00.000Z}
        variant="dialog"
      >
        <Component
          disabled={true}
          label="Only calendar"
          onChange={[Function]}
          value={2020-02-01T03:00:00.000Z}
          variant="dialog"
        >
          <styled.div>
            <StyledComponent
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-gqjmRU",
                    "isStatic": false,
                    "lastClassName": "fOizOf",
                    "rules": Array [
                      "
  display: flex;
  flex-flow: column nowrap;
  font-family: ",
                      [Function],
                      ";
",
                    ],
                  },
                  "displayName": "styled.div",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "sc-gqjmRU",
                  "target": "div",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
            >
              <div
                className="sc-gqjmRU fOizOf"
              >
                <styled.label
                  disabled={true}
                >
                  <StyledComponent
                    disabled={true}
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "sc-VigVT",
                          "isStatic": false,
                          "lastClassName": "kbirlQ",
                          "rules": Array [
                            "
  font-size: ",
                            [Function],
                            ";
  font-weight: ",
                            [Function],
                            ";
  color: ",
                            [Function],
                            ";
  line-height: 1.2;
  padding: 0 0 ",
                            "4",
                            "px;
  font-family: ",
                            [Function],
                            ";
",
                          ],
                        },
                        "displayName": "styled.label",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "sc-VigVT",
                        "target": "label",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <label
                      className="sc-VigVT kbirlQ"
                      disabled={true}
                    >
                      Only calendar
                    </label>
                  </StyledComponent>
                </styled.label>
                <PickerWithState
                  allowKeyboardControl={true}
                  disabled={true}
                  helperText=""
                  inputProps={Object {}}
                  invalidDateMessage="Invalid Date Format"
                  keyboardIcon={
                    <ForwardRef(WithTheme)
                      name="outlined-action-calendar"
                      size="tiny"
                    />
                  }
                  label=""
                  maxDate={2100-01-01T00:00:00.000Z}
                  maxDateMessage="Date should not be after maximal date"
                  minDate={1900-01-01T00:00:00.000Z}
                  minDateMessage="Date should not be before minimal date"
                  onChange={[Function]}
                  openTo="date"
                  required={false}
                  value={2020-02-01T03:00:00.000Z}
                  variant="dialog"
                  views={
                    Array [
                      "year",
                      "date",
                    ]
                  }
                >
                  <Component
                    DateInputProps={
                      Object {
                        "format": "MMMM do",
                        "inputValue": "February 1st",
                        "onChange": [Function],
                        "openPicker": [Function],
                        "validationError": "",
                      }
                    }
                    InputComponent={[Function]}
                    disabled={true}
                    format="MMMM do"
                    helperText=""
                    inputProps={Object {}}
                    keyboardIcon={
                      <ForwardRef(WithTheme)
                        name="outlined-action-calendar"
                        size="tiny"
                      />
                    }
                    label=""
                    onAccept={[Function]}
                    onClear={[Function]}
                    onDismiss={[Function]}
                    onSetToday={[Function]}
                    open={false}
                    required={false}
                    variant="dialog"
                  >
                    <Component
                      DateInputProps={
                        Object {
                          "format": "MMMM do",
                          "inputValue": "February 1st",
                          "onChange": [Function],
                          "openPicker": [Function],
                          "validationError": "",
                        }
                      }
                      InputComponent={[Function]}
                      cancelLabel="Cancel"
                      clearLabel="Clear"
                      clearable={false}
                      disabled={true}
                      format="MMMM do"
                      helperText=""
                      inputProps={Object {}}
                      keyboardIcon={
                        <ForwardRef(WithTheme)
                          name="outlined-action-calendar"
                          size="tiny"
                        />
                      }
                      label=""
                      okLabel="OK"
                      onAccept={[Function]}
                      onClear={[Function]}
                      onDismiss={[Function]}
                      onSetToday={[Function]}
                      open={false}
                      required={false}
                      showTodayButton={false}
                      todayLabel="Today"
                    >
                      <Component
                        disabled={true}
                        format="MMMM do"
                        helperText=""
                        inputProps={Object {}}
                        inputValue="February 1st"
                        keyboardIcon={
                          <ForwardRef(WithTheme)
                            name="outlined-action-calendar"
                            size="tiny"
                          />
                        }
                        label=""
                        onChange={[Function]}
                        openPicker={[Function]}
                        required={false}
                        validationError=""
                      >
                        <Rifm
                          format={[Function]}
                          key="____ __"
                          onChange={[Function]}
                          refuse={/\\[\\^\\\\d\\]\\+/gi}
                          value="February 1st"
                        >
                          <WithStyles(ForwardRef(TextField))
                            InputProps={
                              Object {
                                "endAdornment": <ForwardRef(WithStyles)
                                  position="end"
                                >
                                  <ForwardRef(WithStyles)
                                    disabled={true}
                                    onClick={[Function]}
                                  >
                                    <ForwardRef(WithTheme)
                                      name="outlined-action-calendar"
                                      size="tiny"
                                    />
                                  </ForwardRef(WithStyles)>
                                </ForwardRef(WithStyles)>,
                              }
                            }
                            disabled={true}
                            error={false}
                            helperText=""
                            inputProps={Object {}}
                            label=""
                            onChange={[Function]}
                            required={false}
                            value="February 1st"
                          >
                            <ForwardRef(TextField)
                              InputProps={
                                Object {
                                  "endAdornment": <ForwardRef(WithStyles)
                                    position="end"
                                  >
                                    <ForwardRef(WithStyles)
                                      disabled={true}
                                      onClick={[Function]}
                                    >
                                      <ForwardRef(WithTheme)
                                        name="outlined-action-calendar"
                                        size="tiny"
                                      />
                                    </ForwardRef(WithStyles)>
                                  </ForwardRef(WithStyles)>,
                                }
                              }
                              classes={
                                Object {
                                  "root": "MuiTextField-root",
                                }
                              }
                              disabled={true}
                              error={false}
                              helperText=""
                              inputProps={Object {}}
                              label=""
                              onChange={[Function]}
                              required={false}
                              value="February 1st"
                            >
                              <WithStyles(ForwardRef(FormControl))
                                className="MuiTextField-root"
                                color="primary"
                                disabled={true}
                                error={false}
                                fullWidth={false}
                                required={false}
                                variant="standard"
                              >
                                <ForwardRef(FormControl)
                                  className="MuiTextField-root"
                                  classes={
                                    Object {
                                      "fullWidth": "MuiFormControl-fullWidth",
                                      "marginDense": "MuiFormControl-marginDense",
                                      "marginNormal": "MuiFormControl-marginNormal",
                                      "root": "MuiFormControl-root",
                                    }
                                  }
                                  color="primary"
                                  disabled={true}
                                  error={false}
                                  fullWidth={false}
                                  required={false}
                                  variant="standard"
                                >
                                  <div
                                    className="MuiFormControl-root MuiTextField-root"
                                  >
                                    <WithStyles(ForwardRef(Input))
                                      autoFocus={false}
                                      endAdornment={
                                        <ForwardRef(WithStyles)
                                          position="end"
                                        >
                                          <ForwardRef(WithStyles)
                                            disabled={true}
                                            onClick={[Function]}
                                          >
                                            <ForwardRef(WithTheme)
                                              name="outlined-action-calendar"
                                              size="tiny"
                                            />
                                          </ForwardRef(WithStyles)>
                                        </ForwardRef(WithStyles)>
                                      }
                                      fullWidth={false}
                                      inputProps={Object {}}
                                      multiline={false}
                                      onChange={[Function]}
                                      value="February 1st"
                                    >
                                      <ForwardRef(Input)
                                        autoFocus={false}
                                        classes={
                                          Object {
                                            "colorSecondary": "MuiInput-colorSecondary",
                                            "disabled": "Mui-disabled",
                                            "error": "Mui-error",
                                            "focused": "Mui-focused",
                                            "formControl": "MuiInput-formControl",
                                            "fullWidth": "MuiInput-fullWidth",
                                            "input": "MuiInput-input",
                                            "inputMarginDense": "MuiInput-inputMarginDense",
                                            "inputMultiline": "MuiInput-inputMultiline",
                                            "inputTypeSearch": "MuiInput-inputTypeSearch",
                                            "marginDense": "MuiInput-marginDense",
                                            "multiline": "MuiInput-multiline",
                                            "root": "MuiInput-root",
                                            "underline": "MuiInput-underline",
                                          }
                                        }
                                        endAdornment={
                                          <ForwardRef(WithStyles)
                                            position="end"
                                          >
                                            <ForwardRef(WithStyles)
                                              disabled={true}
                                              onClick={[Function]}
                                            >
                                              <ForwardRef(WithTheme)
                                                name="outlined-action-calendar"
                                                size="tiny"
                                              />
                                            </ForwardRef(WithStyles)>
                                          </ForwardRef(WithStyles)>
                                        }
                                        fullWidth={false}
                                        inputProps={Object {}}
                                        multiline={false}
                                        onChange={[Function]}
                                        value="February 1st"
                                      >
                                        <WithStyles(ForwardRef(InputBase))
                                          autoFocus={false}
                                          classes={
                                            Object {
                                              "colorSecondary": "MuiInput-colorSecondary",
                                              "disabled": "Mui-disabled",
                                              "error": "Mui-error",
                                              "focused": "Mui-focused",
                                              "formControl": "MuiInput-formControl",
                                              "fullWidth": "MuiInput-fullWidth",
                                              "input": "MuiInput-input",
                                              "inputMarginDense": "MuiInput-inputMarginDense",
                                              "inputMultiline": "MuiInput-inputMultiline",
                                              "inputTypeSearch": "MuiInput-inputTypeSearch",
                                              "marginDense": "MuiInput-marginDense",
                                              "multiline": "MuiInput-multiline",
                                              "root": "MuiInput-root MuiInput-underline",
                                              "underline": null,
                                            }
                                          }
                                          endAdornment={
                                            <ForwardRef(WithStyles)
                                              position="end"
                                            >
                                              <ForwardRef(WithStyles)
                                                disabled={true}
                                                onClick={[Function]}
                                              >
                                                <ForwardRef(WithTheme)
                                                  name="outlined-action-calendar"
                                                  size="tiny"
                                                />
                                              </ForwardRef(WithStyles)>
                                            </ForwardRef(WithStyles)>
                                          }
                                          fullWidth={false}
                                          inputComponent="input"
                                          inputProps={Object {}}
                                          multiline={false}
                                          onChange={[Function]}
                                          type="text"
                                          value="February 1st"
                                        >
                                          <ForwardRef(InputBase)
                                            autoFocus={false}
                                            classes={
                                              Object {
                                                "adornedEnd": "MuiInputBase-adornedEnd",
                                                "adornedStart": "MuiInputBase-adornedStart",
                                                "colorSecondary": "MuiInputBase-colorSecondary MuiInput-colorSecondary",
                                                "disabled": "Mui-disabled Mui-disabled",
                                                "error": "Mui-error Mui-error",
                                                "focused": "Mui-focused Mui-focused",
                                                "formControl": "MuiInputBase-formControl MuiInput-formControl",
                                                "fullWidth": "MuiInputBase-fullWidth MuiInput-fullWidth",
                                                "input": "MuiInputBase-input MuiInput-input",
                                                "inputAdornedEnd": "MuiInputBase-inputAdornedEnd",
                                                "inputAdornedStart": "MuiInputBase-inputAdornedStart",
                                                "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                                "inputMarginDense": "MuiInputBase-inputMarginDense MuiInput-inputMarginDense",
                                                "inputMultiline": "MuiInputBase-inputMultiline MuiInput-inputMultiline",
                                                "inputTypeSearch": "MuiInputBase-inputTypeSearch MuiInput-inputTypeSearch",
                                                "marginDense": "MuiInputBase-marginDense MuiInput-marginDense",
                                                "multiline": "MuiInputBase-multiline MuiInput-multiline",
                                                "root": "MuiInputBase-root MuiInput-root MuiInput-underline",
                                              }
                                            }
                                            endAdornment={
                                              <ForwardRef(WithStyles)
                                                position="end"
                                              >
                                                <ForwardRef(WithStyles)
                                                  disabled={true}
                                                  onClick={[Function]}
                                                >
                                                  <ForwardRef(WithTheme)
                                                    name="outlined-action-calendar"
                                                    size="tiny"
                                                  />
                                                </ForwardRef(WithStyles)>
                                              </ForwardRef(WithStyles)>
                                            }
                                            fullWidth={false}
                                            inputComponent="input"
                                            inputProps={Object {}}
                                            multiline={false}
                                            onChange={[Function]}
                                            type="text"
                                            value="February 1st"
                                          >
                                            <div
                                              className="MuiInputBase-root MuiInput-root MuiInput-underline Mui-disabled Mui-disabled MuiInputBase-formControl MuiInput-formControl MuiInputBase-adornedEnd"
                                              onClick={[Function]}
                                            >
                                              <input
                                                aria-invalid={false}
                                                autoFocus={false}
                                                className="MuiInputBase-input MuiInput-input Mui-disabled Mui-disabled MuiInputBase-inputAdornedEnd"
                                                disabled={true}
                                                onAnimationStart={[Function]}
                                                onBlur={[Function]}
                                                onChange={[Function]}
                                                onFocus={[Function]}
                                                required={false}
                                                type="text"
                                                value="February 1st"
                                              />
                                              <WithStyles(ForwardRef(InputAdornment))
                                                position="end"
                                              >
                                                <ForwardRef(InputAdornment)
                                                  classes={
                                                    Object {
                                                      "disablePointerEvents": "MuiInputAdornment-disablePointerEvents",
                                                      "filled": "MuiInputAdornment-filled",
                                                      "hiddenLabel": "MuiInputAdornment-hiddenLabel",
                                                      "marginDense": "MuiInputAdornment-marginDense",
                                                      "positionEnd": "MuiInputAdornment-positionEnd",
                                                      "positionStart": "MuiInputAdornment-positionStart",
                                                      "root": "MuiInputAdornment-root",
                                                    }
                                                  }
                                                  position="end"
                                                >
                                                  <div
                                                    className="MuiInputAdornment-root MuiInputAdornment-positionEnd"
                                                  >
                                                    <WithStyles(ForwardRef(IconButton))
                                                      disabled={true}
                                                      onClick={[Function]}
                                                    >
                                                      <ForwardRef(IconButton)
                                                        classes={
                                                          Object {
                                                            "colorInherit": "MuiIconButton-colorInherit",
                                                            "colorPrimary": "MuiIconButton-colorPrimary",
                                                            "colorSecondary": "MuiIconButton-colorSecondary",
                                                            "disabled": "Mui-disabled",
                                                            "edgeEnd": "MuiIconButton-edgeEnd",
                                                            "edgeStart": "MuiIconButton-edgeStart",
                                                            "label": "MuiIconButton-label",
                                                            "root": "MuiIconButton-root",
                                                            "sizeSmall": "MuiIconButton-sizeSmall",
                                                          }
                                                        }
                                                        disabled={true}
                                                        onClick={[Function]}
                                                      >
                                                        <WithStyles(ForwardRef(ButtonBase))
                                                          centerRipple={true}
                                                          className="MuiIconButton-root Mui-disabled"
                                                          disabled={true}
                                                          focusRipple={true}
                                                          onClick={[Function]}
                                                        >
                                                          <ForwardRef(ButtonBase)
                                                            centerRipple={true}
                                                            className="MuiIconButton-root Mui-disabled"
                                                            classes={
                                                              Object {
                                                                "disabled": "Mui-disabled",
                                                                "focusVisible": "Mui-focusVisible",
                                                                "root": "MuiButtonBase-root",
                                                              }
                                                            }
                                                            disabled={true}
                                                            focusRipple={true}
                                                            onClick={[Function]}
                                                          >
                                                            <button
                                                              className="MuiButtonBase-root MuiIconButton-root Mui-disabled Mui-disabled"
                                                              disabled={true}
                                                              onBlur={[Function]}
                                                              onClick={[Function]}
                                                              onDragLeave={[Function]}
                                                              onFocus={[Function]}
                                                              onKeyDown={[Function]}
                                                              onKeyUp={[Function]}
                                                              onMouseDown={[Function]}
                                                              onMouseLeave={[Function]}
                                                              onMouseUp={[Function]}
                                                              onTouchEnd={[Function]}
                                                              onTouchMove={[Function]}
                                                              onTouchStart={[Function]}
                                                              tabIndex={-1}
                                                              type="button"
                                                            >
                                                              <span
                                                                className="MuiIconButton-label"
                                                              >
                                                                <WithTheme(ForwardRef)
                                                                  name="outlined-action-calendar"
                                                                  size="tiny"
                                                                >
                                                                  <ForwardRef
                                                                    name="outlined-action-calendar"
                                                                    size="tiny"
                                                                  >
                                                                    <styled.i
                                                                      className="natds-icons natds-icons-outlined-action-calendar undefined"
                                                                      size="tiny"
                                                                    >
                                                                      <StyledComponent
                                                                        className="natds-icons natds-icons-outlined-action-calendar undefined"
                                                                        forwardedComponent={
                                                                          Object {
                                                                            "$$typeof": Symbol(react.forward_ref),
                                                                            "attrs": Array [],
                                                                            "componentStyle": ComponentStyle {
                                                                              "componentId": "sc-bdVaJa",
                                                                              "isStatic": false,
                                                                              "lastClassName": "jWbhAs",
                                                                              "rules": Array [
                                                                                "
  font-size: ",
                                                                                [Function],
                                                                                ";
",
                                                                              ],
                                                                            },
                                                                            "displayName": "styled.i",
                                                                            "foldedComponentIds": Array [],
                                                                            "render": [Function],
                                                                            "styledComponentId": "sc-bdVaJa",
                                                                            "target": "i",
                                                                            "toString": [Function],
                                                                            "warnTooManyClasses": [Function],
                                                                            "withComponent": [Function],
                                                                          }
                                                                        }
                                                                        forwardedRef={null}
                                                                        size="tiny"
                                                                      >
                                                                        <i
                                                                          className="sc-bdVaJa jWbhAs natds-icons natds-icons-outlined-action-calendar undefined"
                                                                          size="tiny"
                                                                        />
                                                                      </StyledComponent>
                                                                    </styled.i>
                                                                  </ForwardRef>
                                                                </WithTheme(ForwardRef)>
                                                              </span>
                                                            </button>
                                                          </ForwardRef(ButtonBase)>
                                                        </WithStyles(ForwardRef(ButtonBase))>
                                                      </ForwardRef(IconButton)>
                                                    </WithStyles(ForwardRef(IconButton))>
                                                  </div>
                                                </ForwardRef(InputAdornment)>
                                              </WithStyles(ForwardRef(InputAdornment))>
                                            </div>
                                          </ForwardRef(InputBase)>
                                        </WithStyles(ForwardRef(InputBase))>
                                      </ForwardRef(Input)>
                                    </WithStyles(ForwardRef(Input))>
                                  </div>
                                </ForwardRef(FormControl)>
                              </WithStyles(ForwardRef(FormControl))>
                            </ForwardRef(TextField)>
                          </WithStyles(ForwardRef(TextField))>
                        </Rifm>
                      </Component>
                      <WithStyles(ModalDialog)
                        cancelLabel="Cancel"
                        clearLabel="Clear"
                        clearable={false}
                        okLabel="OK"
                        onAccept={[Function]}
                        onClear={[Function]}
                        onDismiss={[Function]}
                        onSetToday={[Function]}
                        open={false}
                        showTodayButton={false}
                        todayLabel="Today"
                      >
                        <ModalDialog
                          cancelLabel="Cancel"
                          classes={
                            Object {
                              "dialog": "MuiPickersModal-dialog",
                              "dialogRoot": "MuiPickersModal-dialogRoot",
                              "dialogRootWider": "MuiPickersModal-dialogRootWider",
                              "withAdditionalAction": "MuiPickersModal-withAdditionalAction",
                            }
                          }
                          clearLabel="Clear"
                          clearable={false}
                          okLabel="OK"
                          onAccept={[Function]}
                          onClear={[Function]}
                          onDismiss={[Function]}
                          onSetToday={[Function]}
                          open={false}
                          showTodayButton={false}
                          todayLabel="Today"
                        >
                          <WithStyles(ForwardRef(Dialog))
                            classes={
                              Object {
                                "paper": "MuiPickersModal-dialogRoot",
                              }
                            }
                            onClose={[Function]}
                            open={false}
                            role="dialog"
                          >
                            <ForwardRef(Dialog)
                              classes={
                                Object {
                                  "container": "MuiDialog-container",
                                  "paper": "MuiDialog-paper MuiPickersModal-dialogRoot",
                                  "paperFullScreen": "MuiDialog-paperFullScreen",
                                  "paperFullWidth": "MuiDialog-paperFullWidth",
                                  "paperScrollBody": "MuiDialog-paperScrollBody",
                                  "paperScrollPaper": "MuiDialog-paperScrollPaper",
                                  "paperWidthFalse": "MuiDialog-paperWidthFalse",
                                  "paperWidthLg": "MuiDialog-paperWidthLg",
                                  "paperWidthMd": "MuiDialog-paperWidthMd",
                                  "paperWidthSm": "MuiDialog-paperWidthSm",
                                  "paperWidthXl": "MuiDialog-paperWidthXl",
                                  "paperWidthXs": "MuiDialog-paperWidthXs",
                                  "root": "MuiDialog-root",
                                  "scrollBody": "MuiDialog-scrollBody",
                                  "scrollPaper": "MuiDialog-scrollPaper",
                                }
                              }
                              onClose={[Function]}
                              open={false}
                              role="dialog"
                            >
                              <ForwardRef(Modal)
                                BackdropComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "Naked": Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "propTypes": Object {
                                        "children": [Function],
                                        "className": [Function],
                                        "classes": [Function],
                                        "invisible": [Function],
                                        "open": [Function],
                                        "transitionDuration": [Function],
                                      },
                                      "render": [Function],
                                    },
                                    "displayName": "WithStyles(ForwardRef(Backdrop))",
                                    "options": Object {
                                      "defaultTheme": Object {
                                        "breakpoints": Object {
                                          "between": [Function],
                                          "down": [Function],
                                          "keys": Array [
                                            "xs",
                                            "sm",
                                            "md",
                                            "lg",
                                            "xl",
                                          ],
                                          "only": [Function],
                                          "up": [Function],
                                          "values": Object {
                                            "lg": 1280,
                                            "md": 960,
                                            "sm": 600,
                                            "xl": 1920,
                                            "xs": 0,
                                          },
                                          "width": [Function],
                                        },
                                        "direction": "ltr",
                                        "mixins": Object {
                                          "gutters": [Function],
                                          "toolbar": Object {
                                            "@media (min-width:0px) and (orientation: landscape)": Object {
                                              "minHeight": 48,
                                            },
                                            "@media (min-width:600px)": Object {
                                              "minHeight": 64,
                                            },
                                            "minHeight": 56,
                                          },
                                        },
                                        "overrides": Object {},
                                        "palette": Object {
                                          "action": Object {
                                            "active": "rgba(0, 0, 0, 0.54)",
                                            "disabled": "rgba(0, 0, 0, 0.26)",
                                            "disabledBackground": "rgba(0, 0, 0, 0.12)",
                                            "hover": "rgba(0, 0, 0, 0.08)",
                                            "hoverOpacity": 0.08,
                                            "selected": "rgba(0, 0, 0, 0.14)",
                                          },
                                          "augmentColor": [Function],
                                          "background": Object {
                                            "default": "#fafafa",
                                            "paper": "#fff",
                                          },
                                          "common": Object {
                                            "black": "#000",
                                            "white": "#fff",
                                          },
                                          "contrastThreshold": 3,
                                          "divider": "rgba(0, 0, 0, 0.12)",
                                          "error": Object {
                                            "contrastText": "#fff",
                                            "dark": "#d32f2f",
                                            "light": "#e57373",
                                            "main": "#f44336",
                                          },
                                          "getContrastText": [Function],
                                          "grey": Object {
                                            "100": "#f5f5f5",
                                            "200": "#eeeeee",
                                            "300": "#e0e0e0",
                                            "400": "#bdbdbd",
                                            "50": "#fafafa",
                                            "500": "#9e9e9e",
                                            "600": "#757575",
                                            "700": "#616161",
                                            "800": "#424242",
                                            "900": "#212121",
                                            "A100": "#d5d5d5",
                                            "A200": "#aaaaaa",
                                            "A400": "#303030",
                                            "A700": "#616161",
                                          },
                                          "info": Object {
                                            "contrastText": "#fff",
                                            "dark": "#1976d2",
                                            "light": "#64b5f6",
                                            "main": "#2196f3",
                                          },
                                          "primary": Object {
                                            "contrastText": "#fff",
                                            "dark": "#303f9f",
                                            "light": "#7986cb",
                                            "main": "#3f51b5",
                                          },
                                          "secondary": Object {
                                            "contrastText": "#fff",
                                            "dark": "#c51162",
                                            "light": "#ff4081",
                                            "main": "#f50057",
                                          },
                                          "success": Object {
                                            "contrastText": "rgba(0, 0, 0, 0.87)",
                                            "dark": "#388e3c",
                                            "light": "#81c784",
                                            "main": "#4caf50",
                                          },
                                          "text": Object {
                                            "disabled": "rgba(0, 0, 0, 0.38)",
                                            "hint": "rgba(0, 0, 0, 0.38)",
                                            "primary": "rgba(0, 0, 0, 0.87)",
                                            "secondary": "rgba(0, 0, 0, 0.54)",
                                          },
                                          "tonalOffset": 0.2,
                                          "type": "light",
                                          "warning": Object {
                                            "contrastText": "rgba(0, 0, 0, 0.87)",
                                            "dark": "#f57c00",
                                            "light": "#ffb74d",
                                            "main": "#ff9800",
                                          },
                                        },
                                        "props": Object {},
                                        "shadows": Array [
                                          "none",
                                          "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                          "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                          "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                          "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                          "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                          "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                          "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                          "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                          "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                          "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                          "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                          "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                          "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                          "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                          "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                          "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                          "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                          "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                          "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                          "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                          "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                          "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                          "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                          "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                                        ],
                                        "shape": Object {
                                          "borderRadius": 4,
                                        },
                                        "spacing": [Function],
                                        "transitions": Object {
                                          "create": [Function],
                                          "duration": Object {
                                            "complex": 375,
                                            "enteringScreen": 225,
                                            "leavingScreen": 195,
                                            "short": 250,
                                            "shorter": 200,
                                            "shortest": 150,
                                            "standard": 300,
                                          },
                                          "easing": Object {
                                            "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                            "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                            "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                            "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                                          },
                                          "getAutoHeightDuration": [Function],
                                        },
                                        "typography": Object {
                                          "body1": Object {
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": "1rem",
                                            "fontWeight": 400,
                                            "letterSpacing": "0.00938em",
                                            "lineHeight": 1.5,
                                          },
                                          "body2": Object {
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": "0.875rem",
                                            "fontWeight": 400,
                                            "letterSpacing": "0.01071em",
                                            "lineHeight": 1.43,
                                          },
                                          "button": Object {
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": "0.875rem",
                                            "fontWeight": 500,
                                            "letterSpacing": "0.02857em",
                                            "lineHeight": 1.75,
                                            "textTransform": "uppercase",
                                          },
                                          "caption": Object {
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": "0.75rem",
                                            "fontWeight": 400,
                                            "letterSpacing": "0.03333em",
                                            "lineHeight": 1.66,
                                          },
                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                          "fontSize": 14,
                                          "fontWeightBold": 700,
                                          "fontWeightLight": 300,
                                          "fontWeightMedium": 500,
                                          "fontWeightRegular": 400,
                                          "h1": Object {
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": "6rem",
                                            "fontWeight": 300,
                                            "letterSpacing": "-0.01562em",
                                            "lineHeight": 1.167,
                                          },
                                          "h2": Object {
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": "3.75rem",
                                            "fontWeight": 300,
                                            "letterSpacing": "-0.00833em",
                                            "lineHeight": 1.2,
                                          },
                                          "h3": Object {
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": "3rem",
                                            "fontWeight": 400,
                                            "letterSpacing": "0em",
                                            "lineHeight": 1.167,
                                          },
                                          "h4": Object {
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": "2.125rem",
                                            "fontWeight": 400,
                                            "letterSpacing": "0.00735em",
                                            "lineHeight": 1.235,
                                          },
                                          "h5": Object {
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": "1.5rem",
                                            "fontWeight": 400,
                                            "letterSpacing": "0em",
                                            "lineHeight": 1.334,
                                          },
                                          "h6": Object {
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": "1.25rem",
                                            "fontWeight": 500,
                                            "letterSpacing": "0.0075em",
                                            "lineHeight": 1.6,
                                          },
                                          "htmlFontSize": 16,
                                          "overline": Object {
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": "0.75rem",
                                            "fontWeight": 400,
                                            "letterSpacing": "0.08333em",
                                            "lineHeight": 2.66,
                                            "textTransform": "uppercase",
                                          },
                                          "pxToRem": [Function],
                                          "round": [Function],
                                          "subtitle1": Object {
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": "1rem",
                                            "fontWeight": 400,
                                            "letterSpacing": "0.00938em",
                                            "lineHeight": 1.75,
                                          },
                                          "subtitle2": Object {
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": "0.875rem",
                                            "fontWeight": 500,
                                            "letterSpacing": "0.00714em",
                                            "lineHeight": 1.57,
                                          },
                                        },
                                        "zIndex": Object {
                                          "appBar": 1100,
                                          "drawer": 1200,
                                          "mobileStepper": 1000,
                                          "modal": 1300,
                                          "snackbar": 1400,
                                          "speedDial": 1050,
                                          "tooltip": 1500,
                                        },
                                      },
                                      "name": "MuiBackdrop",
                                    },
                                    "propTypes": Object {
                                      "classes": [Function],
                                      "innerRef": [Function],
                                    },
                                    "render": [Function],
                                    "useStyles": [Function],
                                  }
                                }
                                BackdropProps={
                                  Object {
                                    "transitionDuration": Object {
                                      "enter": 225,
                                      "exit": 195,
                                    },
                                  }
                                }
                                className="MuiDialog-root"
                                closeAfterTransition={true}
                                disableBackdropClick={false}
                                disableEscapeKeyDown={false}
                                onClose={[Function]}
                                open={false}
                                role="dialog"
                              />
                            </ForwardRef(Dialog)>
                          </WithStyles(ForwardRef(Dialog))>
                        </ModalDialog>
                      </WithStyles(ModalDialog)>
                    </Component>
                  </Component>
                </PickerWithState>
              </div>
            </StyledComponent>
          </styled.div>
        </Component>
      </ForwardRef>
    </WithTheme(ForwardRef)>
  </Component>
</Component>
`;

exports[`KeyboardDatePicker components should match to snapshot - Empty: KeyboardDatePicker error state snapshot 1`] = `
<Component
  onChange={[Function]}
  value={null}
>
  <Component
    utils={[Function]}
  >
    <WithTheme(ForwardRef)
      label="Only calendar"
      onChange={[Function]}
      value={null}
      variant="dialog"
    >
      <ForwardRef
        label="Only calendar"
        onChange={[Function]}
        value={null}
        variant="dialog"
      >
        <Component
          label="Only calendar"
          onChange={[Function]}
          value={null}
          variant="dialog"
        >
          <styled.div>
            <StyledComponent
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-gqjmRU",
                    "isStatic": false,
                    "lastClassName": "fOizOf",
                    "rules": Array [
                      "
  display: flex;
  flex-flow: column nowrap;
  font-family: ",
                      [Function],
                      ";
",
                    ],
                  },
                  "displayName": "styled.div",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "sc-gqjmRU",
                  "target": "div",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
            >
              <div
                className="sc-gqjmRU fOizOf"
              >
                <styled.label
                  disabled={false}
                >
                  <StyledComponent
                    disabled={false}
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "sc-VigVT",
                          "isStatic": false,
                          "lastClassName": "kbirlQ",
                          "rules": Array [
                            "
  font-size: ",
                            [Function],
                            ";
  font-weight: ",
                            [Function],
                            ";
  color: ",
                            [Function],
                            ";
  line-height: 1.2;
  padding: 0 0 ",
                            "4",
                            "px;
  font-family: ",
                            [Function],
                            ";
",
                          ],
                        },
                        "displayName": "styled.label",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "sc-VigVT",
                        "target": "label",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <label
                      className="sc-VigVT kbirlQ"
                      disabled={false}
                    >
                      Only calendar
                    </label>
                  </StyledComponent>
                </styled.label>
                <PickerWithState
                  allowKeyboardControl={true}
                  helperText=""
                  inputProps={Object {}}
                  invalidDateMessage="Invalid Date Format"
                  keyboardIcon={
                    <ForwardRef(WithTheme)
                      name="outlined-action-calendar"
                      size="tiny"
                    />
                  }
                  label=""
                  maxDate={2100-01-01T00:00:00.000Z}
                  maxDateMessage="Date should not be after maximal date"
                  minDate={1900-01-01T00:00:00.000Z}
                  minDateMessage="Date should not be before minimal date"
                  onChange={[Function]}
                  openTo="date"
                  required={false}
                  value={null}
                  variant="dialog"
                  views={
                    Array [
                      "year",
                      "date",
                    ]
                  }
                >
                  <Component
                    DateInputProps={
                      Object {
                        "format": "MMMM do",
                        "inputValue": "",
                        "onChange": [Function],
                        "openPicker": [Function],
                        "validationError": "",
                      }
                    }
                    InputComponent={[Function]}
                    format="MMMM do"
                    helperText=""
                    inputProps={Object {}}
                    keyboardIcon={
                      <ForwardRef(WithTheme)
                        name="outlined-action-calendar"
                        size="tiny"
                      />
                    }
                    label=""
                    onAccept={[Function]}
                    onClear={[Function]}
                    onDismiss={[Function]}
                    onSetToday={[Function]}
                    open={false}
                    required={false}
                    variant="dialog"
                  >
                    <Component
                      DateInputProps={
                        Object {
                          "format": "MMMM do",
                          "inputValue": "",
                          "onChange": [Function],
                          "openPicker": [Function],
                          "validationError": "",
                        }
                      }
                      InputComponent={[Function]}
                      cancelLabel="Cancel"
                      clearLabel="Clear"
                      clearable={false}
                      format="MMMM do"
                      helperText=""
                      inputProps={Object {}}
                      keyboardIcon={
                        <ForwardRef(WithTheme)
                          name="outlined-action-calendar"
                          size="tiny"
                        />
                      }
                      label=""
                      okLabel="OK"
                      onAccept={[Function]}
                      onClear={[Function]}
                      onDismiss={[Function]}
                      onSetToday={[Function]}
                      open={false}
                      required={false}
                      showTodayButton={false}
                      todayLabel="Today"
                    >
                      <Component
                        format="MMMM do"
                        helperText=""
                        inputProps={Object {}}
                        inputValue=""
                        keyboardIcon={
                          <ForwardRef(WithTheme)
                            name="outlined-action-calendar"
                            size="tiny"
                          />
                        }
                        label=""
                        onChange={[Function]}
                        openPicker={[Function]}
                        required={false}
                        validationError=""
                      >
                        <Rifm
                          format={[Function]}
                          key="____ __"
                          onChange={[Function]}
                          refuse={/\\[\\^\\\\d\\]\\+/gi}
                          value=""
                        >
                          <WithStyles(ForwardRef(TextField))
                            InputProps={
                              Object {
                                "endAdornment": <ForwardRef(WithStyles)
                                  position="end"
                                >
                                  <ForwardRef(WithStyles)
                                    onClick={[Function]}
                                  >
                                    <ForwardRef(WithTheme)
                                      name="outlined-action-calendar"
                                      size="tiny"
                                    />
                                  </ForwardRef(WithStyles)>
                                </ForwardRef(WithStyles)>,
                              }
                            }
                            error={false}
                            helperText=""
                            inputProps={Object {}}
                            label=""
                            onChange={[Function]}
                            required={false}
                            value=""
                          >
                            <ForwardRef(TextField)
                              InputProps={
                                Object {
                                  "endAdornment": <ForwardRef(WithStyles)
                                    position="end"
                                  >
                                    <ForwardRef(WithStyles)
                                      onClick={[Function]}
                                    >
                                      <ForwardRef(WithTheme)
                                        name="outlined-action-calendar"
                                        size="tiny"
                                      />
                                    </ForwardRef(WithStyles)>
                                  </ForwardRef(WithStyles)>,
                                }
                              }
                              classes={
                                Object {
                                  "root": "MuiTextField-root",
                                }
                              }
                              error={false}
                              helperText=""
                              inputProps={Object {}}
                              label=""
                              onChange={[Function]}
                              required={false}
                              value=""
                            >
                              <WithStyles(ForwardRef(FormControl))
                                className="MuiTextField-root"
                                color="primary"
                                disabled={false}
                                error={false}
                                fullWidth={false}
                                required={false}
                                variant="standard"
                              >
                                <ForwardRef(FormControl)
                                  className="MuiTextField-root"
                                  classes={
                                    Object {
                                      "fullWidth": "MuiFormControl-fullWidth",
                                      "marginDense": "MuiFormControl-marginDense",
                                      "marginNormal": "MuiFormControl-marginNormal",
                                      "root": "MuiFormControl-root",
                                    }
                                  }
                                  color="primary"
                                  disabled={false}
                                  error={false}
                                  fullWidth={false}
                                  required={false}
                                  variant="standard"
                                >
                                  <div
                                    className="MuiFormControl-root MuiTextField-root"
                                  >
                                    <WithStyles(ForwardRef(Input))
                                      autoFocus={false}
                                      endAdornment={
                                        <ForwardRef(WithStyles)
                                          position="end"
                                        >
                                          <ForwardRef(WithStyles)
                                            onClick={[Function]}
                                          >
                                            <ForwardRef(WithTheme)
                                              name="outlined-action-calendar"
                                              size="tiny"
                                            />
                                          </ForwardRef(WithStyles)>
                                        </ForwardRef(WithStyles)>
                                      }
                                      fullWidth={false}
                                      inputProps={Object {}}
                                      multiline={false}
                                      onChange={[Function]}
                                      value=""
                                    >
                                      <ForwardRef(Input)
                                        autoFocus={false}
                                        classes={
                                          Object {
                                            "colorSecondary": "MuiInput-colorSecondary",
                                            "disabled": "Mui-disabled",
                                            "error": "Mui-error",
                                            "focused": "Mui-focused",
                                            "formControl": "MuiInput-formControl",
                                            "fullWidth": "MuiInput-fullWidth",
                                            "input": "MuiInput-input",
                                            "inputMarginDense": "MuiInput-inputMarginDense",
                                            "inputMultiline": "MuiInput-inputMultiline",
                                            "inputTypeSearch": "MuiInput-inputTypeSearch",
                                            "marginDense": "MuiInput-marginDense",
                                            "multiline": "MuiInput-multiline",
                                            "root": "MuiInput-root",
                                            "underline": "MuiInput-underline",
                                          }
                                        }
                                        endAdornment={
                                          <ForwardRef(WithStyles)
                                            position="end"
                                          >
                                            <ForwardRef(WithStyles)
                                              onClick={[Function]}
                                            >
                                              <ForwardRef(WithTheme)
                                                name="outlined-action-calendar"
                                                size="tiny"
                                              />
                                            </ForwardRef(WithStyles)>
                                          </ForwardRef(WithStyles)>
                                        }
                                        fullWidth={false}
                                        inputProps={Object {}}
                                        multiline={false}
                                        onChange={[Function]}
                                        value=""
                                      >
                                        <WithStyles(ForwardRef(InputBase))
                                          autoFocus={false}
                                          classes={
                                            Object {
                                              "colorSecondary": "MuiInput-colorSecondary",
                                              "disabled": "Mui-disabled",
                                              "error": "Mui-error",
                                              "focused": "Mui-focused",
                                              "formControl": "MuiInput-formControl",
                                              "fullWidth": "MuiInput-fullWidth",
                                              "input": "MuiInput-input",
                                              "inputMarginDense": "MuiInput-inputMarginDense",
                                              "inputMultiline": "MuiInput-inputMultiline",
                                              "inputTypeSearch": "MuiInput-inputTypeSearch",
                                              "marginDense": "MuiInput-marginDense",
                                              "multiline": "MuiInput-multiline",
                                              "root": "MuiInput-root MuiInput-underline",
                                              "underline": null,
                                            }
                                          }
                                          endAdornment={
                                            <ForwardRef(WithStyles)
                                              position="end"
                                            >
                                              <ForwardRef(WithStyles)
                                                onClick={[Function]}
                                              >
                                                <ForwardRef(WithTheme)
                                                  name="outlined-action-calendar"
                                                  size="tiny"
                                                />
                                              </ForwardRef(WithStyles)>
                                            </ForwardRef(WithStyles)>
                                          }
                                          fullWidth={false}
                                          inputComponent="input"
                                          inputProps={Object {}}
                                          multiline={false}
                                          onChange={[Function]}
                                          type="text"
                                          value=""
                                        >
                                          <ForwardRef(InputBase)
                                            autoFocus={false}
                                            classes={
                                              Object {
                                                "adornedEnd": "MuiInputBase-adornedEnd",
                                                "adornedStart": "MuiInputBase-adornedStart",
                                                "colorSecondary": "MuiInputBase-colorSecondary MuiInput-colorSecondary",
                                                "disabled": "Mui-disabled Mui-disabled",
                                                "error": "Mui-error Mui-error",
                                                "focused": "Mui-focused Mui-focused",
                                                "formControl": "MuiInputBase-formControl MuiInput-formControl",
                                                "fullWidth": "MuiInputBase-fullWidth MuiInput-fullWidth",
                                                "input": "MuiInputBase-input MuiInput-input",
                                                "inputAdornedEnd": "MuiInputBase-inputAdornedEnd",
                                                "inputAdornedStart": "MuiInputBase-inputAdornedStart",
                                                "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                                "inputMarginDense": "MuiInputBase-inputMarginDense MuiInput-inputMarginDense",
                                                "inputMultiline": "MuiInputBase-inputMultiline MuiInput-inputMultiline",
                                                "inputTypeSearch": "MuiInputBase-inputTypeSearch MuiInput-inputTypeSearch",
                                                "marginDense": "MuiInputBase-marginDense MuiInput-marginDense",
                                                "multiline": "MuiInputBase-multiline MuiInput-multiline",
                                                "root": "MuiInputBase-root MuiInput-root MuiInput-underline",
                                              }
                                            }
                                            endAdornment={
                                              <ForwardRef(WithStyles)
                                                position="end"
                                              >
                                                <ForwardRef(WithStyles)
                                                  onClick={[Function]}
                                                >
                                                  <ForwardRef(WithTheme)
                                                    name="outlined-action-calendar"
                                                    size="tiny"
                                                  />
                                                </ForwardRef(WithStyles)>
                                              </ForwardRef(WithStyles)>
                                            }
                                            fullWidth={false}
                                            inputComponent="input"
                                            inputProps={Object {}}
                                            multiline={false}
                                            onChange={[Function]}
                                            type="text"
                                            value=""
                                          >
                                            <div
                                              className="MuiInputBase-root MuiInput-root MuiInput-underline MuiInputBase-formControl MuiInput-formControl MuiInputBase-adornedEnd"
                                              onClick={[Function]}
                                            >
                                              <input
                                                aria-invalid={false}
                                                autoFocus={false}
                                                className="MuiInputBase-input MuiInput-input MuiInputBase-inputAdornedEnd"
                                                disabled={false}
                                                onAnimationStart={[Function]}
                                                onBlur={[Function]}
                                                onChange={[Function]}
                                                onFocus={[Function]}
                                                required={false}
                                                type="text"
                                                value=""
                                              />
                                              <WithStyles(ForwardRef(InputAdornment))
                                                position="end"
                                              >
                                                <ForwardRef(InputAdornment)
                                                  classes={
                                                    Object {
                                                      "disablePointerEvents": "MuiInputAdornment-disablePointerEvents",
                                                      "filled": "MuiInputAdornment-filled",
                                                      "hiddenLabel": "MuiInputAdornment-hiddenLabel",
                                                      "marginDense": "MuiInputAdornment-marginDense",
                                                      "positionEnd": "MuiInputAdornment-positionEnd",
                                                      "positionStart": "MuiInputAdornment-positionStart",
                                                      "root": "MuiInputAdornment-root",
                                                    }
                                                  }
                                                  position="end"
                                                >
                                                  <div
                                                    className="MuiInputAdornment-root MuiInputAdornment-positionEnd"
                                                  >
                                                    <WithStyles(ForwardRef(IconButton))
                                                      onClick={[Function]}
                                                    >
                                                      <ForwardRef(IconButton)
                                                        classes={
                                                          Object {
                                                            "colorInherit": "MuiIconButton-colorInherit",
                                                            "colorPrimary": "MuiIconButton-colorPrimary",
                                                            "colorSecondary": "MuiIconButton-colorSecondary",
                                                            "disabled": "Mui-disabled",
                                                            "edgeEnd": "MuiIconButton-edgeEnd",
                                                            "edgeStart": "MuiIconButton-edgeStart",
                                                            "label": "MuiIconButton-label",
                                                            "root": "MuiIconButton-root",
                                                            "sizeSmall": "MuiIconButton-sizeSmall",
                                                          }
                                                        }
                                                        onClick={[Function]}
                                                      >
                                                        <WithStyles(ForwardRef(ButtonBase))
                                                          centerRipple={true}
                                                          className="MuiIconButton-root"
                                                          disabled={false}
                                                          focusRipple={true}
                                                          onClick={[Function]}
                                                        >
                                                          <ForwardRef(ButtonBase)
                                                            centerRipple={true}
                                                            className="MuiIconButton-root"
                                                            classes={
                                                              Object {
                                                                "disabled": "Mui-disabled",
                                                                "focusVisible": "Mui-focusVisible",
                                                                "root": "MuiButtonBase-root",
                                                              }
                                                            }
                                                            disabled={false}
                                                            focusRipple={true}
                                                            onClick={[Function]}
                                                          >
                                                            <button
                                                              className="MuiButtonBase-root MuiIconButton-root"
                                                              disabled={false}
                                                              onBlur={[Function]}
                                                              onClick={[Function]}
                                                              onDragLeave={[Function]}
                                                              onFocus={[Function]}
                                                              onKeyDown={[Function]}
                                                              onKeyUp={[Function]}
                                                              onMouseDown={[Function]}
                                                              onMouseLeave={[Function]}
                                                              onMouseUp={[Function]}
                                                              onTouchEnd={[Function]}
                                                              onTouchMove={[Function]}
                                                              onTouchStart={[Function]}
                                                              tabIndex={0}
                                                              type="button"
                                                            >
                                                              <span
                                                                className="MuiIconButton-label"
                                                              >
                                                                <WithTheme(ForwardRef)
                                                                  name="outlined-action-calendar"
                                                                  size="tiny"
                                                                >
                                                                  <ForwardRef
                                                                    name="outlined-action-calendar"
                                                                    size="tiny"
                                                                  >
                                                                    <styled.i
                                                                      className="natds-icons natds-icons-outlined-action-calendar undefined"
                                                                      size="tiny"
                                                                    >
                                                                      <StyledComponent
                                                                        className="natds-icons natds-icons-outlined-action-calendar undefined"
                                                                        forwardedComponent={
                                                                          Object {
                                                                            "$$typeof": Symbol(react.forward_ref),
                                                                            "attrs": Array [],
                                                                            "componentStyle": ComponentStyle {
                                                                              "componentId": "sc-bdVaJa",
                                                                              "isStatic": false,
                                                                              "lastClassName": "jWbhAs",
                                                                              "rules": Array [
                                                                                "
  font-size: ",
                                                                                [Function],
                                                                                ";
",
                                                                              ],
                                                                            },
                                                                            "displayName": "styled.i",
                                                                            "foldedComponentIds": Array [],
                                                                            "render": [Function],
                                                                            "styledComponentId": "sc-bdVaJa",
                                                                            "target": "i",
                                                                            "toString": [Function],
                                                                            "warnTooManyClasses": [Function],
                                                                            "withComponent": [Function],
                                                                          }
                                                                        }
                                                                        forwardedRef={null}
                                                                        size="tiny"
                                                                      >
                                                                        <i
                                                                          className="sc-bdVaJa jWbhAs natds-icons natds-icons-outlined-action-calendar undefined"
                                                                          size="tiny"
                                                                        />
                                                                      </StyledComponent>
                                                                    </styled.i>
                                                                  </ForwardRef>
                                                                </WithTheme(ForwardRef)>
                                                              </span>
                                                              <NoSsr>
                                                                <WithStyles(memo)
                                                                  center={true}
                                                                >
                                                                  <ForwardRef(TouchRipple)
                                                                    center={true}
                                                                    classes={
                                                                      Object {
                                                                        "child": "MuiTouchRipple-child",
                                                                        "childLeaving": "MuiTouchRipple-childLeaving",
                                                                        "childPulsate": "MuiTouchRipple-childPulsate",
                                                                        "ripple": "MuiTouchRipple-ripple",
                                                                        "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                        "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                        "root": "MuiTouchRipple-root",
                                                                      }
                                                                    }
                                                                  >
                                                                    <span
                                                                      className="MuiTouchRipple-root"
                                                                    >
                                                                      <TransitionGroup
                                                                        childFactory={[Function]}
                                                                        component={null}
                                                                        exit={true}
                                                                      />
                                                                    </span>
                                                                  </ForwardRef(TouchRipple)>
                                                                </WithStyles(memo)>
                                                              </NoSsr>
                                                            </button>
                                                          </ForwardRef(ButtonBase)>
                                                        </WithStyles(ForwardRef(ButtonBase))>
                                                      </ForwardRef(IconButton)>
                                                    </WithStyles(ForwardRef(IconButton))>
                                                  </div>
                                                </ForwardRef(InputAdornment)>
                                              </WithStyles(ForwardRef(InputAdornment))>
                                            </div>
                                          </ForwardRef(InputBase)>
                                        </WithStyles(ForwardRef(InputBase))>
                                      </ForwardRef(Input)>
                                    </WithStyles(ForwardRef(Input))>
                                  </div>
                                </ForwardRef(FormControl)>
                              </WithStyles(ForwardRef(FormControl))>
                            </ForwardRef(TextField)>
                          </WithStyles(ForwardRef(TextField))>
                        </Rifm>
                      </Component>
                      <WithStyles(ModalDialog)
                        cancelLabel="Cancel"
                        clearLabel="Clear"
                        clearable={false}
                        okLabel="OK"
                        onAccept={[Function]}
                        onClear={[Function]}
                        onDismiss={[Function]}
                        onSetToday={[Function]}
                        open={false}
                        showTodayButton={false}
                        todayLabel="Today"
                      >
                        <ModalDialog
                          cancelLabel="Cancel"
                          classes={
                            Object {
                              "dialog": "MuiPickersModal-dialog",
                              "dialogRoot": "MuiPickersModal-dialogRoot",
                              "dialogRootWider": "MuiPickersModal-dialogRootWider",
                              "withAdditionalAction": "MuiPickersModal-withAdditionalAction",
                            }
                          }
                          clearLabel="Clear"
                          clearable={false}
                          okLabel="OK"
                          onAccept={[Function]}
                          onClear={[Function]}
                          onDismiss={[Function]}
                          onSetToday={[Function]}
                          open={false}
                          showTodayButton={false}
                          todayLabel="Today"
                        >
                          <WithStyles(ForwardRef(Dialog))
                            classes={
                              Object {
                                "paper": "MuiPickersModal-dialogRoot",
                              }
                            }
                            onClose={[Function]}
                            open={false}
                            role="dialog"
                          >
                            <ForwardRef(Dialog)
                              classes={
                                Object {
                                  "container": "MuiDialog-container",
                                  "paper": "MuiDialog-paper MuiPickersModal-dialogRoot",
                                  "paperFullScreen": "MuiDialog-paperFullScreen",
                                  "paperFullWidth": "MuiDialog-paperFullWidth",
                                  "paperScrollBody": "MuiDialog-paperScrollBody",
                                  "paperScrollPaper": "MuiDialog-paperScrollPaper",
                                  "paperWidthFalse": "MuiDialog-paperWidthFalse",
                                  "paperWidthLg": "MuiDialog-paperWidthLg",
                                  "paperWidthMd": "MuiDialog-paperWidthMd",
                                  "paperWidthSm": "MuiDialog-paperWidthSm",
                                  "paperWidthXl": "MuiDialog-paperWidthXl",
                                  "paperWidthXs": "MuiDialog-paperWidthXs",
                                  "root": "MuiDialog-root",
                                  "scrollBody": "MuiDialog-scrollBody",
                                  "scrollPaper": "MuiDialog-scrollPaper",
                                }
                              }
                              onClose={[Function]}
                              open={false}
                              role="dialog"
                            >
                              <ForwardRef(Modal)
                                BackdropComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "Naked": Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "propTypes": Object {
                                        "children": [Function],
                                        "className": [Function],
                                        "classes": [Function],
                                        "invisible": [Function],
                                        "open": [Function],
                                        "transitionDuration": [Function],
                                      },
                                      "render": [Function],
                                    },
                                    "displayName": "WithStyles(ForwardRef(Backdrop))",
                                    "options": Object {
                                      "defaultTheme": Object {
                                        "breakpoints": Object {
                                          "between": [Function],
                                          "down": [Function],
                                          "keys": Array [
                                            "xs",
                                            "sm",
                                            "md",
                                            "lg",
                                            "xl",
                                          ],
                                          "only": [Function],
                                          "up": [Function],
                                          "values": Object {
                                            "lg": 1280,
                                            "md": 960,
                                            "sm": 600,
                                            "xl": 1920,
                                            "xs": 0,
                                          },
                                          "width": [Function],
                                        },
                                        "direction": "ltr",
                                        "mixins": Object {
                                          "gutters": [Function],
                                          "toolbar": Object {
                                            "@media (min-width:0px) and (orientation: landscape)": Object {
                                              "minHeight": 48,
                                            },
                                            "@media (min-width:600px)": Object {
                                              "minHeight": 64,
                                            },
                                            "minHeight": 56,
                                          },
                                        },
                                        "overrides": Object {},
                                        "palette": Object {
                                          "action": Object {
                                            "active": "rgba(0, 0, 0, 0.54)",
                                            "disabled": "rgba(0, 0, 0, 0.26)",
                                            "disabledBackground": "rgba(0, 0, 0, 0.12)",
                                            "hover": "rgba(0, 0, 0, 0.08)",
                                            "hoverOpacity": 0.08,
                                            "selected": "rgba(0, 0, 0, 0.14)",
                                          },
                                          "augmentColor": [Function],
                                          "background": Object {
                                            "default": "#fafafa",
                                            "paper": "#fff",
                                          },
                                          "common": Object {
                                            "black": "#000",
                                            "white": "#fff",
                                          },
                                          "contrastThreshold": 3,
                                          "divider": "rgba(0, 0, 0, 0.12)",
                                          "error": Object {
                                            "contrastText": "#fff",
                                            "dark": "#d32f2f",
                                            "light": "#e57373",
                                            "main": "#f44336",
                                          },
                                          "getContrastText": [Function],
                                          "grey": Object {
                                            "100": "#f5f5f5",
                                            "200": "#eeeeee",
                                            "300": "#e0e0e0",
                                            "400": "#bdbdbd",
                                            "50": "#fafafa",
                                            "500": "#9e9e9e",
                                            "600": "#757575",
                                            "700": "#616161",
                                            "800": "#424242",
                                            "900": "#212121",
                                            "A100": "#d5d5d5",
                                            "A200": "#aaaaaa",
                                            "A400": "#303030",
                                            "A700": "#616161",
                                          },
                                          "info": Object {
                                            "contrastText": "#fff",
                                            "dark": "#1976d2",
                                            "light": "#64b5f6",
                                            "main": "#2196f3",
                                          },
                                          "primary": Object {
                                            "contrastText": "#fff",
                                            "dark": "#303f9f",
                                            "light": "#7986cb",
                                            "main": "#3f51b5",
                                          },
                                          "secondary": Object {
                                            "contrastText": "#fff",
                                            "dark": "#c51162",
                                            "light": "#ff4081",
                                            "main": "#f50057",
                                          },
                                          "success": Object {
                                            "contrastText": "rgba(0, 0, 0, 0.87)",
                                            "dark": "#388e3c",
                                            "light": "#81c784",
                                            "main": "#4caf50",
                                          },
                                          "text": Object {
                                            "disabled": "rgba(0, 0, 0, 0.38)",
                                            "hint": "rgba(0, 0, 0, 0.38)",
                                            "primary": "rgba(0, 0, 0, 0.87)",
                                            "secondary": "rgba(0, 0, 0, 0.54)",
                                          },
                                          "tonalOffset": 0.2,
                                          "type": "light",
                                          "warning": Object {
                                            "contrastText": "rgba(0, 0, 0, 0.87)",
                                            "dark": "#f57c00",
                                            "light": "#ffb74d",
                                            "main": "#ff9800",
                                          },
                                        },
                                        "props": Object {},
                                        "shadows": Array [
                                          "none",
                                          "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                          "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                          "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                          "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                          "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                          "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                          "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                          "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                          "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                          "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                          "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                          "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                          "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                          "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                          "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                          "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                          "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                          "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                          "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                          "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                          "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                          "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                          "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                          "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                                        ],
                                        "shape": Object {
                                          "borderRadius": 4,
                                        },
                                        "spacing": [Function],
                                        "transitions": Object {
                                          "create": [Function],
                                          "duration": Object {
                                            "complex": 375,
                                            "enteringScreen": 225,
                                            "leavingScreen": 195,
                                            "short": 250,
                                            "shorter": 200,
                                            "shortest": 150,
                                            "standard": 300,
                                          },
                                          "easing": Object {
                                            "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                            "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                            "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                            "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                                          },
                                          "getAutoHeightDuration": [Function],
                                        },
                                        "typography": Object {
                                          "body1": Object {
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": "1rem",
                                            "fontWeight": 400,
                                            "letterSpacing": "0.00938em",
                                            "lineHeight": 1.5,
                                          },
                                          "body2": Object {
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": "0.875rem",
                                            "fontWeight": 400,
                                            "letterSpacing": "0.01071em",
                                            "lineHeight": 1.43,
                                          },
                                          "button": Object {
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": "0.875rem",
                                            "fontWeight": 500,
                                            "letterSpacing": "0.02857em",
                                            "lineHeight": 1.75,
                                            "textTransform": "uppercase",
                                          },
                                          "caption": Object {
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": "0.75rem",
                                            "fontWeight": 400,
                                            "letterSpacing": "0.03333em",
                                            "lineHeight": 1.66,
                                          },
                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                          "fontSize": 14,
                                          "fontWeightBold": 700,
                                          "fontWeightLight": 300,
                                          "fontWeightMedium": 500,
                                          "fontWeightRegular": 400,
                                          "h1": Object {
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": "6rem",
                                            "fontWeight": 300,
                                            "letterSpacing": "-0.01562em",
                                            "lineHeight": 1.167,
                                          },
                                          "h2": Object {
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": "3.75rem",
                                            "fontWeight": 300,
                                            "letterSpacing": "-0.00833em",
                                            "lineHeight": 1.2,
                                          },
                                          "h3": Object {
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": "3rem",
                                            "fontWeight": 400,
                                            "letterSpacing": "0em",
                                            "lineHeight": 1.167,
                                          },
                                          "h4": Object {
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": "2.125rem",
                                            "fontWeight": 400,
                                            "letterSpacing": "0.00735em",
                                            "lineHeight": 1.235,
                                          },
                                          "h5": Object {
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": "1.5rem",
                                            "fontWeight": 400,
                                            "letterSpacing": "0em",
                                            "lineHeight": 1.334,
                                          },
                                          "h6": Object {
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": "1.25rem",
                                            "fontWeight": 500,
                                            "letterSpacing": "0.0075em",
                                            "lineHeight": 1.6,
                                          },
                                          "htmlFontSize": 16,
                                          "overline": Object {
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": "0.75rem",
                                            "fontWeight": 400,
                                            "letterSpacing": "0.08333em",
                                            "lineHeight": 2.66,
                                            "textTransform": "uppercase",
                                          },
                                          "pxToRem": [Function],
                                          "round": [Function],
                                          "subtitle1": Object {
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": "1rem",
                                            "fontWeight": 400,
                                            "letterSpacing": "0.00938em",
                                            "lineHeight": 1.75,
                                          },
                                          "subtitle2": Object {
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": "0.875rem",
                                            "fontWeight": 500,
                                            "letterSpacing": "0.00714em",
                                            "lineHeight": 1.57,
                                          },
                                        },
                                        "zIndex": Object {
                                          "appBar": 1100,
                                          "drawer": 1200,
                                          "mobileStepper": 1000,
                                          "modal": 1300,
                                          "snackbar": 1400,
                                          "speedDial": 1050,
                                          "tooltip": 1500,
                                        },
                                      },
                                      "name": "MuiBackdrop",
                                    },
                                    "propTypes": Object {
                                      "classes": [Function],
                                      "innerRef": [Function],
                                    },
                                    "render": [Function],
                                    "useStyles": [Function],
                                  }
                                }
                                BackdropProps={
                                  Object {
                                    "transitionDuration": Object {
                                      "enter": 225,
                                      "exit": 195,
                                    },
                                  }
                                }
                                className="MuiDialog-root"
                                closeAfterTransition={true}
                                disableBackdropClick={false}
                                disableEscapeKeyDown={false}
                                onClose={[Function]}
                                open={false}
                                role="dialog"
                              />
                            </ForwardRef(Dialog)>
                          </WithStyles(ForwardRef(Dialog))>
                        </ModalDialog>
                      </WithStyles(ModalDialog)>
                    </Component>
                  </Component>
                </PickerWithState>
              </div>
            </StyledComponent>
          </styled.div>
        </Component>
      </ForwardRef>
    </WithTheme(ForwardRef)>
  </Component>
</Component>
`;

exports[`KeyboardDatePicker components should match to snapshot - Error state: KeyboardDatePicker error state snapshot 1`] = `
<Component
  onChange={[Function]}
  state="error"
  theme={
    Object {
      "avatarSizes": Object {
        "huge": Object {
          "fontSize": "1.5rem",
          "size": 80,
        },
        "large": Object {
          "fontSize": "1rem",
          "size": 48,
        },
        "small": Object {
          "fontSize": ".875rem",
          "size": 32,
        },
        "standard": Object {
          "fontSize": "1rem",
          "size": 40,
        },
        "tiny": Object {
          "fontSize": ".625rem",
          "size": 24,
        },
      },
      "buttonSizes": Object {
        "large": Object {
          "minHeight": 48,
          "paddingBottom": 16,
          "paddingLeft": 16,
          "paddingRight": 16,
          "paddingTop": 16,
        },
        "medium": Object {
          "minHeight": 40,
          "paddingBottom": 12,
          "paddingLeft": 16,
          "paddingRight": 16,
          "paddingTop": 12,
        },
        "small": Object {
          "minHeight": 32,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
        },
      },
      "iconSizes": Object {
        "huge": 144,
        "hugex": 192,
        "hugexx": 256,
        "large": 72,
        "largex": 96,
        "largexx": 128,
        "medium": 64,
        "micro": 16,
        "small": 32,
        "standard": 48,
        "tiny": 24,
      },
      "overrides": Object {
        "MuiAvatar": Object {
          "colorDefault": Object {
            "color": "#333333",
          },
        },
        "MuiBadge": Object {
          "badge": Object {
            "padding": "0 4px",
          },
        },
        "MuiButton": Object {
          "outlinedPrimary": Object {
            "color": "#333333",
          },
          "outlinedSecondary": Object {
            "color": "#333333",
          },
          "root": Object {
            "fontSize": "0.875rem",
            "minHeight": "40px",
            "padding": "8px 16px",
          },
          "sizeLarge": Object {
            "fontSize": "0.875rem",
            "minHeight": "48px",
          },
          "sizeSmall": Object {
            "fontSize": "0.875rem",
            "minHeight": "32px",
          },
          "textPrimary": Object {
            "color": "#333333",
          },
        },
        "MuiChip": Object {
          "clickableColorPrimary": Object {
            "&:hover": Object {
              "backgroundColor": "#EF8426",
            },
          },
          "clickableColorSecondary": Object {
            "&:hover": Object {
              "backgroundColor": "#EF8426",
            },
          },
          "deleteIcon": Object {
            "&:hover": Object {
              "color": "#000000",
            },
            "color": "rgba(0, 0, 0, 0.8)",
            "fontSize": "24px",
            "height": "24px",
            "width": "24px",
          },
          "deleteIconColorPrimary": Object {
            "&:hover": Object {
              "color": "#FFFFFF",
            },
            "color": "rgba(255, 255, 255, 0.8)",
          },
          "deleteIconColorSecondary": Object {
            "&:hover": Object {
              "color": "#FFFFFF",
            },
            "color": "rgba(255, 255, 255, 0.8)",
          },
          "deleteIconSmall": Object {
            "fontSize": "16px",
            "height": "16px",
            "width": "16px",
          },
          "icon": Object {
            "fontSize": "24px",
          },
          "iconSmall": Object {
            "fontSize": "16px",
            "height": "16px",
            "marginTop": "1px",
            "width": "16px",
          },
          "outlined": Object {
            "borderColor": "rgba(0, 0, 0, 0.12)",
            "color": "#000000",
          },
          "outlinedPrimary": Object {
            "color": "#000000",
          },
          "outlinedSecondary": Object {
            "color": "#000000",
          },
          "root": Object {
            "& $avatar": Object {
              "backgroundColor": "rgba(0, 0, 0, 0.24)",
              "color": "#333333",
            },
            "&$disabled": Object {
              "opacity": 0.4,
            },
            "backgroundColor": "rgba(0, 0, 0, 0.12)",
            "color": "#333333",
            "fontSize": "0.875rem",
          },
        },
        "MuiExpansionPanel": Object {
          "root": Object {
            "&$disabled": Object {
              "backgroundColor": "#FFFFFF",
              "opacity": 0.32,
            },
            "&$expanded": Object {
              "borderColor": "#F4AB34",
            },
            "border": "transparent 1px solid",
          },
        },
        "MuiExpansionPanelSummary": Object {
          "root": Object {
            "&$disabled": Object {
              "opacity": 1,
            },
            "alignItems": "flex-start",
            "marginTop": "8px",
          },
        },
        "MuiFormLabel": Object {
          "formControl": Object {
            "marginTop": "-4px",
            "transform": "none",
          },
          "root": Object {
            "&.Mui-focused": Object {
              "color": "#777777",
              "fontSize": "0.875rem",
            },
            "fontSize": "0.875rem",
          },
        },
        "MuiIconButton": Object {
          "root": Object {
            "color": "#333333",
            "padding": "8px",
          },
          "sizeSmall": Object {
            "padding": "4px",
          },
        },
        "MuiInputAdornment": Object {
          "root": Object {
            "position": "absolute",
            "right": "0",
          },
        },
        "MuiInputBase": Object {
          "input": Object {
            "&.Mui-disabled": Object {
              "&:hover": Object {
                "boxShadow": "#333333 0 0 0 1px",
              },
              "opacity": 0.24,
            },
            "&:focus": Object {
              "boxShadow": "#F4AB34 0 0 0 2px",
            },
            "&:focus:not(:read-only)": Object {
              "boxShadow": "#F4AB34 0 0 0 2px",
            },
            "&:hover": Object {
              "boxShadow": "#777777 0 0 0 1px",
            },
            "&:hover:not(:placeholder-shown)": Object {
              "boxShadow": "#777777 0 0 0 1px",
            },
            "&:hover:not(:read-only):not(:disabled):not(:focus)": Object {
              "boxShadow": "#777777 0 0 0 1px",
            },
            "&:not(:placeholder-shown)": Object {
              "boxShadow": "#333333 0 0 0 1px",
            },
            "&:placeholder-shown": Object {
              "boxShadow": "#BBBBBB 0 0 0 1px",
            },
            "borderRadius": "4px",
            "boxShadow": "#BBBBBB 0 0 0 1px",
            "color": "#333333",
            "minHeight": "24px",
            "padding": "16px 35px 16px 16px",
          },
          "root": Object {
            "&.MuiInput-underline.Mui-disabled:before": Object {
              "borderBottom": "none",
            },
            "&.MuiInput-underline:after": Object {
              "borderBottom": "none",
            },
            "&.MuiInput-underline:before": Object {
              "borderBottom": "none",
            },
            "&.MuiInput-underline:hover:not(.Mui-disabled):before": Object {
              "borderBottom": "none",
            },
            "color": "#333333",
          },
        },
        "MuiInputLabel": Object {
          "formControl": Object {
            "marginTop": "-4px",
            "transform": "none",
          },
          "shrink": Object {
            "marginTop": "-4px",
            "transform": "none",
          },
        },
        "MuiListItem": Object {
          "button": Object {
            "&:hover": Object {
              "backgroundColor": "rgba(0, 0, 0, 0.04)",
            },
          },
          "root": Object {
            "&$selected": Object {
              "&:hover": Object {
                "backgroundColor": "rgba(0, 0, 0, 0.04)",
              },
              "backgroundColor": "rgba(255, 107, 11, 0.16)",
            },
            "&.Mui-disabled": Object {
              "opacity": 0.32,
            },
          },
        },
        "MuiTab": Object {
          "root": Object {
            "&$disabled": Object {
              "opacity": 0.24,
            },
          },
          "textColorInherit": Object {
            "&$disabled": Object {
              "opacity": 0.24,
            },
          },
          "wrapper": Object {
            "& > *:first-child": Object {
              "marginBottom": "2px !important",
            },
          },
        },
        "MuiTextField": Object {
          "& .MuiInputLabel": Object {
            "marginTop": "20px",
          },
        },
        "MuiToolbar": Object {
          "dense": Object {
            "@media (min-width: 600px)": Object {
              "minHeight": "56px",
            },
            "minHeight": "56px",
          },
          "gutters": Object {
            "@media (min-width: 600px)": Object {
              "padding": "0 16px",
            },
            "padding": "0 16px",
          },
          "regular": Object {
            "@media (min-width: 600px)": Object {
              "minHeight": "56px",
            },
            "minHeight": "56px",
          },
          "root": Object {
            "@media (min-width: 600px)": Object {
              "padding": "0 16px",
            },
            "padding": "0 16px",
          },
        },
      },
      "palette": Object {
        "action": Object {
          "disabled": "rgba(51, 51, 51, 0.24)",
        },
        "background": Object {
          "default": "#FAFAFA",
          "defaultContrastText": "#333333",
          "paper": "#FFFFFF",
          "paperContrastText": "#333333",
        },
        "complementary": Object {
          "highlight": "#000000",
          "link": "#227BBD",
          "linkContrastText": "#FFFFFF",
          "warning": "#FCC433",
          "warningContrastText": "#333333",
        },
        "error": Object {
          "contrastText": "#FFFFFF",
          "main": "#E74627",
        },
        "primary": Object {
          "contrastText": "#333333",
          "dark": "#EF8426",
          "light": "#FEFDE8",
          "main": "#F4AB34",
        },
        "secondary": Object {
          "contrastText": "#000000",
          "dark": "#FF5808",
          "light": "#FFF8E1",
          "main": "#FF6B0B",
        },
        "success": Object {
          "contrastText": "#FFFFFF",
          "main": "#569A32",
        },
        "text": Object {
          "disabled": "#BBBBBB",
          "hint": "#BBBBBB",
          "primary": "#333333",
          "secondary": "#777777",
        },
      },
      "shadows": Object {
        "0": "none",
        "1": "0 1px 1px 0 rgba(0, 0, 0, 0.14)",
        "12": "0 12px 17px 0 rgba(0, 0, 0, 0.14)",
        "16": "0 16px 24px 0 rgba(0, 0, 0, 0.14)",
        "2": "0 2px 2px 0 rgba(0, 0, 0, 0.14)",
        "24": "0 24px 38px 0 rgba(0, 0, 0, 0.14)",
        "3": "0 3px 4px 0 rgba(0, 0, 0, 0.14)",
        "4": "0 4px 5px 0 rgba(0, 0, 0, 0.14)",
        "6": "0 6px 10px 0 rgba(0, 0, 0, 0.14)",
        "8": "0 8px 10px 0 rgba(0, 0, 0, 0.14)",
        "9": "0 9px 12px 0 rgba(0, 0, 0, 0.14)",
      },
      "shape": Object {
        "badgeBorderRadius": 100,
        "borderRadius": 4,
      },
      "sizes": Object {
        "huge": 96,
        "hugex": 128,
        "hugexx": 144,
        "hugexxx": 192,
        "large": 64,
        "largex": 72,
        "largexx": 80,
        "largexxx": 88,
        "medium": 48,
        "mediumx": 56,
        "micro": 4,
        "none": 0,
        "semi": 32,
        "semix": 40,
        "small": 16,
        "standard": 24,
        "tiny": 8,
        "veryhuge": 256,
      },
      "spacing": 8,
      "typography": Object {
        "body1": Object {
          "fontSize": "1rem",
          "fontWeight": 400,
        },
        "body2": Object {
          "fontSize": "0.875rem",
          "fontWeight": 400,
        },
        "button": Object {
          "fontSize": "0.875rem",
          "fontWeight": 600,
        },
        "caption": Object {
          "fontSize": "0.75rem",
          "fontWeight": 400,
        },
        "fontFamily": "\\"Roboto\\", sans-serif",
        "fontFamilyBrand1": "\\"Helvetica Now Display\\"",
        "fontFamilyBrand2": "\\"Helvetica Now Text\\"",
        "fontFamilyBrand3": undefined,
        "fontWeightBold": 700,
        "fontWeightLight": 300,
        "fontWeightMedium": 500,
        "fontWeightRegular": 400,
        "h1": Object {
          "fontSize": "6rem",
          "fontWeight": 300,
        },
        "h2": Object {
          "fontSize": "3.75rem",
          "fontWeight": 300,
        },
        "h3": Object {
          "fontSize": "3rem",
          "fontWeight": 400,
        },
        "h4": Object {
          "fontSize": "2.125rem",
          "fontWeight": 400,
        },
        "h5": Object {
          "fontSize": "1.5rem",
          "fontWeight": 400,
        },
        "h6": Object {
          "fontSize": "1.25rem",
          "fontWeight": 600,
        },
        "overline": Object {
          "fontSize": "0.75rem",
          "fontWeight": 400,
        },
        "subtitle1": Object {
          "fontSize": "1rem",
          "fontWeight": 400,
        },
        "subtitle2": Object {
          "fontSize": "0.875rem",
          "fontWeight": 500,
        },
      },
    }
  }
  value={2020-02-01T03:00:00.000Z}
>
  <Component
    utils={[Function]}
  >
    <WithTheme(ForwardRef)
      label="Only calendar"
      onChange={[Function]}
      state="error"
      theme={
        Object {
          "avatarSizes": Object {
            "huge": Object {
              "fontSize": "1.5rem",
              "size": 80,
            },
            "large": Object {
              "fontSize": "1rem",
              "size": 48,
            },
            "small": Object {
              "fontSize": ".875rem",
              "size": 32,
            },
            "standard": Object {
              "fontSize": "1rem",
              "size": 40,
            },
            "tiny": Object {
              "fontSize": ".625rem",
              "size": 24,
            },
          },
          "buttonSizes": Object {
            "large": Object {
              "minHeight": 48,
              "paddingBottom": 16,
              "paddingLeft": 16,
              "paddingRight": 16,
              "paddingTop": 16,
            },
            "medium": Object {
              "minHeight": 40,
              "paddingBottom": 12,
              "paddingLeft": 16,
              "paddingRight": 16,
              "paddingTop": 12,
            },
            "small": Object {
              "minHeight": 32,
              "paddingBottom": 8,
              "paddingLeft": 8,
              "paddingRight": 8,
              "paddingTop": 8,
            },
          },
          "iconSizes": Object {
            "huge": 144,
            "hugex": 192,
            "hugexx": 256,
            "large": 72,
            "largex": 96,
            "largexx": 128,
            "medium": 64,
            "micro": 16,
            "small": 32,
            "standard": 48,
            "tiny": 24,
          },
          "overrides": Object {
            "MuiAvatar": Object {
              "colorDefault": Object {
                "color": "#333333",
              },
            },
            "MuiBadge": Object {
              "badge": Object {
                "padding": "0 4px",
              },
            },
            "MuiButton": Object {
              "outlinedPrimary": Object {
                "color": "#333333",
              },
              "outlinedSecondary": Object {
                "color": "#333333",
              },
              "root": Object {
                "fontSize": "0.875rem",
                "minHeight": "40px",
                "padding": "8px 16px",
              },
              "sizeLarge": Object {
                "fontSize": "0.875rem",
                "minHeight": "48px",
              },
              "sizeSmall": Object {
                "fontSize": "0.875rem",
                "minHeight": "32px",
              },
              "textPrimary": Object {
                "color": "#333333",
              },
            },
            "MuiChip": Object {
              "clickableColorPrimary": Object {
                "&:hover": Object {
                  "backgroundColor": "#EF8426",
                },
              },
              "clickableColorSecondary": Object {
                "&:hover": Object {
                  "backgroundColor": "#EF8426",
                },
              },
              "deleteIcon": Object {
                "&:hover": Object {
                  "color": "#000000",
                },
                "color": "rgba(0, 0, 0, 0.8)",
                "fontSize": "24px",
                "height": "24px",
                "width": "24px",
              },
              "deleteIconColorPrimary": Object {
                "&:hover": Object {
                  "color": "#FFFFFF",
                },
                "color": "rgba(255, 255, 255, 0.8)",
              },
              "deleteIconColorSecondary": Object {
                "&:hover": Object {
                  "color": "#FFFFFF",
                },
                "color": "rgba(255, 255, 255, 0.8)",
              },
              "deleteIconSmall": Object {
                "fontSize": "16px",
                "height": "16px",
                "width": "16px",
              },
              "icon": Object {
                "fontSize": "24px",
              },
              "iconSmall": Object {
                "fontSize": "16px",
                "height": "16px",
                "marginTop": "1px",
                "width": "16px",
              },
              "outlined": Object {
                "borderColor": "rgba(0, 0, 0, 0.12)",
                "color": "#000000",
              },
              "outlinedPrimary": Object {
                "color": "#000000",
              },
              "outlinedSecondary": Object {
                "color": "#000000",
              },
              "root": Object {
                "& $avatar": Object {
                  "backgroundColor": "rgba(0, 0, 0, 0.24)",
                  "color": "#333333",
                },
                "&$disabled": Object {
                  "opacity": 0.4,
                },
                "backgroundColor": "rgba(0, 0, 0, 0.12)",
                "color": "#333333",
                "fontSize": "0.875rem",
              },
            },
            "MuiExpansionPanel": Object {
              "root": Object {
                "&$disabled": Object {
                  "backgroundColor": "#FFFFFF",
                  "opacity": 0.32,
                },
                "&$expanded": Object {
                  "borderColor": "#F4AB34",
                },
                "border": "transparent 1px solid",
              },
            },
            "MuiExpansionPanelSummary": Object {
              "root": Object {
                "&$disabled": Object {
                  "opacity": 1,
                },
                "alignItems": "flex-start",
                "marginTop": "8px",
              },
            },
            "MuiFormLabel": Object {
              "formControl": Object {
                "marginTop": "-4px",
                "transform": "none",
              },
              "root": Object {
                "&.Mui-focused": Object {
                  "color": "#777777",
                  "fontSize": "0.875rem",
                },
                "fontSize": "0.875rem",
              },
            },
            "MuiIconButton": Object {
              "root": Object {
                "color": "#333333",
                "padding": "8px",
              },
              "sizeSmall": Object {
                "padding": "4px",
              },
            },
            "MuiInputAdornment": Object {
              "root": Object {
                "position": "absolute",
                "right": "0",
              },
            },
            "MuiInputBase": Object {
              "input": Object {
                "&.Mui-disabled": Object {
                  "&:hover": Object {
                    "boxShadow": "#333333 0 0 0 1px",
                  },
                  "opacity": 0.24,
                },
                "&:focus": Object {
                  "boxShadow": "#F4AB34 0 0 0 2px",
                },
                "&:focus:not(:read-only)": Object {
                  "boxShadow": "#F4AB34 0 0 0 2px",
                },
                "&:hover": Object {
                  "boxShadow": "#777777 0 0 0 1px",
                },
                "&:hover:not(:placeholder-shown)": Object {
                  "boxShadow": "#777777 0 0 0 1px",
                },
                "&:hover:not(:read-only):not(:disabled):not(:focus)": Object {
                  "boxShadow": "#777777 0 0 0 1px",
                },
                "&:not(:placeholder-shown)": Object {
                  "boxShadow": "#333333 0 0 0 1px",
                },
                "&:placeholder-shown": Object {
                  "boxShadow": "#BBBBBB 0 0 0 1px",
                },
                "borderRadius": "4px",
                "boxShadow": "#BBBBBB 0 0 0 1px",
                "color": "#333333",
                "minHeight": "24px",
                "padding": "16px 35px 16px 16px",
              },
              "root": Object {
                "&.MuiInput-underline.Mui-disabled:before": Object {
                  "borderBottom": "none",
                },
                "&.MuiInput-underline:after": Object {
                  "borderBottom": "none",
                },
                "&.MuiInput-underline:before": Object {
                  "borderBottom": "none",
                },
                "&.MuiInput-underline:hover:not(.Mui-disabled):before": Object {
                  "borderBottom": "none",
                },
                "color": "#333333",
              },
            },
            "MuiInputLabel": Object {
              "formControl": Object {
                "marginTop": "-4px",
                "transform": "none",
              },
              "shrink": Object {
                "marginTop": "-4px",
                "transform": "none",
              },
            },
            "MuiListItem": Object {
              "button": Object {
                "&:hover": Object {
                  "backgroundColor": "rgba(0, 0, 0, 0.04)",
                },
              },
              "root": Object {
                "&$selected": Object {
                  "&:hover": Object {
                    "backgroundColor": "rgba(0, 0, 0, 0.04)",
                  },
                  "backgroundColor": "rgba(255, 107, 11, 0.16)",
                },
                "&.Mui-disabled": Object {
                  "opacity": 0.32,
                },
              },
            },
            "MuiTab": Object {
              "root": Object {
                "&$disabled": Object {
                  "opacity": 0.24,
                },
              },
              "textColorInherit": Object {
                "&$disabled": Object {
                  "opacity": 0.24,
                },
              },
              "wrapper": Object {
                "& > *:first-child": Object {
                  "marginBottom": "2px !important",
                },
              },
            },
            "MuiTextField": Object {
              "& .MuiInputLabel": Object {
                "marginTop": "20px",
              },
            },
            "MuiToolbar": Object {
              "dense": Object {
                "@media (min-width: 600px)": Object {
                  "minHeight": "56px",
                },
                "minHeight": "56px",
              },
              "gutters": Object {
                "@media (min-width: 600px)": Object {
                  "padding": "0 16px",
                },
                "padding": "0 16px",
              },
              "regular": Object {
                "@media (min-width: 600px)": Object {
                  "minHeight": "56px",
                },
                "minHeight": "56px",
              },
              "root": Object {
                "@media (min-width: 600px)": Object {
                  "padding": "0 16px",
                },
                "padding": "0 16px",
              },
            },
          },
          "palette": Object {
            "action": Object {
              "disabled": "rgba(51, 51, 51, 0.24)",
            },
            "background": Object {
              "default": "#FAFAFA",
              "defaultContrastText": "#333333",
              "paper": "#FFFFFF",
              "paperContrastText": "#333333",
            },
            "complementary": Object {
              "highlight": "#000000",
              "link": "#227BBD",
              "linkContrastText": "#FFFFFF",
              "warning": "#FCC433",
              "warningContrastText": "#333333",
            },
            "error": Object {
              "contrastText": "#FFFFFF",
              "main": "#E74627",
            },
            "primary": Object {
              "contrastText": "#333333",
              "dark": "#EF8426",
              "light": "#FEFDE8",
              "main": "#F4AB34",
            },
            "secondary": Object {
              "contrastText": "#000000",
              "dark": "#FF5808",
              "light": "#FFF8E1",
              "main": "#FF6B0B",
            },
            "success": Object {
              "contrastText": "#FFFFFF",
              "main": "#569A32",
            },
            "text": Object {
              "disabled": "#BBBBBB",
              "hint": "#BBBBBB",
              "primary": "#333333",
              "secondary": "#777777",
            },
          },
          "shadows": Object {
            "0": "none",
            "1": "0 1px 1px 0 rgba(0, 0, 0, 0.14)",
            "12": "0 12px 17px 0 rgba(0, 0, 0, 0.14)",
            "16": "0 16px 24px 0 rgba(0, 0, 0, 0.14)",
            "2": "0 2px 2px 0 rgba(0, 0, 0, 0.14)",
            "24": "0 24px 38px 0 rgba(0, 0, 0, 0.14)",
            "3": "0 3px 4px 0 rgba(0, 0, 0, 0.14)",
            "4": "0 4px 5px 0 rgba(0, 0, 0, 0.14)",
            "6": "0 6px 10px 0 rgba(0, 0, 0, 0.14)",
            "8": "0 8px 10px 0 rgba(0, 0, 0, 0.14)",
            "9": "0 9px 12px 0 rgba(0, 0, 0, 0.14)",
          },
          "shape": Object {
            "badgeBorderRadius": 100,
            "borderRadius": 4,
          },
          "sizes": Object {
            "huge": 96,
            "hugex": 128,
            "hugexx": 144,
            "hugexxx": 192,
            "large": 64,
            "largex": 72,
            "largexx": 80,
            "largexxx": 88,
            "medium": 48,
            "mediumx": 56,
            "micro": 4,
            "none": 0,
            "semi": 32,
            "semix": 40,
            "small": 16,
            "standard": 24,
            "tiny": 8,
            "veryhuge": 256,
          },
          "spacing": 8,
          "typography": Object {
            "body1": Object {
              "fontSize": "1rem",
              "fontWeight": 400,
            },
            "body2": Object {
              "fontSize": "0.875rem",
              "fontWeight": 400,
            },
            "button": Object {
              "fontSize": "0.875rem",
              "fontWeight": 600,
            },
            "caption": Object {
              "fontSize": "0.75rem",
              "fontWeight": 400,
            },
            "fontFamily": "\\"Roboto\\", sans-serif",
            "fontFamilyBrand1": "\\"Helvetica Now Display\\"",
            "fontFamilyBrand2": "\\"Helvetica Now Text\\"",
            "fontFamilyBrand3": undefined,
            "fontWeightBold": 700,
            "fontWeightLight": 300,
            "fontWeightMedium": 500,
            "fontWeightRegular": 400,
            "h1": Object {
              "fontSize": "6rem",
              "fontWeight": 300,
            },
            "h2": Object {
              "fontSize": "3.75rem",
              "fontWeight": 300,
            },
            "h3": Object {
              "fontSize": "3rem",
              "fontWeight": 400,
            },
            "h4": Object {
              "fontSize": "2.125rem",
              "fontWeight": 400,
            },
            "h5": Object {
              "fontSize": "1.5rem",
              "fontWeight": 400,
            },
            "h6": Object {
              "fontSize": "1.25rem",
              "fontWeight": 600,
            },
            "overline": Object {
              "fontSize": "0.75rem",
              "fontWeight": 400,
            },
            "subtitle1": Object {
              "fontSize": "1rem",
              "fontWeight": 400,
            },
            "subtitle2": Object {
              "fontSize": "0.875rem",
              "fontWeight": 500,
            },
          },
        }
      }
      value={2020-02-01T03:00:00.000Z}
      variant="dialog"
    >
      <ForwardRef
        label="Only calendar"
        onChange={[Function]}
        state="error"
        theme={
          Object {
            "avatarSizes": Object {
              "huge": Object {
                "fontSize": "1.5rem",
                "size": 80,
              },
              "large": Object {
                "fontSize": "1rem",
                "size": 48,
              },
              "small": Object {
                "fontSize": ".875rem",
                "size": 32,
              },
              "standard": Object {
                "fontSize": "1rem",
                "size": 40,
              },
              "tiny": Object {
                "fontSize": ".625rem",
                "size": 24,
              },
            },
            "buttonSizes": Object {
              "large": Object {
                "minHeight": 48,
                "paddingBottom": 16,
                "paddingLeft": 16,
                "paddingRight": 16,
                "paddingTop": 16,
              },
              "medium": Object {
                "minHeight": 40,
                "paddingBottom": 12,
                "paddingLeft": 16,
                "paddingRight": 16,
                "paddingTop": 12,
              },
              "small": Object {
                "minHeight": 32,
                "paddingBottom": 8,
                "paddingLeft": 8,
                "paddingRight": 8,
                "paddingTop": 8,
              },
            },
            "iconSizes": Object {
              "huge": 144,
              "hugex": 192,
              "hugexx": 256,
              "large": 72,
              "largex": 96,
              "largexx": 128,
              "medium": 64,
              "micro": 16,
              "small": 32,
              "standard": 48,
              "tiny": 24,
            },
            "overrides": Object {
              "MuiAvatar": Object {
                "colorDefault": Object {
                  "color": "#333333",
                },
              },
              "MuiBadge": Object {
                "badge": Object {
                  "padding": "0 4px",
                },
              },
              "MuiButton": Object {
                "outlinedPrimary": Object {
                  "color": "#333333",
                },
                "outlinedSecondary": Object {
                  "color": "#333333",
                },
                "root": Object {
                  "fontSize": "0.875rem",
                  "minHeight": "40px",
                  "padding": "8px 16px",
                },
                "sizeLarge": Object {
                  "fontSize": "0.875rem",
                  "minHeight": "48px",
                },
                "sizeSmall": Object {
                  "fontSize": "0.875rem",
                  "minHeight": "32px",
                },
                "textPrimary": Object {
                  "color": "#333333",
                },
              },
              "MuiChip": Object {
                "clickableColorPrimary": Object {
                  "&:hover": Object {
                    "backgroundColor": "#EF8426",
                  },
                },
                "clickableColorSecondary": Object {
                  "&:hover": Object {
                    "backgroundColor": "#EF8426",
                  },
                },
                "deleteIcon": Object {
                  "&:hover": Object {
                    "color": "#000000",
                  },
                  "color": "rgba(0, 0, 0, 0.8)",
                  "fontSize": "24px",
                  "height": "24px",
                  "width": "24px",
                },
                "deleteIconColorPrimary": Object {
                  "&:hover": Object {
                    "color": "#FFFFFF",
                  },
                  "color": "rgba(255, 255, 255, 0.8)",
                },
                "deleteIconColorSecondary": Object {
                  "&:hover": Object {
                    "color": "#FFFFFF",
                  },
                  "color": "rgba(255, 255, 255, 0.8)",
                },
                "deleteIconSmall": Object {
                  "fontSize": "16px",
                  "height": "16px",
                  "width": "16px",
                },
                "icon": Object {
                  "fontSize": "24px",
                },
                "iconSmall": Object {
                  "fontSize": "16px",
                  "height": "16px",
                  "marginTop": "1px",
                  "width": "16px",
                },
                "outlined": Object {
                  "borderColor": "rgba(0, 0, 0, 0.12)",
                  "color": "#000000",
                },
                "outlinedPrimary": Object {
                  "color": "#000000",
                },
                "outlinedSecondary": Object {
                  "color": "#000000",
                },
                "root": Object {
                  "& $avatar": Object {
                    "backgroundColor": "rgba(0, 0, 0, 0.24)",
                    "color": "#333333",
                  },
                  "&$disabled": Object {
                    "opacity": 0.4,
                  },
                  "backgroundColor": "rgba(0, 0, 0, 0.12)",
                  "color": "#333333",
                  "fontSize": "0.875rem",
                },
              },
              "MuiExpansionPanel": Object {
                "root": Object {
                  "&$disabled": Object {
                    "backgroundColor": "#FFFFFF",
                    "opacity": 0.32,
                  },
                  "&$expanded": Object {
                    "borderColor": "#F4AB34",
                  },
                  "border": "transparent 1px solid",
                },
              },
              "MuiExpansionPanelSummary": Object {
                "root": Object {
                  "&$disabled": Object {
                    "opacity": 1,
                  },
                  "alignItems": "flex-start",
                  "marginTop": "8px",
                },
              },
              "MuiFormLabel": Object {
                "formControl": Object {
                  "marginTop": "-4px",
                  "transform": "none",
                },
                "root": Object {
                  "&.Mui-focused": Object {
                    "color": "#777777",
                    "fontSize": "0.875rem",
                  },
                  "fontSize": "0.875rem",
                },
              },
              "MuiIconButton": Object {
                "root": Object {
                  "color": "#333333",
                  "padding": "8px",
                },
                "sizeSmall": Object {
                  "padding": "4px",
                },
              },
              "MuiInputAdornment": Object {
                "root": Object {
                  "position": "absolute",
                  "right": "0",
                },
              },
              "MuiInputBase": Object {
                "input": Object {
                  "&.Mui-disabled": Object {
                    "&:hover": Object {
                      "boxShadow": "#333333 0 0 0 1px",
                    },
                    "opacity": 0.24,
                  },
                  "&:focus": Object {
                    "boxShadow": "#F4AB34 0 0 0 2px",
                  },
                  "&:focus:not(:read-only)": Object {
                    "boxShadow": "#F4AB34 0 0 0 2px",
                  },
                  "&:hover": Object {
                    "boxShadow": "#777777 0 0 0 1px",
                  },
                  "&:hover:not(:placeholder-shown)": Object {
                    "boxShadow": "#777777 0 0 0 1px",
                  },
                  "&:hover:not(:read-only):not(:disabled):not(:focus)": Object {
                    "boxShadow": "#777777 0 0 0 1px",
                  },
                  "&:not(:placeholder-shown)": Object {
                    "boxShadow": "#333333 0 0 0 1px",
                  },
                  "&:placeholder-shown": Object {
                    "boxShadow": "#BBBBBB 0 0 0 1px",
                  },
                  "borderRadius": "4px",
                  "boxShadow": "#BBBBBB 0 0 0 1px",
                  "color": "#333333",
                  "minHeight": "24px",
                  "padding": "16px 35px 16px 16px",
                },
                "root": Object {
                  "&.MuiInput-underline.Mui-disabled:before": Object {
                    "borderBottom": "none",
                  },
                  "&.MuiInput-underline:after": Object {
                    "borderBottom": "none",
                  },
                  "&.MuiInput-underline:before": Object {
                    "borderBottom": "none",
                  },
                  "&.MuiInput-underline:hover:not(.Mui-disabled):before": Object {
                    "borderBottom": "none",
                  },
                  "color": "#333333",
                },
              },
              "MuiInputLabel": Object {
                "formControl": Object {
                  "marginTop": "-4px",
                  "transform": "none",
                },
                "shrink": Object {
                  "marginTop": "-4px",
                  "transform": "none",
                },
              },
              "MuiListItem": Object {
                "button": Object {
                  "&:hover": Object {
                    "backgroundColor": "rgba(0, 0, 0, 0.04)",
                  },
                },
                "root": Object {
                  "&$selected": Object {
                    "&:hover": Object {
                      "backgroundColor": "rgba(0, 0, 0, 0.04)",
                    },
                    "backgroundColor": "rgba(255, 107, 11, 0.16)",
                  },
                  "&.Mui-disabled": Object {
                    "opacity": 0.32,
                  },
                },
              },
              "MuiTab": Object {
                "root": Object {
                  "&$disabled": Object {
                    "opacity": 0.24,
                  },
                },
                "textColorInherit": Object {
                  "&$disabled": Object {
                    "opacity": 0.24,
                  },
                },
                "wrapper": Object {
                  "& > *:first-child": Object {
                    "marginBottom": "2px !important",
                  },
                },
              },
              "MuiTextField": Object {
                "& .MuiInputLabel": Object {
                  "marginTop": "20px",
                },
              },
              "MuiToolbar": Object {
                "dense": Object {
                  "@media (min-width: 600px)": Object {
                    "minHeight": "56px",
                  },
                  "minHeight": "56px",
                },
                "gutters": Object {
                  "@media (min-width: 600px)": Object {
                    "padding": "0 16px",
                  },
                  "padding": "0 16px",
                },
                "regular": Object {
                  "@media (min-width: 600px)": Object {
                    "minHeight": "56px",
                  },
                  "minHeight": "56px",
                },
                "root": Object {
                  "@media (min-width: 600px)": Object {
                    "padding": "0 16px",
                  },
                  "padding": "0 16px",
                },
              },
            },
            "palette": Object {
              "action": Object {
                "disabled": "rgba(51, 51, 51, 0.24)",
              },
              "background": Object {
                "default": "#FAFAFA",
                "defaultContrastText": "#333333",
                "paper": "#FFFFFF",
                "paperContrastText": "#333333",
              },
              "complementary": Object {
                "highlight": "#000000",
                "link": "#227BBD",
                "linkContrastText": "#FFFFFF",
                "warning": "#FCC433",
                "warningContrastText": "#333333",
              },
              "error": Object {
                "contrastText": "#FFFFFF",
                "main": "#E74627",
              },
              "primary": Object {
                "contrastText": "#333333",
                "dark": "#EF8426",
                "light": "#FEFDE8",
                "main": "#F4AB34",
              },
              "secondary": Object {
                "contrastText": "#000000",
                "dark": "#FF5808",
                "light": "#FFF8E1",
                "main": "#FF6B0B",
              },
              "success": Object {
                "contrastText": "#FFFFFF",
                "main": "#569A32",
              },
              "text": Object {
                "disabled": "#BBBBBB",
                "hint": "#BBBBBB",
                "primary": "#333333",
                "secondary": "#777777",
              },
            },
            "shadows": Object {
              "0": "none",
              "1": "0 1px 1px 0 rgba(0, 0, 0, 0.14)",
              "12": "0 12px 17px 0 rgba(0, 0, 0, 0.14)",
              "16": "0 16px 24px 0 rgba(0, 0, 0, 0.14)",
              "2": "0 2px 2px 0 rgba(0, 0, 0, 0.14)",
              "24": "0 24px 38px 0 rgba(0, 0, 0, 0.14)",
              "3": "0 3px 4px 0 rgba(0, 0, 0, 0.14)",
              "4": "0 4px 5px 0 rgba(0, 0, 0, 0.14)",
              "6": "0 6px 10px 0 rgba(0, 0, 0, 0.14)",
              "8": "0 8px 10px 0 rgba(0, 0, 0, 0.14)",
              "9": "0 9px 12px 0 rgba(0, 0, 0, 0.14)",
            },
            "shape": Object {
              "badgeBorderRadius": 100,
              "borderRadius": 4,
            },
            "sizes": Object {
              "huge": 96,
              "hugex": 128,
              "hugexx": 144,
              "hugexxx": 192,
              "large": 64,
              "largex": 72,
              "largexx": 80,
              "largexxx": 88,
              "medium": 48,
              "mediumx": 56,
              "micro": 4,
              "none": 0,
              "semi": 32,
              "semix": 40,
              "small": 16,
              "standard": 24,
              "tiny": 8,
              "veryhuge": 256,
            },
            "spacing": 8,
            "typography": Object {
              "body1": Object {
                "fontSize": "1rem",
                "fontWeight": 400,
              },
              "body2": Object {
                "fontSize": "0.875rem",
                "fontWeight": 400,
              },
              "button": Object {
                "fontSize": "0.875rem",
                "fontWeight": 600,
              },
              "caption": Object {
                "fontSize": "0.75rem",
                "fontWeight": 400,
              },
              "fontFamily": "\\"Roboto\\", sans-serif",
              "fontFamilyBrand1": "\\"Helvetica Now Display\\"",
              "fontFamilyBrand2": "\\"Helvetica Now Text\\"",
              "fontFamilyBrand3": undefined,
              "fontWeightBold": 700,
              "fontWeightLight": 300,
              "fontWeightMedium": 500,
              "fontWeightRegular": 400,
              "h1": Object {
                "fontSize": "6rem",
                "fontWeight": 300,
              },
              "h2": Object {
                "fontSize": "3.75rem",
                "fontWeight": 300,
              },
              "h3": Object {
                "fontSize": "3rem",
                "fontWeight": 400,
              },
              "h4": Object {
                "fontSize": "2.125rem",
                "fontWeight": 400,
              },
              "h5": Object {
                "fontSize": "1.5rem",
                "fontWeight": 400,
              },
              "h6": Object {
                "fontSize": "1.25rem",
                "fontWeight": 600,
              },
              "overline": Object {
                "fontSize": "0.75rem",
                "fontWeight": 400,
              },
              "subtitle1": Object {
                "fontSize": "1rem",
                "fontWeight": 400,
              },
              "subtitle2": Object {
                "fontSize": "0.875rem",
                "fontWeight": 500,
              },
            },
          }
        }
        value={2020-02-01T03:00:00.000Z}
        variant="dialog"
      >
        <Component
          label="Only calendar"
          onChange={[Function]}
          state="error"
          theme={
            Object {
              "avatarSizes": Object {
                "huge": Object {
                  "fontSize": "1.5rem",
                  "size": 80,
                },
                "large": Object {
                  "fontSize": "1rem",
                  "size": 48,
                },
                "small": Object {
                  "fontSize": ".875rem",
                  "size": 32,
                },
                "standard": Object {
                  "fontSize": "1rem",
                  "size": 40,
                },
                "tiny": Object {
                  "fontSize": ".625rem",
                  "size": 24,
                },
              },
              "buttonSizes": Object {
                "large": Object {
                  "minHeight": 48,
                  "paddingBottom": 16,
                  "paddingLeft": 16,
                  "paddingRight": 16,
                  "paddingTop": 16,
                },
                "medium": Object {
                  "minHeight": 40,
                  "paddingBottom": 12,
                  "paddingLeft": 16,
                  "paddingRight": 16,
                  "paddingTop": 12,
                },
                "small": Object {
                  "minHeight": 32,
                  "paddingBottom": 8,
                  "paddingLeft": 8,
                  "paddingRight": 8,
                  "paddingTop": 8,
                },
              },
              "iconSizes": Object {
                "huge": 144,
                "hugex": 192,
                "hugexx": 256,
                "large": 72,
                "largex": 96,
                "largexx": 128,
                "medium": 64,
                "micro": 16,
                "small": 32,
                "standard": 48,
                "tiny": 24,
              },
              "overrides": Object {
                "MuiAvatar": Object {
                  "colorDefault": Object {
                    "color": "#333333",
                  },
                },
                "MuiBadge": Object {
                  "badge": Object {
                    "padding": "0 4px",
                  },
                },
                "MuiButton": Object {
                  "outlinedPrimary": Object {
                    "color": "#333333",
                  },
                  "outlinedSecondary": Object {
                    "color": "#333333",
                  },
                  "root": Object {
                    "fontSize": "0.875rem",
                    "minHeight": "40px",
                    "padding": "8px 16px",
                  },
                  "sizeLarge": Object {
                    "fontSize": "0.875rem",
                    "minHeight": "48px",
                  },
                  "sizeSmall": Object {
                    "fontSize": "0.875rem",
                    "minHeight": "32px",
                  },
                  "textPrimary": Object {
                    "color": "#333333",
                  },
                },
                "MuiChip": Object {
                  "clickableColorPrimary": Object {
                    "&:hover": Object {
                      "backgroundColor": "#EF8426",
                    },
                  },
                  "clickableColorSecondary": Object {
                    "&:hover": Object {
                      "backgroundColor": "#EF8426",
                    },
                  },
                  "deleteIcon": Object {
                    "&:hover": Object {
                      "color": "#000000",
                    },
                    "color": "rgba(0, 0, 0, 0.8)",
                    "fontSize": "24px",
                    "height": "24px",
                    "width": "24px",
                  },
                  "deleteIconColorPrimary": Object {
                    "&:hover": Object {
                      "color": "#FFFFFF",
                    },
                    "color": "rgba(255, 255, 255, 0.8)",
                  },
                  "deleteIconColorSecondary": Object {
                    "&:hover": Object {
                      "color": "#FFFFFF",
                    },
                    "color": "rgba(255, 255, 255, 0.8)",
                  },
                  "deleteIconSmall": Object {
                    "fontSize": "16px",
                    "height": "16px",
                    "width": "16px",
                  },
                  "icon": Object {
                    "fontSize": "24px",
                  },
                  "iconSmall": Object {
                    "fontSize": "16px",
                    "height": "16px",
                    "marginTop": "1px",
                    "width": "16px",
                  },
                  "outlined": Object {
                    "borderColor": "rgba(0, 0, 0, 0.12)",
                    "color": "#000000",
                  },
                  "outlinedPrimary": Object {
                    "color": "#000000",
                  },
                  "outlinedSecondary": Object {
                    "color": "#000000",
                  },
                  "root": Object {
                    "& $avatar": Object {
                      "backgroundColor": "rgba(0, 0, 0, 0.24)",
                      "color": "#333333",
                    },
                    "&$disabled": Object {
                      "opacity": 0.4,
                    },
                    "backgroundColor": "rgba(0, 0, 0, 0.12)",
                    "color": "#333333",
                    "fontSize": "0.875rem",
                  },
                },
                "MuiExpansionPanel": Object {
                  "root": Object {
                    "&$disabled": Object {
                      "backgroundColor": "#FFFFFF",
                      "opacity": 0.32,
                    },
                    "&$expanded": Object {
                      "borderColor": "#F4AB34",
                    },
                    "border": "transparent 1px solid",
                  },
                },
                "MuiExpansionPanelSummary": Object {
                  "root": Object {
                    "&$disabled": Object {
                      "opacity": 1,
                    },
                    "alignItems": "flex-start",
                    "marginTop": "8px",
                  },
                },
                "MuiFormLabel": Object {
                  "formControl": Object {
                    "marginTop": "-4px",
                    "transform": "none",
                  },
                  "root": Object {
                    "&.Mui-focused": Object {
                      "color": "#777777",
                      "fontSize": "0.875rem",
                    },
                    "fontSize": "0.875rem",
                  },
                },
                "MuiIconButton": Object {
                  "root": Object {
                    "color": "#333333",
                    "padding": "8px",
                  },
                  "sizeSmall": Object {
                    "padding": "4px",
                  },
                },
                "MuiInputAdornment": Object {
                  "root": Object {
                    "position": "absolute",
                    "right": "0",
                  },
                },
                "MuiInputBase": Object {
                  "input": Object {
                    "&.Mui-disabled": Object {
                      "&:hover": Object {
                        "boxShadow": "#333333 0 0 0 1px",
                      },
                      "opacity": 0.24,
                    },
                    "&:focus": Object {
                      "boxShadow": "#F4AB34 0 0 0 2px",
                    },
                    "&:focus:not(:read-only)": Object {
                      "boxShadow": "#F4AB34 0 0 0 2px",
                    },
                    "&:hover": Object {
                      "boxShadow": "#777777 0 0 0 1px",
                    },
                    "&:hover:not(:placeholder-shown)": Object {
                      "boxShadow": "#777777 0 0 0 1px",
                    },
                    "&:hover:not(:read-only):not(:disabled):not(:focus)": Object {
                      "boxShadow": "#777777 0 0 0 1px",
                    },
                    "&:not(:placeholder-shown)": Object {
                      "boxShadow": "#333333 0 0 0 1px",
                    },
                    "&:placeholder-shown": Object {
                      "boxShadow": "#BBBBBB 0 0 0 1px",
                    },
                    "borderRadius": "4px",
                    "boxShadow": "#BBBBBB 0 0 0 1px",
                    "color": "#333333",
                    "minHeight": "24px",
                    "padding": "16px 35px 16px 16px",
                  },
                  "root": Object {
                    "&.MuiInput-underline.Mui-disabled:before": Object {
                      "borderBottom": "none",
                    },
                    "&.MuiInput-underline:after": Object {
                      "borderBottom": "none",
                    },
                    "&.MuiInput-underline:before": Object {
                      "borderBottom": "none",
                    },
                    "&.MuiInput-underline:hover:not(.Mui-disabled):before": Object {
                      "borderBottom": "none",
                    },
                    "color": "#333333",
                  },
                },
                "MuiInputLabel": Object {
                  "formControl": Object {
                    "marginTop": "-4px",
                    "transform": "none",
                  },
                  "shrink": Object {
                    "marginTop": "-4px",
                    "transform": "none",
                  },
                },
                "MuiListItem": Object {
                  "button": Object {
                    "&:hover": Object {
                      "backgroundColor": "rgba(0, 0, 0, 0.04)",
                    },
                  },
                  "root": Object {
                    "&$selected": Object {
                      "&:hover": Object {
                        "backgroundColor": "rgba(0, 0, 0, 0.04)",
                      },
                      "backgroundColor": "rgba(255, 107, 11, 0.16)",
                    },
                    "&.Mui-disabled": Object {
                      "opacity": 0.32,
                    },
                  },
                },
                "MuiTab": Object {
                  "root": Object {
                    "&$disabled": Object {
                      "opacity": 0.24,
                    },
                  },
                  "textColorInherit": Object {
                    "&$disabled": Object {
                      "opacity": 0.24,
                    },
                  },
                  "wrapper": Object {
                    "& > *:first-child": Object {
                      "marginBottom": "2px !important",
                    },
                  },
                },
                "MuiTextField": Object {
                  "& .MuiInputLabel": Object {
                    "marginTop": "20px",
                  },
                },
                "MuiToolbar": Object {
                  "dense": Object {
                    "@media (min-width: 600px)": Object {
                      "minHeight": "56px",
                    },
                    "minHeight": "56px",
                  },
                  "gutters": Object {
                    "@media (min-width: 600px)": Object {
                      "padding": "0 16px",
                    },
                    "padding": "0 16px",
                  },
                  "regular": Object {
                    "@media (min-width: 600px)": Object {
                      "minHeight": "56px",
                    },
                    "minHeight": "56px",
                  },
                  "root": Object {
                    "@media (min-width: 600px)": Object {
                      "padding": "0 16px",
                    },
                    "padding": "0 16px",
                  },
                },
              },
              "palette": Object {
                "action": Object {
                  "disabled": "rgba(51, 51, 51, 0.24)",
                },
                "background": Object {
                  "default": "#FAFAFA",
                  "defaultContrastText": "#333333",
                  "paper": "#FFFFFF",
                  "paperContrastText": "#333333",
                },
                "complementary": Object {
                  "highlight": "#000000",
                  "link": "#227BBD",
                  "linkContrastText": "#FFFFFF",
                  "warning": "#FCC433",
                  "warningContrastText": "#333333",
                },
                "error": Object {
                  "contrastText": "#FFFFFF",
                  "main": "#E74627",
                },
                "primary": Object {
                  "contrastText": "#333333",
                  "dark": "#EF8426",
                  "light": "#FEFDE8",
                  "main": "#F4AB34",
                },
                "secondary": Object {
                  "contrastText": "#000000",
                  "dark": "#FF5808",
                  "light": "#FFF8E1",
                  "main": "#FF6B0B",
                },
                "success": Object {
                  "contrastText": "#FFFFFF",
                  "main": "#569A32",
                },
                "text": Object {
                  "disabled": "#BBBBBB",
                  "hint": "#BBBBBB",
                  "primary": "#333333",
                  "secondary": "#777777",
                },
              },
              "shadows": Object {
                "0": "none",
                "1": "0 1px 1px 0 rgba(0, 0, 0, 0.14)",
                "12": "0 12px 17px 0 rgba(0, 0, 0, 0.14)",
                "16": "0 16px 24px 0 rgba(0, 0, 0, 0.14)",
                "2": "0 2px 2px 0 rgba(0, 0, 0, 0.14)",
                "24": "0 24px 38px 0 rgba(0, 0, 0, 0.14)",
                "3": "0 3px 4px 0 rgba(0, 0, 0, 0.14)",
                "4": "0 4px 5px 0 rgba(0, 0, 0, 0.14)",
                "6": "0 6px 10px 0 rgba(0, 0, 0, 0.14)",
                "8": "0 8px 10px 0 rgba(0, 0, 0, 0.14)",
                "9": "0 9px 12px 0 rgba(0, 0, 0, 0.14)",
              },
              "shape": Object {
                "badgeBorderRadius": 100,
                "borderRadius": 4,
              },
              "sizes": Object {
                "huge": 96,
                "hugex": 128,
                "hugexx": 144,
                "hugexxx": 192,
                "large": 64,
                "largex": 72,
                "largexx": 80,
                "largexxx": 88,
                "medium": 48,
                "mediumx": 56,
                "micro": 4,
                "none": 0,
                "semi": 32,
                "semix": 40,
                "small": 16,
                "standard": 24,
                "tiny": 8,
                "veryhuge": 256,
              },
              "spacing": 8,
              "typography": Object {
                "body1": Object {
                  "fontSize": "1rem",
                  "fontWeight": 400,
                },
                "body2": Object {
                  "fontSize": "0.875rem",
                  "fontWeight": 400,
                },
                "button": Object {
                  "fontSize": "0.875rem",
                  "fontWeight": 600,
                },
                "caption": Object {
                  "fontSize": "0.75rem",
                  "fontWeight": 400,
                },
                "fontFamily": "\\"Roboto\\", sans-serif",
                "fontFamilyBrand1": "\\"Helvetica Now Display\\"",
                "fontFamilyBrand2": "\\"Helvetica Now Text\\"",
                "fontFamilyBrand3": undefined,
                "fontWeightBold": 700,
                "fontWeightLight": 300,
                "fontWeightMedium": 500,
                "fontWeightRegular": 400,
                "h1": Object {
                  "fontSize": "6rem",
                  "fontWeight": 300,
                },
                "h2": Object {
                  "fontSize": "3.75rem",
                  "fontWeight": 300,
                },
                "h3": Object {
                  "fontSize": "3rem",
                  "fontWeight": 400,
                },
                "h4": Object {
                  "fontSize": "2.125rem",
                  "fontWeight": 400,
                },
                "h5": Object {
                  "fontSize": "1.5rem",
                  "fontWeight": 400,
                },
                "h6": Object {
                  "fontSize": "1.25rem",
                  "fontWeight": 600,
                },
                "overline": Object {
                  "fontSize": "0.75rem",
                  "fontWeight": 400,
                },
                "subtitle1": Object {
                  "fontSize": "1rem",
                  "fontWeight": 400,
                },
                "subtitle2": Object {
                  "fontSize": "0.875rem",
                  "fontWeight": 500,
                },
              },
            }
          }
          value={2020-02-01T03:00:00.000Z}
          variant="dialog"
        >
          <styled.div
            theme={
              Object {
                "avatarSizes": Object {
                  "huge": Object {
                    "fontSize": "1.5rem",
                    "size": 80,
                  },
                  "large": Object {
                    "fontSize": "1rem",
                    "size": 48,
                  },
                  "small": Object {
                    "fontSize": ".875rem",
                    "size": 32,
                  },
                  "standard": Object {
                    "fontSize": "1rem",
                    "size": 40,
                  },
                  "tiny": Object {
                    "fontSize": ".625rem",
                    "size": 24,
                  },
                },
                "buttonSizes": Object {
                  "large": Object {
                    "minHeight": 48,
                    "paddingBottom": 16,
                    "paddingLeft": 16,
                    "paddingRight": 16,
                    "paddingTop": 16,
                  },
                  "medium": Object {
                    "minHeight": 40,
                    "paddingBottom": 12,
                    "paddingLeft": 16,
                    "paddingRight": 16,
                    "paddingTop": 12,
                  },
                  "small": Object {
                    "minHeight": 32,
                    "paddingBottom": 8,
                    "paddingLeft": 8,
                    "paddingRight": 8,
                    "paddingTop": 8,
                  },
                },
                "iconSizes": Object {
                  "huge": 144,
                  "hugex": 192,
                  "hugexx": 256,
                  "large": 72,
                  "largex": 96,
                  "largexx": 128,
                  "medium": 64,
                  "micro": 16,
                  "small": 32,
                  "standard": 48,
                  "tiny": 24,
                },
                "overrides": Object {
                  "MuiAvatar": Object {
                    "colorDefault": Object {
                      "color": "#333333",
                    },
                  },
                  "MuiBadge": Object {
                    "badge": Object {
                      "padding": "0 4px",
                    },
                  },
                  "MuiButton": Object {
                    "outlinedPrimary": Object {
                      "color": "#333333",
                    },
                    "outlinedSecondary": Object {
                      "color": "#333333",
                    },
                    "root": Object {
                      "fontSize": "0.875rem",
                      "minHeight": "40px",
                      "padding": "8px 16px",
                    },
                    "sizeLarge": Object {
                      "fontSize": "0.875rem",
                      "minHeight": "48px",
                    },
                    "sizeSmall": Object {
                      "fontSize": "0.875rem",
                      "minHeight": "32px",
                    },
                    "textPrimary": Object {
                      "color": "#333333",
                    },
                  },
                  "MuiChip": Object {
                    "clickableColorPrimary": Object {
                      "&:hover": Object {
                        "backgroundColor": "#EF8426",
                      },
                    },
                    "clickableColorSecondary": Object {
                      "&:hover": Object {
                        "backgroundColor": "#EF8426",
                      },
                    },
                    "deleteIcon": Object {
                      "&:hover": Object {
                        "color": "#000000",
                      },
                      "color": "rgba(0, 0, 0, 0.8)",
                      "fontSize": "24px",
                      "height": "24px",
                      "width": "24px",
                    },
                    "deleteIconColorPrimary": Object {
                      "&:hover": Object {
                        "color": "#FFFFFF",
                      },
                      "color": "rgba(255, 255, 255, 0.8)",
                    },
                    "deleteIconColorSecondary": Object {
                      "&:hover": Object {
                        "color": "#FFFFFF",
                      },
                      "color": "rgba(255, 255, 255, 0.8)",
                    },
                    "deleteIconSmall": Object {
                      "fontSize": "16px",
                      "height": "16px",
                      "width": "16px",
                    },
                    "icon": Object {
                      "fontSize": "24px",
                    },
                    "iconSmall": Object {
                      "fontSize": "16px",
                      "height": "16px",
                      "marginTop": "1px",
                      "width": "16px",
                    },
                    "outlined": Object {
                      "borderColor": "rgba(0, 0, 0, 0.12)",
                      "color": "#000000",
                    },
                    "outlinedPrimary": Object {
                      "color": "#000000",
                    },
                    "outlinedSecondary": Object {
                      "color": "#000000",
                    },
                    "root": Object {
                      "& $avatar": Object {
                        "backgroundColor": "rgba(0, 0, 0, 0.24)",
                        "color": "#333333",
                      },
                      "&$disabled": Object {
                        "opacity": 0.4,
                      },
                      "backgroundColor": "rgba(0, 0, 0, 0.12)",
                      "color": "#333333",
                      "fontSize": "0.875rem",
                    },
                  },
                  "MuiExpansionPanel": Object {
                    "root": Object {
                      "&$disabled": Object {
                        "backgroundColor": "#FFFFFF",
                        "opacity": 0.32,
                      },
                      "&$expanded": Object {
                        "borderColor": "#F4AB34",
                      },
                      "border": "transparent 1px solid",
                    },
                  },
                  "MuiExpansionPanelSummary": Object {
                    "root": Object {
                      "&$disabled": Object {
                        "opacity": 1,
                      },
                      "alignItems": "flex-start",
                      "marginTop": "8px",
                    },
                  },
                  "MuiFormLabel": Object {
                    "formControl": Object {
                      "marginTop": "-4px",
                      "transform": "none",
                    },
                    "root": Object {
                      "&.Mui-focused": Object {
                        "color": "#777777",
                        "fontSize": "0.875rem",
                      },
                      "fontSize": "0.875rem",
                    },
                  },
                  "MuiIconButton": Object {
                    "root": Object {
                      "color": "#333333",
                      "padding": "8px",
                    },
                    "sizeSmall": Object {
                      "padding": "4px",
                    },
                  },
                  "MuiInputAdornment": Object {
                    "root": Object {
                      "position": "absolute",
                      "right": "0",
                    },
                  },
                  "MuiInputBase": Object {
                    "input": Object {
                      "&.Mui-disabled": Object {
                        "&:hover": Object {
                          "boxShadow": "#333333 0 0 0 1px",
                        },
                        "opacity": 0.24,
                      },
                      "&:focus": Object {
                        "boxShadow": "#F4AB34 0 0 0 2px",
                      },
                      "&:focus:not(:read-only)": Object {
                        "boxShadow": "#F4AB34 0 0 0 2px",
                      },
                      "&:hover": Object {
                        "boxShadow": "#777777 0 0 0 1px",
                      },
                      "&:hover:not(:placeholder-shown)": Object {
                        "boxShadow": "#777777 0 0 0 1px",
                      },
                      "&:hover:not(:read-only):not(:disabled):not(:focus)": Object {
                        "boxShadow": "#777777 0 0 0 1px",
                      },
                      "&:not(:placeholder-shown)": Object {
                        "boxShadow": "#333333 0 0 0 1px",
                      },
                      "&:placeholder-shown": Object {
                        "boxShadow": "#BBBBBB 0 0 0 1px",
                      },
                      "borderRadius": "4px",
                      "boxShadow": "#BBBBBB 0 0 0 1px",
                      "color": "#333333",
                      "minHeight": "24px",
                      "padding": "16px 35px 16px 16px",
                    },
                    "root": Object {
                      "&.MuiInput-underline.Mui-disabled:before": Object {
                        "borderBottom": "none",
                      },
                      "&.MuiInput-underline:after": Object {
                        "borderBottom": "none",
                      },
                      "&.MuiInput-underline:before": Object {
                        "borderBottom": "none",
                      },
                      "&.MuiInput-underline:hover:not(.Mui-disabled):before": Object {
                        "borderBottom": "none",
                      },
                      "color": "#333333",
                    },
                  },
                  "MuiInputLabel": Object {
                    "formControl": Object {
                      "marginTop": "-4px",
                      "transform": "none",
                    },
                    "shrink": Object {
                      "marginTop": "-4px",
                      "transform": "none",
                    },
                  },
                  "MuiListItem": Object {
                    "button": Object {
                      "&:hover": Object {
                        "backgroundColor": "rgba(0, 0, 0, 0.04)",
                      },
                    },
                    "root": Object {
                      "&$selected": Object {
                        "&:hover": Object {
                          "backgroundColor": "rgba(0, 0, 0, 0.04)",
                        },
                        "backgroundColor": "rgba(255, 107, 11, 0.16)",
                      },
                      "&.Mui-disabled": Object {
                        "opacity": 0.32,
                      },
                    },
                  },
                  "MuiTab": Object {
                    "root": Object {
                      "&$disabled": Object {
                        "opacity": 0.24,
                      },
                    },
                    "textColorInherit": Object {
                      "&$disabled": Object {
                        "opacity": 0.24,
                      },
                    },
                    "wrapper": Object {
                      "& > *:first-child": Object {
                        "marginBottom": "2px !important",
                      },
                    },
                  },
                  "MuiTextField": Object {
                    "& .MuiInputLabel": Object {
                      "marginTop": "20px",
                    },
                  },
                  "MuiToolbar": Object {
                    "dense": Object {
                      "@media (min-width: 600px)": Object {
                        "minHeight": "56px",
                      },
                      "minHeight": "56px",
                    },
                    "gutters": Object {
                      "@media (min-width: 600px)": Object {
                        "padding": "0 16px",
                      },
                      "padding": "0 16px",
                    },
                    "regular": Object {
                      "@media (min-width: 600px)": Object {
                        "minHeight": "56px",
                      },
                      "minHeight": "56px",
                    },
                    "root": Object {
                      "@media (min-width: 600px)": Object {
                        "padding": "0 16px",
                      },
                      "padding": "0 16px",
                    },
                  },
                },
                "palette": Object {
                  "action": Object {
                    "disabled": "rgba(51, 51, 51, 0.24)",
                  },
                  "background": Object {
                    "default": "#FAFAFA",
                    "defaultContrastText": "#333333",
                    "paper": "#FFFFFF",
                    "paperContrastText": "#333333",
                  },
                  "complementary": Object {
                    "highlight": "#000000",
                    "link": "#227BBD",
                    "linkContrastText": "#FFFFFF",
                    "warning": "#FCC433",
                    "warningContrastText": "#333333",
                  },
                  "error": Object {
                    "contrastText": "#FFFFFF",
                    "main": "#E74627",
                  },
                  "primary": Object {
                    "contrastText": "#333333",
                    "dark": "#EF8426",
                    "light": "#FEFDE8",
                    "main": "#F4AB34",
                  },
                  "secondary": Object {
                    "contrastText": "#000000",
                    "dark": "#FF5808",
                    "light": "#FFF8E1",
                    "main": "#FF6B0B",
                  },
                  "success": Object {
                    "contrastText": "#FFFFFF",
                    "main": "#569A32",
                  },
                  "text": Object {
                    "disabled": "#BBBBBB",
                    "hint": "#BBBBBB",
                    "primary": "#333333",
                    "secondary": "#777777",
                  },
                },
                "shadows": Object {
                  "0": "none",
                  "1": "0 1px 1px 0 rgba(0, 0, 0, 0.14)",
                  "12": "0 12px 17px 0 rgba(0, 0, 0, 0.14)",
                  "16": "0 16px 24px 0 rgba(0, 0, 0, 0.14)",
                  "2": "0 2px 2px 0 rgba(0, 0, 0, 0.14)",
                  "24": "0 24px 38px 0 rgba(0, 0, 0, 0.14)",
                  "3": "0 3px 4px 0 rgba(0, 0, 0, 0.14)",
                  "4": "0 4px 5px 0 rgba(0, 0, 0, 0.14)",
                  "6": "0 6px 10px 0 rgba(0, 0, 0, 0.14)",
                  "8": "0 8px 10px 0 rgba(0, 0, 0, 0.14)",
                  "9": "0 9px 12px 0 rgba(0, 0, 0, 0.14)",
                },
                "shape": Object {
                  "badgeBorderRadius": 100,
                  "borderRadius": 4,
                },
                "sizes": Object {
                  "huge": 96,
                  "hugex": 128,
                  "hugexx": 144,
                  "hugexxx": 192,
                  "large": 64,
                  "largex": 72,
                  "largexx": 80,
                  "largexxx": 88,
                  "medium": 48,
                  "mediumx": 56,
                  "micro": 4,
                  "none": 0,
                  "semi": 32,
                  "semix": 40,
                  "small": 16,
                  "standard": 24,
                  "tiny": 8,
                  "veryhuge": 256,
                },
                "spacing": 8,
                "typography": Object {
                  "body1": Object {
                    "fontSize": "1rem",
                    "fontWeight": 400,
                  },
                  "body2": Object {
                    "fontSize": "0.875rem",
                    "fontWeight": 400,
                  },
                  "button": Object {
                    "fontSize": "0.875rem",
                    "fontWeight": 600,
                  },
                  "caption": Object {
                    "fontSize": "0.75rem",
                    "fontWeight": 400,
                  },
                  "fontFamily": "\\"Roboto\\", sans-serif",
                  "fontFamilyBrand1": "\\"Helvetica Now Display\\"",
                  "fontFamilyBrand2": "\\"Helvetica Now Text\\"",
                  "fontFamilyBrand3": undefined,
                  "fontWeightBold": 700,
                  "fontWeightLight": 300,
                  "fontWeightMedium": 500,
                  "fontWeightRegular": 400,
                  "h1": Object {
                    "fontSize": "6rem",
                    "fontWeight": 300,
                  },
                  "h2": Object {
                    "fontSize": "3.75rem",
                    "fontWeight": 300,
                  },
                  "h3": Object {
                    "fontSize": "3rem",
                    "fontWeight": 400,
                  },
                  "h4": Object {
                    "fontSize": "2.125rem",
                    "fontWeight": 400,
                  },
                  "h5": Object {
                    "fontSize": "1.5rem",
                    "fontWeight": 400,
                  },
                  "h6": Object {
                    "fontSize": "1.25rem",
                    "fontWeight": 600,
                  },
                  "overline": Object {
                    "fontSize": "0.75rem",
                    "fontWeight": 400,
                  },
                  "subtitle1": Object {
                    "fontSize": "1rem",
                    "fontWeight": 400,
                  },
                  "subtitle2": Object {
                    "fontSize": "0.875rem",
                    "fontWeight": 500,
                  },
                },
              }
            }
          >
            <StyledComponent
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-gqjmRU",
                    "isStatic": false,
                    "lastClassName": "hYFWIQ",
                    "rules": Array [
                      "
  display: flex;
  flex-flow: column nowrap;
  font-family: ",
                      [Function],
                      ";
",
                    ],
                  },
                  "displayName": "styled.div",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "sc-gqjmRU",
                  "target": "div",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
              theme={
                Object {
                  "avatarSizes": Object {
                    "huge": Object {
                      "fontSize": "1.5rem",
                      "size": 80,
                    },
                    "large": Object {
                      "fontSize": "1rem",
                      "size": 48,
                    },
                    "small": Object {
                      "fontSize": ".875rem",
                      "size": 32,
                    },
                    "standard": Object {
                      "fontSize": "1rem",
                      "size": 40,
                    },
                    "tiny": Object {
                      "fontSize": ".625rem",
                      "size": 24,
                    },
                  },
                  "buttonSizes": Object {
                    "large": Object {
                      "minHeight": 48,
                      "paddingBottom": 16,
                      "paddingLeft": 16,
                      "paddingRight": 16,
                      "paddingTop": 16,
                    },
                    "medium": Object {
                      "minHeight": 40,
                      "paddingBottom": 12,
                      "paddingLeft": 16,
                      "paddingRight": 16,
                      "paddingTop": 12,
                    },
                    "small": Object {
                      "minHeight": 32,
                      "paddingBottom": 8,
                      "paddingLeft": 8,
                      "paddingRight": 8,
                      "paddingTop": 8,
                    },
                  },
                  "iconSizes": Object {
                    "huge": 144,
                    "hugex": 192,
                    "hugexx": 256,
                    "large": 72,
                    "largex": 96,
                    "largexx": 128,
                    "medium": 64,
                    "micro": 16,
                    "small": 32,
                    "standard": 48,
                    "tiny": 24,
                  },
                  "overrides": Object {
                    "MuiAvatar": Object {
                      "colorDefault": Object {
                        "color": "#333333",
                      },
                    },
                    "MuiBadge": Object {
                      "badge": Object {
                        "padding": "0 4px",
                      },
                    },
                    "MuiButton": Object {
                      "outlinedPrimary": Object {
                        "color": "#333333",
                      },
                      "outlinedSecondary": Object {
                        "color": "#333333",
                      },
                      "root": Object {
                        "fontSize": "0.875rem",
                        "minHeight": "40px",
                        "padding": "8px 16px",
                      },
                      "sizeLarge": Object {
                        "fontSize": "0.875rem",
                        "minHeight": "48px",
                      },
                      "sizeSmall": Object {
                        "fontSize": "0.875rem",
                        "minHeight": "32px",
                      },
                      "textPrimary": Object {
                        "color": "#333333",
                      },
                    },
                    "MuiChip": Object {
                      "clickableColorPrimary": Object {
                        "&:hover": Object {
                          "backgroundColor": "#EF8426",
                        },
                      },
                      "clickableColorSecondary": Object {
                        "&:hover": Object {
                          "backgroundColor": "#EF8426",
                        },
                      },
                      "deleteIcon": Object {
                        "&:hover": Object {
                          "color": "#000000",
                        },
                        "color": "rgba(0, 0, 0, 0.8)",
                        "fontSize": "24px",
                        "height": "24px",
                        "width": "24px",
                      },
                      "deleteIconColorPrimary": Object {
                        "&:hover": Object {
                          "color": "#FFFFFF",
                        },
                        "color": "rgba(255, 255, 255, 0.8)",
                      },
                      "deleteIconColorSecondary": Object {
                        "&:hover": Object {
                          "color": "#FFFFFF",
                        },
                        "color": "rgba(255, 255, 255, 0.8)",
                      },
                      "deleteIconSmall": Object {
                        "fontSize": "16px",
                        "height": "16px",
                        "width": "16px",
                      },
                      "icon": Object {
                        "fontSize": "24px",
                      },
                      "iconSmall": Object {
                        "fontSize": "16px",
                        "height": "16px",
                        "marginTop": "1px",
                        "width": "16px",
                      },
                      "outlined": Object {
                        "borderColor": "rgba(0, 0, 0, 0.12)",
                        "color": "#000000",
                      },
                      "outlinedPrimary": Object {
                        "color": "#000000",
                      },
                      "outlinedSecondary": Object {
                        "color": "#000000",
                      },
                      "root": Object {
                        "& $avatar": Object {
                          "backgroundColor": "rgba(0, 0, 0, 0.24)",
                          "color": "#333333",
                        },
                        "&$disabled": Object {
                          "opacity": 0.4,
                        },
                        "backgroundColor": "rgba(0, 0, 0, 0.12)",
                        "color": "#333333",
                        "fontSize": "0.875rem",
                      },
                    },
                    "MuiExpansionPanel": Object {
                      "root": Object {
                        "&$disabled": Object {
                          "backgroundColor": "#FFFFFF",
                          "opacity": 0.32,
                        },
                        "&$expanded": Object {
                          "borderColor": "#F4AB34",
                        },
                        "border": "transparent 1px solid",
                      },
                    },
                    "MuiExpansionPanelSummary": Object {
                      "root": Object {
                        "&$disabled": Object {
                          "opacity": 1,
                        },
                        "alignItems": "flex-start",
                        "marginTop": "8px",
                      },
                    },
                    "MuiFormLabel": Object {
                      "formControl": Object {
                        "marginTop": "-4px",
                        "transform": "none",
                      },
                      "root": Object {
                        "&.Mui-focused": Object {
                          "color": "#777777",
                          "fontSize": "0.875rem",
                        },
                        "fontSize": "0.875rem",
                      },
                    },
                    "MuiIconButton": Object {
                      "root": Object {
                        "color": "#333333",
                        "padding": "8px",
                      },
                      "sizeSmall": Object {
                        "padding": "4px",
                      },
                    },
                    "MuiInputAdornment": Object {
                      "root": Object {
                        "position": "absolute",
                        "right": "0",
                      },
                    },
                    "MuiInputBase": Object {
                      "input": Object {
                        "&.Mui-disabled": Object {
                          "&:hover": Object {
                            "boxShadow": "#333333 0 0 0 1px",
                          },
                          "opacity": 0.24,
                        },
                        "&:focus": Object {
                          "boxShadow": "#F4AB34 0 0 0 2px",
                        },
                        "&:focus:not(:read-only)": Object {
                          "boxShadow": "#F4AB34 0 0 0 2px",
                        },
                        "&:hover": Object {
                          "boxShadow": "#777777 0 0 0 1px",
                        },
                        "&:hover:not(:placeholder-shown)": Object {
                          "boxShadow": "#777777 0 0 0 1px",
                        },
                        "&:hover:not(:read-only):not(:disabled):not(:focus)": Object {
                          "boxShadow": "#777777 0 0 0 1px",
                        },
                        "&:not(:placeholder-shown)": Object {
                          "boxShadow": "#333333 0 0 0 1px",
                        },
                        "&:placeholder-shown": Object {
                          "boxShadow": "#BBBBBB 0 0 0 1px",
                        },
                        "borderRadius": "4px",
                        "boxShadow": "#BBBBBB 0 0 0 1px",
                        "color": "#333333",
                        "minHeight": "24px",
                        "padding": "16px 35px 16px 16px",
                      },
                      "root": Object {
                        "&.MuiInput-underline.Mui-disabled:before": Object {
                          "borderBottom": "none",
                        },
                        "&.MuiInput-underline:after": Object {
                          "borderBottom": "none",
                        },
                        "&.MuiInput-underline:before": Object {
                          "borderBottom": "none",
                        },
                        "&.MuiInput-underline:hover:not(.Mui-disabled):before": Object {
                          "borderBottom": "none",
                        },
                        "color": "#333333",
                      },
                    },
                    "MuiInputLabel": Object {
                      "formControl": Object {
                        "marginTop": "-4px",
                        "transform": "none",
                      },
                      "shrink": Object {
                        "marginTop": "-4px",
                        "transform": "none",
                      },
                    },
                    "MuiListItem": Object {
                      "button": Object {
                        "&:hover": Object {
                          "backgroundColor": "rgba(0, 0, 0, 0.04)",
                        },
                      },
                      "root": Object {
                        "&$selected": Object {
                          "&:hover": Object {
                            "backgroundColor": "rgba(0, 0, 0, 0.04)",
                          },
                          "backgroundColor": "rgba(255, 107, 11, 0.16)",
                        },
                        "&.Mui-disabled": Object {
                          "opacity": 0.32,
                        },
                      },
                    },
                    "MuiTab": Object {
                      "root": Object {
                        "&$disabled": Object {
                          "opacity": 0.24,
                        },
                      },
                      "textColorInherit": Object {
                        "&$disabled": Object {
                          "opacity": 0.24,
                        },
                      },
                      "wrapper": Object {
                        "& > *:first-child": Object {
                          "marginBottom": "2px !important",
                        },
                      },
                    },
                    "MuiTextField": Object {
                      "& .MuiInputLabel": Object {
                        "marginTop": "20px",
                      },
                    },
                    "MuiToolbar": Object {
                      "dense": Object {
                        "@media (min-width: 600px)": Object {
                          "minHeight": "56px",
                        },
                        "minHeight": "56px",
                      },
                      "gutters": Object {
                        "@media (min-width: 600px)": Object {
                          "padding": "0 16px",
                        },
                        "padding": "0 16px",
                      },
                      "regular": Object {
                        "@media (min-width: 600px)": Object {
                          "minHeight": "56px",
                        },
                        "minHeight": "56px",
                      },
                      "root": Object {
                        "@media (min-width: 600px)": Object {
                          "padding": "0 16px",
                        },
                        "padding": "0 16px",
                      },
                    },
                  },
                  "palette": Object {
                    "action": Object {
                      "disabled": "rgba(51, 51, 51, 0.24)",
                    },
                    "background": Object {
                      "default": "#FAFAFA",
                      "defaultContrastText": "#333333",
                      "paper": "#FFFFFF",
                      "paperContrastText": "#333333",
                    },
                    "complementary": Object {
                      "highlight": "#000000",
                      "link": "#227BBD",
                      "linkContrastText": "#FFFFFF",
                      "warning": "#FCC433",
                      "warningContrastText": "#333333",
                    },
                    "error": Object {
                      "contrastText": "#FFFFFF",
                      "main": "#E74627",
                    },
                    "primary": Object {
                      "contrastText": "#333333",
                      "dark": "#EF8426",
                      "light": "#FEFDE8",
                      "main": "#F4AB34",
                    },
                    "secondary": Object {
                      "contrastText": "#000000",
                      "dark": "#FF5808",
                      "light": "#FFF8E1",
                      "main": "#FF6B0B",
                    },
                    "success": Object {
                      "contrastText": "#FFFFFF",
                      "main": "#569A32",
                    },
                    "text": Object {
                      "disabled": "#BBBBBB",
                      "hint": "#BBBBBB",
                      "primary": "#333333",
                      "secondary": "#777777",
                    },
                  },
                  "shadows": Object {
                    "0": "none",
                    "1": "0 1px 1px 0 rgba(0, 0, 0, 0.14)",
                    "12": "0 12px 17px 0 rgba(0, 0, 0, 0.14)",
                    "16": "0 16px 24px 0 rgba(0, 0, 0, 0.14)",
                    "2": "0 2px 2px 0 rgba(0, 0, 0, 0.14)",
                    "24": "0 24px 38px 0 rgba(0, 0, 0, 0.14)",
                    "3": "0 3px 4px 0 rgba(0, 0, 0, 0.14)",
                    "4": "0 4px 5px 0 rgba(0, 0, 0, 0.14)",
                    "6": "0 6px 10px 0 rgba(0, 0, 0, 0.14)",
                    "8": "0 8px 10px 0 rgba(0, 0, 0, 0.14)",
                    "9": "0 9px 12px 0 rgba(0, 0, 0, 0.14)",
                  },
                  "shape": Object {
                    "badgeBorderRadius": 100,
                    "borderRadius": 4,
                  },
                  "sizes": Object {
                    "huge": 96,
                    "hugex": 128,
                    "hugexx": 144,
                    "hugexxx": 192,
                    "large": 64,
                    "largex": 72,
                    "largexx": 80,
                    "largexxx": 88,
                    "medium": 48,
                    "mediumx": 56,
                    "micro": 4,
                    "none": 0,
                    "semi": 32,
                    "semix": 40,
                    "small": 16,
                    "standard": 24,
                    "tiny": 8,
                    "veryhuge": 256,
                  },
                  "spacing": 8,
                  "typography": Object {
                    "body1": Object {
                      "fontSize": "1rem",
                      "fontWeight": 400,
                    },
                    "body2": Object {
                      "fontSize": "0.875rem",
                      "fontWeight": 400,
                    },
                    "button": Object {
                      "fontSize": "0.875rem",
                      "fontWeight": 600,
                    },
                    "caption": Object {
                      "fontSize": "0.75rem",
                      "fontWeight": 400,
                    },
                    "fontFamily": "\\"Roboto\\", sans-serif",
                    "fontFamilyBrand1": "\\"Helvetica Now Display\\"",
                    "fontFamilyBrand2": "\\"Helvetica Now Text\\"",
                    "fontFamilyBrand3": undefined,
                    "fontWeightBold": 700,
                    "fontWeightLight": 300,
                    "fontWeightMedium": 500,
                    "fontWeightRegular": 400,
                    "h1": Object {
                      "fontSize": "6rem",
                      "fontWeight": 300,
                    },
                    "h2": Object {
                      "fontSize": "3.75rem",
                      "fontWeight": 300,
                    },
                    "h3": Object {
                      "fontSize": "3rem",
                      "fontWeight": 400,
                    },
                    "h4": Object {
                      "fontSize": "2.125rem",
                      "fontWeight": 400,
                    },
                    "h5": Object {
                      "fontSize": "1.5rem",
                      "fontWeight": 400,
                    },
                    "h6": Object {
                      "fontSize": "1.25rem",
                      "fontWeight": 600,
                    },
                    "overline": Object {
                      "fontSize": "0.75rem",
                      "fontWeight": 400,
                    },
                    "subtitle1": Object {
                      "fontSize": "1rem",
                      "fontWeight": 400,
                    },
                    "subtitle2": Object {
                      "fontSize": "0.875rem",
                      "fontWeight": 500,
                    },
                  },
                }
              }
            >
              <div
                className="sc-gqjmRU hYFWIQ"
              >
                <styled.label
                  disabled={false}
                  state="error"
                  theme={
                    Object {
                      "avatarSizes": Object {
                        "huge": Object {
                          "fontSize": "1.5rem",
                          "size": 80,
                        },
                        "large": Object {
                          "fontSize": "1rem",
                          "size": 48,
                        },
                        "small": Object {
                          "fontSize": ".875rem",
                          "size": 32,
                        },
                        "standard": Object {
                          "fontSize": "1rem",
                          "size": 40,
                        },
                        "tiny": Object {
                          "fontSize": ".625rem",
                          "size": 24,
                        },
                      },
                      "buttonSizes": Object {
                        "large": Object {
                          "minHeight": 48,
                          "paddingBottom": 16,
                          "paddingLeft": 16,
                          "paddingRight": 16,
                          "paddingTop": 16,
                        },
                        "medium": Object {
                          "minHeight": 40,
                          "paddingBottom": 12,
                          "paddingLeft": 16,
                          "paddingRight": 16,
                          "paddingTop": 12,
                        },
                        "small": Object {
                          "minHeight": 32,
                          "paddingBottom": 8,
                          "paddingLeft": 8,
                          "paddingRight": 8,
                          "paddingTop": 8,
                        },
                      },
                      "iconSizes": Object {
                        "huge": 144,
                        "hugex": 192,
                        "hugexx": 256,
                        "large": 72,
                        "largex": 96,
                        "largexx": 128,
                        "medium": 64,
                        "micro": 16,
                        "small": 32,
                        "standard": 48,
                        "tiny": 24,
                      },
                      "overrides": Object {
                        "MuiAvatar": Object {
                          "colorDefault": Object {
                            "color": "#333333",
                          },
                        },
                        "MuiBadge": Object {
                          "badge": Object {
                            "padding": "0 4px",
                          },
                        },
                        "MuiButton": Object {
                          "outlinedPrimary": Object {
                            "color": "#333333",
                          },
                          "outlinedSecondary": Object {
                            "color": "#333333",
                          },
                          "root": Object {
                            "fontSize": "0.875rem",
                            "minHeight": "40px",
                            "padding": "8px 16px",
                          },
                          "sizeLarge": Object {
                            "fontSize": "0.875rem",
                            "minHeight": "48px",
                          },
                          "sizeSmall": Object {
                            "fontSize": "0.875rem",
                            "minHeight": "32px",
                          },
                          "textPrimary": Object {
                            "color": "#333333",
                          },
                        },
                        "MuiChip": Object {
                          "clickableColorPrimary": Object {
                            "&:hover": Object {
                              "backgroundColor": "#EF8426",
                            },
                          },
                          "clickableColorSecondary": Object {
                            "&:hover": Object {
                              "backgroundColor": "#EF8426",
                            },
                          },
                          "deleteIcon": Object {
                            "&:hover": Object {
                              "color": "#000000",
                            },
                            "color": "rgba(0, 0, 0, 0.8)",
                            "fontSize": "24px",
                            "height": "24px",
                            "width": "24px",
                          },
                          "deleteIconColorPrimary": Object {
                            "&:hover": Object {
                              "color": "#FFFFFF",
                            },
                            "color": "rgba(255, 255, 255, 0.8)",
                          },
                          "deleteIconColorSecondary": Object {
                            "&:hover": Object {
                              "color": "#FFFFFF",
                            },
                            "color": "rgba(255, 255, 255, 0.8)",
                          },
                          "deleteIconSmall": Object {
                            "fontSize": "16px",
                            "height": "16px",
                            "width": "16px",
                          },
                          "icon": Object {
                            "fontSize": "24px",
                          },
                          "iconSmall": Object {
                            "fontSize": "16px",
                            "height": "16px",
                            "marginTop": "1px",
                            "width": "16px",
                          },
                          "outlined": Object {
                            "borderColor": "rgba(0, 0, 0, 0.12)",
                            "color": "#000000",
                          },
                          "outlinedPrimary": Object {
                            "color": "#000000",
                          },
                          "outlinedSecondary": Object {
                            "color": "#000000",
                          },
                          "root": Object {
                            "& $avatar": Object {
                              "backgroundColor": "rgba(0, 0, 0, 0.24)",
                              "color": "#333333",
                            },
                            "&$disabled": Object {
                              "opacity": 0.4,
                            },
                            "backgroundColor": "rgba(0, 0, 0, 0.12)",
                            "color": "#333333",
                            "fontSize": "0.875rem",
                          },
                        },
                        "MuiExpansionPanel": Object {
                          "root": Object {
                            "&$disabled": Object {
                              "backgroundColor": "#FFFFFF",
                              "opacity": 0.32,
                            },
                            "&$expanded": Object {
                              "borderColor": "#F4AB34",
                            },
                            "border": "transparent 1px solid",
                          },
                        },
                        "MuiExpansionPanelSummary": Object {
                          "root": Object {
                            "&$disabled": Object {
                              "opacity": 1,
                            },
                            "alignItems": "flex-start",
                            "marginTop": "8px",
                          },
                        },
                        "MuiFormLabel": Object {
                          "formControl": Object {
                            "marginTop": "-4px",
                            "transform": "none",
                          },
                          "root": Object {
                            "&.Mui-focused": Object {
                              "color": "#777777",
                              "fontSize": "0.875rem",
                            },
                            "fontSize": "0.875rem",
                          },
                        },
                        "MuiIconButton": Object {
                          "root": Object {
                            "color": "#333333",
                            "padding": "8px",
                          },
                          "sizeSmall": Object {
                            "padding": "4px",
                          },
                        },
                        "MuiInputAdornment": Object {
                          "root": Object {
                            "position": "absolute",
                            "right": "0",
                          },
                        },
                        "MuiInputBase": Object {
                          "input": Object {
                            "&.Mui-disabled": Object {
                              "&:hover": Object {
                                "boxShadow": "#333333 0 0 0 1px",
                              },
                              "opacity": 0.24,
                            },
                            "&:focus": Object {
                              "boxShadow": "#F4AB34 0 0 0 2px",
                            },
                            "&:focus:not(:read-only)": Object {
                              "boxShadow": "#F4AB34 0 0 0 2px",
                            },
                            "&:hover": Object {
                              "boxShadow": "#777777 0 0 0 1px",
                            },
                            "&:hover:not(:placeholder-shown)": Object {
                              "boxShadow": "#777777 0 0 0 1px",
                            },
                            "&:hover:not(:read-only):not(:disabled):not(:focus)": Object {
                              "boxShadow": "#777777 0 0 0 1px",
                            },
                            "&:not(:placeholder-shown)": Object {
                              "boxShadow": "#333333 0 0 0 1px",
                            },
                            "&:placeholder-shown": Object {
                              "boxShadow": "#BBBBBB 0 0 0 1px",
                            },
                            "borderRadius": "4px",
                            "boxShadow": "#BBBBBB 0 0 0 1px",
                            "color": "#333333",
                            "minHeight": "24px",
                            "padding": "16px 35px 16px 16px",
                          },
                          "root": Object {
                            "&.MuiInput-underline.Mui-disabled:before": Object {
                              "borderBottom": "none",
                            },
                            "&.MuiInput-underline:after": Object {
                              "borderBottom": "none",
                            },
                            "&.MuiInput-underline:before": Object {
                              "borderBottom": "none",
                            },
                            "&.MuiInput-underline:hover:not(.Mui-disabled):before": Object {
                              "borderBottom": "none",
                            },
                            "color": "#333333",
                          },
                        },
                        "MuiInputLabel": Object {
                          "formControl": Object {
                            "marginTop": "-4px",
                            "transform": "none",
                          },
                          "shrink": Object {
                            "marginTop": "-4px",
                            "transform": "none",
                          },
                        },
                        "MuiListItem": Object {
                          "button": Object {
                            "&:hover": Object {
                              "backgroundColor": "rgba(0, 0, 0, 0.04)",
                            },
                          },
                          "root": Object {
                            "&$selected": Object {
                              "&:hover": Object {
                                "backgroundColor": "rgba(0, 0, 0, 0.04)",
                              },
                              "backgroundColor": "rgba(255, 107, 11, 0.16)",
                            },
                            "&.Mui-disabled": Object {
                              "opacity": 0.32,
                            },
                          },
                        },
                        "MuiTab": Object {
                          "root": Object {
                            "&$disabled": Object {
                              "opacity": 0.24,
                            },
                          },
                          "textColorInherit": Object {
                            "&$disabled": Object {
                              "opacity": 0.24,
                            },
                          },
                          "wrapper": Object {
                            "& > *:first-child": Object {
                              "marginBottom": "2px !important",
                            },
                          },
                        },
                        "MuiTextField": Object {
                          "& .MuiInputLabel": Object {
                            "marginTop": "20px",
                          },
                        },
                        "MuiToolbar": Object {
                          "dense": Object {
                            "@media (min-width: 600px)": Object {
                              "minHeight": "56px",
                            },
                            "minHeight": "56px",
                          },
                          "gutters": Object {
                            "@media (min-width: 600px)": Object {
                              "padding": "0 16px",
                            },
                            "padding": "0 16px",
                          },
                          "regular": Object {
                            "@media (min-width: 600px)": Object {
                              "minHeight": "56px",
                            },
                            "minHeight": "56px",
                          },
                          "root": Object {
                            "@media (min-width: 600px)": Object {
                              "padding": "0 16px",
                            },
                            "padding": "0 16px",
                          },
                        },
                      },
                      "palette": Object {
                        "action": Object {
                          "disabled": "rgba(51, 51, 51, 0.24)",
                        },
                        "background": Object {
                          "default": "#FAFAFA",
                          "defaultContrastText": "#333333",
                          "paper": "#FFFFFF",
                          "paperContrastText": "#333333",
                        },
                        "complementary": Object {
                          "highlight": "#000000",
                          "link": "#227BBD",
                          "linkContrastText": "#FFFFFF",
                          "warning": "#FCC433",
                          "warningContrastText": "#333333",
                        },
                        "error": Object {
                          "contrastText": "#FFFFFF",
                          "main": "#E74627",
                        },
                        "primary": Object {
                          "contrastText": "#333333",
                          "dark": "#EF8426",
                          "light": "#FEFDE8",
                          "main": "#F4AB34",
                        },
                        "secondary": Object {
                          "contrastText": "#000000",
                          "dark": "#FF5808",
                          "light": "#FFF8E1",
                          "main": "#FF6B0B",
                        },
                        "success": Object {
                          "contrastText": "#FFFFFF",
                          "main": "#569A32",
                        },
                        "text": Object {
                          "disabled": "#BBBBBB",
                          "hint": "#BBBBBB",
                          "primary": "#333333",
                          "secondary": "#777777",
                        },
                      },
                      "shadows": Object {
                        "0": "none",
                        "1": "0 1px 1px 0 rgba(0, 0, 0, 0.14)",
                        "12": "0 12px 17px 0 rgba(0, 0, 0, 0.14)",
                        "16": "0 16px 24px 0 rgba(0, 0, 0, 0.14)",
                        "2": "0 2px 2px 0 rgba(0, 0, 0, 0.14)",
                        "24": "0 24px 38px 0 rgba(0, 0, 0, 0.14)",
                        "3": "0 3px 4px 0 rgba(0, 0, 0, 0.14)",
                        "4": "0 4px 5px 0 rgba(0, 0, 0, 0.14)",
                        "6": "0 6px 10px 0 rgba(0, 0, 0, 0.14)",
                        "8": "0 8px 10px 0 rgba(0, 0, 0, 0.14)",
                        "9": "0 9px 12px 0 rgba(0, 0, 0, 0.14)",
                      },
                      "shape": Object {
                        "badgeBorderRadius": 100,
                        "borderRadius": 4,
                      },
                      "sizes": Object {
                        "huge": 96,
                        "hugex": 128,
                        "hugexx": 144,
                        "hugexxx": 192,
                        "large": 64,
                        "largex": 72,
                        "largexx": 80,
                        "largexxx": 88,
                        "medium": 48,
                        "mediumx": 56,
                        "micro": 4,
                        "none": 0,
                        "semi": 32,
                        "semix": 40,
                        "small": 16,
                        "standard": 24,
                        "tiny": 8,
                        "veryhuge": 256,
                      },
                      "spacing": 8,
                      "typography": Object {
                        "body1": Object {
                          "fontSize": "1rem",
                          "fontWeight": 400,
                        },
                        "body2": Object {
                          "fontSize": "0.875rem",
                          "fontWeight": 400,
                        },
                        "button": Object {
                          "fontSize": "0.875rem",
                          "fontWeight": 600,
                        },
                        "caption": Object {
                          "fontSize": "0.75rem",
                          "fontWeight": 400,
                        },
                        "fontFamily": "\\"Roboto\\", sans-serif",
                        "fontFamilyBrand1": "\\"Helvetica Now Display\\"",
                        "fontFamilyBrand2": "\\"Helvetica Now Text\\"",
                        "fontFamilyBrand3": undefined,
                        "fontWeightBold": 700,
                        "fontWeightLight": 300,
                        "fontWeightMedium": 500,
                        "fontWeightRegular": 400,
                        "h1": Object {
                          "fontSize": "6rem",
                          "fontWeight": 300,
                        },
                        "h2": Object {
                          "fontSize": "3.75rem",
                          "fontWeight": 300,
                        },
                        "h3": Object {
                          "fontSize": "3rem",
                          "fontWeight": 400,
                        },
                        "h4": Object {
                          "fontSize": "2.125rem",
                          "fontWeight": 400,
                        },
                        "h5": Object {
                          "fontSize": "1.5rem",
                          "fontWeight": 400,
                        },
                        "h6": Object {
                          "fontSize": "1.25rem",
                          "fontWeight": 600,
                        },
                        "overline": Object {
                          "fontSize": "0.75rem",
                          "fontWeight": 400,
                        },
                        "subtitle1": Object {
                          "fontSize": "1rem",
                          "fontWeight": 400,
                        },
                        "subtitle2": Object {
                          "fontSize": "0.875rem",
                          "fontWeight": 500,
                        },
                      },
                    }
                  }
                >
                  <StyledComponent
                    disabled={false}
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "sc-VigVT",
                          "isStatic": false,
                          "lastClassName": "fFbpsb",
                          "rules": Array [
                            "
  font-size: ",
                            [Function],
                            ";
  font-weight: ",
                            [Function],
                            ";
  color: ",
                            [Function],
                            ";
  line-height: 1.2;
  padding: 0 0 ",
                            "4",
                            "px;
  font-family: ",
                            [Function],
                            ";
",
                          ],
                        },
                        "displayName": "styled.label",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "sc-VigVT",
                        "target": "label",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                    state="error"
                    theme={
                      Object {
                        "avatarSizes": Object {
                          "huge": Object {
                            "fontSize": "1.5rem",
                            "size": 80,
                          },
                          "large": Object {
                            "fontSize": "1rem",
                            "size": 48,
                          },
                          "small": Object {
                            "fontSize": ".875rem",
                            "size": 32,
                          },
                          "standard": Object {
                            "fontSize": "1rem",
                            "size": 40,
                          },
                          "tiny": Object {
                            "fontSize": ".625rem",
                            "size": 24,
                          },
                        },
                        "buttonSizes": Object {
                          "large": Object {
                            "minHeight": 48,
                            "paddingBottom": 16,
                            "paddingLeft": 16,
                            "paddingRight": 16,
                            "paddingTop": 16,
                          },
                          "medium": Object {
                            "minHeight": 40,
                            "paddingBottom": 12,
                            "paddingLeft": 16,
                            "paddingRight": 16,
                            "paddingTop": 12,
                          },
                          "small": Object {
                            "minHeight": 32,
                            "paddingBottom": 8,
                            "paddingLeft": 8,
                            "paddingRight": 8,
                            "paddingTop": 8,
                          },
                        },
                        "iconSizes": Object {
                          "huge": 144,
                          "hugex": 192,
                          "hugexx": 256,
                          "large": 72,
                          "largex": 96,
                          "largexx": 128,
                          "medium": 64,
                          "micro": 16,
                          "small": 32,
                          "standard": 48,
                          "tiny": 24,
                        },
                        "overrides": Object {
                          "MuiAvatar": Object {
                            "colorDefault": Object {
                              "color": "#333333",
                            },
                          },
                          "MuiBadge": Object {
                            "badge": Object {
                              "padding": "0 4px",
                            },
                          },
                          "MuiButton": Object {
                            "outlinedPrimary": Object {
                              "color": "#333333",
                            },
                            "outlinedSecondary": Object {
                              "color": "#333333",
                            },
                            "root": Object {
                              "fontSize": "0.875rem",
                              "minHeight": "40px",
                              "padding": "8px 16px",
                            },
                            "sizeLarge": Object {
                              "fontSize": "0.875rem",
                              "minHeight": "48px",
                            },
                            "sizeSmall": Object {
                              "fontSize": "0.875rem",
                              "minHeight": "32px",
                            },
                            "textPrimary": Object {
                              "color": "#333333",
                            },
                          },
                          "MuiChip": Object {
                            "clickableColorPrimary": Object {
                              "&:hover": Object {
                                "backgroundColor": "#EF8426",
                              },
                            },
                            "clickableColorSecondary": Object {
                              "&:hover": Object {
                                "backgroundColor": "#EF8426",
                              },
                            },
                            "deleteIcon": Object {
                              "&:hover": Object {
                                "color": "#000000",
                              },
                              "color": "rgba(0, 0, 0, 0.8)",
                              "fontSize": "24px",
                              "height": "24px",
                              "width": "24px",
                            },
                            "deleteIconColorPrimary": Object {
                              "&:hover": Object {
                                "color": "#FFFFFF",
                              },
                              "color": "rgba(255, 255, 255, 0.8)",
                            },
                            "deleteIconColorSecondary": Object {
                              "&:hover": Object {
                                "color": "#FFFFFF",
                              },
                              "color": "rgba(255, 255, 255, 0.8)",
                            },
                            "deleteIconSmall": Object {
                              "fontSize": "16px",
                              "height": "16px",
                              "width": "16px",
                            },
                            "icon": Object {
                              "fontSize": "24px",
                            },
                            "iconSmall": Object {
                              "fontSize": "16px",
                              "height": "16px",
                              "marginTop": "1px",
                              "width": "16px",
                            },
                            "outlined": Object {
                              "borderColor": "rgba(0, 0, 0, 0.12)",
                              "color": "#000000",
                            },
                            "outlinedPrimary": Object {
                              "color": "#000000",
                            },
                            "outlinedSecondary": Object {
                              "color": "#000000",
                            },
                            "root": Object {
                              "& $avatar": Object {
                                "backgroundColor": "rgba(0, 0, 0, 0.24)",
                                "color": "#333333",
                              },
                              "&$disabled": Object {
                                "opacity": 0.4,
                              },
                              "backgroundColor": "rgba(0, 0, 0, 0.12)",
                              "color": "#333333",
                              "fontSize": "0.875rem",
                            },
                          },
                          "MuiExpansionPanel": Object {
                            "root": Object {
                              "&$disabled": Object {
                                "backgroundColor": "#FFFFFF",
                                "opacity": 0.32,
                              },
                              "&$expanded": Object {
                                "borderColor": "#F4AB34",
                              },
                              "border": "transparent 1px solid",
                            },
                          },
                          "MuiExpansionPanelSummary": Object {
                            "root": Object {
                              "&$disabled": Object {
                                "opacity": 1,
                              },
                              "alignItems": "flex-start",
                              "marginTop": "8px",
                            },
                          },
                          "MuiFormLabel": Object {
                            "formControl": Object {
                              "marginTop": "-4px",
                              "transform": "none",
                            },
                            "root": Object {
                              "&.Mui-focused": Object {
                                "color": "#777777",
                                "fontSize": "0.875rem",
                              },
                              "fontSize": "0.875rem",
                            },
                          },
                          "MuiIconButton": Object {
                            "root": Object {
                              "color": "#333333",
                              "padding": "8px",
                            },
                            "sizeSmall": Object {
                              "padding": "4px",
                            },
                          },
                          "MuiInputAdornment": Object {
                            "root": Object {
                              "position": "absolute",
                              "right": "0",
                            },
                          },
                          "MuiInputBase": Object {
                            "input": Object {
                              "&.Mui-disabled": Object {
                                "&:hover": Object {
                                  "boxShadow": "#333333 0 0 0 1px",
                                },
                                "opacity": 0.24,
                              },
                              "&:focus": Object {
                                "boxShadow": "#F4AB34 0 0 0 2px",
                              },
                              "&:focus:not(:read-only)": Object {
                                "boxShadow": "#F4AB34 0 0 0 2px",
                              },
                              "&:hover": Object {
                                "boxShadow": "#777777 0 0 0 1px",
                              },
                              "&:hover:not(:placeholder-shown)": Object {
                                "boxShadow": "#777777 0 0 0 1px",
                              },
                              "&:hover:not(:read-only):not(:disabled):not(:focus)": Object {
                                "boxShadow": "#777777 0 0 0 1px",
                              },
                              "&:not(:placeholder-shown)": Object {
                                "boxShadow": "#333333 0 0 0 1px",
                              },
                              "&:placeholder-shown": Object {
                                "boxShadow": "#BBBBBB 0 0 0 1px",
                              },
                              "borderRadius": "4px",
                              "boxShadow": "#BBBBBB 0 0 0 1px",
                              "color": "#333333",
                              "minHeight": "24px",
                              "padding": "16px 35px 16px 16px",
                            },
                            "root": Object {
                              "&.MuiInput-underline.Mui-disabled:before": Object {
                                "borderBottom": "none",
                              },
                              "&.MuiInput-underline:after": Object {
                                "borderBottom": "none",
                              },
                              "&.MuiInput-underline:before": Object {
                                "borderBottom": "none",
                              },
                              "&.MuiInput-underline:hover:not(.Mui-disabled):before": Object {
                                "borderBottom": "none",
                              },
                              "color": "#333333",
                            },
                          },
                          "MuiInputLabel": Object {
                            "formControl": Object {
                              "marginTop": "-4px",
                              "transform": "none",
                            },
                            "shrink": Object {
                              "marginTop": "-4px",
                              "transform": "none",
                            },
                          },
                          "MuiListItem": Object {
                            "button": Object {
                              "&:hover": Object {
                                "backgroundColor": "rgba(0, 0, 0, 0.04)",
                              },
                            },
                            "root": Object {
                              "&$selected": Object {
                                "&:hover": Object {
                                  "backgroundColor": "rgba(0, 0, 0, 0.04)",
                                },
                                "backgroundColor": "rgba(255, 107, 11, 0.16)",
                              },
                              "&.Mui-disabled": Object {
                                "opacity": 0.32,
                              },
                            },
                          },
                          "MuiTab": Object {
                            "root": Object {
                              "&$disabled": Object {
                                "opacity": 0.24,
                              },
                            },
                            "textColorInherit": Object {
                              "&$disabled": Object {
                                "opacity": 0.24,
                              },
                            },
                            "wrapper": Object {
                              "& > *:first-child": Object {
                                "marginBottom": "2px !important",
                              },
                            },
                          },
                          "MuiTextField": Object {
                            "& .MuiInputLabel": Object {
                              "marginTop": "20px",
                            },
                          },
                          "MuiToolbar": Object {
                            "dense": Object {
                              "@media (min-width: 600px)": Object {
                                "minHeight": "56px",
                              },
                              "minHeight": "56px",
                            },
                            "gutters": Object {
                              "@media (min-width: 600px)": Object {
                                "padding": "0 16px",
                              },
                              "padding": "0 16px",
                            },
                            "regular": Object {
                              "@media (min-width: 600px)": Object {
                                "minHeight": "56px",
                              },
                              "minHeight": "56px",
                            },
                            "root": Object {
                              "@media (min-width: 600px)": Object {
                                "padding": "0 16px",
                              },
                              "padding": "0 16px",
                            },
                          },
                        },
                        "palette": Object {
                          "action": Object {
                            "disabled": "rgba(51, 51, 51, 0.24)",
                          },
                          "background": Object {
                            "default": "#FAFAFA",
                            "defaultContrastText": "#333333",
                            "paper": "#FFFFFF",
                            "paperContrastText": "#333333",
                          },
                          "complementary": Object {
                            "highlight": "#000000",
                            "link": "#227BBD",
                            "linkContrastText": "#FFFFFF",
                            "warning": "#FCC433",
                            "warningContrastText": "#333333",
                          },
                          "error": Object {
                            "contrastText": "#FFFFFF",
                            "main": "#E74627",
                          },
                          "primary": Object {
                            "contrastText": "#333333",
                            "dark": "#EF8426",
                            "light": "#FEFDE8",
                            "main": "#F4AB34",
                          },
                          "secondary": Object {
                            "contrastText": "#000000",
                            "dark": "#FF5808",
                            "light": "#FFF8E1",
                            "main": "#FF6B0B",
                          },
                          "success": Object {
                            "contrastText": "#FFFFFF",
                            "main": "#569A32",
                          },
                          "text": Object {
                            "disabled": "#BBBBBB",
                            "hint": "#BBBBBB",
                            "primary": "#333333",
                            "secondary": "#777777",
                          },
                        },
                        "shadows": Object {
                          "0": "none",
                          "1": "0 1px 1px 0 rgba(0, 0, 0, 0.14)",
                          "12": "0 12px 17px 0 rgba(0, 0, 0, 0.14)",
                          "16": "0 16px 24px 0 rgba(0, 0, 0, 0.14)",
                          "2": "0 2px 2px 0 rgba(0, 0, 0, 0.14)",
                          "24": "0 24px 38px 0 rgba(0, 0, 0, 0.14)",
                          "3": "0 3px 4px 0 rgba(0, 0, 0, 0.14)",
                          "4": "0 4px 5px 0 rgba(0, 0, 0, 0.14)",
                          "6": "0 6px 10px 0 rgba(0, 0, 0, 0.14)",
                          "8": "0 8px 10px 0 rgba(0, 0, 0, 0.14)",
                          "9": "0 9px 12px 0 rgba(0, 0, 0, 0.14)",
                        },
                        "shape": Object {
                          "badgeBorderRadius": 100,
                          "borderRadius": 4,
                        },
                        "sizes": Object {
                          "huge": 96,
                          "hugex": 128,
                          "hugexx": 144,
                          "hugexxx": 192,
                          "large": 64,
                          "largex": 72,
                          "largexx": 80,
                          "largexxx": 88,
                          "medium": 48,
                          "mediumx": 56,
                          "micro": 4,
                          "none": 0,
                          "semi": 32,
                          "semix": 40,
                          "small": 16,
                          "standard": 24,
                          "tiny": 8,
                          "veryhuge": 256,
                        },
                        "spacing": 8,
                        "typography": Object {
                          "body1": Object {
                            "fontSize": "1rem",
                            "fontWeight": 400,
                          },
                          "body2": Object {
                            "fontSize": "0.875rem",
                            "fontWeight": 400,
                          },
                          "button": Object {
                            "fontSize": "0.875rem",
                            "fontWeight": 600,
                          },
                          "caption": Object {
                            "fontSize": "0.75rem",
                            "fontWeight": 400,
                          },
                          "fontFamily": "\\"Roboto\\", sans-serif",
                          "fontFamilyBrand1": "\\"Helvetica Now Display\\"",
                          "fontFamilyBrand2": "\\"Helvetica Now Text\\"",
                          "fontFamilyBrand3": undefined,
                          "fontWeightBold": 700,
                          "fontWeightLight": 300,
                          "fontWeightMedium": 500,
                          "fontWeightRegular": 400,
                          "h1": Object {
                            "fontSize": "6rem",
                            "fontWeight": 300,
                          },
                          "h2": Object {
                            "fontSize": "3.75rem",
                            "fontWeight": 300,
                          },
                          "h3": Object {
                            "fontSize": "3rem",
                            "fontWeight": 400,
                          },
                          "h4": Object {
                            "fontSize": "2.125rem",
                            "fontWeight": 400,
                          },
                          "h5": Object {
                            "fontSize": "1.5rem",
                            "fontWeight": 400,
                          },
                          "h6": Object {
                            "fontSize": "1.25rem",
                            "fontWeight": 600,
                          },
                          "overline": Object {
                            "fontSize": "0.75rem",
                            "fontWeight": 400,
                          },
                          "subtitle1": Object {
                            "fontSize": "1rem",
                            "fontWeight": 400,
                          },
                          "subtitle2": Object {
                            "fontSize": "0.875rem",
                            "fontWeight": 500,
                          },
                        },
                      }
                    }
                  >
                    <label
                      className="sc-VigVT fFbpsb"
                      disabled={false}
                    >
                      Only calendar
                    </label>
                  </StyledComponent>
                </styled.label>
                <PickerWithState
                  allowKeyboardControl={true}
                  helperText=""
                  inputProps={
                    Object {
                      "style": Object {
                        "boxShadow": "#E74627 0 0 0 2px",
                      },
                    }
                  }
                  invalidDateMessage="Invalid Date Format"
                  keyboardIcon={
                    <ForwardRef(WithTheme)
                      name="outlined-action-calendar"
                      size="tiny"
                    />
                  }
                  label=""
                  maxDate={2100-01-01T00:00:00.000Z}
                  maxDateMessage="Date should not be after maximal date"
                  minDate={1900-01-01T00:00:00.000Z}
                  minDateMessage="Date should not be before minimal date"
                  onChange={[Function]}
                  openTo="date"
                  required={false}
                  theme={
                    Object {
                      "avatarSizes": Object {
                        "huge": Object {
                          "fontSize": "1.5rem",
                          "size": 80,
                        },
                        "large": Object {
                          "fontSize": "1rem",
                          "size": 48,
                        },
                        "small": Object {
                          "fontSize": ".875rem",
                          "size": 32,
                        },
                        "standard": Object {
                          "fontSize": "1rem",
                          "size": 40,
                        },
                        "tiny": Object {
                          "fontSize": ".625rem",
                          "size": 24,
                        },
                      },
                      "buttonSizes": Object {
                        "large": Object {
                          "minHeight": 48,
                          "paddingBottom": 16,
                          "paddingLeft": 16,
                          "paddingRight": 16,
                          "paddingTop": 16,
                        },
                        "medium": Object {
                          "minHeight": 40,
                          "paddingBottom": 12,
                          "paddingLeft": 16,
                          "paddingRight": 16,
                          "paddingTop": 12,
                        },
                        "small": Object {
                          "minHeight": 32,
                          "paddingBottom": 8,
                          "paddingLeft": 8,
                          "paddingRight": 8,
                          "paddingTop": 8,
                        },
                      },
                      "iconSizes": Object {
                        "huge": 144,
                        "hugex": 192,
                        "hugexx": 256,
                        "large": 72,
                        "largex": 96,
                        "largexx": 128,
                        "medium": 64,
                        "micro": 16,
                        "small": 32,
                        "standard": 48,
                        "tiny": 24,
                      },
                      "overrides": Object {
                        "MuiAvatar": Object {
                          "colorDefault": Object {
                            "color": "#333333",
                          },
                        },
                        "MuiBadge": Object {
                          "badge": Object {
                            "padding": "0 4px",
                          },
                        },
                        "MuiButton": Object {
                          "outlinedPrimary": Object {
                            "color": "#333333",
                          },
                          "outlinedSecondary": Object {
                            "color": "#333333",
                          },
                          "root": Object {
                            "fontSize": "0.875rem",
                            "minHeight": "40px",
                            "padding": "8px 16px",
                          },
                          "sizeLarge": Object {
                            "fontSize": "0.875rem",
                            "minHeight": "48px",
                          },
                          "sizeSmall": Object {
                            "fontSize": "0.875rem",
                            "minHeight": "32px",
                          },
                          "textPrimary": Object {
                            "color": "#333333",
                          },
                        },
                        "MuiChip": Object {
                          "clickableColorPrimary": Object {
                            "&:hover": Object {
                              "backgroundColor": "#EF8426",
                            },
                          },
                          "clickableColorSecondary": Object {
                            "&:hover": Object {
                              "backgroundColor": "#EF8426",
                            },
                          },
                          "deleteIcon": Object {
                            "&:hover": Object {
                              "color": "#000000",
                            },
                            "color": "rgba(0, 0, 0, 0.8)",
                            "fontSize": "24px",
                            "height": "24px",
                            "width": "24px",
                          },
                          "deleteIconColorPrimary": Object {
                            "&:hover": Object {
                              "color": "#FFFFFF",
                            },
                            "color": "rgba(255, 255, 255, 0.8)",
                          },
                          "deleteIconColorSecondary": Object {
                            "&:hover": Object {
                              "color": "#FFFFFF",
                            },
                            "color": "rgba(255, 255, 255, 0.8)",
                          },
                          "deleteIconSmall": Object {
                            "fontSize": "16px",
                            "height": "16px",
                            "width": "16px",
                          },
                          "icon": Object {
                            "fontSize": "24px",
                          },
                          "iconSmall": Object {
                            "fontSize": "16px",
                            "height": "16px",
                            "marginTop": "1px",
                            "width": "16px",
                          },
                          "outlined": Object {
                            "borderColor": "rgba(0, 0, 0, 0.12)",
                            "color": "#000000",
                          },
                          "outlinedPrimary": Object {
                            "color": "#000000",
                          },
                          "outlinedSecondary": Object {
                            "color": "#000000",
                          },
                          "root": Object {
                            "& $avatar": Object {
                              "backgroundColor": "rgba(0, 0, 0, 0.24)",
                              "color": "#333333",
                            },
                            "&$disabled": Object {
                              "opacity": 0.4,
                            },
                            "backgroundColor": "rgba(0, 0, 0, 0.12)",
                            "color": "#333333",
                            "fontSize": "0.875rem",
                          },
                        },
                        "MuiExpansionPanel": Object {
                          "root": Object {
                            "&$disabled": Object {
                              "backgroundColor": "#FFFFFF",
                              "opacity": 0.32,
                            },
                            "&$expanded": Object {
                              "borderColor": "#F4AB34",
                            },
                            "border": "transparent 1px solid",
                          },
                        },
                        "MuiExpansionPanelSummary": Object {
                          "root": Object {
                            "&$disabled": Object {
                              "opacity": 1,
                            },
                            "alignItems": "flex-start",
                            "marginTop": "8px",
                          },
                        },
                        "MuiFormLabel": Object {
                          "formControl": Object {
                            "marginTop": "-4px",
                            "transform": "none",
                          },
                          "root": Object {
                            "&.Mui-focused": Object {
                              "color": "#777777",
                              "fontSize": "0.875rem",
                            },
                            "fontSize": "0.875rem",
                          },
                        },
                        "MuiIconButton": Object {
                          "root": Object {
                            "color": "#333333",
                            "padding": "8px",
                          },
                          "sizeSmall": Object {
                            "padding": "4px",
                          },
                        },
                        "MuiInputAdornment": Object {
                          "root": Object {
                            "position": "absolute",
                            "right": "0",
                          },
                        },
                        "MuiInputBase": Object {
                          "input": Object {
                            "&.Mui-disabled": Object {
                              "&:hover": Object {
                                "boxShadow": "#333333 0 0 0 1px",
                              },
                              "opacity": 0.24,
                            },
                            "&:focus": Object {
                              "boxShadow": "#F4AB34 0 0 0 2px",
                            },
                            "&:focus:not(:read-only)": Object {
                              "boxShadow": "#F4AB34 0 0 0 2px",
                            },
                            "&:hover": Object {
                              "boxShadow": "#777777 0 0 0 1px",
                            },
                            "&:hover:not(:placeholder-shown)": Object {
                              "boxShadow": "#777777 0 0 0 1px",
                            },
                            "&:hover:not(:read-only):not(:disabled):not(:focus)": Object {
                              "boxShadow": "#777777 0 0 0 1px",
                            },
                            "&:not(:placeholder-shown)": Object {
                              "boxShadow": "#333333 0 0 0 1px",
                            },
                            "&:placeholder-shown": Object {
                              "boxShadow": "#BBBBBB 0 0 0 1px",
                            },
                            "borderRadius": "4px",
                            "boxShadow": "#BBBBBB 0 0 0 1px",
                            "color": "#333333",
                            "minHeight": "24px",
                            "padding": "16px 35px 16px 16px",
                          },
                          "root": Object {
                            "&.MuiInput-underline.Mui-disabled:before": Object {
                              "borderBottom": "none",
                            },
                            "&.MuiInput-underline:after": Object {
                              "borderBottom": "none",
                            },
                            "&.MuiInput-underline:before": Object {
                              "borderBottom": "none",
                            },
                            "&.MuiInput-underline:hover:not(.Mui-disabled):before": Object {
                              "borderBottom": "none",
                            },
                            "color": "#333333",
                          },
                        },
                        "MuiInputLabel": Object {
                          "formControl": Object {
                            "marginTop": "-4px",
                            "transform": "none",
                          },
                          "shrink": Object {
                            "marginTop": "-4px",
                            "transform": "none",
                          },
                        },
                        "MuiListItem": Object {
                          "button": Object {
                            "&:hover": Object {
                              "backgroundColor": "rgba(0, 0, 0, 0.04)",
                            },
                          },
                          "root": Object {
                            "&$selected": Object {
                              "&:hover": Object {
                                "backgroundColor": "rgba(0, 0, 0, 0.04)",
                              },
                              "backgroundColor": "rgba(255, 107, 11, 0.16)",
                            },
                            "&.Mui-disabled": Object {
                              "opacity": 0.32,
                            },
                          },
                        },
                        "MuiTab": Object {
                          "root": Object {
                            "&$disabled": Object {
                              "opacity": 0.24,
                            },
                          },
                          "textColorInherit": Object {
                            "&$disabled": Object {
                              "opacity": 0.24,
                            },
                          },
                          "wrapper": Object {
                            "& > *:first-child": Object {
                              "marginBottom": "2px !important",
                            },
                          },
                        },
                        "MuiTextField": Object {
                          "& .MuiInputLabel": Object {
                            "marginTop": "20px",
                          },
                        },
                        "MuiToolbar": Object {
                          "dense": Object {
                            "@media (min-width: 600px)": Object {
                              "minHeight": "56px",
                            },
                            "minHeight": "56px",
                          },
                          "gutters": Object {
                            "@media (min-width: 600px)": Object {
                              "padding": "0 16px",
                            },
                            "padding": "0 16px",
                          },
                          "regular": Object {
                            "@media (min-width: 600px)": Object {
                              "minHeight": "56px",
                            },
                            "minHeight": "56px",
                          },
                          "root": Object {
                            "@media (min-width: 600px)": Object {
                              "padding": "0 16px",
                            },
                            "padding": "0 16px",
                          },
                        },
                      },
                      "palette": Object {
                        "action": Object {
                          "disabled": "rgba(51, 51, 51, 0.24)",
                        },
                        "background": Object {
                          "default": "#FAFAFA",
                          "defaultContrastText": "#333333",
                          "paper": "#FFFFFF",
                          "paperContrastText": "#333333",
                        },
                        "complementary": Object {
                          "highlight": "#000000",
                          "link": "#227BBD",
                          "linkContrastText": "#FFFFFF",
                          "warning": "#FCC433",
                          "warningContrastText": "#333333",
                        },
                        "error": Object {
                          "contrastText": "#FFFFFF",
                          "main": "#E74627",
                        },
                        "primary": Object {
                          "contrastText": "#333333",
                          "dark": "#EF8426",
                          "light": "#FEFDE8",
                          "main": "#F4AB34",
                        },
                        "secondary": Object {
                          "contrastText": "#000000",
                          "dark": "#FF5808",
                          "light": "#FFF8E1",
                          "main": "#FF6B0B",
                        },
                        "success": Object {
                          "contrastText": "#FFFFFF",
                          "main": "#569A32",
                        },
                        "text": Object {
                          "disabled": "#BBBBBB",
                          "hint": "#BBBBBB",
                          "primary": "#333333",
                          "secondary": "#777777",
                        },
                      },
                      "shadows": Object {
                        "0": "none",
                        "1": "0 1px 1px 0 rgba(0, 0, 0, 0.14)",
                        "12": "0 12px 17px 0 rgba(0, 0, 0, 0.14)",
                        "16": "0 16px 24px 0 rgba(0, 0, 0, 0.14)",
                        "2": "0 2px 2px 0 rgba(0, 0, 0, 0.14)",
                        "24": "0 24px 38px 0 rgba(0, 0, 0, 0.14)",
                        "3": "0 3px 4px 0 rgba(0, 0, 0, 0.14)",
                        "4": "0 4px 5px 0 rgba(0, 0, 0, 0.14)",
                        "6": "0 6px 10px 0 rgba(0, 0, 0, 0.14)",
                        "8": "0 8px 10px 0 rgba(0, 0, 0, 0.14)",
                        "9": "0 9px 12px 0 rgba(0, 0, 0, 0.14)",
                      },
                      "shape": Object {
                        "badgeBorderRadius": 100,
                        "borderRadius": 4,
                      },
                      "sizes": Object {
                        "huge": 96,
                        "hugex": 128,
                        "hugexx": 144,
                        "hugexxx": 192,
                        "large": 64,
                        "largex": 72,
                        "largexx": 80,
                        "largexxx": 88,
                        "medium": 48,
                        "mediumx": 56,
                        "micro": 4,
                        "none": 0,
                        "semi": 32,
                        "semix": 40,
                        "small": 16,
                        "standard": 24,
                        "tiny": 8,
                        "veryhuge": 256,
                      },
                      "spacing": 8,
                      "typography": Object {
                        "body1": Object {
                          "fontSize": "1rem",
                          "fontWeight": 400,
                        },
                        "body2": Object {
                          "fontSize": "0.875rem",
                          "fontWeight": 400,
                        },
                        "button": Object {
                          "fontSize": "0.875rem",
                          "fontWeight": 600,
                        },
                        "caption": Object {
                          "fontSize": "0.75rem",
                          "fontWeight": 400,
                        },
                        "fontFamily": "\\"Roboto\\", sans-serif",
                        "fontFamilyBrand1": "\\"Helvetica Now Display\\"",
                        "fontFamilyBrand2": "\\"Helvetica Now Text\\"",
                        "fontFamilyBrand3": undefined,
                        "fontWeightBold": 700,
                        "fontWeightLight": 300,
                        "fontWeightMedium": 500,
                        "fontWeightRegular": 400,
                        "h1": Object {
                          "fontSize": "6rem",
                          "fontWeight": 300,
                        },
                        "h2": Object {
                          "fontSize": "3.75rem",
                          "fontWeight": 300,
                        },
                        "h3": Object {
                          "fontSize": "3rem",
                          "fontWeight": 400,
                        },
                        "h4": Object {
                          "fontSize": "2.125rem",
                          "fontWeight": 400,
                        },
                        "h5": Object {
                          "fontSize": "1.5rem",
                          "fontWeight": 400,
                        },
                        "h6": Object {
                          "fontSize": "1.25rem",
                          "fontWeight": 600,
                        },
                        "overline": Object {
                          "fontSize": "0.75rem",
                          "fontWeight": 400,
                        },
                        "subtitle1": Object {
                          "fontSize": "1rem",
                          "fontWeight": 400,
                        },
                        "subtitle2": Object {
                          "fontSize": "0.875rem",
                          "fontWeight": 500,
                        },
                      },
                    }
                  }
                  value={2020-02-01T03:00:00.000Z}
                  variant="dialog"
                  views={
                    Array [
                      "year",
                      "date",
                    ]
                  }
                >
                  <Component
                    DateInputProps={
                      Object {
                        "format": "MMMM do",
                        "inputValue": "February 1st",
                        "onChange": [Function],
                        "openPicker": [Function],
                        "validationError": "",
                      }
                    }
                    InputComponent={[Function]}
                    format="MMMM do"
                    helperText=""
                    inputProps={
                      Object {
                        "style": Object {
                          "boxShadow": "#E74627 0 0 0 2px",
                        },
                      }
                    }
                    keyboardIcon={
                      <ForwardRef(WithTheme)
                        name="outlined-action-calendar"
                        size="tiny"
                      />
                    }
                    label=""
                    onAccept={[Function]}
                    onClear={[Function]}
                    onDismiss={[Function]}
                    onSetToday={[Function]}
                    open={false}
                    required={false}
                    theme={
                      Object {
                        "avatarSizes": Object {
                          "huge": Object {
                            "fontSize": "1.5rem",
                            "size": 80,
                          },
                          "large": Object {
                            "fontSize": "1rem",
                            "size": 48,
                          },
                          "small": Object {
                            "fontSize": ".875rem",
                            "size": 32,
                          },
                          "standard": Object {
                            "fontSize": "1rem",
                            "size": 40,
                          },
                          "tiny": Object {
                            "fontSize": ".625rem",
                            "size": 24,
                          },
                        },
                        "buttonSizes": Object {
                          "large": Object {
                            "minHeight": 48,
                            "paddingBottom": 16,
                            "paddingLeft": 16,
                            "paddingRight": 16,
                            "paddingTop": 16,
                          },
                          "medium": Object {
                            "minHeight": 40,
                            "paddingBottom": 12,
                            "paddingLeft": 16,
                            "paddingRight": 16,
                            "paddingTop": 12,
                          },
                          "small": Object {
                            "minHeight": 32,
                            "paddingBottom": 8,
                            "paddingLeft": 8,
                            "paddingRight": 8,
                            "paddingTop": 8,
                          },
                        },
                        "iconSizes": Object {
                          "huge": 144,
                          "hugex": 192,
                          "hugexx": 256,
                          "large": 72,
                          "largex": 96,
                          "largexx": 128,
                          "medium": 64,
                          "micro": 16,
                          "small": 32,
                          "standard": 48,
                          "tiny": 24,
                        },
                        "overrides": Object {
                          "MuiAvatar": Object {
                            "colorDefault": Object {
                              "color": "#333333",
                            },
                          },
                          "MuiBadge": Object {
                            "badge": Object {
                              "padding": "0 4px",
                            },
                          },
                          "MuiButton": Object {
                            "outlinedPrimary": Object {
                              "color": "#333333",
                            },
                            "outlinedSecondary": Object {
                              "color": "#333333",
                            },
                            "root": Object {
                              "fontSize": "0.875rem",
                              "minHeight": "40px",
                              "padding": "8px 16px",
                            },
                            "sizeLarge": Object {
                              "fontSize": "0.875rem",
                              "minHeight": "48px",
                            },
                            "sizeSmall": Object {
                              "fontSize": "0.875rem",
                              "minHeight": "32px",
                            },
                            "textPrimary": Object {
                              "color": "#333333",
                            },
                          },
                          "MuiChip": Object {
                            "clickableColorPrimary": Object {
                              "&:hover": Object {
                                "backgroundColor": "#EF8426",
                              },
                            },
                            "clickableColorSecondary": Object {
                              "&:hover": Object {
                                "backgroundColor": "#EF8426",
                              },
                            },
                            "deleteIcon": Object {
                              "&:hover": Object {
                                "color": "#000000",
                              },
                              "color": "rgba(0, 0, 0, 0.8)",
                              "fontSize": "24px",
                              "height": "24px",
                              "width": "24px",
                            },
                            "deleteIconColorPrimary": Object {
                              "&:hover": Object {
                                "color": "#FFFFFF",
                              },
                              "color": "rgba(255, 255, 255, 0.8)",
                            },
                            "deleteIconColorSecondary": Object {
                              "&:hover": Object {
                                "color": "#FFFFFF",
                              },
                              "color": "rgba(255, 255, 255, 0.8)",
                            },
                            "deleteIconSmall": Object {
                              "fontSize": "16px",
                              "height": "16px",
                              "width": "16px",
                            },
                            "icon": Object {
                              "fontSize": "24px",
                            },
                            "iconSmall": Object {
                              "fontSize": "16px",
                              "height": "16px",
                              "marginTop": "1px",
                              "width": "16px",
                            },
                            "outlined": Object {
                              "borderColor": "rgba(0, 0, 0, 0.12)",
                              "color": "#000000",
                            },
                            "outlinedPrimary": Object {
                              "color": "#000000",
                            },
                            "outlinedSecondary": Object {
                              "color": "#000000",
                            },
                            "root": Object {
                              "& $avatar": Object {
                                "backgroundColor": "rgba(0, 0, 0, 0.24)",
                                "color": "#333333",
                              },
                              "&$disabled": Object {
                                "opacity": 0.4,
                              },
                              "backgroundColor": "rgba(0, 0, 0, 0.12)",
                              "color": "#333333",
                              "fontSize": "0.875rem",
                            },
                          },
                          "MuiExpansionPanel": Object {
                            "root": Object {
                              "&$disabled": Object {
                                "backgroundColor": "#FFFFFF",
                                "opacity": 0.32,
                              },
                              "&$expanded": Object {
                                "borderColor": "#F4AB34",
                              },
                              "border": "transparent 1px solid",
                            },
                          },
                          "MuiExpansionPanelSummary": Object {
                            "root": Object {
                              "&$disabled": Object {
                                "opacity": 1,
                              },
                              "alignItems": "flex-start",
                              "marginTop": "8px",
                            },
                          },
                          "MuiFormLabel": Object {
                            "formControl": Object {
                              "marginTop": "-4px",
                              "transform": "none",
                            },
                            "root": Object {
                              "&.Mui-focused": Object {
                                "color": "#777777",
                                "fontSize": "0.875rem",
                              },
                              "fontSize": "0.875rem",
                            },
                          },
                          "MuiIconButton": Object {
                            "root": Object {
                              "color": "#333333",
                              "padding": "8px",
                            },
                            "sizeSmall": Object {
                              "padding": "4px",
                            },
                          },
                          "MuiInputAdornment": Object {
                            "root": Object {
                              "position": "absolute",
                              "right": "0",
                            },
                          },
                          "MuiInputBase": Object {
                            "input": Object {
                              "&.Mui-disabled": Object {
                                "&:hover": Object {
                                  "boxShadow": "#333333 0 0 0 1px",
                                },
                                "opacity": 0.24,
                              },
                              "&:focus": Object {
                                "boxShadow": "#F4AB34 0 0 0 2px",
                              },
                              "&:focus:not(:read-only)": Object {
                                "boxShadow": "#F4AB34 0 0 0 2px",
                              },
                              "&:hover": Object {
                                "boxShadow": "#777777 0 0 0 1px",
                              },
                              "&:hover:not(:placeholder-shown)": Object {
                                "boxShadow": "#777777 0 0 0 1px",
                              },
                              "&:hover:not(:read-only):not(:disabled):not(:focus)": Object {
                                "boxShadow": "#777777 0 0 0 1px",
                              },
                              "&:not(:placeholder-shown)": Object {
                                "boxShadow": "#333333 0 0 0 1px",
                              },
                              "&:placeholder-shown": Object {
                                "boxShadow": "#BBBBBB 0 0 0 1px",
                              },
                              "borderRadius": "4px",
                              "boxShadow": "#BBBBBB 0 0 0 1px",
                              "color": "#333333",
                              "minHeight": "24px",
                              "padding": "16px 35px 16px 16px",
                            },
                            "root": Object {
                              "&.MuiInput-underline.Mui-disabled:before": Object {
                                "borderBottom": "none",
                              },
                              "&.MuiInput-underline:after": Object {
                                "borderBottom": "none",
                              },
                              "&.MuiInput-underline:before": Object {
                                "borderBottom": "none",
                              },
                              "&.MuiInput-underline:hover:not(.Mui-disabled):before": Object {
                                "borderBottom": "none",
                              },
                              "color": "#333333",
                            },
                          },
                          "MuiInputLabel": Object {
                            "formControl": Object {
                              "marginTop": "-4px",
                              "transform": "none",
                            },
                            "shrink": Object {
                              "marginTop": "-4px",
                              "transform": "none",
                            },
                          },
                          "MuiListItem": Object {
                            "button": Object {
                              "&:hover": Object {
                                "backgroundColor": "rgba(0, 0, 0, 0.04)",
                              },
                            },
                            "root": Object {
                              "&$selected": Object {
                                "&:hover": Object {
                                  "backgroundColor": "rgba(0, 0, 0, 0.04)",
                                },
                                "backgroundColor": "rgba(255, 107, 11, 0.16)",
                              },
                              "&.Mui-disabled": Object {
                                "opacity": 0.32,
                              },
                            },
                          },
                          "MuiTab": Object {
                            "root": Object {
                              "&$disabled": Object {
                                "opacity": 0.24,
                              },
                            },
                            "textColorInherit": Object {
                              "&$disabled": Object {
                                "opacity": 0.24,
                              },
                            },
                            "wrapper": Object {
                              "& > *:first-child": Object {
                                "marginBottom": "2px !important",
                              },
                            },
                          },
                          "MuiTextField": Object {
                            "& .MuiInputLabel": Object {
                              "marginTop": "20px",
                            },
                          },
                          "MuiToolbar": Object {
                            "dense": Object {
                              "@media (min-width: 600px)": Object {
                                "minHeight": "56px",
                              },
                              "minHeight": "56px",
                            },
                            "gutters": Object {
                              "@media (min-width: 600px)": Object {
                                "padding": "0 16px",
                              },
                              "padding": "0 16px",
                            },
                            "regular": Object {
                              "@media (min-width: 600px)": Object {
                                "minHeight": "56px",
                              },
                              "minHeight": "56px",
                            },
                            "root": Object {
                              "@media (min-width: 600px)": Object {
                                "padding": "0 16px",
                              },
                              "padding": "0 16px",
                            },
                          },
                        },
                        "palette": Object {
                          "action": Object {
                            "disabled": "rgba(51, 51, 51, 0.24)",
                          },
                          "background": Object {
                            "default": "#FAFAFA",
                            "defaultContrastText": "#333333",
                            "paper": "#FFFFFF",
                            "paperContrastText": "#333333",
                          },
                          "complementary": Object {
                            "highlight": "#000000",
                            "link": "#227BBD",
                            "linkContrastText": "#FFFFFF",
                            "warning": "#FCC433",
                            "warningContrastText": "#333333",
                          },
                          "error": Object {
                            "contrastText": "#FFFFFF",
                            "main": "#E74627",
                          },
                          "primary": Object {
                            "contrastText": "#333333",
                            "dark": "#EF8426",
                            "light": "#FEFDE8",
                            "main": "#F4AB34",
                          },
                          "secondary": Object {
                            "contrastText": "#000000",
                            "dark": "#FF5808",
                            "light": "#FFF8E1",
                            "main": "#FF6B0B",
                          },
                          "success": Object {
                            "contrastText": "#FFFFFF",
                            "main": "#569A32",
                          },
                          "text": Object {
                            "disabled": "#BBBBBB",
                            "hint": "#BBBBBB",
                            "primary": "#333333",
                            "secondary": "#777777",
                          },
                        },
                        "shadows": Object {
                          "0": "none",
                          "1": "0 1px 1px 0 rgba(0, 0, 0, 0.14)",
                          "12": "0 12px 17px 0 rgba(0, 0, 0, 0.14)",
                          "16": "0 16px 24px 0 rgba(0, 0, 0, 0.14)",
                          "2": "0 2px 2px 0 rgba(0, 0, 0, 0.14)",
                          "24": "0 24px 38px 0 rgba(0, 0, 0, 0.14)",
                          "3": "0 3px 4px 0 rgba(0, 0, 0, 0.14)",
                          "4": "0 4px 5px 0 rgba(0, 0, 0, 0.14)",
                          "6": "0 6px 10px 0 rgba(0, 0, 0, 0.14)",
                          "8": "0 8px 10px 0 rgba(0, 0, 0, 0.14)",
                          "9": "0 9px 12px 0 rgba(0, 0, 0, 0.14)",
                        },
                        "shape": Object {
                          "badgeBorderRadius": 100,
                          "borderRadius": 4,
                        },
                        "sizes": Object {
                          "huge": 96,
                          "hugex": 128,
                          "hugexx": 144,
                          "hugexxx": 192,
                          "large": 64,
                          "largex": 72,
                          "largexx": 80,
                          "largexxx": 88,
                          "medium": 48,
                          "mediumx": 56,
                          "micro": 4,
                          "none": 0,
                          "semi": 32,
                          "semix": 40,
                          "small": 16,
                          "standard": 24,
                          "tiny": 8,
                          "veryhuge": 256,
                        },
                        "spacing": 8,
                        "typography": Object {
                          "body1": Object {
                            "fontSize": "1rem",
                            "fontWeight": 400,
                          },
                          "body2": Object {
                            "fontSize": "0.875rem",
                            "fontWeight": 400,
                          },
                          "button": Object {
                            "fontSize": "0.875rem",
                            "fontWeight": 600,
                          },
                          "caption": Object {
                            "fontSize": "0.75rem",
                            "fontWeight": 400,
                          },
                          "fontFamily": "\\"Roboto\\", sans-serif",
                          "fontFamilyBrand1": "\\"Helvetica Now Display\\"",
                          "fontFamilyBrand2": "\\"Helvetica Now Text\\"",
                          "fontFamilyBrand3": undefined,
                          "fontWeightBold": 700,
                          "fontWeightLight": 300,
                          "fontWeightMedium": 500,
                          "fontWeightRegular": 400,
                          "h1": Object {
                            "fontSize": "6rem",
                            "fontWeight": 300,
                          },
                          "h2": Object {
                            "fontSize": "3.75rem",
                            "fontWeight": 300,
                          },
                          "h3": Object {
                            "fontSize": "3rem",
                            "fontWeight": 400,
                          },
                          "h4": Object {
                            "fontSize": "2.125rem",
                            "fontWeight": 400,
                          },
                          "h5": Object {
                            "fontSize": "1.5rem",
                            "fontWeight": 400,
                          },
                          "h6": Object {
                            "fontSize": "1.25rem",
                            "fontWeight": 600,
                          },
                          "overline": Object {
                            "fontSize": "0.75rem",
                            "fontWeight": 400,
                          },
                          "subtitle1": Object {
                            "fontSize": "1rem",
                            "fontWeight": 400,
                          },
                          "subtitle2": Object {
                            "fontSize": "0.875rem",
                            "fontWeight": 500,
                          },
                        },
                      }
                    }
                    variant="dialog"
                  >
                    <Component
                      DateInputProps={
                        Object {
                          "format": "MMMM do",
                          "inputValue": "February 1st",
                          "onChange": [Function],
                          "openPicker": [Function],
                          "validationError": "",
                        }
                      }
                      InputComponent={[Function]}
                      cancelLabel="Cancel"
                      clearLabel="Clear"
                      clearable={false}
                      format="MMMM do"
                      helperText=""
                      inputProps={
                        Object {
                          "style": Object {
                            "boxShadow": "#E74627 0 0 0 2px",
                          },
                        }
                      }
                      keyboardIcon={
                        <ForwardRef(WithTheme)
                          name="outlined-action-calendar"
                          size="tiny"
                        />
                      }
                      label=""
                      okLabel="OK"
                      onAccept={[Function]}
                      onClear={[Function]}
                      onDismiss={[Function]}
                      onSetToday={[Function]}
                      open={false}
                      required={false}
                      showTodayButton={false}
                      theme={
                        Object {
                          "avatarSizes": Object {
                            "huge": Object {
                              "fontSize": "1.5rem",
                              "size": 80,
                            },
                            "large": Object {
                              "fontSize": "1rem",
                              "size": 48,
                            },
                            "small": Object {
                              "fontSize": ".875rem",
                              "size": 32,
                            },
                            "standard": Object {
                              "fontSize": "1rem",
                              "size": 40,
                            },
                            "tiny": Object {
                              "fontSize": ".625rem",
                              "size": 24,
                            },
                          },
                          "buttonSizes": Object {
                            "large": Object {
                              "minHeight": 48,
                              "paddingBottom": 16,
                              "paddingLeft": 16,
                              "paddingRight": 16,
                              "paddingTop": 16,
                            },
                            "medium": Object {
                              "minHeight": 40,
                              "paddingBottom": 12,
                              "paddingLeft": 16,
                              "paddingRight": 16,
                              "paddingTop": 12,
                            },
                            "small": Object {
                              "minHeight": 32,
                              "paddingBottom": 8,
                              "paddingLeft": 8,
                              "paddingRight": 8,
                              "paddingTop": 8,
                            },
                          },
                          "iconSizes": Object {
                            "huge": 144,
                            "hugex": 192,
                            "hugexx": 256,
                            "large": 72,
                            "largex": 96,
                            "largexx": 128,
                            "medium": 64,
                            "micro": 16,
                            "small": 32,
                            "standard": 48,
                            "tiny": 24,
                          },
                          "overrides": Object {
                            "MuiAvatar": Object {
                              "colorDefault": Object {
                                "color": "#333333",
                              },
                            },
                            "MuiBadge": Object {
                              "badge": Object {
                                "padding": "0 4px",
                              },
                            },
                            "MuiButton": Object {
                              "outlinedPrimary": Object {
                                "color": "#333333",
                              },
                              "outlinedSecondary": Object {
                                "color": "#333333",
                              },
                              "root": Object {
                                "fontSize": "0.875rem",
                                "minHeight": "40px",
                                "padding": "8px 16px",
                              },
                              "sizeLarge": Object {
                                "fontSize": "0.875rem",
                                "minHeight": "48px",
                              },
                              "sizeSmall": Object {
                                "fontSize": "0.875rem",
                                "minHeight": "32px",
                              },
                              "textPrimary": Object {
                                "color": "#333333",
                              },
                            },
                            "MuiChip": Object {
                              "clickableColorPrimary": Object {
                                "&:hover": Object {
                                  "backgroundColor": "#EF8426",
                                },
                              },
                              "clickableColorSecondary": Object {
                                "&:hover": Object {
                                  "backgroundColor": "#EF8426",
                                },
                              },
                              "deleteIcon": Object {
                                "&:hover": Object {
                                  "color": "#000000",
                                },
                                "color": "rgba(0, 0, 0, 0.8)",
                                "fontSize": "24px",
                                "height": "24px",
                                "width": "24px",
                              },
                              "deleteIconColorPrimary": Object {
                                "&:hover": Object {
                                  "color": "#FFFFFF",
                                },
                                "color": "rgba(255, 255, 255, 0.8)",
                              },
                              "deleteIconColorSecondary": Object {
                                "&:hover": Object {
                                  "color": "#FFFFFF",
                                },
                                "color": "rgba(255, 255, 255, 0.8)",
                              },
                              "deleteIconSmall": Object {
                                "fontSize": "16px",
                                "height": "16px",
                                "width": "16px",
                              },
                              "icon": Object {
                                "fontSize": "24px",
                              },
                              "iconSmall": Object {
                                "fontSize": "16px",
                                "height": "16px",
                                "marginTop": "1px",
                                "width": "16px",
                              },
                              "outlined": Object {
                                "borderColor": "rgba(0, 0, 0, 0.12)",
                                "color": "#000000",
                              },
                              "outlinedPrimary": Object {
                                "color": "#000000",
                              },
                              "outlinedSecondary": Object {
                                "color": "#000000",
                              },
                              "root": Object {
                                "& $avatar": Object {
                                  "backgroundColor": "rgba(0, 0, 0, 0.24)",
                                  "color": "#333333",
                                },
                                "&$disabled": Object {
                                  "opacity": 0.4,
                                },
                                "backgroundColor": "rgba(0, 0, 0, 0.12)",
                                "color": "#333333",
                                "fontSize": "0.875rem",
                              },
                            },
                            "MuiExpansionPanel": Object {
                              "root": Object {
                                "&$disabled": Object {
                                  "backgroundColor": "#FFFFFF",
                                  "opacity": 0.32,
                                },
                                "&$expanded": Object {
                                  "borderColor": "#F4AB34",
                                },
                                "border": "transparent 1px solid",
                              },
                            },
                            "MuiExpansionPanelSummary": Object {
                              "root": Object {
                                "&$disabled": Object {
                                  "opacity": 1,
                                },
                                "alignItems": "flex-start",
                                "marginTop": "8px",
                              },
                            },
                            "MuiFormLabel": Object {
                              "formControl": Object {
                                "marginTop": "-4px",
                                "transform": "none",
                              },
                              "root": Object {
                                "&.Mui-focused": Object {
                                  "color": "#777777",
                                  "fontSize": "0.875rem",
                                },
                                "fontSize": "0.875rem",
                              },
                            },
                            "MuiIconButton": Object {
                              "root": Object {
                                "color": "#333333",
                                "padding": "8px",
                              },
                              "sizeSmall": Object {
                                "padding": "4px",
                              },
                            },
                            "MuiInputAdornment": Object {
                              "root": Object {
                                "position": "absolute",
                                "right": "0",
                              },
                            },
                            "MuiInputBase": Object {
                              "input": Object {
                                "&.Mui-disabled": Object {
                                  "&:hover": Object {
                                    "boxShadow": "#333333 0 0 0 1px",
                                  },
                                  "opacity": 0.24,
                                },
                                "&:focus": Object {
                                  "boxShadow": "#F4AB34 0 0 0 2px",
                                },
                                "&:focus:not(:read-only)": Object {
                                  "boxShadow": "#F4AB34 0 0 0 2px",
                                },
                                "&:hover": Object {
                                  "boxShadow": "#777777 0 0 0 1px",
                                },
                                "&:hover:not(:placeholder-shown)": Object {
                                  "boxShadow": "#777777 0 0 0 1px",
                                },
                                "&:hover:not(:read-only):not(:disabled):not(:focus)": Object {
                                  "boxShadow": "#777777 0 0 0 1px",
                                },
                                "&:not(:placeholder-shown)": Object {
                                  "boxShadow": "#333333 0 0 0 1px",
                                },
                                "&:placeholder-shown": Object {
                                  "boxShadow": "#BBBBBB 0 0 0 1px",
                                },
                                "borderRadius": "4px",
                                "boxShadow": "#BBBBBB 0 0 0 1px",
                                "color": "#333333",
                                "minHeight": "24px",
                                "padding": "16px 35px 16px 16px",
                              },
                              "root": Object {
                                "&.MuiInput-underline.Mui-disabled:before": Object {
                                  "borderBottom": "none",
                                },
                                "&.MuiInput-underline:after": Object {
                                  "borderBottom": "none",
                                },
                                "&.MuiInput-underline:before": Object {
                                  "borderBottom": "none",
                                },
                                "&.MuiInput-underline:hover:not(.Mui-disabled):before": Object {
                                  "borderBottom": "none",
                                },
                                "color": "#333333",
                              },
                            },
                            "MuiInputLabel": Object {
                              "formControl": Object {
                                "marginTop": "-4px",
                                "transform": "none",
                              },
                              "shrink": Object {
                                "marginTop": "-4px",
                                "transform": "none",
                              },
                            },
                            "MuiListItem": Object {
                              "button": Object {
                                "&:hover": Object {
                                  "backgroundColor": "rgba(0, 0, 0, 0.04)",
                                },
                              },
                              "root": Object {
                                "&$selected": Object {
                                  "&:hover": Object {
                                    "backgroundColor": "rgba(0, 0, 0, 0.04)",
                                  },
                                  "backgroundColor": "rgba(255, 107, 11, 0.16)",
                                },
                                "&.Mui-disabled": Object {
                                  "opacity": 0.32,
                                },
                              },
                            },
                            "MuiTab": Object {
                              "root": Object {
                                "&$disabled": Object {
                                  "opacity": 0.24,
                                },
                              },
                              "textColorInherit": Object {
                                "&$disabled": Object {
                                  "opacity": 0.24,
                                },
                              },
                              "wrapper": Object {
                                "& > *:first-child": Object {
                                  "marginBottom": "2px !important",
                                },
                              },
                            },
                            "MuiTextField": Object {
                              "& .MuiInputLabel": Object {
                                "marginTop": "20px",
                              },
                            },
                            "MuiToolbar": Object {
                              "dense": Object {
                                "@media (min-width: 600px)": Object {
                                  "minHeight": "56px",
                                },
                                "minHeight": "56px",
                              },
                              "gutters": Object {
                                "@media (min-width: 600px)": Object {
                                  "padding": "0 16px",
                                },
                                "padding": "0 16px",
                              },
                              "regular": Object {
                                "@media (min-width: 600px)": Object {
                                  "minHeight": "56px",
                                },
                                "minHeight": "56px",
                              },
                              "root": Object {
                                "@media (min-width: 600px)": Object {
                                  "padding": "0 16px",
                                },
                                "padding": "0 16px",
                              },
                            },
                          },
                          "palette": Object {
                            "action": Object {
                              "disabled": "rgba(51, 51, 51, 0.24)",
                            },
                            "background": Object {
                              "default": "#FAFAFA",
                              "defaultContrastText": "#333333",
                              "paper": "#FFFFFF",
                              "paperContrastText": "#333333",
                            },
                            "complementary": Object {
                              "highlight": "#000000",
                              "link": "#227BBD",
                              "linkContrastText": "#FFFFFF",
                              "warning": "#FCC433",
                              "warningContrastText": "#333333",
                            },
                            "error": Object {
                              "contrastText": "#FFFFFF",
                              "main": "#E74627",
                            },
                            "primary": Object {
                              "contrastText": "#333333",
                              "dark": "#EF8426",
                              "light": "#FEFDE8",
                              "main": "#F4AB34",
                            },
                            "secondary": Object {
                              "contrastText": "#000000",
                              "dark": "#FF5808",
                              "light": "#FFF8E1",
                              "main": "#FF6B0B",
                            },
                            "success": Object {
                              "contrastText": "#FFFFFF",
                              "main": "#569A32",
                            },
                            "text": Object {
                              "disabled": "#BBBBBB",
                              "hint": "#BBBBBB",
                              "primary": "#333333",
                              "secondary": "#777777",
                            },
                          },
                          "shadows": Object {
                            "0": "none",
                            "1": "0 1px 1px 0 rgba(0, 0, 0, 0.14)",
                            "12": "0 12px 17px 0 rgba(0, 0, 0, 0.14)",
                            "16": "0 16px 24px 0 rgba(0, 0, 0, 0.14)",
                            "2": "0 2px 2px 0 rgba(0, 0, 0, 0.14)",
                            "24": "0 24px 38px 0 rgba(0, 0, 0, 0.14)",
                            "3": "0 3px 4px 0 rgba(0, 0, 0, 0.14)",
                            "4": "0 4px 5px 0 rgba(0, 0, 0, 0.14)",
                            "6": "0 6px 10px 0 rgba(0, 0, 0, 0.14)",
                            "8": "0 8px 10px 0 rgba(0, 0, 0, 0.14)",
                            "9": "0 9px 12px 0 rgba(0, 0, 0, 0.14)",
                          },
                          "shape": Object {
                            "badgeBorderRadius": 100,
                            "borderRadius": 4,
                          },
                          "sizes": Object {
                            "huge": 96,
                            "hugex": 128,
                            "hugexx": 144,
                            "hugexxx": 192,
                            "large": 64,
                            "largex": 72,
                            "largexx": 80,
                            "largexxx": 88,
                            "medium": 48,
                            "mediumx": 56,
                            "micro": 4,
                            "none": 0,
                            "semi": 32,
                            "semix": 40,
                            "small": 16,
                            "standard": 24,
                            "tiny": 8,
                            "veryhuge": 256,
                          },
                          "spacing": 8,
                          "typography": Object {
                            "body1": Object {
                              "fontSize": "1rem",
                              "fontWeight": 400,
                            },
                            "body2": Object {
                              "fontSize": "0.875rem",
                              "fontWeight": 400,
                            },
                            "button": Object {
                              "fontSize": "0.875rem",
                              "fontWeight": 600,
                            },
                            "caption": Object {
                              "fontSize": "0.75rem",
                              "fontWeight": 400,
                            },
                            "fontFamily": "\\"Roboto\\", sans-serif",
                            "fontFamilyBrand1": "\\"Helvetica Now Display\\"",
                            "fontFamilyBrand2": "\\"Helvetica Now Text\\"",
                            "fontFamilyBrand3": undefined,
                            "fontWeightBold": 700,
                            "fontWeightLight": 300,
                            "fontWeightMedium": 500,
                            "fontWeightRegular": 400,
                            "h1": Object {
                              "fontSize": "6rem",
                              "fontWeight": 300,
                            },
                            "h2": Object {
                              "fontSize": "3.75rem",
                              "fontWeight": 300,
                            },
                            "h3": Object {
                              "fontSize": "3rem",
                              "fontWeight": 400,
                            },
                            "h4": Object {
                              "fontSize": "2.125rem",
                              "fontWeight": 400,
                            },
                            "h5": Object {
                              "fontSize": "1.5rem",
                              "fontWeight": 400,
                            },
                            "h6": Object {
                              "fontSize": "1.25rem",
                              "fontWeight": 600,
                            },
                            "overline": Object {
                              "fontSize": "0.75rem",
                              "fontWeight": 400,
                            },
                            "subtitle1": Object {
                              "fontSize": "1rem",
                              "fontWeight": 400,
                            },
                            "subtitle2": Object {
                              "fontSize": "0.875rem",
                              "fontWeight": 500,
                            },
                          },
                        }
                      }
                      todayLabel="Today"
                    >
                      <Component
                        format="MMMM do"
                        helperText=""
                        inputProps={
                          Object {
                            "style": Object {
                              "boxShadow": "#E74627 0 0 0 2px",
                            },
                          }
                        }
                        inputValue="February 1st"
                        keyboardIcon={
                          <ForwardRef(WithTheme)
                            name="outlined-action-calendar"
                            size="tiny"
                          />
                        }
                        label=""
                        onChange={[Function]}
                        openPicker={[Function]}
                        required={false}
                        theme={
                          Object {
                            "avatarSizes": Object {
                              "huge": Object {
                                "fontSize": "1.5rem",
                                "size": 80,
                              },
                              "large": Object {
                                "fontSize": "1rem",
                                "size": 48,
                              },
                              "small": Object {
                                "fontSize": ".875rem",
                                "size": 32,
                              },
                              "standard": Object {
                                "fontSize": "1rem",
                                "size": 40,
                              },
                              "tiny": Object {
                                "fontSize": ".625rem",
                                "size": 24,
                              },
                            },
                            "buttonSizes": Object {
                              "large": Object {
                                "minHeight": 48,
                                "paddingBottom": 16,
                                "paddingLeft": 16,
                                "paddingRight": 16,
                                "paddingTop": 16,
                              },
                              "medium": Object {
                                "minHeight": 40,
                                "paddingBottom": 12,
                                "paddingLeft": 16,
                                "paddingRight": 16,
                                "paddingTop": 12,
                              },
                              "small": Object {
                                "minHeight": 32,
                                "paddingBottom": 8,
                                "paddingLeft": 8,
                                "paddingRight": 8,
                                "paddingTop": 8,
                              },
                            },
                            "iconSizes": Object {
                              "huge": 144,
                              "hugex": 192,
                              "hugexx": 256,
                              "large": 72,
                              "largex": 96,
                              "largexx": 128,
                              "medium": 64,
                              "micro": 16,
                              "small": 32,
                              "standard": 48,
                              "tiny": 24,
                            },
                            "overrides": Object {
                              "MuiAvatar": Object {
                                "colorDefault": Object {
                                  "color": "#333333",
                                },
                              },
                              "MuiBadge": Object {
                                "badge": Object {
                                  "padding": "0 4px",
                                },
                              },
                              "MuiButton": Object {
                                "outlinedPrimary": Object {
                                  "color": "#333333",
                                },
                                "outlinedSecondary": Object {
                                  "color": "#333333",
                                },
                                "root": Object {
                                  "fontSize": "0.875rem",
                                  "minHeight": "40px",
                                  "padding": "8px 16px",
                                },
                                "sizeLarge": Object {
                                  "fontSize": "0.875rem",
                                  "minHeight": "48px",
                                },
                                "sizeSmall": Object {
                                  "fontSize": "0.875rem",
                                  "minHeight": "32px",
                                },
                                "textPrimary": Object {
                                  "color": "#333333",
                                },
                              },
                              "MuiChip": Object {
                                "clickableColorPrimary": Object {
                                  "&:hover": Object {
                                    "backgroundColor": "#EF8426",
                                  },
                                },
                                "clickableColorSecondary": Object {
                                  "&:hover": Object {
                                    "backgroundColor": "#EF8426",
                                  },
                                },
                                "deleteIcon": Object {
                                  "&:hover": Object {
                                    "color": "#000000",
                                  },
                                  "color": "rgba(0, 0, 0, 0.8)",
                                  "fontSize": "24px",
                                  "height": "24px",
                                  "width": "24px",
                                },
                                "deleteIconColorPrimary": Object {
                                  "&:hover": Object {
                                    "color": "#FFFFFF",
                                  },
                                  "color": "rgba(255, 255, 255, 0.8)",
                                },
                                "deleteIconColorSecondary": Object {
                                  "&:hover": Object {
                                    "color": "#FFFFFF",
                                  },
                                  "color": "rgba(255, 255, 255, 0.8)",
                                },
                                "deleteIconSmall": Object {
                                  "fontSize": "16px",
                                  "height": "16px",
                                  "width": "16px",
                                },
                                "icon": Object {
                                  "fontSize": "24px",
                                },
                                "iconSmall": Object {
                                  "fontSize": "16px",
                                  "height": "16px",
                                  "marginTop": "1px",
                                  "width": "16px",
                                },
                                "outlined": Object {
                                  "borderColor": "rgba(0, 0, 0, 0.12)",
                                  "color": "#000000",
                                },
                                "outlinedPrimary": Object {
                                  "color": "#000000",
                                },
                                "outlinedSecondary": Object {
                                  "color": "#000000",
                                },
                                "root": Object {
                                  "& $avatar": Object {
                                    "backgroundColor": "rgba(0, 0, 0, 0.24)",
                                    "color": "#333333",
                                  },
                                  "&$disabled": Object {
                                    "opacity": 0.4,
                                  },
                                  "backgroundColor": "rgba(0, 0, 0, 0.12)",
                                  "color": "#333333",
                                  "fontSize": "0.875rem",
                                },
                              },
                              "MuiExpansionPanel": Object {
                                "root": Object {
                                  "&$disabled": Object {
                                    "backgroundColor": "#FFFFFF",
                                    "opacity": 0.32,
                                  },
                                  "&$expanded": Object {
                                    "borderColor": "#F4AB34",
                                  },
                                  "border": "transparent 1px solid",
                                },
                              },
                              "MuiExpansionPanelSummary": Object {
                                "root": Object {
                                  "&$disabled": Object {
                                    "opacity": 1,
                                  },
                                  "alignItems": "flex-start",
                                  "marginTop": "8px",
                                },
                              },
                              "MuiFormLabel": Object {
                                "formControl": Object {
                                  "marginTop": "-4px",
                                  "transform": "none",
                                },
                                "root": Object {
                                  "&.Mui-focused": Object {
                                    "color": "#777777",
                                    "fontSize": "0.875rem",
                                  },
                                  "fontSize": "0.875rem",
                                },
                              },
                              "MuiIconButton": Object {
                                "root": Object {
                                  "color": "#333333",
                                  "padding": "8px",
                                },
                                "sizeSmall": Object {
                                  "padding": "4px",
                                },
                              },
                              "MuiInputAdornment": Object {
                                "root": Object {
                                  "position": "absolute",
                                  "right": "0",
                                },
                              },
                              "MuiInputBase": Object {
                                "input": Object {
                                  "&.Mui-disabled": Object {
                                    "&:hover": Object {
                                      "boxShadow": "#333333 0 0 0 1px",
                                    },
                                    "opacity": 0.24,
                                  },
                                  "&:focus": Object {
                                    "boxShadow": "#F4AB34 0 0 0 2px",
                                  },
                                  "&:focus:not(:read-only)": Object {
                                    "boxShadow": "#F4AB34 0 0 0 2px",
                                  },
                                  "&:hover": Object {
                                    "boxShadow": "#777777 0 0 0 1px",
                                  },
                                  "&:hover:not(:placeholder-shown)": Object {
                                    "boxShadow": "#777777 0 0 0 1px",
                                  },
                                  "&:hover:not(:read-only):not(:disabled):not(:focus)": Object {
                                    "boxShadow": "#777777 0 0 0 1px",
                                  },
                                  "&:not(:placeholder-shown)": Object {
                                    "boxShadow": "#333333 0 0 0 1px",
                                  },
                                  "&:placeholder-shown": Object {
                                    "boxShadow": "#BBBBBB 0 0 0 1px",
                                  },
                                  "borderRadius": "4px",
                                  "boxShadow": "#BBBBBB 0 0 0 1px",
                                  "color": "#333333",
                                  "minHeight": "24px",
                                  "padding": "16px 35px 16px 16px",
                                },
                                "root": Object {
                                  "&.MuiInput-underline.Mui-disabled:before": Object {
                                    "borderBottom": "none",
                                  },
                                  "&.MuiInput-underline:after": Object {
                                    "borderBottom": "none",
                                  },
                                  "&.MuiInput-underline:before": Object {
                                    "borderBottom": "none",
                                  },
                                  "&.MuiInput-underline:hover:not(.Mui-disabled):before": Object {
                                    "borderBottom": "none",
                                  },
                                  "color": "#333333",
                                },
                              },
                              "MuiInputLabel": Object {
                                "formControl": Object {
                                  "marginTop": "-4px",
                                  "transform": "none",
                                },
                                "shrink": Object {
                                  "marginTop": "-4px",
                                  "transform": "none",
                                },
                              },
                              "MuiListItem": Object {
                                "button": Object {
                                  "&:hover": Object {
                                    "backgroundColor": "rgba(0, 0, 0, 0.04)",
                                  },
                                },
                                "root": Object {
                                  "&$selected": Object {
                                    "&:hover": Object {
                                      "backgroundColor": "rgba(0, 0, 0, 0.04)",
                                    },
                                    "backgroundColor": "rgba(255, 107, 11, 0.16)",
                                  },
                                  "&.Mui-disabled": Object {
                                    "opacity": 0.32,
                                  },
                                },
                              },
                              "MuiTab": Object {
                                "root": Object {
                                  "&$disabled": Object {
                                    "opacity": 0.24,
                                  },
                                },
                                "textColorInherit": Object {
                                  "&$disabled": Object {
                                    "opacity": 0.24,
                                  },
                                },
                                "wrapper": Object {
                                  "& > *:first-child": Object {
                                    "marginBottom": "2px !important",
                                  },
                                },
                              },
                              "MuiTextField": Object {
                                "& .MuiInputLabel": Object {
                                  "marginTop": "20px",
                                },
                              },
                              "MuiToolbar": Object {
                                "dense": Object {
                                  "@media (min-width: 600px)": Object {
                                    "minHeight": "56px",
                                  },
                                  "minHeight": "56px",
                                },
                                "gutters": Object {
                                  "@media (min-width: 600px)": Object {
                                    "padding": "0 16px",
                                  },
                                  "padding": "0 16px",
                                },
                                "regular": Object {
                                  "@media (min-width: 600px)": Object {
                                    "minHeight": "56px",
                                  },
                                  "minHeight": "56px",
                                },
                                "root": Object {
                                  "@media (min-width: 600px)": Object {
                                    "padding": "0 16px",
                                  },
                                  "padding": "0 16px",
                                },
                              },
                            },
                            "palette": Object {
                              "action": Object {
                                "disabled": "rgba(51, 51, 51, 0.24)",
                              },
                              "background": Object {
                                "default": "#FAFAFA",
                                "defaultContrastText": "#333333",
                                "paper": "#FFFFFF",
                                "paperContrastText": "#333333",
                              },
                              "complementary": Object {
                                "highlight": "#000000",
                                "link": "#227BBD",
                                "linkContrastText": "#FFFFFF",
                                "warning": "#FCC433",
                                "warningContrastText": "#333333",
                              },
                              "error": Object {
                                "contrastText": "#FFFFFF",
                                "main": "#E74627",
                              },
                              "primary": Object {
                                "contrastText": "#333333",
                                "dark": "#EF8426",
                                "light": "#FEFDE8",
                                "main": "#F4AB34",
                              },
                              "secondary": Object {
                                "contrastText": "#000000",
                                "dark": "#FF5808",
                                "light": "#FFF8E1",
                                "main": "#FF6B0B",
                              },
                              "success": Object {
                                "contrastText": "#FFFFFF",
                                "main": "#569A32",
                              },
                              "text": Object {
                                "disabled": "#BBBBBB",
                                "hint": "#BBBBBB",
                                "primary": "#333333",
                                "secondary": "#777777",
                              },
                            },
                            "shadows": Object {
                              "0": "none",
                              "1": "0 1px 1px 0 rgba(0, 0, 0, 0.14)",
                              "12": "0 12px 17px 0 rgba(0, 0, 0, 0.14)",
                              "16": "0 16px 24px 0 rgba(0, 0, 0, 0.14)",
                              "2": "0 2px 2px 0 rgba(0, 0, 0, 0.14)",
                              "24": "0 24px 38px 0 rgba(0, 0, 0, 0.14)",
                              "3": "0 3px 4px 0 rgba(0, 0, 0, 0.14)",
                              "4": "0 4px 5px 0 rgba(0, 0, 0, 0.14)",
                              "6": "0 6px 10px 0 rgba(0, 0, 0, 0.14)",
                              "8": "0 8px 10px 0 rgba(0, 0, 0, 0.14)",
                              "9": "0 9px 12px 0 rgba(0, 0, 0, 0.14)",
                            },
                            "shape": Object {
                              "badgeBorderRadius": 100,
                              "borderRadius": 4,
                            },
                            "sizes": Object {
                              "huge": 96,
                              "hugex": 128,
                              "hugexx": 144,
                              "hugexxx": 192,
                              "large": 64,
                              "largex": 72,
                              "largexx": 80,
                              "largexxx": 88,
                              "medium": 48,
                              "mediumx": 56,
                              "micro": 4,
                              "none": 0,
                              "semi": 32,
                              "semix": 40,
                              "small": 16,
                              "standard": 24,
                              "tiny": 8,
                              "veryhuge": 256,
                            },
                            "spacing": 8,
                            "typography": Object {
                              "body1": Object {
                                "fontSize": "1rem",
                                "fontWeight": 400,
                              },
                              "body2": Object {
                                "fontSize": "0.875rem",
                                "fontWeight": 400,
                              },
                              "button": Object {
                                "fontSize": "0.875rem",
                                "fontWeight": 600,
                              },
                              "caption": Object {
                                "fontSize": "0.75rem",
                                "fontWeight": 400,
                              },
                              "fontFamily": "\\"Roboto\\", sans-serif",
                              "fontFamilyBrand1": "\\"Helvetica Now Display\\"",
                              "fontFamilyBrand2": "\\"Helvetica Now Text\\"",
                              "fontFamilyBrand3": undefined,
                              "fontWeightBold": 700,
                              "fontWeightLight": 300,
                              "fontWeightMedium": 500,
                              "fontWeightRegular": 400,
                              "h1": Object {
                                "fontSize": "6rem",
                                "fontWeight": 300,
                              },
                              "h2": Object {
                                "fontSize": "3.75rem",
                                "fontWeight": 300,
                              },
                              "h3": Object {
                                "fontSize": "3rem",
                                "fontWeight": 400,
                              },
                              "h4": Object {
                                "fontSize": "2.125rem",
                                "fontWeight": 400,
                              },
                              "h5": Object {
                                "fontSize": "1.5rem",
                                "fontWeight": 400,
                              },
                              "h6": Object {
                                "fontSize": "1.25rem",
                                "fontWeight": 600,
                              },
                              "overline": Object {
                                "fontSize": "0.75rem",
                                "fontWeight": 400,
                              },
                              "subtitle1": Object {
                                "fontSize": "1rem",
                                "fontWeight": 400,
                              },
                              "subtitle2": Object {
                                "fontSize": "0.875rem",
                                "fontWeight": 500,
                              },
                            },
                          }
                        }
                        validationError=""
                      >
                        <Rifm
                          format={[Function]}
                          key="____ __"
                          onChange={[Function]}
                          refuse={/\\[\\^\\\\d\\]\\+/gi}
                          value="February 1st"
                        >
                          <WithStyles(ForwardRef(TextField))
                            InputProps={
                              Object {
                                "endAdornment": <ForwardRef(WithStyles)
                                  position="end"
                                >
                                  <ForwardRef(WithStyles)
                                    onClick={[Function]}
                                  >
                                    <ForwardRef(WithTheme)
                                      name="outlined-action-calendar"
                                      size="tiny"
                                    />
                                  </ForwardRef(WithStyles)>
                                </ForwardRef(WithStyles)>,
                              }
                            }
                            error={false}
                            helperText=""
                            inputProps={
                              Object {
                                "style": Object {
                                  "boxShadow": "#E74627 0 0 0 2px",
                                },
                              }
                            }
                            label=""
                            onChange={[Function]}
                            required={false}
                            theme={
                              Object {
                                "avatarSizes": Object {
                                  "huge": Object {
                                    "fontSize": "1.5rem",
                                    "size": 80,
                                  },
                                  "large": Object {
                                    "fontSize": "1rem",
                                    "size": 48,
                                  },
                                  "small": Object {
                                    "fontSize": ".875rem",
                                    "size": 32,
                                  },
                                  "standard": Object {
                                    "fontSize": "1rem",
                                    "size": 40,
                                  },
                                  "tiny": Object {
                                    "fontSize": ".625rem",
                                    "size": 24,
                                  },
                                },
                                "buttonSizes": Object {
                                  "large": Object {
                                    "minHeight": 48,
                                    "paddingBottom": 16,
                                    "paddingLeft": 16,
                                    "paddingRight": 16,
                                    "paddingTop": 16,
                                  },
                                  "medium": Object {
                                    "minHeight": 40,
                                    "paddingBottom": 12,
                                    "paddingLeft": 16,
                                    "paddingRight": 16,
                                    "paddingTop": 12,
                                  },
                                  "small": Object {
                                    "minHeight": 32,
                                    "paddingBottom": 8,
                                    "paddingLeft": 8,
                                    "paddingRight": 8,
                                    "paddingTop": 8,
                                  },
                                },
                                "iconSizes": Object {
                                  "huge": 144,
                                  "hugex": 192,
                                  "hugexx": 256,
                                  "large": 72,
                                  "largex": 96,
                                  "largexx": 128,
                                  "medium": 64,
                                  "micro": 16,
                                  "small": 32,
                                  "standard": 48,
                                  "tiny": 24,
                                },
                                "overrides": Object {
                                  "MuiAvatar": Object {
                                    "colorDefault": Object {
                                      "color": "#333333",
                                    },
                                  },
                                  "MuiBadge": Object {
                                    "badge": Object {
                                      "padding": "0 4px",
                                    },
                                  },
                                  "MuiButton": Object {
                                    "outlinedPrimary": Object {
                                      "color": "#333333",
                                    },
                                    "outlinedSecondary": Object {
                                      "color": "#333333",
                                    },
                                    "root": Object {
                                      "fontSize": "0.875rem",
                                      "minHeight": "40px",
                                      "padding": "8px 16px",
                                    },
                                    "sizeLarge": Object {
                                      "fontSize": "0.875rem",
                                      "minHeight": "48px",
                                    },
                                    "sizeSmall": Object {
                                      "fontSize": "0.875rem",
                                      "minHeight": "32px",
                                    },
                                    "textPrimary": Object {
                                      "color": "#333333",
                                    },
                                  },
                                  "MuiChip": Object {
                                    "clickableColorPrimary": Object {
                                      "&:hover": Object {
                                        "backgroundColor": "#EF8426",
                                      },
                                    },
                                    "clickableColorSecondary": Object {
                                      "&:hover": Object {
                                        "backgroundColor": "#EF8426",
                                      },
                                    },
                                    "deleteIcon": Object {
                                      "&:hover": Object {
                                        "color": "#000000",
                                      },
                                      "color": "rgba(0, 0, 0, 0.8)",
                                      "fontSize": "24px",
                                      "height": "24px",
                                      "width": "24px",
                                    },
                                    "deleteIconColorPrimary": Object {
                                      "&:hover": Object {
                                        "color": "#FFFFFF",
                                      },
                                      "color": "rgba(255, 255, 255, 0.8)",
                                    },
                                    "deleteIconColorSecondary": Object {
                                      "&:hover": Object {
                                        "color": "#FFFFFF",
                                      },
                                      "color": "rgba(255, 255, 255, 0.8)",
                                    },
                                    "deleteIconSmall": Object {
                                      "fontSize": "16px",
                                      "height": "16px",
                                      "width": "16px",
                                    },
                                    "icon": Object {
                                      "fontSize": "24px",
                                    },
                                    "iconSmall": Object {
                                      "fontSize": "16px",
                                      "height": "16px",
                                      "marginTop": "1px",
                                      "width": "16px",
                                    },
                                    "outlined": Object {
                                      "borderColor": "rgba(0, 0, 0, 0.12)",
                                      "color": "#000000",
                                    },
                                    "outlinedPrimary": Object {
                                      "color": "#000000",
                                    },
                                    "outlinedSecondary": Object {
                                      "color": "#000000",
                                    },
                                    "root": Object {
                                      "& $avatar": Object {
                                        "backgroundColor": "rgba(0, 0, 0, 0.24)",
                                        "color": "#333333",
                                      },
                                      "&$disabled": Object {
                                        "opacity": 0.4,
                                      },
                                      "backgroundColor": "rgba(0, 0, 0, 0.12)",
                                      "color": "#333333",
                                      "fontSize": "0.875rem",
                                    },
                                  },
                                  "MuiExpansionPanel": Object {
                                    "root": Object {
                                      "&$disabled": Object {
                                        "backgroundColor": "#FFFFFF",
                                        "opacity": 0.32,
                                      },
                                      "&$expanded": Object {
                                        "borderColor": "#F4AB34",
                                      },
                                      "border": "transparent 1px solid",
                                    },
                                  },
                                  "MuiExpansionPanelSummary": Object {
                                    "root": Object {
                                      "&$disabled": Object {
                                        "opacity": 1,
                                      },
                                      "alignItems": "flex-start",
                                      "marginTop": "8px",
                                    },
                                  },
                                  "MuiFormLabel": Object {
                                    "formControl": Object {
                                      "marginTop": "-4px",
                                      "transform": "none",
                                    },
                                    "root": Object {
                                      "&.Mui-focused": Object {
                                        "color": "#777777",
                                        "fontSize": "0.875rem",
                                      },
                                      "fontSize": "0.875rem",
                                    },
                                  },
                                  "MuiIconButton": Object {
                                    "root": Object {
                                      "color": "#333333",
                                      "padding": "8px",
                                    },
                                    "sizeSmall": Object {
                                      "padding": "4px",
                                    },
                                  },
                                  "MuiInputAdornment": Object {
                                    "root": Object {
                                      "position": "absolute",
                                      "right": "0",
                                    },
                                  },
                                  "MuiInputBase": Object {
                                    "input": Object {
                                      "&.Mui-disabled": Object {
                                        "&:hover": Object {
                                          "boxShadow": "#333333 0 0 0 1px",
                                        },
                                        "opacity": 0.24,
                                      },
                                      "&:focus": Object {
                                        "boxShadow": "#F4AB34 0 0 0 2px",
                                      },
                                      "&:focus:not(:read-only)": Object {
                                        "boxShadow": "#F4AB34 0 0 0 2px",
                                      },
                                      "&:hover": Object {
                                        "boxShadow": "#777777 0 0 0 1px",
                                      },
                                      "&:hover:not(:placeholder-shown)": Object {
                                        "boxShadow": "#777777 0 0 0 1px",
                                      },
                                      "&:hover:not(:read-only):not(:disabled):not(:focus)": Object {
                                        "boxShadow": "#777777 0 0 0 1px",
                                      },
                                      "&:not(:placeholder-shown)": Object {
                                        "boxShadow": "#333333 0 0 0 1px",
                                      },
                                      "&:placeholder-shown": Object {
                                        "boxShadow": "#BBBBBB 0 0 0 1px",
                                      },
                                      "borderRadius": "4px",
                                      "boxShadow": "#BBBBBB 0 0 0 1px",
                                      "color": "#333333",
                                      "minHeight": "24px",
                                      "padding": "16px 35px 16px 16px",
                                    },
                                    "root": Object {
                                      "&.MuiInput-underline.Mui-disabled:before": Object {
                                        "borderBottom": "none",
                                      },
                                      "&.MuiInput-underline:after": Object {
                                        "borderBottom": "none",
                                      },
                                      "&.MuiInput-underline:before": Object {
                                        "borderBottom": "none",
                                      },
                                      "&.MuiInput-underline:hover:not(.Mui-disabled):before": Object {
                                        "borderBottom": "none",
                                      },
                                      "color": "#333333",
                                    },
                                  },
                                  "MuiInputLabel": Object {
                                    "formControl": Object {
                                      "marginTop": "-4px",
                                      "transform": "none",
                                    },
                                    "shrink": Object {
                                      "marginTop": "-4px",
                                      "transform": "none",
                                    },
                                  },
                                  "MuiListItem": Object {
                                    "button": Object {
                                      "&:hover": Object {
                                        "backgroundColor": "rgba(0, 0, 0, 0.04)",
                                      },
                                    },
                                    "root": Object {
                                      "&$selected": Object {
                                        "&:hover": Object {
                                          "backgroundColor": "rgba(0, 0, 0, 0.04)",
                                        },
                                        "backgroundColor": "rgba(255, 107, 11, 0.16)",
                                      },
                                      "&.Mui-disabled": Object {
                                        "opacity": 0.32,
                                      },
                                    },
                                  },
                                  "MuiTab": Object {
                                    "root": Object {
                                      "&$disabled": Object {
                                        "opacity": 0.24,
                                      },
                                    },
                                    "textColorInherit": Object {
                                      "&$disabled": Object {
                                        "opacity": 0.24,
                                      },
                                    },
                                    "wrapper": Object {
                                      "& > *:first-child": Object {
                                        "marginBottom": "2px !important",
                                      },
                                    },
                                  },
                                  "MuiTextField": Object {
                                    "& .MuiInputLabel": Object {
                                      "marginTop": "20px",
                                    },
                                  },
                                  "MuiToolbar": Object {
                                    "dense": Object {
                                      "@media (min-width: 600px)": Object {
                                        "minHeight": "56px",
                                      },
                                      "minHeight": "56px",
                                    },
                                    "gutters": Object {
                                      "@media (min-width: 600px)": Object {
                                        "padding": "0 16px",
                                      },
                                      "padding": "0 16px",
                                    },
                                    "regular": Object {
                                      "@media (min-width: 600px)": Object {
                                        "minHeight": "56px",
                                      },
                                      "minHeight": "56px",
                                    },
                                    "root": Object {
                                      "@media (min-width: 600px)": Object {
                                        "padding": "0 16px",
                                      },
                                      "padding": "0 16px",
                                    },
                                  },
                                },
                                "palette": Object {
                                  "action": Object {
                                    "disabled": "rgba(51, 51, 51, 0.24)",
                                  },
                                  "background": Object {
                                    "default": "#FAFAFA",
                                    "defaultContrastText": "#333333",
                                    "paper": "#FFFFFF",
                                    "paperContrastText": "#333333",
                                  },
                                  "complementary": Object {
                                    "highlight": "#000000",
                                    "link": "#227BBD",
                                    "linkContrastText": "#FFFFFF",
                                    "warning": "#FCC433",
                                    "warningContrastText": "#333333",
                                  },
                                  "error": Object {
                                    "contrastText": "#FFFFFF",
                                    "main": "#E74627",
                                  },
                                  "primary": Object {
                                    "contrastText": "#333333",
                                    "dark": "#EF8426",
                                    "light": "#FEFDE8",
                                    "main": "#F4AB34",
                                  },
                                  "secondary": Object {
                                    "contrastText": "#000000",
                                    "dark": "#FF5808",
                                    "light": "#FFF8E1",
                                    "main": "#FF6B0B",
                                  },
                                  "success": Object {
                                    "contrastText": "#FFFFFF",
                                    "main": "#569A32",
                                  },
                                  "text": Object {
                                    "disabled": "#BBBBBB",
                                    "hint": "#BBBBBB",
                                    "primary": "#333333",
                                    "secondary": "#777777",
                                  },
                                },
                                "shadows": Object {
                                  "0": "none",
                                  "1": "0 1px 1px 0 rgba(0, 0, 0, 0.14)",
                                  "12": "0 12px 17px 0 rgba(0, 0, 0, 0.14)",
                                  "16": "0 16px 24px 0 rgba(0, 0, 0, 0.14)",
                                  "2": "0 2px 2px 0 rgba(0, 0, 0, 0.14)",
                                  "24": "0 24px 38px 0 rgba(0, 0, 0, 0.14)",
                                  "3": "0 3px 4px 0 rgba(0, 0, 0, 0.14)",
                                  "4": "0 4px 5px 0 rgba(0, 0, 0, 0.14)",
                                  "6": "0 6px 10px 0 rgba(0, 0, 0, 0.14)",
                                  "8": "0 8px 10px 0 rgba(0, 0, 0, 0.14)",
                                  "9": "0 9px 12px 0 rgba(0, 0, 0, 0.14)",
                                },
                                "shape": Object {
                                  "badgeBorderRadius": 100,
                                  "borderRadius": 4,
                                },
                                "sizes": Object {
                                  "huge": 96,
                                  "hugex": 128,
                                  "hugexx": 144,
                                  "hugexxx": 192,
                                  "large": 64,
                                  "largex": 72,
                                  "largexx": 80,
                                  "largexxx": 88,
                                  "medium": 48,
                                  "mediumx": 56,
                                  "micro": 4,
                                  "none": 0,
                                  "semi": 32,
                                  "semix": 40,
                                  "small": 16,
                                  "standard": 24,
                                  "tiny": 8,
                                  "veryhuge": 256,
                                },
                                "spacing": 8,
                                "typography": Object {
                                  "body1": Object {
                                    "fontSize": "1rem",
                                    "fontWeight": 400,
                                  },
                                  "body2": Object {
                                    "fontSize": "0.875rem",
                                    "fontWeight": 400,
                                  },
                                  "button": Object {
                                    "fontSize": "0.875rem",
                                    "fontWeight": 600,
                                  },
                                  "caption": Object {
                                    "fontSize": "0.75rem",
                                    "fontWeight": 400,
                                  },
                                  "fontFamily": "\\"Roboto\\", sans-serif",
                                  "fontFamilyBrand1": "\\"Helvetica Now Display\\"",
                                  "fontFamilyBrand2": "\\"Helvetica Now Text\\"",
                                  "fontFamilyBrand3": undefined,
                                  "fontWeightBold": 700,
                                  "fontWeightLight": 300,
                                  "fontWeightMedium": 500,
                                  "fontWeightRegular": 400,
                                  "h1": Object {
                                    "fontSize": "6rem",
                                    "fontWeight": 300,
                                  },
                                  "h2": Object {
                                    "fontSize": "3.75rem",
                                    "fontWeight": 300,
                                  },
                                  "h3": Object {
                                    "fontSize": "3rem",
                                    "fontWeight": 400,
                                  },
                                  "h4": Object {
                                    "fontSize": "2.125rem",
                                    "fontWeight": 400,
                                  },
                                  "h5": Object {
                                    "fontSize": "1.5rem",
                                    "fontWeight": 400,
                                  },
                                  "h6": Object {
                                    "fontSize": "1.25rem",
                                    "fontWeight": 600,
                                  },
                                  "overline": Object {
                                    "fontSize": "0.75rem",
                                    "fontWeight": 400,
                                  },
                                  "subtitle1": Object {
                                    "fontSize": "1rem",
                                    "fontWeight": 400,
                                  },
                                  "subtitle2": Object {
                                    "fontSize": "0.875rem",
                                    "fontWeight": 500,
                                  },
                                },
                              }
                            }
                            value="February 1st"
                          >
                            <ForwardRef(TextField)
                              InputProps={
                                Object {
                                  "endAdornment": <ForwardRef(WithStyles)
                                    position="end"
                                  >
                                    <ForwardRef(WithStyles)
                                      onClick={[Function]}
                                    >
                                      <ForwardRef(WithTheme)
                                        name="outlined-action-calendar"
                                        size="tiny"
                                      />
                                    </ForwardRef(WithStyles)>
                                  </ForwardRef(WithStyles)>,
                                }
                              }
                              classes={
                                Object {
                                  "root": "MuiTextField-root",
                                }
                              }
                              error={false}
                              helperText=""
                              inputProps={
                                Object {
                                  "style": Object {
                                    "boxShadow": "#E74627 0 0 0 2px",
                                  },
                                }
                              }
                              label=""
                              onChange={[Function]}
                              required={false}
                              theme={
                                Object {
                                  "avatarSizes": Object {
                                    "huge": Object {
                                      "fontSize": "1.5rem",
                                      "size": 80,
                                    },
                                    "large": Object {
                                      "fontSize": "1rem",
                                      "size": 48,
                                    },
                                    "small": Object {
                                      "fontSize": ".875rem",
                                      "size": 32,
                                    },
                                    "standard": Object {
                                      "fontSize": "1rem",
                                      "size": 40,
                                    },
                                    "tiny": Object {
                                      "fontSize": ".625rem",
                                      "size": 24,
                                    },
                                  },
                                  "buttonSizes": Object {
                                    "large": Object {
                                      "minHeight": 48,
                                      "paddingBottom": 16,
                                      "paddingLeft": 16,
                                      "paddingRight": 16,
                                      "paddingTop": 16,
                                    },
                                    "medium": Object {
                                      "minHeight": 40,
                                      "paddingBottom": 12,
                                      "paddingLeft": 16,
                                      "paddingRight": 16,
                                      "paddingTop": 12,
                                    },
                                    "small": Object {
                                      "minHeight": 32,
                                      "paddingBottom": 8,
                                      "paddingLeft": 8,
                                      "paddingRight": 8,
                                      "paddingTop": 8,
                                    },
                                  },
                                  "iconSizes": Object {
                                    "huge": 144,
                                    "hugex": 192,
                                    "hugexx": 256,
                                    "large": 72,
                                    "largex": 96,
                                    "largexx": 128,
                                    "medium": 64,
                                    "micro": 16,
                                    "small": 32,
                                    "standard": 48,
                                    "tiny": 24,
                                  },
                                  "overrides": Object {
                                    "MuiAvatar": Object {
                                      "colorDefault": Object {
                                        "color": "#333333",
                                      },
                                    },
                                    "MuiBadge": Object {
                                      "badge": Object {
                                        "padding": "0 4px",
                                      },
                                    },
                                    "MuiButton": Object {
                                      "outlinedPrimary": Object {
                                        "color": "#333333",
                                      },
                                      "outlinedSecondary": Object {
                                        "color": "#333333",
                                      },
                                      "root": Object {
                                        "fontSize": "0.875rem",
                                        "minHeight": "40px",
                                        "padding": "8px 16px",
                                      },
                                      "sizeLarge": Object {
                                        "fontSize": "0.875rem",
                                        "minHeight": "48px",
                                      },
                                      "sizeSmall": Object {
                                        "fontSize": "0.875rem",
                                        "minHeight": "32px",
                                      },
                                      "textPrimary": Object {
                                        "color": "#333333",
                                      },
                                    },
                                    "MuiChip": Object {
                                      "clickableColorPrimary": Object {
                                        "&:hover": Object {
                                          "backgroundColor": "#EF8426",
                                        },
                                      },
                                      "clickableColorSecondary": Object {
                                        "&:hover": Object {
                                          "backgroundColor": "#EF8426",
                                        },
                                      },
                                      "deleteIcon": Object {
                                        "&:hover": Object {
                                          "color": "#000000",
                                        },
                                        "color": "rgba(0, 0, 0, 0.8)",
                                        "fontSize": "24px",
                                        "height": "24px",
                                        "width": "24px",
                                      },
                                      "deleteIconColorPrimary": Object {
                                        "&:hover": Object {
                                          "color": "#FFFFFF",
                                        },
                                        "color": "rgba(255, 255, 255, 0.8)",
                                      },
                                      "deleteIconColorSecondary": Object {
                                        "&:hover": Object {
                                          "color": "#FFFFFF",
                                        },
                                        "color": "rgba(255, 255, 255, 0.8)",
                                      },
                                      "deleteIconSmall": Object {
                                        "fontSize": "16px",
                                        "height": "16px",
                                        "width": "16px",
                                      },
                                      "icon": Object {
                                        "fontSize": "24px",
                                      },
                                      "iconSmall": Object {
                                        "fontSize": "16px",
                                        "height": "16px",
                                        "marginTop": "1px",
                                        "width": "16px",
                                      },
                                      "outlined": Object {
                                        "borderColor": "rgba(0, 0, 0, 0.12)",
                                        "color": "#000000",
                                      },
                                      "outlinedPrimary": Object {
                                        "color": "#000000",
                                      },
                                      "outlinedSecondary": Object {
                                        "color": "#000000",
                                      },
                                      "root": Object {
                                        "& $avatar": Object {
                                          "backgroundColor": "rgba(0, 0, 0, 0.24)",
                                          "color": "#333333",
                                        },
                                        "&$disabled": Object {
                                          "opacity": 0.4,
                                        },
                                        "backgroundColor": "rgba(0, 0, 0, 0.12)",
                                        "color": "#333333",
                                        "fontSize": "0.875rem",
                                      },
                                    },
                                    "MuiExpansionPanel": Object {
                                      "root": Object {
                                        "&$disabled": Object {
                                          "backgroundColor": "#FFFFFF",
                                          "opacity": 0.32,
                                        },
                                        "&$expanded": Object {
                                          "borderColor": "#F4AB34",
                                        },
                                        "border": "transparent 1px solid",
                                      },
                                    },
                                    "MuiExpansionPanelSummary": Object {
                                      "root": Object {
                                        "&$disabled": Object {
                                          "opacity": 1,
                                        },
                                        "alignItems": "flex-start",
                                        "marginTop": "8px",
                                      },
                                    },
                                    "MuiFormLabel": Object {
                                      "formControl": Object {
                                        "marginTop": "-4px",
                                        "transform": "none",
                                      },
                                      "root": Object {
                                        "&.Mui-focused": Object {
                                          "color": "#777777",
                                          "fontSize": "0.875rem",
                                        },
                                        "fontSize": "0.875rem",
                                      },
                                    },
                                    "MuiIconButton": Object {
                                      "root": Object {
                                        "color": "#333333",
                                        "padding": "8px",
                                      },
                                      "sizeSmall": Object {
                                        "padding": "4px",
                                      },
                                    },
                                    "MuiInputAdornment": Object {
                                      "root": Object {
                                        "position": "absolute",
                                        "right": "0",
                                      },
                                    },
                                    "MuiInputBase": Object {
                                      "input": Object {
                                        "&.Mui-disabled": Object {
                                          "&:hover": Object {
                                            "boxShadow": "#333333 0 0 0 1px",
                                          },
                                          "opacity": 0.24,
                                        },
                                        "&:focus": Object {
                                          "boxShadow": "#F4AB34 0 0 0 2px",
                                        },
                                        "&:focus:not(:read-only)": Object {
                                          "boxShadow": "#F4AB34 0 0 0 2px",
                                        },
                                        "&:hover": Object {
                                          "boxShadow": "#777777 0 0 0 1px",
                                        },
                                        "&:hover:not(:placeholder-shown)": Object {
                                          "boxShadow": "#777777 0 0 0 1px",
                                        },
                                        "&:hover:not(:read-only):not(:disabled):not(:focus)": Object {
                                          "boxShadow": "#777777 0 0 0 1px",
                                        },
                                        "&:not(:placeholder-shown)": Object {
                                          "boxShadow": "#333333 0 0 0 1px",
                                        },
                                        "&:placeholder-shown": Object {
                                          "boxShadow": "#BBBBBB 0 0 0 1px",
                                        },
                                        "borderRadius": "4px",
                                        "boxShadow": "#BBBBBB 0 0 0 1px",
                                        "color": "#333333",
                                        "minHeight": "24px",
                                        "padding": "16px 35px 16px 16px",
                                      },
                                      "root": Object {
                                        "&.MuiInput-underline.Mui-disabled:before": Object {
                                          "borderBottom": "none",
                                        },
                                        "&.MuiInput-underline:after": Object {
                                          "borderBottom": "none",
                                        },
                                        "&.MuiInput-underline:before": Object {
                                          "borderBottom": "none",
                                        },
                                        "&.MuiInput-underline:hover:not(.Mui-disabled):before": Object {
                                          "borderBottom": "none",
                                        },
                                        "color": "#333333",
                                      },
                                    },
                                    "MuiInputLabel": Object {
                                      "formControl": Object {
                                        "marginTop": "-4px",
                                        "transform": "none",
                                      },
                                      "shrink": Object {
                                        "marginTop": "-4px",
                                        "transform": "none",
                                      },
                                    },
                                    "MuiListItem": Object {
                                      "button": Object {
                                        "&:hover": Object {
                                          "backgroundColor": "rgba(0, 0, 0, 0.04)",
                                        },
                                      },
                                      "root": Object {
                                        "&$selected": Object {
                                          "&:hover": Object {
                                            "backgroundColor": "rgba(0, 0, 0, 0.04)",
                                          },
                                          "backgroundColor": "rgba(255, 107, 11, 0.16)",
                                        },
                                        "&.Mui-disabled": Object {
                                          "opacity": 0.32,
                                        },
                                      },
                                    },
                                    "MuiTab": Object {
                                      "root": Object {
                                        "&$disabled": Object {
                                          "opacity": 0.24,
                                        },
                                      },
                                      "textColorInherit": Object {
                                        "&$disabled": Object {
                                          "opacity": 0.24,
                                        },
                                      },
                                      "wrapper": Object {
                                        "& > *:first-child": Object {
                                          "marginBottom": "2px !important",
                                        },
                                      },
                                    },
                                    "MuiTextField": Object {
                                      "& .MuiInputLabel": Object {
                                        "marginTop": "20px",
                                      },
                                    },
                                    "MuiToolbar": Object {
                                      "dense": Object {
                                        "@media (min-width: 600px)": Object {
                                          "minHeight": "56px",
                                        },
                                        "minHeight": "56px",
                                      },
                                      "gutters": Object {
                                        "@media (min-width: 600px)": Object {
                                          "padding": "0 16px",
                                        },
                                        "padding": "0 16px",
                                      },
                                      "regular": Object {
                                        "@media (min-width: 600px)": Object {
                                          "minHeight": "56px",
                                        },
                                        "minHeight": "56px",
                                      },
                                      "root": Object {
                                        "@media (min-width: 600px)": Object {
                                          "padding": "0 16px",
                                        },
                                        "padding": "0 16px",
                                      },
                                    },
                                  },
                                  "palette": Object {
                                    "action": Object {
                                      "disabled": "rgba(51, 51, 51, 0.24)",
                                    },
                                    "background": Object {
                                      "default": "#FAFAFA",
                                      "defaultContrastText": "#333333",
                                      "paper": "#FFFFFF",
                                      "paperContrastText": "#333333",
                                    },
                                    "complementary": Object {
                                      "highlight": "#000000",
                                      "link": "#227BBD",
                                      "linkContrastText": "#FFFFFF",
                                      "warning": "#FCC433",
                                      "warningContrastText": "#333333",
                                    },
                                    "error": Object {
                                      "contrastText": "#FFFFFF",
                                      "main": "#E74627",
                                    },
                                    "primary": Object {
                                      "contrastText": "#333333",
                                      "dark": "#EF8426",
                                      "light": "#FEFDE8",
                                      "main": "#F4AB34",
                                    },
                                    "secondary": Object {
                                      "contrastText": "#000000",
                                      "dark": "#FF5808",
                                      "light": "#FFF8E1",
                                      "main": "#FF6B0B",
                                    },
                                    "success": Object {
                                      "contrastText": "#FFFFFF",
                                      "main": "#569A32",
                                    },
                                    "text": Object {
                                      "disabled": "#BBBBBB",
                                      "hint": "#BBBBBB",
                                      "primary": "#333333",
                                      "secondary": "#777777",
                                    },
                                  },
                                  "shadows": Object {
                                    "0": "none",
                                    "1": "0 1px 1px 0 rgba(0, 0, 0, 0.14)",
                                    "12": "0 12px 17px 0 rgba(0, 0, 0, 0.14)",
                                    "16": "0 16px 24px 0 rgba(0, 0, 0, 0.14)",
                                    "2": "0 2px 2px 0 rgba(0, 0, 0, 0.14)",
                                    "24": "0 24px 38px 0 rgba(0, 0, 0, 0.14)",
                                    "3": "0 3px 4px 0 rgba(0, 0, 0, 0.14)",
                                    "4": "0 4px 5px 0 rgba(0, 0, 0, 0.14)",
                                    "6": "0 6px 10px 0 rgba(0, 0, 0, 0.14)",
                                    "8": "0 8px 10px 0 rgba(0, 0, 0, 0.14)",
                                    "9": "0 9px 12px 0 rgba(0, 0, 0, 0.14)",
                                  },
                                  "shape": Object {
                                    "badgeBorderRadius": 100,
                                    "borderRadius": 4,
                                  },
                                  "sizes": Object {
                                    "huge": 96,
                                    "hugex": 128,
                                    "hugexx": 144,
                                    "hugexxx": 192,
                                    "large": 64,
                                    "largex": 72,
                                    "largexx": 80,
                                    "largexxx": 88,
                                    "medium": 48,
                                    "mediumx": 56,
                                    "micro": 4,
                                    "none": 0,
                                    "semi": 32,
                                    "semix": 40,
                                    "small": 16,
                                    "standard": 24,
                                    "tiny": 8,
                                    "veryhuge": 256,
                                  },
                                  "spacing": 8,
                                  "typography": Object {
                                    "body1": Object {
                                      "fontSize": "1rem",
                                      "fontWeight": 400,
                                    },
                                    "body2": Object {
                                      "fontSize": "0.875rem",
                                      "fontWeight": 400,
                                    },
                                    "button": Object {
                                      "fontSize": "0.875rem",
                                      "fontWeight": 600,
                                    },
                                    "caption": Object {
                                      "fontSize": "0.75rem",
                                      "fontWeight": 400,
                                    },
                                    "fontFamily": "\\"Roboto\\", sans-serif",
                                    "fontFamilyBrand1": "\\"Helvetica Now Display\\"",
                                    "fontFamilyBrand2": "\\"Helvetica Now Text\\"",
                                    "fontFamilyBrand3": undefined,
                                    "fontWeightBold": 700,
                                    "fontWeightLight": 300,
                                    "fontWeightMedium": 500,
                                    "fontWeightRegular": 400,
                                    "h1": Object {
                                      "fontSize": "6rem",
                                      "fontWeight": 300,
                                    },
                                    "h2": Object {
                                      "fontSize": "3.75rem",
                                      "fontWeight": 300,
                                    },
                                    "h3": Object {
                                      "fontSize": "3rem",
                                      "fontWeight": 400,
                                    },
                                    "h4": Object {
                                      "fontSize": "2.125rem",
                                      "fontWeight": 400,
                                    },
                                    "h5": Object {
                                      "fontSize": "1.5rem",
                                      "fontWeight": 400,
                                    },
                                    "h6": Object {
                                      "fontSize": "1.25rem",
                                      "fontWeight": 600,
                                    },
                                    "overline": Object {
                                      "fontSize": "0.75rem",
                                      "fontWeight": 400,
                                    },
                                    "subtitle1": Object {
                                      "fontSize": "1rem",
                                      "fontWeight": 400,
                                    },
                                    "subtitle2": Object {
                                      "fontSize": "0.875rem",
                                      "fontWeight": 500,
                                    },
                                  },
                                }
                              }
                              value="February 1st"
                            >
                              <WithStyles(ForwardRef(FormControl))
                                className="MuiTextField-root"
                                color="primary"
                                disabled={false}
                                error={false}
                                fullWidth={false}
                                required={false}
                                theme={
                                  Object {
                                    "avatarSizes": Object {
                                      "huge": Object {
                                        "fontSize": "1.5rem",
                                        "size": 80,
                                      },
                                      "large": Object {
                                        "fontSize": "1rem",
                                        "size": 48,
                                      },
                                      "small": Object {
                                        "fontSize": ".875rem",
                                        "size": 32,
                                      },
                                      "standard": Object {
                                        "fontSize": "1rem",
                                        "size": 40,
                                      },
                                      "tiny": Object {
                                        "fontSize": ".625rem",
                                        "size": 24,
                                      },
                                    },
                                    "buttonSizes": Object {
                                      "large": Object {
                                        "minHeight": 48,
                                        "paddingBottom": 16,
                                        "paddingLeft": 16,
                                        "paddingRight": 16,
                                        "paddingTop": 16,
                                      },
                                      "medium": Object {
                                        "minHeight": 40,
                                        "paddingBottom": 12,
                                        "paddingLeft": 16,
                                        "paddingRight": 16,
                                        "paddingTop": 12,
                                      },
                                      "small": Object {
                                        "minHeight": 32,
                                        "paddingBottom": 8,
                                        "paddingLeft": 8,
                                        "paddingRight": 8,
                                        "paddingTop": 8,
                                      },
                                    },
                                    "iconSizes": Object {
                                      "huge": 144,
                                      "hugex": 192,
                                      "hugexx": 256,
                                      "large": 72,
                                      "largex": 96,
                                      "largexx": 128,
                                      "medium": 64,
                                      "micro": 16,
                                      "small": 32,
                                      "standard": 48,
                                      "tiny": 24,
                                    },
                                    "overrides": Object {
                                      "MuiAvatar": Object {
                                        "colorDefault": Object {
                                          "color": "#333333",
                                        },
                                      },
                                      "MuiBadge": Object {
                                        "badge": Object {
                                          "padding": "0 4px",
                                        },
                                      },
                                      "MuiButton": Object {
                                        "outlinedPrimary": Object {
                                          "color": "#333333",
                                        },
                                        "outlinedSecondary": Object {
                                          "color": "#333333",
                                        },
                                        "root": Object {
                                          "fontSize": "0.875rem",
                                          "minHeight": "40px",
                                          "padding": "8px 16px",
                                        },
                                        "sizeLarge": Object {
                                          "fontSize": "0.875rem",
                                          "minHeight": "48px",
                                        },
                                        "sizeSmall": Object {
                                          "fontSize": "0.875rem",
                                          "minHeight": "32px",
                                        },
                                        "textPrimary": Object {
                                          "color": "#333333",
                                        },
                                      },
                                      "MuiChip": Object {
                                        "clickableColorPrimary": Object {
                                          "&:hover": Object {
                                            "backgroundColor": "#EF8426",
                                          },
                                        },
                                        "clickableColorSecondary": Object {
                                          "&:hover": Object {
                                            "backgroundColor": "#EF8426",
                                          },
                                        },
                                        "deleteIcon": Object {
                                          "&:hover": Object {
                                            "color": "#000000",
                                          },
                                          "color": "rgba(0, 0, 0, 0.8)",
                                          "fontSize": "24px",
                                          "height": "24px",
                                          "width": "24px",
                                        },
                                        "deleteIconColorPrimary": Object {
                                          "&:hover": Object {
                                            "color": "#FFFFFF",
                                          },
                                          "color": "rgba(255, 255, 255, 0.8)",
                                        },
                                        "deleteIconColorSecondary": Object {
                                          "&:hover": Object {
                                            "color": "#FFFFFF",
                                          },
                                          "color": "rgba(255, 255, 255, 0.8)",
                                        },
                                        "deleteIconSmall": Object {
                                          "fontSize": "16px",
                                          "height": "16px",
                                          "width": "16px",
                                        },
                                        "icon": Object {
                                          "fontSize": "24px",
                                        },
                                        "iconSmall": Object {
                                          "fontSize": "16px",
                                          "height": "16px",
                                          "marginTop": "1px",
                                          "width": "16px",
                                        },
                                        "outlined": Object {
                                          "borderColor": "rgba(0, 0, 0, 0.12)",
                                          "color": "#000000",
                                        },
                                        "outlinedPrimary": Object {
                                          "color": "#000000",
                                        },
                                        "outlinedSecondary": Object {
                                          "color": "#000000",
                                        },
                                        "root": Object {
                                          "& $avatar": Object {
                                            "backgroundColor": "rgba(0, 0, 0, 0.24)",
                                            "color": "#333333",
                                          },
                                          "&$disabled": Object {
                                            "opacity": 0.4,
                                          },
                                          "backgroundColor": "rgba(0, 0, 0, 0.12)",
                                          "color": "#333333",
                                          "fontSize": "0.875rem",
                                        },
                                      },
                                      "MuiExpansionPanel": Object {
                                        "root": Object {
                                          "&$disabled": Object {
                                            "backgroundColor": "#FFFFFF",
                                            "opacity": 0.32,
                                          },
                                          "&$expanded": Object {
                                            "borderColor": "#F4AB34",
                                          },
                                          "border": "transparent 1px solid",
                                        },
                                      },
                                      "MuiExpansionPanelSummary": Object {
                                        "root": Object {
                                          "&$disabled": Object {
                                            "opacity": 1,
                                          },
                                          "alignItems": "flex-start",
                                          "marginTop": "8px",
                                        },
                                      },
                                      "MuiFormLabel": Object {
                                        "formControl": Object {
                                          "marginTop": "-4px",
                                          "transform": "none",
                                        },
                                        "root": Object {
                                          "&.Mui-focused": Object {
                                            "color": "#777777",
                                            "fontSize": "0.875rem",
                                          },
                                          "fontSize": "0.875rem",
                                        },
                                      },
                                      "MuiIconButton": Object {
                                        "root": Object {
                                          "color": "#333333",
                                          "padding": "8px",
                                        },
                                        "sizeSmall": Object {
                                          "padding": "4px",
                                        },
                                      },
                                      "MuiInputAdornment": Object {
                                        "root": Object {
                                          "position": "absolute",
                                          "right": "0",
                                        },
                                      },
                                      "MuiInputBase": Object {
                                        "input": Object {
                                          "&.Mui-disabled": Object {
                                            "&:hover": Object {
                                              "boxShadow": "#333333 0 0 0 1px",
                                            },
                                            "opacity": 0.24,
                                          },
                                          "&:focus": Object {
                                            "boxShadow": "#F4AB34 0 0 0 2px",
                                          },
                                          "&:focus:not(:read-only)": Object {
                                            "boxShadow": "#F4AB34 0 0 0 2px",
                                          },
                                          "&:hover": Object {
                                            "boxShadow": "#777777 0 0 0 1px",
                                          },
                                          "&:hover:not(:placeholder-shown)": Object {
                                            "boxShadow": "#777777 0 0 0 1px",
                                          },
                                          "&:hover:not(:read-only):not(:disabled):not(:focus)": Object {
                                            "boxShadow": "#777777 0 0 0 1px",
                                          },
                                          "&:not(:placeholder-shown)": Object {
                                            "boxShadow": "#333333 0 0 0 1px",
                                          },
                                          "&:placeholder-shown": Object {
                                            "boxShadow": "#BBBBBB 0 0 0 1px",
                                          },
                                          "borderRadius": "4px",
                                          "boxShadow": "#BBBBBB 0 0 0 1px",
                                          "color": "#333333",
                                          "minHeight": "24px",
                                          "padding": "16px 35px 16px 16px",
                                        },
                                        "root": Object {
                                          "&.MuiInput-underline.Mui-disabled:before": Object {
                                            "borderBottom": "none",
                                          },
                                          "&.MuiInput-underline:after": Object {
                                            "borderBottom": "none",
                                          },
                                          "&.MuiInput-underline:before": Object {
                                            "borderBottom": "none",
                                          },
                                          "&.MuiInput-underline:hover:not(.Mui-disabled):before": Object {
                                            "borderBottom": "none",
                                          },
                                          "color": "#333333",
                                        },
                                      },
                                      "MuiInputLabel": Object {
                                        "formControl": Object {
                                          "marginTop": "-4px",
                                          "transform": "none",
                                        },
                                        "shrink": Object {
                                          "marginTop": "-4px",
                                          "transform": "none",
                                        },
                                      },
                                      "MuiListItem": Object {
                                        "button": Object {
                                          "&:hover": Object {
                                            "backgroundColor": "rgba(0, 0, 0, 0.04)",
                                          },
                                        },
                                        "root": Object {
                                          "&$selected": Object {
                                            "&:hover": Object {
                                              "backgroundColor": "rgba(0, 0, 0, 0.04)",
                                            },
                                            "backgroundColor": "rgba(255, 107, 11, 0.16)",
                                          },
                                          "&.Mui-disabled": Object {
                                            "opacity": 0.32,
                                          },
                                        },
                                      },
                                      "MuiTab": Object {
                                        "root": Object {
                                          "&$disabled": Object {
                                            "opacity": 0.24,
                                          },
                                        },
                                        "textColorInherit": Object {
                                          "&$disabled": Object {
                                            "opacity": 0.24,
                                          },
                                        },
                                        "wrapper": Object {
                                          "& > *:first-child": Object {
                                            "marginBottom": "2px !important",
                                          },
                                        },
                                      },
                                      "MuiTextField": Object {
                                        "& .MuiInputLabel": Object {
                                          "marginTop": "20px",
                                        },
                                      },
                                      "MuiToolbar": Object {
                                        "dense": Object {
                                          "@media (min-width: 600px)": Object {
                                            "minHeight": "56px",
                                          },
                                          "minHeight": "56px",
                                        },
                                        "gutters": Object {
                                          "@media (min-width: 600px)": Object {
                                            "padding": "0 16px",
                                          },
                                          "padding": "0 16px",
                                        },
                                        "regular": Object {
                                          "@media (min-width: 600px)": Object {
                                            "minHeight": "56px",
                                          },
                                          "minHeight": "56px",
                                        },
                                        "root": Object {
                                          "@media (min-width: 600px)": Object {
                                            "padding": "0 16px",
                                          },
                                          "padding": "0 16px",
                                        },
                                      },
                                    },
                                    "palette": Object {
                                      "action": Object {
                                        "disabled": "rgba(51, 51, 51, 0.24)",
                                      },
                                      "background": Object {
                                        "default": "#FAFAFA",
                                        "defaultContrastText": "#333333",
                                        "paper": "#FFFFFF",
                                        "paperContrastText": "#333333",
                                      },
                                      "complementary": Object {
                                        "highlight": "#000000",
                                        "link": "#227BBD",
                                        "linkContrastText": "#FFFFFF",
                                        "warning": "#FCC433",
                                        "warningContrastText": "#333333",
                                      },
                                      "error": Object {
                                        "contrastText": "#FFFFFF",
                                        "main": "#E74627",
                                      },
                                      "primary": Object {
                                        "contrastText": "#333333",
                                        "dark": "#EF8426",
                                        "light": "#FEFDE8",
                                        "main": "#F4AB34",
                                      },
                                      "secondary": Object {
                                        "contrastText": "#000000",
                                        "dark": "#FF5808",
                                        "light": "#FFF8E1",
                                        "main": "#FF6B0B",
                                      },
                                      "success": Object {
                                        "contrastText": "#FFFFFF",
                                        "main": "#569A32",
                                      },
                                      "text": Object {
                                        "disabled": "#BBBBBB",
                                        "hint": "#BBBBBB",
                                        "primary": "#333333",
                                        "secondary": "#777777",
                                      },
                                    },
                                    "shadows": Object {
                                      "0": "none",
                                      "1": "0 1px 1px 0 rgba(0, 0, 0, 0.14)",
                                      "12": "0 12px 17px 0 rgba(0, 0, 0, 0.14)",
                                      "16": "0 16px 24px 0 rgba(0, 0, 0, 0.14)",
                                      "2": "0 2px 2px 0 rgba(0, 0, 0, 0.14)",
                                      "24": "0 24px 38px 0 rgba(0, 0, 0, 0.14)",
                                      "3": "0 3px 4px 0 rgba(0, 0, 0, 0.14)",
                                      "4": "0 4px 5px 0 rgba(0, 0, 0, 0.14)",
                                      "6": "0 6px 10px 0 rgba(0, 0, 0, 0.14)",
                                      "8": "0 8px 10px 0 rgba(0, 0, 0, 0.14)",
                                      "9": "0 9px 12px 0 rgba(0, 0, 0, 0.14)",
                                    },
                                    "shape": Object {
                                      "badgeBorderRadius": 100,
                                      "borderRadius": 4,
                                    },
                                    "sizes": Object {
                                      "huge": 96,
                                      "hugex": 128,
                                      "hugexx": 144,
                                      "hugexxx": 192,
                                      "large": 64,
                                      "largex": 72,
                                      "largexx": 80,
                                      "largexxx": 88,
                                      "medium": 48,
                                      "mediumx": 56,
                                      "micro": 4,
                                      "none": 0,
                                      "semi": 32,
                                      "semix": 40,
                                      "small": 16,
                                      "standard": 24,
                                      "tiny": 8,
                                      "veryhuge": 256,
                                    },
                                    "spacing": 8,
                                    "typography": Object {
                                      "body1": Object {
                                        "fontSize": "1rem",
                                        "fontWeight": 400,
                                      },
                                      "body2": Object {
                                        "fontSize": "0.875rem",
                                        "fontWeight": 400,
                                      },
                                      "button": Object {
                                        "fontSize": "0.875rem",
                                        "fontWeight": 600,
                                      },
                                      "caption": Object {
                                        "fontSize": "0.75rem",
                                        "fontWeight": 400,
                                      },
                                      "fontFamily": "\\"Roboto\\", sans-serif",
                                      "fontFamilyBrand1": "\\"Helvetica Now Display\\"",
                                      "fontFamilyBrand2": "\\"Helvetica Now Text\\"",
                                      "fontFamilyBrand3": undefined,
                                      "fontWeightBold": 700,
                                      "fontWeightLight": 300,
                                      "fontWeightMedium": 500,
                                      "fontWeightRegular": 400,
                                      "h1": Object {
                                        "fontSize": "6rem",
                                        "fontWeight": 300,
                                      },
                                      "h2": Object {
                                        "fontSize": "3.75rem",
                                        "fontWeight": 300,
                                      },
                                      "h3": Object {
                                        "fontSize": "3rem",
                                        "fontWeight": 400,
                                      },
                                      "h4": Object {
                                        "fontSize": "2.125rem",
                                        "fontWeight": 400,
                                      },
                                      "h5": Object {
                                        "fontSize": "1.5rem",
                                        "fontWeight": 400,
                                      },
                                      "h6": Object {
                                        "fontSize": "1.25rem",
                                        "fontWeight": 600,
                                      },
                                      "overline": Object {
                                        "fontSize": "0.75rem",
                                        "fontWeight": 400,
                                      },
                                      "subtitle1": Object {
                                        "fontSize": "1rem",
                                        "fontWeight": 400,
                                      },
                                      "subtitle2": Object {
                                        "fontSize": "0.875rem",
                                        "fontWeight": 500,
                                      },
                                    },
                                  }
                                }
                                variant="standard"
                              >
                                <ForwardRef(FormControl)
                                  className="MuiTextField-root"
                                  classes={
                                    Object {
                                      "fullWidth": "MuiFormControl-fullWidth",
                                      "marginDense": "MuiFormControl-marginDense",
                                      "marginNormal": "MuiFormControl-marginNormal",
                                      "root": "MuiFormControl-root",
                                    }
                                  }
                                  color="primary"
                                  disabled={false}
                                  error={false}
                                  fullWidth={false}
                                  required={false}
                                  theme={
                                    Object {
                                      "avatarSizes": Object {
                                        "huge": Object {
                                          "fontSize": "1.5rem",
                                          "size": 80,
                                        },
                                        "large": Object {
                                          "fontSize": "1rem",
                                          "size": 48,
                                        },
                                        "small": Object {
                                          "fontSize": ".875rem",
                                          "size": 32,
                                        },
                                        "standard": Object {
                                          "fontSize": "1rem",
                                          "size": 40,
                                        },
                                        "tiny": Object {
                                          "fontSize": ".625rem",
                                          "size": 24,
                                        },
                                      },
                                      "buttonSizes": Object {
                                        "large": Object {
                                          "minHeight": 48,
                                          "paddingBottom": 16,
                                          "paddingLeft": 16,
                                          "paddingRight": 16,
                                          "paddingTop": 16,
                                        },
                                        "medium": Object {
                                          "minHeight": 40,
                                          "paddingBottom": 12,
                                          "paddingLeft": 16,
                                          "paddingRight": 16,
                                          "paddingTop": 12,
                                        },
                                        "small": Object {
                                          "minHeight": 32,
                                          "paddingBottom": 8,
                                          "paddingLeft": 8,
                                          "paddingRight": 8,
                                          "paddingTop": 8,
                                        },
                                      },
                                      "iconSizes": Object {
                                        "huge": 144,
                                        "hugex": 192,
                                        "hugexx": 256,
                                        "large": 72,
                                        "largex": 96,
                                        "largexx": 128,
                                        "medium": 64,
                                        "micro": 16,
                                        "small": 32,
                                        "standard": 48,
                                        "tiny": 24,
                                      },
                                      "overrides": Object {
                                        "MuiAvatar": Object {
                                          "colorDefault": Object {
                                            "color": "#333333",
                                          },
                                        },
                                        "MuiBadge": Object {
                                          "badge": Object {
                                            "padding": "0 4px",
                                          },
                                        },
                                        "MuiButton": Object {
                                          "outlinedPrimary": Object {
                                            "color": "#333333",
                                          },
                                          "outlinedSecondary": Object {
                                            "color": "#333333",
                                          },
                                          "root": Object {
                                            "fontSize": "0.875rem",
                                            "minHeight": "40px",
                                            "padding": "8px 16px",
                                          },
                                          "sizeLarge": Object {
                                            "fontSize": "0.875rem",
                                            "minHeight": "48px",
                                          },
                                          "sizeSmall": Object {
                                            "fontSize": "0.875rem",
                                            "minHeight": "32px",
                                          },
                                          "textPrimary": Object {
                                            "color": "#333333",
                                          },
                                        },
                                        "MuiChip": Object {
                                          "clickableColorPrimary": Object {
                                            "&:hover": Object {
                                              "backgroundColor": "#EF8426",
                                            },
                                          },
                                          "clickableColorSecondary": Object {
                                            "&:hover": Object {
                                              "backgroundColor": "#EF8426",
                                            },
                                          },
                                          "deleteIcon": Object {
                                            "&:hover": Object {
                                              "color": "#000000",
                                            },
                                            "color": "rgba(0, 0, 0, 0.8)",
                                            "fontSize": "24px",
                                            "height": "24px",
                                            "width": "24px",
                                          },
                                          "deleteIconColorPrimary": Object {
                                            "&:hover": Object {
                                              "color": "#FFFFFF",
                                            },
                                            "color": "rgba(255, 255, 255, 0.8)",
                                          },
                                          "deleteIconColorSecondary": Object {
                                            "&:hover": Object {
                                              "color": "#FFFFFF",
                                            },
                                            "color": "rgba(255, 255, 255, 0.8)",
                                          },
                                          "deleteIconSmall": Object {
                                            "fontSize": "16px",
                                            "height": "16px",
                                            "width": "16px",
                                          },
                                          "icon": Object {
                                            "fontSize": "24px",
                                          },
                                          "iconSmall": Object {
                                            "fontSize": "16px",
                                            "height": "16px",
                                            "marginTop": "1px",
                                            "width": "16px",
                                          },
                                          "outlined": Object {
                                            "borderColor": "rgba(0, 0, 0, 0.12)",
                                            "color": "#000000",
                                          },
                                          "outlinedPrimary": Object {
                                            "color": "#000000",
                                          },
                                          "outlinedSecondary": Object {
                                            "color": "#000000",
                                          },
                                          "root": Object {
                                            "& $avatar": Object {
                                              "backgroundColor": "rgba(0, 0, 0, 0.24)",
                                              "color": "#333333",
                                            },
                                            "&$disabled": Object {
                                              "opacity": 0.4,
                                            },
                                            "backgroundColor": "rgba(0, 0, 0, 0.12)",
                                            "color": "#333333",
                                            "fontSize": "0.875rem",
                                          },
                                        },
                                        "MuiExpansionPanel": Object {
                                          "root": Object {
                                            "&$disabled": Object {
                                              "backgroundColor": "#FFFFFF",
                                              "opacity": 0.32,
                                            },
                                            "&$expanded": Object {
                                              "borderColor": "#F4AB34",
                                            },
                                            "border": "transparent 1px solid",
                                          },
                                        },
                                        "MuiExpansionPanelSummary": Object {
                                          "root": Object {
                                            "&$disabled": Object {
                                              "opacity": 1,
                                            },
                                            "alignItems": "flex-start",
                                            "marginTop": "8px",
                                          },
                                        },
                                        "MuiFormLabel": Object {
                                          "formControl": Object {
                                            "marginTop": "-4px",
                                            "transform": "none",
                                          },
                                          "root": Object {
                                            "&.Mui-focused": Object {
                                              "color": "#777777",
                                              "fontSize": "0.875rem",
                                            },
                                            "fontSize": "0.875rem",
                                          },
                                        },
                                        "MuiIconButton": Object {
                                          "root": Object {
                                            "color": "#333333",
                                            "padding": "8px",
                                          },
                                          "sizeSmall": Object {
                                            "padding": "4px",
                                          },
                                        },
                                        "MuiInputAdornment": Object {
                                          "root": Object {
                                            "position": "absolute",
                                            "right": "0",
                                          },
                                        },
                                        "MuiInputBase": Object {
                                          "input": Object {
                                            "&.Mui-disabled": Object {
                                              "&:hover": Object {
                                                "boxShadow": "#333333 0 0 0 1px",
                                              },
                                              "opacity": 0.24,
                                            },
                                            "&:focus": Object {
                                              "boxShadow": "#F4AB34 0 0 0 2px",
                                            },
                                            "&:focus:not(:read-only)": Object {
                                              "boxShadow": "#F4AB34 0 0 0 2px",
                                            },
                                            "&:hover": Object {
                                              "boxShadow": "#777777 0 0 0 1px",
                                            },
                                            "&:hover:not(:placeholder-shown)": Object {
                                              "boxShadow": "#777777 0 0 0 1px",
                                            },
                                            "&:hover:not(:read-only):not(:disabled):not(:focus)": Object {
                                              "boxShadow": "#777777 0 0 0 1px",
                                            },
                                            "&:not(:placeholder-shown)": Object {
                                              "boxShadow": "#333333 0 0 0 1px",
                                            },
                                            "&:placeholder-shown": Object {
                                              "boxShadow": "#BBBBBB 0 0 0 1px",
                                            },
                                            "borderRadius": "4px",
                                            "boxShadow": "#BBBBBB 0 0 0 1px",
                                            "color": "#333333",
                                            "minHeight": "24px",
                                            "padding": "16px 35px 16px 16px",
                                          },
                                          "root": Object {
                                            "&.MuiInput-underline.Mui-disabled:before": Object {
                                              "borderBottom": "none",
                                            },
                                            "&.MuiInput-underline:after": Object {
                                              "borderBottom": "none",
                                            },
                                            "&.MuiInput-underline:before": Object {
                                              "borderBottom": "none",
                                            },
                                            "&.MuiInput-underline:hover:not(.Mui-disabled):before": Object {
                                              "borderBottom": "none",
                                            },
                                            "color": "#333333",
                                          },
                                        },
                                        "MuiInputLabel": Object {
                                          "formControl": Object {
                                            "marginTop": "-4px",
                                            "transform": "none",
                                          },
                                          "shrink": Object {
                                            "marginTop": "-4px",
                                            "transform": "none",
                                          },
                                        },
                                        "MuiListItem": Object {
                                          "button": Object {
                                            "&:hover": Object {
                                              "backgroundColor": "rgba(0, 0, 0, 0.04)",
                                            },
                                          },
                                          "root": Object {
                                            "&$selected": Object {
                                              "&:hover": Object {
                                                "backgroundColor": "rgba(0, 0, 0, 0.04)",
                                              },
                                              "backgroundColor": "rgba(255, 107, 11, 0.16)",
                                            },
                                            "&.Mui-disabled": Object {
                                              "opacity": 0.32,
                                            },
                                          },
                                        },
                                        "MuiTab": Object {
                                          "root": Object {
                                            "&$disabled": Object {
                                              "opacity": 0.24,
                                            },
                                          },
                                          "textColorInherit": Object {
                                            "&$disabled": Object {
                                              "opacity": 0.24,
                                            },
                                          },
                                          "wrapper": Object {
                                            "& > *:first-child": Object {
                                              "marginBottom": "2px !important",
                                            },
                                          },
                                        },
                                        "MuiTextField": Object {
                                          "& .MuiInputLabel": Object {
                                            "marginTop": "20px",
                                          },
                                        },
                                        "MuiToolbar": Object {
                                          "dense": Object {
                                            "@media (min-width: 600px)": Object {
                                              "minHeight": "56px",
                                            },
                                            "minHeight": "56px",
                                          },
                                          "gutters": Object {
                                            "@media (min-width: 600px)": Object {
                                              "padding": "0 16px",
                                            },
                                            "padding": "0 16px",
                                          },
                                          "regular": Object {
                                            "@media (min-width: 600px)": Object {
                                              "minHeight": "56px",
                                            },
                                            "minHeight": "56px",
                                          },
                                          "root": Object {
                                            "@media (min-width: 600px)": Object {
                                              "padding": "0 16px",
                                            },
                                            "padding": "0 16px",
                                          },
                                        },
                                      },
                                      "palette": Object {
                                        "action": Object {
                                          "disabled": "rgba(51, 51, 51, 0.24)",
                                        },
                                        "background": Object {
                                          "default": "#FAFAFA",
                                          "defaultContrastText": "#333333",
                                          "paper": "#FFFFFF",
                                          "paperContrastText": "#333333",
                                        },
                                        "complementary": Object {
                                          "highlight": "#000000",
                                          "link": "#227BBD",
                                          "linkContrastText": "#FFFFFF",
                                          "warning": "#FCC433",
                                          "warningContrastText": "#333333",
                                        },
                                        "error": Object {
                                          "contrastText": "#FFFFFF",
                                          "main": "#E74627",
                                        },
                                        "primary": Object {
                                          "contrastText": "#333333",
                                          "dark": "#EF8426",
                                          "light": "#FEFDE8",
                                          "main": "#F4AB34",
                                        },
                                        "secondary": Object {
                                          "contrastText": "#000000",
                                          "dark": "#FF5808",
                                          "light": "#FFF8E1",
                                          "main": "#FF6B0B",
                                        },
                                        "success": Object {
                                          "contrastText": "#FFFFFF",
                                          "main": "#569A32",
                                        },
                                        "text": Object {
                                          "disabled": "#BBBBBB",
                                          "hint": "#BBBBBB",
                                          "primary": "#333333",
                                          "secondary": "#777777",
                                        },
                                      },
                                      "shadows": Object {
                                        "0": "none",
                                        "1": "0 1px 1px 0 rgba(0, 0, 0, 0.14)",
                                        "12": "0 12px 17px 0 rgba(0, 0, 0, 0.14)",
                                        "16": "0 16px 24px 0 rgba(0, 0, 0, 0.14)",
                                        "2": "0 2px 2px 0 rgba(0, 0, 0, 0.14)",
                                        "24": "0 24px 38px 0 rgba(0, 0, 0, 0.14)",
                                        "3": "0 3px 4px 0 rgba(0, 0, 0, 0.14)",
                                        "4": "0 4px 5px 0 rgba(0, 0, 0, 0.14)",
                                        "6": "0 6px 10px 0 rgba(0, 0, 0, 0.14)",
                                        "8": "0 8px 10px 0 rgba(0, 0, 0, 0.14)",
                                        "9": "0 9px 12px 0 rgba(0, 0, 0, 0.14)",
                                      },
                                      "shape": Object {
                                        "badgeBorderRadius": 100,
                                        "borderRadius": 4,
                                      },
                                      "sizes": Object {
                                        "huge": 96,
                                        "hugex": 128,
                                        "hugexx": 144,
                                        "hugexxx": 192,
                                        "large": 64,
                                        "largex": 72,
                                        "largexx": 80,
                                        "largexxx": 88,
                                        "medium": 48,
                                        "mediumx": 56,
                                        "micro": 4,
                                        "none": 0,
                                        "semi": 32,
                                        "semix": 40,
                                        "small": 16,
                                        "standard": 24,
                                        "tiny": 8,
                                        "veryhuge": 256,
                                      },
                                      "spacing": 8,
                                      "typography": Object {
                                        "body1": Object {
                                          "fontSize": "1rem",
                                          "fontWeight": 400,
                                        },
                                        "body2": Object {
                                          "fontSize": "0.875rem",
                                          "fontWeight": 400,
                                        },
                                        "button": Object {
                                          "fontSize": "0.875rem",
                                          "fontWeight": 600,
                                        },
                                        "caption": Object {
                                          "fontSize": "0.75rem",
                                          "fontWeight": 400,
                                        },
                                        "fontFamily": "\\"Roboto\\", sans-serif",
                                        "fontFamilyBrand1": "\\"Helvetica Now Display\\"",
                                        "fontFamilyBrand2": "\\"Helvetica Now Text\\"",
                                        "fontFamilyBrand3": undefined,
                                        "fontWeightBold": 700,
                                        "fontWeightLight": 300,
                                        "fontWeightMedium": 500,
                                        "fontWeightRegular": 400,
                                        "h1": Object {
                                          "fontSize": "6rem",
                                          "fontWeight": 300,
                                        },
                                        "h2": Object {
                                          "fontSize": "3.75rem",
                                          "fontWeight": 300,
                                        },
                                        "h3": Object {
                                          "fontSize": "3rem",
                                          "fontWeight": 400,
                                        },
                                        "h4": Object {
                                          "fontSize": "2.125rem",
                                          "fontWeight": 400,
                                        },
                                        "h5": Object {
                                          "fontSize": "1.5rem",
                                          "fontWeight": 400,
                                        },
                                        "h6": Object {
                                          "fontSize": "1.25rem",
                                          "fontWeight": 600,
                                        },
                                        "overline": Object {
                                          "fontSize": "0.75rem",
                                          "fontWeight": 400,
                                        },
                                        "subtitle1": Object {
                                          "fontSize": "1rem",
                                          "fontWeight": 400,
                                        },
                                        "subtitle2": Object {
                                          "fontSize": "0.875rem",
                                          "fontWeight": 500,
                                        },
                                      },
                                    }
                                  }
                                  variant="standard"
                                >
                                  <div
                                    className="MuiFormControl-root MuiTextField-root"
                                    theme={
                                      Object {
                                        "avatarSizes": Object {
                                          "huge": Object {
                                            "fontSize": "1.5rem",
                                            "size": 80,
                                          },
                                          "large": Object {
                                            "fontSize": "1rem",
                                            "size": 48,
                                          },
                                          "small": Object {
                                            "fontSize": ".875rem",
                                            "size": 32,
                                          },
                                          "standard": Object {
                                            "fontSize": "1rem",
                                            "size": 40,
                                          },
                                          "tiny": Object {
                                            "fontSize": ".625rem",
                                            "size": 24,
                                          },
                                        },
                                        "buttonSizes": Object {
                                          "large": Object {
                                            "minHeight": 48,
                                            "paddingBottom": 16,
                                            "paddingLeft": 16,
                                            "paddingRight": 16,
                                            "paddingTop": 16,
                                          },
                                          "medium": Object {
                                            "minHeight": 40,
                                            "paddingBottom": 12,
                                            "paddingLeft": 16,
                                            "paddingRight": 16,
                                            "paddingTop": 12,
                                          },
                                          "small": Object {
                                            "minHeight": 32,
                                            "paddingBottom": 8,
                                            "paddingLeft": 8,
                                            "paddingRight": 8,
                                            "paddingTop": 8,
                                          },
                                        },
                                        "iconSizes": Object {
                                          "huge": 144,
                                          "hugex": 192,
                                          "hugexx": 256,
                                          "large": 72,
                                          "largex": 96,
                                          "largexx": 128,
                                          "medium": 64,
                                          "micro": 16,
                                          "small": 32,
                                          "standard": 48,
                                          "tiny": 24,
                                        },
                                        "overrides": Object {
                                          "MuiAvatar": Object {
                                            "colorDefault": Object {
                                              "color": "#333333",
                                            },
                                          },
                                          "MuiBadge": Object {
                                            "badge": Object {
                                              "padding": "0 4px",
                                            },
                                          },
                                          "MuiButton": Object {
                                            "outlinedPrimary": Object {
                                              "color": "#333333",
                                            },
                                            "outlinedSecondary": Object {
                                              "color": "#333333",
                                            },
                                            "root": Object {
                                              "fontSize": "0.875rem",
                                              "minHeight": "40px",
                                              "padding": "8px 16px",
                                            },
                                            "sizeLarge": Object {
                                              "fontSize": "0.875rem",
                                              "minHeight": "48px",
                                            },
                                            "sizeSmall": Object {
                                              "fontSize": "0.875rem",
                                              "minHeight": "32px",
                                            },
                                            "textPrimary": Object {
                                              "color": "#333333",
                                            },
                                          },
                                          "MuiChip": Object {
                                            "clickableColorPrimary": Object {
                                              "&:hover": Object {
                                                "backgroundColor": "#EF8426",
                                              },
                                            },
                                            "clickableColorSecondary": Object {
                                              "&:hover": Object {
                                                "backgroundColor": "#EF8426",
                                              },
                                            },
                                            "deleteIcon": Object {
                                              "&:hover": Object {
                                                "color": "#000000",
                                              },
                                              "color": "rgba(0, 0, 0, 0.8)",
                                              "fontSize": "24px",
                                              "height": "24px",
                                              "width": "24px",
                                            },
                                            "deleteIconColorPrimary": Object {
                                              "&:hover": Object {
                                                "color": "#FFFFFF",
                                              },
                                              "color": "rgba(255, 255, 255, 0.8)",
                                            },
                                            "deleteIconColorSecondary": Object {
                                              "&:hover": Object {
                                                "color": "#FFFFFF",
                                              },
                                              "color": "rgba(255, 255, 255, 0.8)",
                                            },
                                            "deleteIconSmall": Object {
                                              "fontSize": "16px",
                                              "height": "16px",
                                              "width": "16px",
                                            },
                                            "icon": Object {
                                              "fontSize": "24px",
                                            },
                                            "iconSmall": Object {
                                              "fontSize": "16px",
                                              "height": "16px",
                                              "marginTop": "1px",
                                              "width": "16px",
                                            },
                                            "outlined": Object {
                                              "borderColor": "rgba(0, 0, 0, 0.12)",
                                              "color": "#000000",
                                            },
                                            "outlinedPrimary": Object {
                                              "color": "#000000",
                                            },
                                            "outlinedSecondary": Object {
                                              "color": "#000000",
                                            },
                                            "root": Object {
                                              "& $avatar": Object {
                                                "backgroundColor": "rgba(0, 0, 0, 0.24)",
                                                "color": "#333333",
                                              },
                                              "&$disabled": Object {
                                                "opacity": 0.4,
                                              },
                                              "backgroundColor": "rgba(0, 0, 0, 0.12)",
                                              "color": "#333333",
                                              "fontSize": "0.875rem",
                                            },
                                          },
                                          "MuiExpansionPanel": Object {
                                            "root": Object {
                                              "&$disabled": Object {
                                                "backgroundColor": "#FFFFFF",
                                                "opacity": 0.32,
                                              },
                                              "&$expanded": Object {
                                                "borderColor": "#F4AB34",
                                              },
                                              "border": "transparent 1px solid",
                                            },
                                          },
                                          "MuiExpansionPanelSummary": Object {
                                            "root": Object {
                                              "&$disabled": Object {
                                                "opacity": 1,
                                              },
                                              "alignItems": "flex-start",
                                              "marginTop": "8px",
                                            },
                                          },
                                          "MuiFormLabel": Object {
                                            "formControl": Object {
                                              "marginTop": "-4px",
                                              "transform": "none",
                                            },
                                            "root": Object {
                                              "&.Mui-focused": Object {
                                                "color": "#777777",
                                                "fontSize": "0.875rem",
                                              },
                                              "fontSize": "0.875rem",
                                            },
                                          },
                                          "MuiIconButton": Object {
                                            "root": Object {
                                              "color": "#333333",
                                              "padding": "8px",
                                            },
                                            "sizeSmall": Object {
                                              "padding": "4px",
                                            },
                                          },
                                          "MuiInputAdornment": Object {
                                            "root": Object {
                                              "position": "absolute",
                                              "right": "0",
                                            },
                                          },
                                          "MuiInputBase": Object {
                                            "input": Object {
                                              "&.Mui-disabled": Object {
                                                "&:hover": Object {
                                                  "boxShadow": "#333333 0 0 0 1px",
                                                },
                                                "opacity": 0.24,
                                              },
                                              "&:focus": Object {
                                                "boxShadow": "#F4AB34 0 0 0 2px",
                                              },
                                              "&:focus:not(:read-only)": Object {
                                                "boxShadow": "#F4AB34 0 0 0 2px",
                                              },
                                              "&:hover": Object {
                                                "boxShadow": "#777777 0 0 0 1px",
                                              },
                                              "&:hover:not(:placeholder-shown)": Object {
                                                "boxShadow": "#777777 0 0 0 1px",
                                              },
                                              "&:hover:not(:read-only):not(:disabled):not(:focus)": Object {
                                                "boxShadow": "#777777 0 0 0 1px",
                                              },
                                              "&:not(:placeholder-shown)": Object {
                                                "boxShadow": "#333333 0 0 0 1px",
                                              },
                                              "&:placeholder-shown": Object {
                                                "boxShadow": "#BBBBBB 0 0 0 1px",
                                              },
                                              "borderRadius": "4px",
                                              "boxShadow": "#BBBBBB 0 0 0 1px",
                                              "color": "#333333",
                                              "minHeight": "24px",
                                              "padding": "16px 35px 16px 16px",
                                            },
                                            "root": Object {
                                              "&.MuiInput-underline.Mui-disabled:before": Object {
                                                "borderBottom": "none",
                                              },
                                              "&.MuiInput-underline:after": Object {
                                                "borderBottom": "none",
                                              },
                                              "&.MuiInput-underline:before": Object {
                                                "borderBottom": "none",
                                              },
                                              "&.MuiInput-underline:hover:not(.Mui-disabled):before": Object {
                                                "borderBottom": "none",
                                              },
                                              "color": "#333333",
                                            },
                                          },
                                          "MuiInputLabel": Object {
                                            "formControl": Object {
                                              "marginTop": "-4px",
                                              "transform": "none",
                                            },
                                            "shrink": Object {
                                              "marginTop": "-4px",
                                              "transform": "none",
                                            },
                                          },
                                          "MuiListItem": Object {
                                            "button": Object {
                                              "&:hover": Object {
                                                "backgroundColor": "rgba(0, 0, 0, 0.04)",
                                              },
                                            },
                                            "root": Object {
                                              "&$selected": Object {
                                                "&:hover": Object {
                                                  "backgroundColor": "rgba(0, 0, 0, 0.04)",
                                                },
                                                "backgroundColor": "rgba(255, 107, 11, 0.16)",
                                              },
                                              "&.Mui-disabled": Object {
                                                "opacity": 0.32,
                                              },
                                            },
                                          },
                                          "MuiTab": Object {
                                            "root": Object {
                                              "&$disabled": Object {
                                                "opacity": 0.24,
                                              },
                                            },
                                            "textColorInherit": Object {
                                              "&$disabled": Object {
                                                "opacity": 0.24,
                                              },
                                            },
                                            "wrapper": Object {
                                              "& > *:first-child": Object {
                                                "marginBottom": "2px !important",
                                              },
                                            },
                                          },
                                          "MuiTextField": Object {
                                            "& .MuiInputLabel": Object {
                                              "marginTop": "20px",
                                            },
                                          },
                                          "MuiToolbar": Object {
                                            "dense": Object {
                                              "@media (min-width: 600px)": Object {
                                                "minHeight": "56px",
                                              },
                                              "minHeight": "56px",
                                            },
                                            "gutters": Object {
                                              "@media (min-width: 600px)": Object {
                                                "padding": "0 16px",
                                              },
                                              "padding": "0 16px",
                                            },
                                            "regular": Object {
                                              "@media (min-width: 600px)": Object {
                                                "minHeight": "56px",
                                              },
                                              "minHeight": "56px",
                                            },
                                            "root": Object {
                                              "@media (min-width: 600px)": Object {
                                                "padding": "0 16px",
                                              },
                                              "padding": "0 16px",
                                            },
                                          },
                                        },
                                        "palette": Object {
                                          "action": Object {
                                            "disabled": "rgba(51, 51, 51, 0.24)",
                                          },
                                          "background": Object {
                                            "default": "#FAFAFA",
                                            "defaultContrastText": "#333333",
                                            "paper": "#FFFFFF",
                                            "paperContrastText": "#333333",
                                          },
                                          "complementary": Object {
                                            "highlight": "#000000",
                                            "link": "#227BBD",
                                            "linkContrastText": "#FFFFFF",
                                            "warning": "#FCC433",
                                            "warningContrastText": "#333333",
                                          },
                                          "error": Object {
                                            "contrastText": "#FFFFFF",
                                            "main": "#E74627",
                                          },
                                          "primary": Object {
                                            "contrastText": "#333333",
                                            "dark": "#EF8426",
                                            "light": "#FEFDE8",
                                            "main": "#F4AB34",
                                          },
                                          "secondary": Object {
                                            "contrastText": "#000000",
                                            "dark": "#FF5808",
                                            "light": "#FFF8E1",
                                            "main": "#FF6B0B",
                                          },
                                          "success": Object {
                                            "contrastText": "#FFFFFF",
                                            "main": "#569A32",
                                          },
                                          "text": Object {
                                            "disabled": "#BBBBBB",
                                            "hint": "#BBBBBB",
                                            "primary": "#333333",
                                            "secondary": "#777777",
                                          },
                                        },
                                        "shadows": Object {
                                          "0": "none",
                                          "1": "0 1px 1px 0 rgba(0, 0, 0, 0.14)",
                                          "12": "0 12px 17px 0 rgba(0, 0, 0, 0.14)",
                                          "16": "0 16px 24px 0 rgba(0, 0, 0, 0.14)",
                                          "2": "0 2px 2px 0 rgba(0, 0, 0, 0.14)",
                                          "24": "0 24px 38px 0 rgba(0, 0, 0, 0.14)",
                                          "3": "0 3px 4px 0 rgba(0, 0, 0, 0.14)",
                                          "4": "0 4px 5px 0 rgba(0, 0, 0, 0.14)",
                                          "6": "0 6px 10px 0 rgba(0, 0, 0, 0.14)",
                                          "8": "0 8px 10px 0 rgba(0, 0, 0, 0.14)",
                                          "9": "0 9px 12px 0 rgba(0, 0, 0, 0.14)",
                                        },
                                        "shape": Object {
                                          "badgeBorderRadius": 100,
                                          "borderRadius": 4,
                                        },
                                        "sizes": Object {
                                          "huge": 96,
                                          "hugex": 128,
                                          "hugexx": 144,
                                          "hugexxx": 192,
                                          "large": 64,
                                          "largex": 72,
                                          "largexx": 80,
                                          "largexxx": 88,
                                          "medium": 48,
                                          "mediumx": 56,
                                          "micro": 4,
                                          "none": 0,
                                          "semi": 32,
                                          "semix": 40,
                                          "small": 16,
                                          "standard": 24,
                                          "tiny": 8,
                                          "veryhuge": 256,
                                        },
                                        "spacing": 8,
                                        "typography": Object {
                                          "body1": Object {
                                            "fontSize": "1rem",
                                            "fontWeight": 400,
                                          },
                                          "body2": Object {
                                            "fontSize": "0.875rem",
                                            "fontWeight": 400,
                                          },
                                          "button": Object {
                                            "fontSize": "0.875rem",
                                            "fontWeight": 600,
                                          },
                                          "caption": Object {
                                            "fontSize": "0.75rem",
                                            "fontWeight": 400,
                                          },
                                          "fontFamily": "\\"Roboto\\", sans-serif",
                                          "fontFamilyBrand1": "\\"Helvetica Now Display\\"",
                                          "fontFamilyBrand2": "\\"Helvetica Now Text\\"",
                                          "fontFamilyBrand3": undefined,
                                          "fontWeightBold": 700,
                                          "fontWeightLight": 300,
                                          "fontWeightMedium": 500,
                                          "fontWeightRegular": 400,
                                          "h1": Object {
                                            "fontSize": "6rem",
                                            "fontWeight": 300,
                                          },
                                          "h2": Object {
                                            "fontSize": "3.75rem",
                                            "fontWeight": 300,
                                          },
                                          "h3": Object {
                                            "fontSize": "3rem",
                                            "fontWeight": 400,
                                          },
                                          "h4": Object {
                                            "fontSize": "2.125rem",
                                            "fontWeight": 400,
                                          },
                                          "h5": Object {
                                            "fontSize": "1.5rem",
                                            "fontWeight": 400,
                                          },
                                          "h6": Object {
                                            "fontSize": "1.25rem",
                                            "fontWeight": 600,
                                          },
                                          "overline": Object {
                                            "fontSize": "0.75rem",
                                            "fontWeight": 400,
                                          },
                                          "subtitle1": Object {
                                            "fontSize": "1rem",
                                            "fontWeight": 400,
                                          },
                                          "subtitle2": Object {
                                            "fontSize": "0.875rem",
                                            "fontWeight": 500,
                                          },
                                        },
                                      }
                                    }
                                  >
                                    <WithStyles(ForwardRef(Input))
                                      autoFocus={false}
                                      endAdornment={
                                        <ForwardRef(WithStyles)
                                          position="end"
                                        >
                                          <ForwardRef(WithStyles)
                                            onClick={[Function]}
                                          >
                                            <ForwardRef(WithTheme)
                                              name="outlined-action-calendar"
                                              size="tiny"
                                            />
                                          </ForwardRef(WithStyles)>
                                        </ForwardRef(WithStyles)>
                                      }
                                      fullWidth={false}
                                      inputProps={
                                        Object {
                                          "style": Object {
                                            "boxShadow": "#E74627 0 0 0 2px",
                                          },
                                        }
                                      }
                                      multiline={false}
                                      onChange={[Function]}
                                      value="February 1st"
                                    >
                                      <ForwardRef(Input)
                                        autoFocus={false}
                                        classes={
                                          Object {
                                            "colorSecondary": "MuiInput-colorSecondary",
                                            "disabled": "Mui-disabled",
                                            "error": "Mui-error",
                                            "focused": "Mui-focused",
                                            "formControl": "MuiInput-formControl",
                                            "fullWidth": "MuiInput-fullWidth",
                                            "input": "MuiInput-input",
                                            "inputMarginDense": "MuiInput-inputMarginDense",
                                            "inputMultiline": "MuiInput-inputMultiline",
                                            "inputTypeSearch": "MuiInput-inputTypeSearch",
                                            "marginDense": "MuiInput-marginDense",
                                            "multiline": "MuiInput-multiline",
                                            "root": "MuiInput-root",
                                            "underline": "MuiInput-underline",
                                          }
                                        }
                                        endAdornment={
                                          <ForwardRef(WithStyles)
                                            position="end"
                                          >
                                            <ForwardRef(WithStyles)
                                              onClick={[Function]}
                                            >
                                              <ForwardRef(WithTheme)
                                                name="outlined-action-calendar"
                                                size="tiny"
                                              />
                                            </ForwardRef(WithStyles)>
                                          </ForwardRef(WithStyles)>
                                        }
                                        fullWidth={false}
                                        inputProps={
                                          Object {
                                            "style": Object {
                                              "boxShadow": "#E74627 0 0 0 2px",
                                            },
                                          }
                                        }
                                        multiline={false}
                                        onChange={[Function]}
                                        value="February 1st"
                                      >
                                        <WithStyles(ForwardRef(InputBase))
                                          autoFocus={false}
                                          classes={
                                            Object {
                                              "colorSecondary": "MuiInput-colorSecondary",
                                              "disabled": "Mui-disabled",
                                              "error": "Mui-error",
                                              "focused": "Mui-focused",
                                              "formControl": "MuiInput-formControl",
                                              "fullWidth": "MuiInput-fullWidth",
                                              "input": "MuiInput-input",
                                              "inputMarginDense": "MuiInput-inputMarginDense",
                                              "inputMultiline": "MuiInput-inputMultiline",
                                              "inputTypeSearch": "MuiInput-inputTypeSearch",
                                              "marginDense": "MuiInput-marginDense",
                                              "multiline": "MuiInput-multiline",
                                              "root": "MuiInput-root MuiInput-underline",
                                              "underline": null,
                                            }
                                          }
                                          endAdornment={
                                            <ForwardRef(WithStyles)
                                              position="end"
                                            >
                                              <ForwardRef(WithStyles)
                                                onClick={[Function]}
                                              >
                                                <ForwardRef(WithTheme)
                                                  name="outlined-action-calendar"
                                                  size="tiny"
                                                />
                                              </ForwardRef(WithStyles)>
                                            </ForwardRef(WithStyles)>
                                          }
                                          fullWidth={false}
                                          inputComponent="input"
                                          inputProps={
                                            Object {
                                              "style": Object {
                                                "boxShadow": "#E74627 0 0 0 2px",
                                              },
                                            }
                                          }
                                          multiline={false}
                                          onChange={[Function]}
                                          type="text"
                                          value="February 1st"
                                        >
                                          <ForwardRef(InputBase)
                                            autoFocus={false}
                                            classes={
                                              Object {
                                                "adornedEnd": "MuiInputBase-adornedEnd",
                                                "adornedStart": "MuiInputBase-adornedStart",
                                                "colorSecondary": "MuiInputBase-colorSecondary MuiInput-colorSecondary",
                                                "disabled": "Mui-disabled Mui-disabled",
                                                "error": "Mui-error Mui-error",
                                                "focused": "Mui-focused Mui-focused",
                                                "formControl": "MuiInputBase-formControl MuiInput-formControl",
                                                "fullWidth": "MuiInputBase-fullWidth MuiInput-fullWidth",
                                                "input": "MuiInputBase-input MuiInput-input",
                                                "inputAdornedEnd": "MuiInputBase-inputAdornedEnd",
                                                "inputAdornedStart": "MuiInputBase-inputAdornedStart",
                                                "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                                "inputMarginDense": "MuiInputBase-inputMarginDense MuiInput-inputMarginDense",
                                                "inputMultiline": "MuiInputBase-inputMultiline MuiInput-inputMultiline",
                                                "inputTypeSearch": "MuiInputBase-inputTypeSearch MuiInput-inputTypeSearch",
                                                "marginDense": "MuiInputBase-marginDense MuiInput-marginDense",
                                                "multiline": "MuiInputBase-multiline MuiInput-multiline",
                                                "root": "MuiInputBase-root MuiInput-root MuiInput-underline",
                                              }
                                            }
                                            endAdornment={
                                              <ForwardRef(WithStyles)
                                                position="end"
                                              >
                                                <ForwardRef(WithStyles)
                                                  onClick={[Function]}
                                                >
                                                  <ForwardRef(WithTheme)
                                                    name="outlined-action-calendar"
                                                    size="tiny"
                                                  />
                                                </ForwardRef(WithStyles)>
                                              </ForwardRef(WithStyles)>
                                            }
                                            fullWidth={false}
                                            inputComponent="input"
                                            inputProps={
                                              Object {
                                                "style": Object {
                                                  "boxShadow": "#E74627 0 0 0 2px",
                                                },
                                              }
                                            }
                                            multiline={false}
                                            onChange={[Function]}
                                            type="text"
                                            value="February 1st"
                                          >
                                            <div
                                              className="MuiInputBase-root MuiInput-root MuiInput-underline MuiInputBase-formControl MuiInput-formControl MuiInputBase-adornedEnd"
                                              onClick={[Function]}
                                            >
                                              <input
                                                aria-invalid={false}
                                                autoFocus={false}
                                                className="MuiInputBase-input MuiInput-input MuiInputBase-inputAdornedEnd"
                                                disabled={false}
                                                onAnimationStart={[Function]}
                                                onBlur={[Function]}
                                                onChange={[Function]}
                                                onFocus={[Function]}
                                                required={false}
                                                style={
                                                  Object {
                                                    "boxShadow": "#E74627 0 0 0 2px",
                                                  }
                                                }
                                                type="text"
                                                value="February 1st"
                                              />
                                              <WithStyles(ForwardRef(InputAdornment))
                                                position="end"
                                              >
                                                <ForwardRef(InputAdornment)
                                                  classes={
                                                    Object {
                                                      "disablePointerEvents": "MuiInputAdornment-disablePointerEvents",
                                                      "filled": "MuiInputAdornment-filled",
                                                      "hiddenLabel": "MuiInputAdornment-hiddenLabel",
                                                      "marginDense": "MuiInputAdornment-marginDense",
                                                      "positionEnd": "MuiInputAdornment-positionEnd",
                                                      "positionStart": "MuiInputAdornment-positionStart",
                                                      "root": "MuiInputAdornment-root",
                                                    }
                                                  }
                                                  position="end"
                                                >
                                                  <div
                                                    className="MuiInputAdornment-root MuiInputAdornment-positionEnd"
                                                  >
                                                    <WithStyles(ForwardRef(IconButton))
                                                      onClick={[Function]}
                                                    >
                                                      <ForwardRef(IconButton)
                                                        classes={
                                                          Object {
                                                            "colorInherit": "MuiIconButton-colorInherit",
                                                            "colorPrimary": "MuiIconButton-colorPrimary",
                                                            "colorSecondary": "MuiIconButton-colorSecondary",
                                                            "disabled": "Mui-disabled",
                                                            "edgeEnd": "MuiIconButton-edgeEnd",
                                                            "edgeStart": "MuiIconButton-edgeStart",
                                                            "label": "MuiIconButton-label",
                                                            "root": "MuiIconButton-root",
                                                            "sizeSmall": "MuiIconButton-sizeSmall",
                                                          }
                                                        }
                                                        onClick={[Function]}
                                                      >
                                                        <WithStyles(ForwardRef(ButtonBase))
                                                          centerRipple={true}
                                                          className="MuiIconButton-root"
                                                          disabled={false}
                                                          focusRipple={true}
                                                          onClick={[Function]}
                                                        >
                                                          <ForwardRef(ButtonBase)
                                                            centerRipple={true}
                                                            className="MuiIconButton-root"
                                                            classes={
                                                              Object {
                                                                "disabled": "Mui-disabled",
                                                                "focusVisible": "Mui-focusVisible",
                                                                "root": "MuiButtonBase-root",
                                                              }
                                                            }
                                                            disabled={false}
                                                            focusRipple={true}
                                                            onClick={[Function]}
                                                          >
                                                            <button
                                                              className="MuiButtonBase-root MuiIconButton-root"
                                                              disabled={false}
                                                              onBlur={[Function]}
                                                              onClick={[Function]}
                                                              onDragLeave={[Function]}
                                                              onFocus={[Function]}
                                                              onKeyDown={[Function]}
                                                              onKeyUp={[Function]}
                                                              onMouseDown={[Function]}
                                                              onMouseLeave={[Function]}
                                                              onMouseUp={[Function]}
                                                              onTouchEnd={[Function]}
                                                              onTouchMove={[Function]}
                                                              onTouchStart={[Function]}
                                                              tabIndex={0}
                                                              type="button"
                                                            >
                                                              <span
                                                                className="MuiIconButton-label"
                                                              >
                                                                <WithTheme(ForwardRef)
                                                                  name="outlined-action-calendar"
                                                                  size="tiny"
                                                                >
                                                                  <ForwardRef
                                                                    name="outlined-action-calendar"
                                                                    size="tiny"
                                                                  >
                                                                    <styled.i
                                                                      className="natds-icons natds-icons-outlined-action-calendar undefined"
                                                                      size="tiny"
                                                                    >
                                                                      <StyledComponent
                                                                        className="natds-icons natds-icons-outlined-action-calendar undefined"
                                                                        forwardedComponent={
                                                                          Object {
                                                                            "$$typeof": Symbol(react.forward_ref),
                                                                            "attrs": Array [],
                                                                            "componentStyle": ComponentStyle {
                                                                              "componentId": "sc-bdVaJa",
                                                                              "isStatic": false,
                                                                              "lastClassName": "jWbhAs",
                                                                              "rules": Array [
                                                                                "
  font-size: ",
                                                                                [Function],
                                                                                ";
",
                                                                              ],
                                                                            },
                                                                            "displayName": "styled.i",
                                                                            "foldedComponentIds": Array [],
                                                                            "render": [Function],
                                                                            "styledComponentId": "sc-bdVaJa",
                                                                            "target": "i",
                                                                            "toString": [Function],
                                                                            "warnTooManyClasses": [Function],
                                                                            "withComponent": [Function],
                                                                          }
                                                                        }
                                                                        forwardedRef={null}
                                                                        size="tiny"
                                                                      >
                                                                        <i
                                                                          className="sc-bdVaJa jWbhAs natds-icons natds-icons-outlined-action-calendar undefined"
                                                                          size="tiny"
                                                                        />
                                                                      </StyledComponent>
                                                                    </styled.i>
                                                                  </ForwardRef>
                                                                </WithTheme(ForwardRef)>
                                                              </span>
                                                              <NoSsr>
                                                                <WithStyles(memo)
                                                                  center={true}
                                                                >
                                                                  <ForwardRef(TouchRipple)
                                                                    center={true}
                                                                    classes={
                                                                      Object {
                                                                        "child": "MuiTouchRipple-child",
                                                                        "childLeaving": "MuiTouchRipple-childLeaving",
                                                                        "childPulsate": "MuiTouchRipple-childPulsate",
                                                                        "ripple": "MuiTouchRipple-ripple",
                                                                        "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                        "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                        "root": "MuiTouchRipple-root",
                                                                      }
                                                                    }
                                                                  >
                                                                    <span
                                                                      className="MuiTouchRipple-root"
                                                                    >
                                                                      <TransitionGroup
                                                                        childFactory={[Function]}
                                                                        component={null}
                                                                        exit={true}
                                                                      />
                                                                    </span>
                                                                  </ForwardRef(TouchRipple)>
                                                                </WithStyles(memo)>
                                                              </NoSsr>
                                                            </button>
                                                          </ForwardRef(ButtonBase)>
                                                        </WithStyles(ForwardRef(ButtonBase))>
                                                      </ForwardRef(IconButton)>
                                                    </WithStyles(ForwardRef(IconButton))>
                                                  </div>
                                                </ForwardRef(InputAdornment)>
                                              </WithStyles(ForwardRef(InputAdornment))>
                                            </div>
                                          </ForwardRef(InputBase)>
                                        </WithStyles(ForwardRef(InputBase))>
                                      </ForwardRef(Input)>
                                    </WithStyles(ForwardRef(Input))>
                                  </div>
                                </ForwardRef(FormControl)>
                              </WithStyles(ForwardRef(FormControl))>
                            </ForwardRef(TextField)>
                          </WithStyles(ForwardRef(TextField))>
                        </Rifm>
                      </Component>
                      <WithStyles(ModalDialog)
                        cancelLabel="Cancel"
                        clearLabel="Clear"
                        clearable={false}
                        okLabel="OK"
                        onAccept={[Function]}
                        onClear={[Function]}
                        onDismiss={[Function]}
                        onSetToday={[Function]}
                        open={false}
                        showTodayButton={false}
                        todayLabel="Today"
                      >
                        <ModalDialog
                          cancelLabel="Cancel"
                          classes={
                            Object {
                              "dialog": "MuiPickersModal-dialog",
                              "dialogRoot": "MuiPickersModal-dialogRoot",
                              "dialogRootWider": "MuiPickersModal-dialogRootWider",
                              "withAdditionalAction": "MuiPickersModal-withAdditionalAction",
                            }
                          }
                          clearLabel="Clear"
                          clearable={false}
                          okLabel="OK"
                          onAccept={[Function]}
                          onClear={[Function]}
                          onDismiss={[Function]}
                          onSetToday={[Function]}
                          open={false}
                          showTodayButton={false}
                          todayLabel="Today"
                        >
                          <WithStyles(ForwardRef(Dialog))
                            classes={
                              Object {
                                "paper": "MuiPickersModal-dialogRoot",
                              }
                            }
                            onClose={[Function]}
                            open={false}
                            role="dialog"
                          >
                            <ForwardRef(Dialog)
                              classes={
                                Object {
                                  "container": "MuiDialog-container",
                                  "paper": "MuiDialog-paper MuiPickersModal-dialogRoot",
                                  "paperFullScreen": "MuiDialog-paperFullScreen",
                                  "paperFullWidth": "MuiDialog-paperFullWidth",
                                  "paperScrollBody": "MuiDialog-paperScrollBody",
                                  "paperScrollPaper": "MuiDialog-paperScrollPaper",
                                  "paperWidthFalse": "MuiDialog-paperWidthFalse",
                                  "paperWidthLg": "MuiDialog-paperWidthLg",
                                  "paperWidthMd": "MuiDialog-paperWidthMd",
                                  "paperWidthSm": "MuiDialog-paperWidthSm",
                                  "paperWidthXl": "MuiDialog-paperWidthXl",
                                  "paperWidthXs": "MuiDialog-paperWidthXs",
                                  "root": "MuiDialog-root",
                                  "scrollBody": "MuiDialog-scrollBody",
                                  "scrollPaper": "MuiDialog-scrollPaper",
                                }
                              }
                              onClose={[Function]}
                              open={false}
                              role="dialog"
                            >
                              <ForwardRef(Modal)
                                BackdropComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "Naked": Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "propTypes": Object {
                                        "children": [Function],
                                        "className": [Function],
                                        "classes": [Function],
                                        "invisible": [Function],
                                        "open": [Function],
                                        "transitionDuration": [Function],
                                      },
                                      "render": [Function],
                                    },
                                    "displayName": "WithStyles(ForwardRef(Backdrop))",
                                    "options": Object {
                                      "defaultTheme": Object {
                                        "breakpoints": Object {
                                          "between": [Function],
                                          "down": [Function],
                                          "keys": Array [
                                            "xs",
                                            "sm",
                                            "md",
                                            "lg",
                                            "xl",
                                          ],
                                          "only": [Function],
                                          "up": [Function],
                                          "values": Object {
                                            "lg": 1280,
                                            "md": 960,
                                            "sm": 600,
                                            "xl": 1920,
                                            "xs": 0,
                                          },
                                          "width": [Function],
                                        },
                                        "direction": "ltr",
                                        "mixins": Object {
                                          "gutters": [Function],
                                          "toolbar": Object {
                                            "@media (min-width:0px) and (orientation: landscape)": Object {
                                              "minHeight": 48,
                                            },
                                            "@media (min-width:600px)": Object {
                                              "minHeight": 64,
                                            },
                                            "minHeight": 56,
                                          },
                                        },
                                        "overrides": Object {},
                                        "palette": Object {
                                          "action": Object {
                                            "active": "rgba(0, 0, 0, 0.54)",
                                            "disabled": "rgba(0, 0, 0, 0.26)",
                                            "disabledBackground": "rgba(0, 0, 0, 0.12)",
                                            "hover": "rgba(0, 0, 0, 0.08)",
                                            "hoverOpacity": 0.08,
                                            "selected": "rgba(0, 0, 0, 0.14)",
                                          },
                                          "augmentColor": [Function],
                                          "background": Object {
                                            "default": "#fafafa",
                                            "paper": "#fff",
                                          },
                                          "common": Object {
                                            "black": "#000",
                                            "white": "#fff",
                                          },
                                          "contrastThreshold": 3,
                                          "divider": "rgba(0, 0, 0, 0.12)",
                                          "error": Object {
                                            "contrastText": "#fff",
                                            "dark": "#d32f2f",
                                            "light": "#e57373",
                                            "main": "#f44336",
                                          },
                                          "getContrastText": [Function],
                                          "grey": Object {
                                            "100": "#f5f5f5",
                                            "200": "#eeeeee",
                                            "300": "#e0e0e0",
                                            "400": "#bdbdbd",
                                            "50": "#fafafa",
                                            "500": "#9e9e9e",
                                            "600": "#757575",
                                            "700": "#616161",
                                            "800": "#424242",
                                            "900": "#212121",
                                            "A100": "#d5d5d5",
                                            "A200": "#aaaaaa",
                                            "A400": "#303030",
                                            "A700": "#616161",
                                          },
                                          "info": Object {
                                            "contrastText": "#fff",
                                            "dark": "#1976d2",
                                            "light": "#64b5f6",
                                            "main": "#2196f3",
                                          },
                                          "primary": Object {
                                            "contrastText": "#fff",
                                            "dark": "#303f9f",
                                            "light": "#7986cb",
                                            "main": "#3f51b5",
                                          },
                                          "secondary": Object {
                                            "contrastText": "#fff",
                                            "dark": "#c51162",
                                            "light": "#ff4081",
                                            "main": "#f50057",
                                          },
                                          "success": Object {
                                            "contrastText": "rgba(0, 0, 0, 0.87)",
                                            "dark": "#388e3c",
                                            "light": "#81c784",
                                            "main": "#4caf50",
                                          },
                                          "text": Object {
                                            "disabled": "rgba(0, 0, 0, 0.38)",
                                            "hint": "rgba(0, 0, 0, 0.38)",
                                            "primary": "rgba(0, 0, 0, 0.87)",
                                            "secondary": "rgba(0, 0, 0, 0.54)",
                                          },
                                          "tonalOffset": 0.2,
                                          "type": "light",
                                          "warning": Object {
                                            "contrastText": "rgba(0, 0, 0, 0.87)",
                                            "dark": "#f57c00",
                                            "light": "#ffb74d",
                                            "main": "#ff9800",
                                          },
                                        },
                                        "props": Object {},
                                        "shadows": Array [
                                          "none",
                                          "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                          "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                          "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                          "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                          "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                          "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                          "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                          "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                          "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                          "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                          "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                          "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                          "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                          "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                          "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                          "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                          "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                          "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                          "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                          "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                          "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                          "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                          "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                          "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                                        ],
                                        "shape": Object {
                                          "borderRadius": 4,
                                        },
                                        "spacing": [Function],
                                        "transitions": Object {
                                          "create": [Function],
                                          "duration": Object {
                                            "complex": 375,
                                            "enteringScreen": 225,
                                            "leavingScreen": 195,
                                            "short": 250,
                                            "shorter": 200,
                                            "shortest": 150,
                                            "standard": 300,
                                          },
                                          "easing": Object {
                                            "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                            "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                            "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                            "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                                          },
                                          "getAutoHeightDuration": [Function],
                                        },
                                        "typography": Object {
                                          "body1": Object {
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": "1rem",
                                            "fontWeight": 400,
                                            "letterSpacing": "0.00938em",
                                            "lineHeight": 1.5,
                                          },
                                          "body2": Object {
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": "0.875rem",
                                            "fontWeight": 400,
                                            "letterSpacing": "0.01071em",
                                            "lineHeight": 1.43,
                                          },
                                          "button": Object {
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": "0.875rem",
                                            "fontWeight": 500,
                                            "letterSpacing": "0.02857em",
                                            "lineHeight": 1.75,
                                            "textTransform": "uppercase",
                                          },
                                          "caption": Object {
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": "0.75rem",
                                            "fontWeight": 400,
                                            "letterSpacing": "0.03333em",
                                            "lineHeight": 1.66,
                                          },
                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                          "fontSize": 14,
                                          "fontWeightBold": 700,
                                          "fontWeightLight": 300,
                                          "fontWeightMedium": 500,
                                          "fontWeightRegular": 400,
                                          "h1": Object {
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": "6rem",
                                            "fontWeight": 300,
                                            "letterSpacing": "-0.01562em",
                                            "lineHeight": 1.167,
                                          },
                                          "h2": Object {
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": "3.75rem",
                                            "fontWeight": 300,
                                            "letterSpacing": "-0.00833em",
                                            "lineHeight": 1.2,
                                          },
                                          "h3": Object {
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": "3rem",
                                            "fontWeight": 400,
                                            "letterSpacing": "0em",
                                            "lineHeight": 1.167,
                                          },
                                          "h4": Object {
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": "2.125rem",
                                            "fontWeight": 400,
                                            "letterSpacing": "0.00735em",
                                            "lineHeight": 1.235,
                                          },
                                          "h5": Object {
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": "1.5rem",
                                            "fontWeight": 400,
                                            "letterSpacing": "0em",
                                            "lineHeight": 1.334,
                                          },
                                          "h6": Object {
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": "1.25rem",
                                            "fontWeight": 500,
                                            "letterSpacing": "0.0075em",
                                            "lineHeight": 1.6,
                                          },
                                          "htmlFontSize": 16,
                                          "overline": Object {
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": "0.75rem",
                                            "fontWeight": 400,
                                            "letterSpacing": "0.08333em",
                                            "lineHeight": 2.66,
                                            "textTransform": "uppercase",
                                          },
                                          "pxToRem": [Function],
                                          "round": [Function],
                                          "subtitle1": Object {
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": "1rem",
                                            "fontWeight": 400,
                                            "letterSpacing": "0.00938em",
                                            "lineHeight": 1.75,
                                          },
                                          "subtitle2": Object {
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": "0.875rem",
                                            "fontWeight": 500,
                                            "letterSpacing": "0.00714em",
                                            "lineHeight": 1.57,
                                          },
                                        },
                                        "zIndex": Object {
                                          "appBar": 1100,
                                          "drawer": 1200,
                                          "mobileStepper": 1000,
                                          "modal": 1300,
                                          "snackbar": 1400,
                                          "speedDial": 1050,
                                          "tooltip": 1500,
                                        },
                                      },
                                      "name": "MuiBackdrop",
                                    },
                                    "propTypes": Object {
                                      "classes": [Function],
                                      "innerRef": [Function],
                                    },
                                    "render": [Function],
                                    "useStyles": [Function],
                                  }
                                }
                                BackdropProps={
                                  Object {
                                    "transitionDuration": Object {
                                      "enter": 225,
                                      "exit": 195,
                                    },
                                  }
                                }
                                className="MuiDialog-root"
                                closeAfterTransition={true}
                                disableBackdropClick={false}
                                disableEscapeKeyDown={false}
                                onClose={[Function]}
                                open={false}
                                role="dialog"
                              />
                            </ForwardRef(Dialog)>
                          </WithStyles(ForwardRef(Dialog))>
                        </ModalDialog>
                      </WithStyles(ModalDialog)>
                    </Component>
                  </Component>
                </PickerWithState>
              </div>
            </StyledComponent>
          </styled.div>
        </Component>
      </ForwardRef>
    </WithTheme(ForwardRef)>
  </Component>
</Component>
`;

exports[`KeyboardDatePicker components should match to snapshot - Help text: KeyboardDatePicker helpText snapshot 1`] = `
<Component
  helpText="Help me"
  onChange={[Function]}
  value={2020-02-01T03:00:00.000Z}
>
  <Component
    utils={[Function]}
  >
    <WithTheme(ForwardRef)
      helpText="Help me"
      label="Only calendar"
      onChange={[Function]}
      value={2020-02-01T03:00:00.000Z}
      variant="dialog"
    >
      <ForwardRef
        helpText="Help me"
        label="Only calendar"
        onChange={[Function]}
        value={2020-02-01T03:00:00.000Z}
        variant="dialog"
      >
        <Component
          helpText="Help me"
          label="Only calendar"
          onChange={[Function]}
          value={2020-02-01T03:00:00.000Z}
          variant="dialog"
        >
          <styled.div>
            <StyledComponent
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-gqjmRU",
                    "isStatic": false,
                    "lastClassName": "fOizOf",
                    "rules": Array [
                      "
  display: flex;
  flex-flow: column nowrap;
  font-family: ",
                      [Function],
                      ";
",
                    ],
                  },
                  "displayName": "styled.div",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "sc-gqjmRU",
                  "target": "div",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
            >
              <div
                className="sc-gqjmRU fOizOf"
              >
                <styled.label
                  disabled={false}
                >
                  <StyledComponent
                    disabled={false}
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "sc-VigVT",
                          "isStatic": false,
                          "lastClassName": "kbirlQ",
                          "rules": Array [
                            "
  font-size: ",
                            [Function],
                            ";
  font-weight: ",
                            [Function],
                            ";
  color: ",
                            [Function],
                            ";
  line-height: 1.2;
  padding: 0 0 ",
                            "4",
                            "px;
  font-family: ",
                            [Function],
                            ";
",
                          ],
                        },
                        "displayName": "styled.label",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "sc-VigVT",
                        "target": "label",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <label
                      className="sc-VigVT kbirlQ"
                      disabled={false}
                    >
                      Only calendar
                    </label>
                  </StyledComponent>
                </styled.label>
                <PickerWithState
                  allowKeyboardControl={true}
                  helperText=""
                  inputProps={Object {}}
                  invalidDateMessage="Invalid Date Format"
                  keyboardIcon={
                    <ForwardRef(WithTheme)
                      name="outlined-action-calendar"
                      size="tiny"
                    />
                  }
                  label=""
                  maxDate={2100-01-01T00:00:00.000Z}
                  maxDateMessage="Date should not be after maximal date"
                  minDate={1900-01-01T00:00:00.000Z}
                  minDateMessage="Date should not be before minimal date"
                  onChange={[Function]}
                  openTo="date"
                  required={false}
                  value={2020-02-01T03:00:00.000Z}
                  variant="dialog"
                  views={
                    Array [
                      "year",
                      "date",
                    ]
                  }
                >
                  <Component
                    DateInputProps={
                      Object {
                        "format": "MMMM do",
                        "inputValue": "February 1st",
                        "onChange": [Function],
                        "openPicker": [Function],
                        "validationError": "",
                      }
                    }
                    InputComponent={[Function]}
                    format="MMMM do"
                    helperText=""
                    inputProps={Object {}}
                    keyboardIcon={
                      <ForwardRef(WithTheme)
                        name="outlined-action-calendar"
                        size="tiny"
                      />
                    }
                    label=""
                    onAccept={[Function]}
                    onClear={[Function]}
                    onDismiss={[Function]}
                    onSetToday={[Function]}
                    open={false}
                    required={false}
                    variant="dialog"
                  >
                    <Component
                      DateInputProps={
                        Object {
                          "format": "MMMM do",
                          "inputValue": "February 1st",
                          "onChange": [Function],
                          "openPicker": [Function],
                          "validationError": "",
                        }
                      }
                      InputComponent={[Function]}
                      cancelLabel="Cancel"
                      clearLabel="Clear"
                      clearable={false}
                      format="MMMM do"
                      helperText=""
                      inputProps={Object {}}
                      keyboardIcon={
                        <ForwardRef(WithTheme)
                          name="outlined-action-calendar"
                          size="tiny"
                        />
                      }
                      label=""
                      okLabel="OK"
                      onAccept={[Function]}
                      onClear={[Function]}
                      onDismiss={[Function]}
                      onSetToday={[Function]}
                      open={false}
                      required={false}
                      showTodayButton={false}
                      todayLabel="Today"
                    >
                      <Component
                        format="MMMM do"
                        helperText=""
                        inputProps={Object {}}
                        inputValue="February 1st"
                        keyboardIcon={
                          <ForwardRef(WithTheme)
                            name="outlined-action-calendar"
                            size="tiny"
                          />
                        }
                        label=""
                        onChange={[Function]}
                        openPicker={[Function]}
                        required={false}
                        validationError=""
                      >
                        <Rifm
                          format={[Function]}
                          key="____ __"
                          onChange={[Function]}
                          refuse={/\\[\\^\\\\d\\]\\+/gi}
                          value="February 1st"
                        >
                          <WithStyles(ForwardRef(TextField))
                            InputProps={
                              Object {
                                "endAdornment": <ForwardRef(WithStyles)
                                  position="end"
                                >
                                  <ForwardRef(WithStyles)
                                    onClick={[Function]}
                                  >
                                    <ForwardRef(WithTheme)
                                      name="outlined-action-calendar"
                                      size="tiny"
                                    />
                                  </ForwardRef(WithStyles)>
                                </ForwardRef(WithStyles)>,
                              }
                            }
                            error={false}
                            helperText=""
                            inputProps={Object {}}
                            label=""
                            onChange={[Function]}
                            required={false}
                            value="February 1st"
                          >
                            <ForwardRef(TextField)
                              InputProps={
                                Object {
                                  "endAdornment": <ForwardRef(WithStyles)
                                    position="end"
                                  >
                                    <ForwardRef(WithStyles)
                                      onClick={[Function]}
                                    >
                                      <ForwardRef(WithTheme)
                                        name="outlined-action-calendar"
                                        size="tiny"
                                      />
                                    </ForwardRef(WithStyles)>
                                  </ForwardRef(WithStyles)>,
                                }
                              }
                              classes={
                                Object {
                                  "root": "MuiTextField-root",
                                }
                              }
                              error={false}
                              helperText=""
                              inputProps={Object {}}
                              label=""
                              onChange={[Function]}
                              required={false}
                              value="February 1st"
                            >
                              <WithStyles(ForwardRef(FormControl))
                                className="MuiTextField-root"
                                color="primary"
                                disabled={false}
                                error={false}
                                fullWidth={false}
                                required={false}
                                variant="standard"
                              >
                                <ForwardRef(FormControl)
                                  className="MuiTextField-root"
                                  classes={
                                    Object {
                                      "fullWidth": "MuiFormControl-fullWidth",
                                      "marginDense": "MuiFormControl-marginDense",
                                      "marginNormal": "MuiFormControl-marginNormal",
                                      "root": "MuiFormControl-root",
                                    }
                                  }
                                  color="primary"
                                  disabled={false}
                                  error={false}
                                  fullWidth={false}
                                  required={false}
                                  variant="standard"
                                >
                                  <div
                                    className="MuiFormControl-root MuiTextField-root"
                                  >
                                    <WithStyles(ForwardRef(Input))
                                      autoFocus={false}
                                      endAdornment={
                                        <ForwardRef(WithStyles)
                                          position="end"
                                        >
                                          <ForwardRef(WithStyles)
                                            onClick={[Function]}
                                          >
                                            <ForwardRef(WithTheme)
                                              name="outlined-action-calendar"
                                              size="tiny"
                                            />
                                          </ForwardRef(WithStyles)>
                                        </ForwardRef(WithStyles)>
                                      }
                                      fullWidth={false}
                                      inputProps={Object {}}
                                      multiline={false}
                                      onChange={[Function]}
                                      value="February 1st"
                                    >
                                      <ForwardRef(Input)
                                        autoFocus={false}
                                        classes={
                                          Object {
                                            "colorSecondary": "MuiInput-colorSecondary",
                                            "disabled": "Mui-disabled",
                                            "error": "Mui-error",
                                            "focused": "Mui-focused",
                                            "formControl": "MuiInput-formControl",
                                            "fullWidth": "MuiInput-fullWidth",
                                            "input": "MuiInput-input",
                                            "inputMarginDense": "MuiInput-inputMarginDense",
                                            "inputMultiline": "MuiInput-inputMultiline",
                                            "inputTypeSearch": "MuiInput-inputTypeSearch",
                                            "marginDense": "MuiInput-marginDense",
                                            "multiline": "MuiInput-multiline",
                                            "root": "MuiInput-root",
                                            "underline": "MuiInput-underline",
                                          }
                                        }
                                        endAdornment={
                                          <ForwardRef(WithStyles)
                                            position="end"
                                          >
                                            <ForwardRef(WithStyles)
                                              onClick={[Function]}
                                            >
                                              <ForwardRef(WithTheme)
                                                name="outlined-action-calendar"
                                                size="tiny"
                                              />
                                            </ForwardRef(WithStyles)>
                                          </ForwardRef(WithStyles)>
                                        }
                                        fullWidth={false}
                                        inputProps={Object {}}
                                        multiline={false}
                                        onChange={[Function]}
                                        value="February 1st"
                                      >
                                        <WithStyles(ForwardRef(InputBase))
                                          autoFocus={false}
                                          classes={
                                            Object {
                                              "colorSecondary": "MuiInput-colorSecondary",
                                              "disabled": "Mui-disabled",
                                              "error": "Mui-error",
                                              "focused": "Mui-focused",
                                              "formControl": "MuiInput-formControl",
                                              "fullWidth": "MuiInput-fullWidth",
                                              "input": "MuiInput-input",
                                              "inputMarginDense": "MuiInput-inputMarginDense",
                                              "inputMultiline": "MuiInput-inputMultiline",
                                              "inputTypeSearch": "MuiInput-inputTypeSearch",
                                              "marginDense": "MuiInput-marginDense",
                                              "multiline": "MuiInput-multiline",
                                              "root": "MuiInput-root MuiInput-underline",
                                              "underline": null,
                                            }
                                          }
                                          endAdornment={
                                            <ForwardRef(WithStyles)
                                              position="end"
                                            >
                                              <ForwardRef(WithStyles)
                                                onClick={[Function]}
                                              >
                                                <ForwardRef(WithTheme)
                                                  name="outlined-action-calendar"
                                                  size="tiny"
                                                />
                                              </ForwardRef(WithStyles)>
                                            </ForwardRef(WithStyles)>
                                          }
                                          fullWidth={false}
                                          inputComponent="input"
                                          inputProps={Object {}}
                                          multiline={false}
                                          onChange={[Function]}
                                          type="text"
                                          value="February 1st"
                                        >
                                          <ForwardRef(InputBase)
                                            autoFocus={false}
                                            classes={
                                              Object {
                                                "adornedEnd": "MuiInputBase-adornedEnd",
                                                "adornedStart": "MuiInputBase-adornedStart",
                                                "colorSecondary": "MuiInputBase-colorSecondary MuiInput-colorSecondary",
                                                "disabled": "Mui-disabled Mui-disabled",
                                                "error": "Mui-error Mui-error",
                                                "focused": "Mui-focused Mui-focused",
                                                "formControl": "MuiInputBase-formControl MuiInput-formControl",
                                                "fullWidth": "MuiInputBase-fullWidth MuiInput-fullWidth",
                                                "input": "MuiInputBase-input MuiInput-input",
                                                "inputAdornedEnd": "MuiInputBase-inputAdornedEnd",
                                                "inputAdornedStart": "MuiInputBase-inputAdornedStart",
                                                "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                                "inputMarginDense": "MuiInputBase-inputMarginDense MuiInput-inputMarginDense",
                                                "inputMultiline": "MuiInputBase-inputMultiline MuiInput-inputMultiline",
                                                "inputTypeSearch": "MuiInputBase-inputTypeSearch MuiInput-inputTypeSearch",
                                                "marginDense": "MuiInputBase-marginDense MuiInput-marginDense",
                                                "multiline": "MuiInputBase-multiline MuiInput-multiline",
                                                "root": "MuiInputBase-root MuiInput-root MuiInput-underline",
                                              }
                                            }
                                            endAdornment={
                                              <ForwardRef(WithStyles)
                                                position="end"
                                              >
                                                <ForwardRef(WithStyles)
                                                  onClick={[Function]}
                                                >
                                                  <ForwardRef(WithTheme)
                                                    name="outlined-action-calendar"
                                                    size="tiny"
                                                  />
                                                </ForwardRef(WithStyles)>
                                              </ForwardRef(WithStyles)>
                                            }
                                            fullWidth={false}
                                            inputComponent="input"
                                            inputProps={Object {}}
                                            multiline={false}
                                            onChange={[Function]}
                                            type="text"
                                            value="February 1st"
                                          >
                                            <div
                                              className="MuiInputBase-root MuiInput-root MuiInput-underline MuiInputBase-formControl MuiInput-formControl MuiInputBase-adornedEnd"
                                              onClick={[Function]}
                                            >
                                              <input
                                                aria-invalid={false}
                                                autoFocus={false}
                                                className="MuiInputBase-input MuiInput-input MuiInputBase-inputAdornedEnd"
                                                disabled={false}
                                                onAnimationStart={[Function]}
                                                onBlur={[Function]}
                                                onChange={[Function]}
                                                onFocus={[Function]}
                                                required={false}
                                                type="text"
                                                value="February 1st"
                                              />
                                              <WithStyles(ForwardRef(InputAdornment))
                                                position="end"
                                              >
                                                <ForwardRef(InputAdornment)
                                                  classes={
                                                    Object {
                                                      "disablePointerEvents": "MuiInputAdornment-disablePointerEvents",
                                                      "filled": "MuiInputAdornment-filled",
                                                      "hiddenLabel": "MuiInputAdornment-hiddenLabel",
                                                      "marginDense": "MuiInputAdornment-marginDense",
                                                      "positionEnd": "MuiInputAdornment-positionEnd",
                                                      "positionStart": "MuiInputAdornment-positionStart",
                                                      "root": "MuiInputAdornment-root",
                                                    }
                                                  }
                                                  position="end"
                                                >
                                                  <div
                                                    className="MuiInputAdornment-root MuiInputAdornment-positionEnd"
                                                  >
                                                    <WithStyles(ForwardRef(IconButton))
                                                      onClick={[Function]}
                                                    >
                                                      <ForwardRef(IconButton)
                                                        classes={
                                                          Object {
                                                            "colorInherit": "MuiIconButton-colorInherit",
                                                            "colorPrimary": "MuiIconButton-colorPrimary",
                                                            "colorSecondary": "MuiIconButton-colorSecondary",
                                                            "disabled": "Mui-disabled",
                                                            "edgeEnd": "MuiIconButton-edgeEnd",
                                                            "edgeStart": "MuiIconButton-edgeStart",
                                                            "label": "MuiIconButton-label",
                                                            "root": "MuiIconButton-root",
                                                            "sizeSmall": "MuiIconButton-sizeSmall",
                                                          }
                                                        }
                                                        onClick={[Function]}
                                                      >
                                                        <WithStyles(ForwardRef(ButtonBase))
                                                          centerRipple={true}
                                                          className="MuiIconButton-root"
                                                          disabled={false}
                                                          focusRipple={true}
                                                          onClick={[Function]}
                                                        >
                                                          <ForwardRef(ButtonBase)
                                                            centerRipple={true}
                                                            className="MuiIconButton-root"
                                                            classes={
                                                              Object {
                                                                "disabled": "Mui-disabled",
                                                                "focusVisible": "Mui-focusVisible",
                                                                "root": "MuiButtonBase-root",
                                                              }
                                                            }
                                                            disabled={false}
                                                            focusRipple={true}
                                                            onClick={[Function]}
                                                          >
                                                            <button
                                                              className="MuiButtonBase-root MuiIconButton-root"
                                                              disabled={false}
                                                              onBlur={[Function]}
                                                              onClick={[Function]}
                                                              onDragLeave={[Function]}
                                                              onFocus={[Function]}
                                                              onKeyDown={[Function]}
                                                              onKeyUp={[Function]}
                                                              onMouseDown={[Function]}
                                                              onMouseLeave={[Function]}
                                                              onMouseUp={[Function]}
                                                              onTouchEnd={[Function]}
                                                              onTouchMove={[Function]}
                                                              onTouchStart={[Function]}
                                                              tabIndex={0}
                                                              type="button"
                                                            >
                                                              <span
                                                                className="MuiIconButton-label"
                                                              >
                                                                <WithTheme(ForwardRef)
                                                                  name="outlined-action-calendar"
                                                                  size="tiny"
                                                                >
                                                                  <ForwardRef
                                                                    name="outlined-action-calendar"
                                                                    size="tiny"
                                                                  >
                                                                    <styled.i
                                                                      className="natds-icons natds-icons-outlined-action-calendar undefined"
                                                                      size="tiny"
                                                                    >
                                                                      <StyledComponent
                                                                        className="natds-icons natds-icons-outlined-action-calendar undefined"
                                                                        forwardedComponent={
                                                                          Object {
                                                                            "$$typeof": Symbol(react.forward_ref),
                                                                            "attrs": Array [],
                                                                            "componentStyle": ComponentStyle {
                                                                              "componentId": "sc-bdVaJa",
                                                                              "isStatic": false,
                                                                              "lastClassName": "jWbhAs",
                                                                              "rules": Array [
                                                                                "
  font-size: ",
                                                                                [Function],
                                                                                ";
",
                                                                              ],
                                                                            },
                                                                            "displayName": "styled.i",
                                                                            "foldedComponentIds": Array [],
                                                                            "render": [Function],
                                                                            "styledComponentId": "sc-bdVaJa",
                                                                            "target": "i",
                                                                            "toString": [Function],
                                                                            "warnTooManyClasses": [Function],
                                                                            "withComponent": [Function],
                                                                          }
                                                                        }
                                                                        forwardedRef={null}
                                                                        size="tiny"
                                                                      >
                                                                        <i
                                                                          className="sc-bdVaJa jWbhAs natds-icons natds-icons-outlined-action-calendar undefined"
                                                                          size="tiny"
                                                                        />
                                                                      </StyledComponent>
                                                                    </styled.i>
                                                                  </ForwardRef>
                                                                </WithTheme(ForwardRef)>
                                                              </span>
                                                              <NoSsr>
                                                                <WithStyles(memo)
                                                                  center={true}
                                                                >
                                                                  <ForwardRef(TouchRipple)
                                                                    center={true}
                                                                    classes={
                                                                      Object {
                                                                        "child": "MuiTouchRipple-child",
                                                                        "childLeaving": "MuiTouchRipple-childLeaving",
                                                                        "childPulsate": "MuiTouchRipple-childPulsate",
                                                                        "ripple": "MuiTouchRipple-ripple",
                                                                        "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                        "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                        "root": "MuiTouchRipple-root",
                                                                      }
                                                                    }
                                                                  >
                                                                    <span
                                                                      className="MuiTouchRipple-root"
                                                                    >
                                                                      <TransitionGroup
                                                                        childFactory={[Function]}
                                                                        component={null}
                                                                        exit={true}
                                                                      />
                                                                    </span>
                                                                  </ForwardRef(TouchRipple)>
                                                                </WithStyles(memo)>
                                                              </NoSsr>
                                                            </button>
                                                          </ForwardRef(ButtonBase)>
                                                        </WithStyles(ForwardRef(ButtonBase))>
                                                      </ForwardRef(IconButton)>
                                                    </WithStyles(ForwardRef(IconButton))>
                                                  </div>
                                                </ForwardRef(InputAdornment)>
                                              </WithStyles(ForwardRef(InputAdornment))>
                                            </div>
                                          </ForwardRef(InputBase)>
                                        </WithStyles(ForwardRef(InputBase))>
                                      </ForwardRef(Input)>
                                    </WithStyles(ForwardRef(Input))>
                                  </div>
                                </ForwardRef(FormControl)>
                              </WithStyles(ForwardRef(FormControl))>
                            </ForwardRef(TextField)>
                          </WithStyles(ForwardRef(TextField))>
                        </Rifm>
                      </Component>
                      <WithStyles(ModalDialog)
                        cancelLabel="Cancel"
                        clearLabel="Clear"
                        clearable={false}
                        okLabel="OK"
                        onAccept={[Function]}
                        onClear={[Function]}
                        onDismiss={[Function]}
                        onSetToday={[Function]}
                        open={false}
                        showTodayButton={false}
                        todayLabel="Today"
                      >
                        <ModalDialog
                          cancelLabel="Cancel"
                          classes={
                            Object {
                              "dialog": "MuiPickersModal-dialog",
                              "dialogRoot": "MuiPickersModal-dialogRoot",
                              "dialogRootWider": "MuiPickersModal-dialogRootWider",
                              "withAdditionalAction": "MuiPickersModal-withAdditionalAction",
                            }
                          }
                          clearLabel="Clear"
                          clearable={false}
                          okLabel="OK"
                          onAccept={[Function]}
                          onClear={[Function]}
                          onDismiss={[Function]}
                          onSetToday={[Function]}
                          open={false}
                          showTodayButton={false}
                          todayLabel="Today"
                        >
                          <WithStyles(ForwardRef(Dialog))
                            classes={
                              Object {
                                "paper": "MuiPickersModal-dialogRoot",
                              }
                            }
                            onClose={[Function]}
                            open={false}
                            role="dialog"
                          >
                            <ForwardRef(Dialog)
                              classes={
                                Object {
                                  "container": "MuiDialog-container",
                                  "paper": "MuiDialog-paper MuiPickersModal-dialogRoot",
                                  "paperFullScreen": "MuiDialog-paperFullScreen",
                                  "paperFullWidth": "MuiDialog-paperFullWidth",
                                  "paperScrollBody": "MuiDialog-paperScrollBody",
                                  "paperScrollPaper": "MuiDialog-paperScrollPaper",
                                  "paperWidthFalse": "MuiDialog-paperWidthFalse",
                                  "paperWidthLg": "MuiDialog-paperWidthLg",
                                  "paperWidthMd": "MuiDialog-paperWidthMd",
                                  "paperWidthSm": "MuiDialog-paperWidthSm",
                                  "paperWidthXl": "MuiDialog-paperWidthXl",
                                  "paperWidthXs": "MuiDialog-paperWidthXs",
                                  "root": "MuiDialog-root",
                                  "scrollBody": "MuiDialog-scrollBody",
                                  "scrollPaper": "MuiDialog-scrollPaper",
                                }
                              }
                              onClose={[Function]}
                              open={false}
                              role="dialog"
                            >
                              <ForwardRef(Modal)
                                BackdropComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "Naked": Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "propTypes": Object {
                                        "children": [Function],
                                        "className": [Function],
                                        "classes": [Function],
                                        "invisible": [Function],
                                        "open": [Function],
                                        "transitionDuration": [Function],
                                      },
                                      "render": [Function],
                                    },
                                    "displayName": "WithStyles(ForwardRef(Backdrop))",
                                    "options": Object {
                                      "defaultTheme": Object {
                                        "breakpoints": Object {
                                          "between": [Function],
                                          "down": [Function],
                                          "keys": Array [
                                            "xs",
                                            "sm",
                                            "md",
                                            "lg",
                                            "xl",
                                          ],
                                          "only": [Function],
                                          "up": [Function],
                                          "values": Object {
                                            "lg": 1280,
                                            "md": 960,
                                            "sm": 600,
                                            "xl": 1920,
                                            "xs": 0,
                                          },
                                          "width": [Function],
                                        },
                                        "direction": "ltr",
                                        "mixins": Object {
                                          "gutters": [Function],
                                          "toolbar": Object {
                                            "@media (min-width:0px) and (orientation: landscape)": Object {
                                              "minHeight": 48,
                                            },
                                            "@media (min-width:600px)": Object {
                                              "minHeight": 64,
                                            },
                                            "minHeight": 56,
                                          },
                                        },
                                        "overrides": Object {},
                                        "palette": Object {
                                          "action": Object {
                                            "active": "rgba(0, 0, 0, 0.54)",
                                            "disabled": "rgba(0, 0, 0, 0.26)",
                                            "disabledBackground": "rgba(0, 0, 0, 0.12)",
                                            "hover": "rgba(0, 0, 0, 0.08)",
                                            "hoverOpacity": 0.08,
                                            "selected": "rgba(0, 0, 0, 0.14)",
                                          },
                                          "augmentColor": [Function],
                                          "background": Object {
                                            "default": "#fafafa",
                                            "paper": "#fff",
                                          },
                                          "common": Object {
                                            "black": "#000",
                                            "white": "#fff",
                                          },
                                          "contrastThreshold": 3,
                                          "divider": "rgba(0, 0, 0, 0.12)",
                                          "error": Object {
                                            "contrastText": "#fff",
                                            "dark": "#d32f2f",
                                            "light": "#e57373",
                                            "main": "#f44336",
                                          },
                                          "getContrastText": [Function],
                                          "grey": Object {
                                            "100": "#f5f5f5",
                                            "200": "#eeeeee",
                                            "300": "#e0e0e0",
                                            "400": "#bdbdbd",
                                            "50": "#fafafa",
                                            "500": "#9e9e9e",
                                            "600": "#757575",
                                            "700": "#616161",
                                            "800": "#424242",
                                            "900": "#212121",
                                            "A100": "#d5d5d5",
                                            "A200": "#aaaaaa",
                                            "A400": "#303030",
                                            "A700": "#616161",
                                          },
                                          "info": Object {
                                            "contrastText": "#fff",
                                            "dark": "#1976d2",
                                            "light": "#64b5f6",
                                            "main": "#2196f3",
                                          },
                                          "primary": Object {
                                            "contrastText": "#fff",
                                            "dark": "#303f9f",
                                            "light": "#7986cb",
                                            "main": "#3f51b5",
                                          },
                                          "secondary": Object {
                                            "contrastText": "#fff",
                                            "dark": "#c51162",
                                            "light": "#ff4081",
                                            "main": "#f50057",
                                          },
                                          "success": Object {
                                            "contrastText": "rgba(0, 0, 0, 0.87)",
                                            "dark": "#388e3c",
                                            "light": "#81c784",
                                            "main": "#4caf50",
                                          },
                                          "text": Object {
                                            "disabled": "rgba(0, 0, 0, 0.38)",
                                            "hint": "rgba(0, 0, 0, 0.38)",
                                            "primary": "rgba(0, 0, 0, 0.87)",
                                            "secondary": "rgba(0, 0, 0, 0.54)",
                                          },
                                          "tonalOffset": 0.2,
                                          "type": "light",
                                          "warning": Object {
                                            "contrastText": "rgba(0, 0, 0, 0.87)",
                                            "dark": "#f57c00",
                                            "light": "#ffb74d",
                                            "main": "#ff9800",
                                          },
                                        },
                                        "props": Object {},
                                        "shadows": Array [
                                          "none",
                                          "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                          "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                          "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                          "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                          "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                          "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                          "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                          "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                          "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                          "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                          "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                          "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                          "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                          "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                          "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                          "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                          "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                          "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                          "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                          "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                          "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                          "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                          "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                          "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                                        ],
                                        "shape": Object {
                                          "borderRadius": 4,
                                        },
                                        "spacing": [Function],
                                        "transitions": Object {
                                          "create": [Function],
                                          "duration": Object {
                                            "complex": 375,
                                            "enteringScreen": 225,
                                            "leavingScreen": 195,
                                            "short": 250,
                                            "shorter": 200,
                                            "shortest": 150,
                                            "standard": 300,
                                          },
                                          "easing": Object {
                                            "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                            "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                            "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                            "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                                          },
                                          "getAutoHeightDuration": [Function],
                                        },
                                        "typography": Object {
                                          "body1": Object {
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": "1rem",
                                            "fontWeight": 400,
                                            "letterSpacing": "0.00938em",
                                            "lineHeight": 1.5,
                                          },
                                          "body2": Object {
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": "0.875rem",
                                            "fontWeight": 400,
                                            "letterSpacing": "0.01071em",
                                            "lineHeight": 1.43,
                                          },
                                          "button": Object {
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": "0.875rem",
                                            "fontWeight": 500,
                                            "letterSpacing": "0.02857em",
                                            "lineHeight": 1.75,
                                            "textTransform": "uppercase",
                                          },
                                          "caption": Object {
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": "0.75rem",
                                            "fontWeight": 400,
                                            "letterSpacing": "0.03333em",
                                            "lineHeight": 1.66,
                                          },
                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                          "fontSize": 14,
                                          "fontWeightBold": 700,
                                          "fontWeightLight": 300,
                                          "fontWeightMedium": 500,
                                          "fontWeightRegular": 400,
                                          "h1": Object {
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": "6rem",
                                            "fontWeight": 300,
                                            "letterSpacing": "-0.01562em",
                                            "lineHeight": 1.167,
                                          },
                                          "h2": Object {
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": "3.75rem",
                                            "fontWeight": 300,
                                            "letterSpacing": "-0.00833em",
                                            "lineHeight": 1.2,
                                          },
                                          "h3": Object {
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": "3rem",
                                            "fontWeight": 400,
                                            "letterSpacing": "0em",
                                            "lineHeight": 1.167,
                                          },
                                          "h4": Object {
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": "2.125rem",
                                            "fontWeight": 400,
                                            "letterSpacing": "0.00735em",
                                            "lineHeight": 1.235,
                                          },
                                          "h5": Object {
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": "1.5rem",
                                            "fontWeight": 400,
                                            "letterSpacing": "0em",
                                            "lineHeight": 1.334,
                                          },
                                          "h6": Object {
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": "1.25rem",
                                            "fontWeight": 500,
                                            "letterSpacing": "0.0075em",
                                            "lineHeight": 1.6,
                                          },
                                          "htmlFontSize": 16,
                                          "overline": Object {
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": "0.75rem",
                                            "fontWeight": 400,
                                            "letterSpacing": "0.08333em",
                                            "lineHeight": 2.66,
                                            "textTransform": "uppercase",
                                          },
                                          "pxToRem": [Function],
                                          "round": [Function],
                                          "subtitle1": Object {
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": "1rem",
                                            "fontWeight": 400,
                                            "letterSpacing": "0.00938em",
                                            "lineHeight": 1.75,
                                          },
                                          "subtitle2": Object {
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": "0.875rem",
                                            "fontWeight": 500,
                                            "letterSpacing": "0.00714em",
                                            "lineHeight": 1.57,
                                          },
                                        },
                                        "zIndex": Object {
                                          "appBar": 1100,
                                          "drawer": 1200,
                                          "mobileStepper": 1000,
                                          "modal": 1300,
                                          "snackbar": 1400,
                                          "speedDial": 1050,
                                          "tooltip": 1500,
                                        },
                                      },
                                      "name": "MuiBackdrop",
                                    },
                                    "propTypes": Object {
                                      "classes": [Function],
                                      "innerRef": [Function],
                                    },
                                    "render": [Function],
                                    "useStyles": [Function],
                                  }
                                }
                                BackdropProps={
                                  Object {
                                    "transitionDuration": Object {
                                      "enter": 225,
                                      "exit": 195,
                                    },
                                  }
                                }
                                className="MuiDialog-root"
                                closeAfterTransition={true}
                                disableBackdropClick={false}
                                disableEscapeKeyDown={false}
                                onClose={[Function]}
                                open={false}
                                role="dialog"
                              />
                            </ForwardRef(Dialog)>
                          </WithStyles(ForwardRef(Dialog))>
                        </ModalDialog>
                      </WithStyles(ModalDialog)>
                    </Component>
                  </Component>
                </PickerWithState>
                <styled.span
                  disabled={false}
                >
                  <StyledComponent
                    disabled={false}
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "sc-jTzLTM",
                          "isStatic": false,
                          "lastClassName": "fZFExB",
                          "rules": Array [
                            "
  font-size: ",
                            [Function],
                            ";
  font-weight: ",
                            [Function],
                            ";
  color: ",
                            [Function],
                            ";
  line-height: 1.2;
  padding: ",
                            "4",
                            "px 0 0;
  display: flex;
  align-items: center;
  font-family: ",
                            [Function],
                            ";
",
                          ],
                        },
                        "displayName": "styled.span",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "sc-jTzLTM",
                        "target": "span",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <span
                      className="sc-jTzLTM fZFExB"
                      disabled={false}
                    >
                      Help me
                    </span>
                  </StyledComponent>
                </styled.span>
              </div>
            </StyledComponent>
          </styled.div>
        </Component>
      </ForwardRef>
    </WithTheme(ForwardRef)>
  </Component>
</Component>
`;

exports[`KeyboardDatePicker components should match to snapshot - Opened: KeyboardDatePicker opened snapshot 1`] = `
<Component
  onChange={[Function]}
  open={true}
  value={2020-02-01T03:00:00.000Z}
>
  <Component
    utils={[Function]}
  >
    <WithTheme(ForwardRef)
      label="Only calendar"
      onChange={[Function]}
      open={true}
      value={2020-02-01T03:00:00.000Z}
      variant="dialog"
    >
      <ForwardRef
        label="Only calendar"
        onChange={[Function]}
        open={true}
        value={2020-02-01T03:00:00.000Z}
        variant="dialog"
      >
        <Component
          label="Only calendar"
          onChange={[Function]}
          open={true}
          value={2020-02-01T03:00:00.000Z}
          variant="dialog"
        >
          <styled.div>
            <StyledComponent
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-gqjmRU",
                    "isStatic": false,
                    "lastClassName": "fOizOf",
                    "rules": Array [
                      "
  display: flex;
  flex-flow: column nowrap;
  font-family: ",
                      [Function],
                      ";
",
                    ],
                  },
                  "displayName": "styled.div",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "sc-gqjmRU",
                  "target": "div",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
            >
              <div
                className="sc-gqjmRU fOizOf"
              >
                <styled.label
                  disabled={false}
                >
                  <StyledComponent
                    disabled={false}
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "sc-VigVT",
                          "isStatic": false,
                          "lastClassName": "kbirlQ",
                          "rules": Array [
                            "
  font-size: ",
                            [Function],
                            ";
  font-weight: ",
                            [Function],
                            ";
  color: ",
                            [Function],
                            ";
  line-height: 1.2;
  padding: 0 0 ",
                            "4",
                            "px;
  font-family: ",
                            [Function],
                            ";
",
                          ],
                        },
                        "displayName": "styled.label",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "sc-VigVT",
                        "target": "label",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <label
                      className="sc-VigVT kbirlQ"
                      disabled={false}
                    >
                      Only calendar
                    </label>
                  </StyledComponent>
                </styled.label>
                <PickerWithState
                  allowKeyboardControl={true}
                  helperText=""
                  inputProps={Object {}}
                  invalidDateMessage="Invalid Date Format"
                  keyboardIcon={
                    <ForwardRef(WithTheme)
                      name="outlined-action-calendar"
                      size="tiny"
                    />
                  }
                  label=""
                  maxDate={2100-01-01T00:00:00.000Z}
                  maxDateMessage="Date should not be after maximal date"
                  minDate={1900-01-01T00:00:00.000Z}
                  minDateMessage="Date should not be before minimal date"
                  onChange={[Function]}
                  open={true}
                  openTo="date"
                  required={false}
                  value={2020-02-01T03:00:00.000Z}
                  variant="dialog"
                  views={
                    Array [
                      "year",
                      "date",
                    ]
                  }
                >
                  <Component
                    DateInputProps={
                      Object {
                        "format": "MMMM do",
                        "inputValue": "February 1st",
                        "onChange": [Function],
                        "openPicker": [Function],
                        "validationError": "",
                      }
                    }
                    InputComponent={[Function]}
                    format="MMMM do"
                    helperText=""
                    inputProps={Object {}}
                    keyboardIcon={
                      <ForwardRef(WithTheme)
                        name="outlined-action-calendar"
                        size="tiny"
                      />
                    }
                    label=""
                    onAccept={[Function]}
                    onClear={[Function]}
                    onDismiss={[Function]}
                    onSetToday={[Function]}
                    open={true}
                    required={false}
                    variant="dialog"
                  >
                    <Component
                      DateInputProps={
                        Object {
                          "format": "MMMM do",
                          "inputValue": "February 1st",
                          "onChange": [Function],
                          "openPicker": [Function],
                          "validationError": "",
                        }
                      }
                      InputComponent={[Function]}
                      cancelLabel="Cancel"
                      clearLabel="Clear"
                      clearable={false}
                      format="MMMM do"
                      helperText=""
                      inputProps={Object {}}
                      keyboardIcon={
                        <ForwardRef(WithTheme)
                          name="outlined-action-calendar"
                          size="tiny"
                        />
                      }
                      label=""
                      okLabel="OK"
                      onAccept={[Function]}
                      onClear={[Function]}
                      onDismiss={[Function]}
                      onSetToday={[Function]}
                      open={true}
                      required={false}
                      showTodayButton={false}
                      todayLabel="Today"
                    >
                      <Component
                        format="MMMM do"
                        helperText=""
                        inputProps={Object {}}
                        inputValue="February 1st"
                        keyboardIcon={
                          <ForwardRef(WithTheme)
                            name="outlined-action-calendar"
                            size="tiny"
                          />
                        }
                        label=""
                        onChange={[Function]}
                        openPicker={[Function]}
                        required={false}
                        validationError=""
                      >
                        <Rifm
                          format={[Function]}
                          key="____ __"
                          onChange={[Function]}
                          refuse={/\\[\\^\\\\d\\]\\+/gi}
                          value="February 1st"
                        >
                          <WithStyles(ForwardRef(TextField))
                            InputProps={
                              Object {
                                "endAdornment": <ForwardRef(WithStyles)
                                  position="end"
                                >
                                  <ForwardRef(WithStyles)
                                    onClick={[Function]}
                                  >
                                    <ForwardRef(WithTheme)
                                      name="outlined-action-calendar"
                                      size="tiny"
                                    />
                                  </ForwardRef(WithStyles)>
                                </ForwardRef(WithStyles)>,
                              }
                            }
                            error={false}
                            helperText=""
                            inputProps={Object {}}
                            label=""
                            onChange={[Function]}
                            required={false}
                            value="February 1st"
                          >
                            <ForwardRef(TextField)
                              InputProps={
                                Object {
                                  "endAdornment": <ForwardRef(WithStyles)
                                    position="end"
                                  >
                                    <ForwardRef(WithStyles)
                                      onClick={[Function]}
                                    >
                                      <ForwardRef(WithTheme)
                                        name="outlined-action-calendar"
                                        size="tiny"
                                      />
                                    </ForwardRef(WithStyles)>
                                  </ForwardRef(WithStyles)>,
                                }
                              }
                              classes={
                                Object {
                                  "root": "MuiTextField-root",
                                }
                              }
                              error={false}
                              helperText=""
                              inputProps={Object {}}
                              label=""
                              onChange={[Function]}
                              required={false}
                              value="February 1st"
                            >
                              <WithStyles(ForwardRef(FormControl))
                                className="MuiTextField-root"
                                color="primary"
                                disabled={false}
                                error={false}
                                fullWidth={false}
                                required={false}
                                variant="standard"
                              >
                                <ForwardRef(FormControl)
                                  className="MuiTextField-root"
                                  classes={
                                    Object {
                                      "fullWidth": "MuiFormControl-fullWidth",
                                      "marginDense": "MuiFormControl-marginDense",
                                      "marginNormal": "MuiFormControl-marginNormal",
                                      "root": "MuiFormControl-root",
                                    }
                                  }
                                  color="primary"
                                  disabled={false}
                                  error={false}
                                  fullWidth={false}
                                  required={false}
                                  variant="standard"
                                >
                                  <div
                                    className="MuiFormControl-root MuiTextField-root"
                                  >
                                    <WithStyles(ForwardRef(Input))
                                      autoFocus={false}
                                      endAdornment={
                                        <ForwardRef(WithStyles)
                                          position="end"
                                        >
                                          <ForwardRef(WithStyles)
                                            onClick={[Function]}
                                          >
                                            <ForwardRef(WithTheme)
                                              name="outlined-action-calendar"
                                              size="tiny"
                                            />
                                          </ForwardRef(WithStyles)>
                                        </ForwardRef(WithStyles)>
                                      }
                                      fullWidth={false}
                                      inputProps={Object {}}
                                      multiline={false}
                                      onChange={[Function]}
                                      value="February 1st"
                                    >
                                      <ForwardRef(Input)
                                        autoFocus={false}
                                        classes={
                                          Object {
                                            "colorSecondary": "MuiInput-colorSecondary",
                                            "disabled": "Mui-disabled",
                                            "error": "Mui-error",
                                            "focused": "Mui-focused",
                                            "formControl": "MuiInput-formControl",
                                            "fullWidth": "MuiInput-fullWidth",
                                            "input": "MuiInput-input",
                                            "inputMarginDense": "MuiInput-inputMarginDense",
                                            "inputMultiline": "MuiInput-inputMultiline",
                                            "inputTypeSearch": "MuiInput-inputTypeSearch",
                                            "marginDense": "MuiInput-marginDense",
                                            "multiline": "MuiInput-multiline",
                                            "root": "MuiInput-root",
                                            "underline": "MuiInput-underline",
                                          }
                                        }
                                        endAdornment={
                                          <ForwardRef(WithStyles)
                                            position="end"
                                          >
                                            <ForwardRef(WithStyles)
                                              onClick={[Function]}
                                            >
                                              <ForwardRef(WithTheme)
                                                name="outlined-action-calendar"
                                                size="tiny"
                                              />
                                            </ForwardRef(WithStyles)>
                                          </ForwardRef(WithStyles)>
                                        }
                                        fullWidth={false}
                                        inputProps={Object {}}
                                        multiline={false}
                                        onChange={[Function]}
                                        value="February 1st"
                                      >
                                        <WithStyles(ForwardRef(InputBase))
                                          autoFocus={false}
                                          classes={
                                            Object {
                                              "colorSecondary": "MuiInput-colorSecondary",
                                              "disabled": "Mui-disabled",
                                              "error": "Mui-error",
                                              "focused": "Mui-focused",
                                              "formControl": "MuiInput-formControl",
                                              "fullWidth": "MuiInput-fullWidth",
                                              "input": "MuiInput-input",
                                              "inputMarginDense": "MuiInput-inputMarginDense",
                                              "inputMultiline": "MuiInput-inputMultiline",
                                              "inputTypeSearch": "MuiInput-inputTypeSearch",
                                              "marginDense": "MuiInput-marginDense",
                                              "multiline": "MuiInput-multiline",
                                              "root": "MuiInput-root MuiInput-underline",
                                              "underline": null,
                                            }
                                          }
                                          endAdornment={
                                            <ForwardRef(WithStyles)
                                              position="end"
                                            >
                                              <ForwardRef(WithStyles)
                                                onClick={[Function]}
                                              >
                                                <ForwardRef(WithTheme)
                                                  name="outlined-action-calendar"
                                                  size="tiny"
                                                />
                                              </ForwardRef(WithStyles)>
                                            </ForwardRef(WithStyles)>
                                          }
                                          fullWidth={false}
                                          inputComponent="input"
                                          inputProps={Object {}}
                                          multiline={false}
                                          onChange={[Function]}
                                          type="text"
                                          value="February 1st"
                                        >
                                          <ForwardRef(InputBase)
                                            autoFocus={false}
                                            classes={
                                              Object {
                                                "adornedEnd": "MuiInputBase-adornedEnd",
                                                "adornedStart": "MuiInputBase-adornedStart",
                                                "colorSecondary": "MuiInputBase-colorSecondary MuiInput-colorSecondary",
                                                "disabled": "Mui-disabled Mui-disabled",
                                                "error": "Mui-error Mui-error",
                                                "focused": "Mui-focused Mui-focused",
                                                "formControl": "MuiInputBase-formControl MuiInput-formControl",
                                                "fullWidth": "MuiInputBase-fullWidth MuiInput-fullWidth",
                                                "input": "MuiInputBase-input MuiInput-input",
                                                "inputAdornedEnd": "MuiInputBase-inputAdornedEnd",
                                                "inputAdornedStart": "MuiInputBase-inputAdornedStart",
                                                "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                                "inputMarginDense": "MuiInputBase-inputMarginDense MuiInput-inputMarginDense",
                                                "inputMultiline": "MuiInputBase-inputMultiline MuiInput-inputMultiline",
                                                "inputTypeSearch": "MuiInputBase-inputTypeSearch MuiInput-inputTypeSearch",
                                                "marginDense": "MuiInputBase-marginDense MuiInput-marginDense",
                                                "multiline": "MuiInputBase-multiline MuiInput-multiline",
                                                "root": "MuiInputBase-root MuiInput-root MuiInput-underline",
                                              }
                                            }
                                            endAdornment={
                                              <ForwardRef(WithStyles)
                                                position="end"
                                              >
                                                <ForwardRef(WithStyles)
                                                  onClick={[Function]}
                                                >
                                                  <ForwardRef(WithTheme)
                                                    name="outlined-action-calendar"
                                                    size="tiny"
                                                  />
                                                </ForwardRef(WithStyles)>
                                              </ForwardRef(WithStyles)>
                                            }
                                            fullWidth={false}
                                            inputComponent="input"
                                            inputProps={Object {}}
                                            multiline={false}
                                            onChange={[Function]}
                                            type="text"
                                            value="February 1st"
                                          >
                                            <div
                                              className="MuiInputBase-root MuiInput-root MuiInput-underline MuiInputBase-formControl MuiInput-formControl MuiInputBase-adornedEnd"
                                              onClick={[Function]}
                                            >
                                              <input
                                                aria-invalid={false}
                                                autoFocus={false}
                                                className="MuiInputBase-input MuiInput-input MuiInputBase-inputAdornedEnd"
                                                disabled={false}
                                                onAnimationStart={[Function]}
                                                onBlur={[Function]}
                                                onChange={[Function]}
                                                onFocus={[Function]}
                                                required={false}
                                                type="text"
                                                value="February 1st"
                                              />
                                              <WithStyles(ForwardRef(InputAdornment))
                                                position="end"
                                              >
                                                <ForwardRef(InputAdornment)
                                                  classes={
                                                    Object {
                                                      "disablePointerEvents": "MuiInputAdornment-disablePointerEvents",
                                                      "filled": "MuiInputAdornment-filled",
                                                      "hiddenLabel": "MuiInputAdornment-hiddenLabel",
                                                      "marginDense": "MuiInputAdornment-marginDense",
                                                      "positionEnd": "MuiInputAdornment-positionEnd",
                                                      "positionStart": "MuiInputAdornment-positionStart",
                                                      "root": "MuiInputAdornment-root",
                                                    }
                                                  }
                                                  position="end"
                                                >
                                                  <div
                                                    className="MuiInputAdornment-root MuiInputAdornment-positionEnd"
                                                  >
                                                    <WithStyles(ForwardRef(IconButton))
                                                      onClick={[Function]}
                                                    >
                                                      <ForwardRef(IconButton)
                                                        classes={
                                                          Object {
                                                            "colorInherit": "MuiIconButton-colorInherit",
                                                            "colorPrimary": "MuiIconButton-colorPrimary",
                                                            "colorSecondary": "MuiIconButton-colorSecondary",
                                                            "disabled": "Mui-disabled",
                                                            "edgeEnd": "MuiIconButton-edgeEnd",
                                                            "edgeStart": "MuiIconButton-edgeStart",
                                                            "label": "MuiIconButton-label",
                                                            "root": "MuiIconButton-root",
                                                            "sizeSmall": "MuiIconButton-sizeSmall",
                                                          }
                                                        }
                                                        onClick={[Function]}
                                                      >
                                                        <WithStyles(ForwardRef(ButtonBase))
                                                          centerRipple={true}
                                                          className="MuiIconButton-root"
                                                          disabled={false}
                                                          focusRipple={true}
                                                          onClick={[Function]}
                                                        >
                                                          <ForwardRef(ButtonBase)
                                                            centerRipple={true}
                                                            className="MuiIconButton-root"
                                                            classes={
                                                              Object {
                                                                "disabled": "Mui-disabled",
                                                                "focusVisible": "Mui-focusVisible",
                                                                "root": "MuiButtonBase-root",
                                                              }
                                                            }
                                                            disabled={false}
                                                            focusRipple={true}
                                                            onClick={[Function]}
                                                          >
                                                            <button
                                                              className="MuiButtonBase-root MuiIconButton-root"
                                                              disabled={false}
                                                              onBlur={[Function]}
                                                              onClick={[Function]}
                                                              onDragLeave={[Function]}
                                                              onFocus={[Function]}
                                                              onKeyDown={[Function]}
                                                              onKeyUp={[Function]}
                                                              onMouseDown={[Function]}
                                                              onMouseLeave={[Function]}
                                                              onMouseUp={[Function]}
                                                              onTouchEnd={[Function]}
                                                              onTouchMove={[Function]}
                                                              onTouchStart={[Function]}
                                                              tabIndex={0}
                                                              type="button"
                                                            >
                                                              <span
                                                                className="MuiIconButton-label"
                                                              >
                                                                <WithTheme(ForwardRef)
                                                                  name="outlined-action-calendar"
                                                                  size="tiny"
                                                                >
                                                                  <ForwardRef
                                                                    name="outlined-action-calendar"
                                                                    size="tiny"
                                                                  >
                                                                    <styled.i
                                                                      className="natds-icons natds-icons-outlined-action-calendar undefined"
                                                                      size="tiny"
                                                                    >
                                                                      <StyledComponent
                                                                        className="natds-icons natds-icons-outlined-action-calendar undefined"
                                                                        forwardedComponent={
                                                                          Object {
                                                                            "$$typeof": Symbol(react.forward_ref),
                                                                            "attrs": Array [],
                                                                            "componentStyle": ComponentStyle {
                                                                              "componentId": "sc-bdVaJa",
                                                                              "isStatic": false,
                                                                              "lastClassName": "jWbhAs",
                                                                              "rules": Array [
                                                                                "
  font-size: ",
                                                                                [Function],
                                                                                ";
",
                                                                              ],
                                                                            },
                                                                            "displayName": "styled.i",
                                                                            "foldedComponentIds": Array [],
                                                                            "render": [Function],
                                                                            "styledComponentId": "sc-bdVaJa",
                                                                            "target": "i",
                                                                            "toString": [Function],
                                                                            "warnTooManyClasses": [Function],
                                                                            "withComponent": [Function],
                                                                          }
                                                                        }
                                                                        forwardedRef={null}
                                                                        size="tiny"
                                                                      >
                                                                        <i
                                                                          className="sc-bdVaJa jWbhAs natds-icons natds-icons-outlined-action-calendar undefined"
                                                                          size="tiny"
                                                                        />
                                                                      </StyledComponent>
                                                                    </styled.i>
                                                                  </ForwardRef>
                                                                </WithTheme(ForwardRef)>
                                                              </span>
                                                              <NoSsr>
                                                                <WithStyles(memo)
                                                                  center={true}
                                                                >
                                                                  <ForwardRef(TouchRipple)
                                                                    center={true}
                                                                    classes={
                                                                      Object {
                                                                        "child": "MuiTouchRipple-child",
                                                                        "childLeaving": "MuiTouchRipple-childLeaving",
                                                                        "childPulsate": "MuiTouchRipple-childPulsate",
                                                                        "ripple": "MuiTouchRipple-ripple",
                                                                        "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                        "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                        "root": "MuiTouchRipple-root",
                                                                      }
                                                                    }
                                                                  >
                                                                    <span
                                                                      className="MuiTouchRipple-root"
                                                                    >
                                                                      <TransitionGroup
                                                                        childFactory={[Function]}
                                                                        component={null}
                                                                        exit={true}
                                                                      />
                                                                    </span>
                                                                  </ForwardRef(TouchRipple)>
                                                                </WithStyles(memo)>
                                                              </NoSsr>
                                                            </button>
                                                          </ForwardRef(ButtonBase)>
                                                        </WithStyles(ForwardRef(ButtonBase))>
                                                      </ForwardRef(IconButton)>
                                                    </WithStyles(ForwardRef(IconButton))>
                                                  </div>
                                                </ForwardRef(InputAdornment)>
                                              </WithStyles(ForwardRef(InputAdornment))>
                                            </div>
                                          </ForwardRef(InputBase)>
                                        </WithStyles(ForwardRef(InputBase))>
                                      </ForwardRef(Input)>
                                    </WithStyles(ForwardRef(Input))>
                                  </div>
                                </ForwardRef(FormControl)>
                              </WithStyles(ForwardRef(FormControl))>
                            </ForwardRef(TextField)>
                          </WithStyles(ForwardRef(TextField))>
                        </Rifm>
                      </Component>
                      <WithStyles(ModalDialog)
                        cancelLabel="Cancel"
                        clearLabel="Clear"
                        clearable={false}
                        okLabel="OK"
                        onAccept={[Function]}
                        onClear={[Function]}
                        onDismiss={[Function]}
                        onSetToday={[Function]}
                        open={true}
                        showTodayButton={false}
                        todayLabel="Today"
                      >
                        <ModalDialog
                          cancelLabel="Cancel"
                          classes={
                            Object {
                              "dialog": "MuiPickersModal-dialog",
                              "dialogRoot": "MuiPickersModal-dialogRoot",
                              "dialogRootWider": "MuiPickersModal-dialogRootWider",
                              "withAdditionalAction": "MuiPickersModal-withAdditionalAction",
                            }
                          }
                          clearLabel="Clear"
                          clearable={false}
                          okLabel="OK"
                          onAccept={[Function]}
                          onClear={[Function]}
                          onDismiss={[Function]}
                          onSetToday={[Function]}
                          open={true}
                          showTodayButton={false}
                          todayLabel="Today"
                        >
                          <WithStyles(ForwardRef(Dialog))
                            classes={
                              Object {
                                "paper": "MuiPickersModal-dialogRoot",
                              }
                            }
                            onClose={[Function]}
                            open={true}
                            role="dialog"
                          >
                            <ForwardRef(Dialog)
                              classes={
                                Object {
                                  "container": "MuiDialog-container",
                                  "paper": "MuiDialog-paper MuiPickersModal-dialogRoot",
                                  "paperFullScreen": "MuiDialog-paperFullScreen",
                                  "paperFullWidth": "MuiDialog-paperFullWidth",
                                  "paperScrollBody": "MuiDialog-paperScrollBody",
                                  "paperScrollPaper": "MuiDialog-paperScrollPaper",
                                  "paperWidthFalse": "MuiDialog-paperWidthFalse",
                                  "paperWidthLg": "MuiDialog-paperWidthLg",
                                  "paperWidthMd": "MuiDialog-paperWidthMd",
                                  "paperWidthSm": "MuiDialog-paperWidthSm",
                                  "paperWidthXl": "MuiDialog-paperWidthXl",
                                  "paperWidthXs": "MuiDialog-paperWidthXs",
                                  "root": "MuiDialog-root",
                                  "scrollBody": "MuiDialog-scrollBody",
                                  "scrollPaper": "MuiDialog-scrollPaper",
                                }
                              }
                              onClose={[Function]}
                              open={true}
                              role="dialog"
                            >
                              <ForwardRef(Modal)
                                BackdropComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "Naked": Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "propTypes": Object {
                                        "children": [Function],
                                        "className": [Function],
                                        "classes": [Function],
                                        "invisible": [Function],
                                        "open": [Function],
                                        "transitionDuration": [Function],
                                      },
                                      "render": [Function],
                                    },
                                    "displayName": "WithStyles(ForwardRef(Backdrop))",
                                    "options": Object {
                                      "defaultTheme": Object {
                                        "breakpoints": Object {
                                          "between": [Function],
                                          "down": [Function],
                                          "keys": Array [
                                            "xs",
                                            "sm",
                                            "md",
                                            "lg",
                                            "xl",
                                          ],
                                          "only": [Function],
                                          "up": [Function],
                                          "values": Object {
                                            "lg": 1280,
                                            "md": 960,
                                            "sm": 600,
                                            "xl": 1920,
                                            "xs": 0,
                                          },
                                          "width": [Function],
                                        },
                                        "direction": "ltr",
                                        "mixins": Object {
                                          "gutters": [Function],
                                          "toolbar": Object {
                                            "@media (min-width:0px) and (orientation: landscape)": Object {
                                              "minHeight": 48,
                                            },
                                            "@media (min-width:600px)": Object {
                                              "minHeight": 64,
                                            },
                                            "minHeight": 56,
                                          },
                                        },
                                        "overrides": Object {},
                                        "palette": Object {
                                          "action": Object {
                                            "active": "rgba(0, 0, 0, 0.54)",
                                            "disabled": "rgba(0, 0, 0, 0.26)",
                                            "disabledBackground": "rgba(0, 0, 0, 0.12)",
                                            "hover": "rgba(0, 0, 0, 0.08)",
                                            "hoverOpacity": 0.08,
                                            "selected": "rgba(0, 0, 0, 0.14)",
                                          },
                                          "augmentColor": [Function],
                                          "background": Object {
                                            "default": "#fafafa",
                                            "paper": "#fff",
                                          },
                                          "common": Object {
                                            "black": "#000",
                                            "white": "#fff",
                                          },
                                          "contrastThreshold": 3,
                                          "divider": "rgba(0, 0, 0, 0.12)",
                                          "error": Object {
                                            "contrastText": "#fff",
                                            "dark": "#d32f2f",
                                            "light": "#e57373",
                                            "main": "#f44336",
                                          },
                                          "getContrastText": [Function],
                                          "grey": Object {
                                            "100": "#f5f5f5",
                                            "200": "#eeeeee",
                                            "300": "#e0e0e0",
                                            "400": "#bdbdbd",
                                            "50": "#fafafa",
                                            "500": "#9e9e9e",
                                            "600": "#757575",
                                            "700": "#616161",
                                            "800": "#424242",
                                            "900": "#212121",
                                            "A100": "#d5d5d5",
                                            "A200": "#aaaaaa",
                                            "A400": "#303030",
                                            "A700": "#616161",
                                          },
                                          "info": Object {
                                            "contrastText": "#fff",
                                            "dark": "#1976d2",
                                            "light": "#64b5f6",
                                            "main": "#2196f3",
                                          },
                                          "primary": Object {
                                            "contrastText": "#fff",
                                            "dark": "#303f9f",
                                            "light": "#7986cb",
                                            "main": "#3f51b5",
                                          },
                                          "secondary": Object {
                                            "contrastText": "#fff",
                                            "dark": "#c51162",
                                            "light": "#ff4081",
                                            "main": "#f50057",
                                          },
                                          "success": Object {
                                            "contrastText": "rgba(0, 0, 0, 0.87)",
                                            "dark": "#388e3c",
                                            "light": "#81c784",
                                            "main": "#4caf50",
                                          },
                                          "text": Object {
                                            "disabled": "rgba(0, 0, 0, 0.38)",
                                            "hint": "rgba(0, 0, 0, 0.38)",
                                            "primary": "rgba(0, 0, 0, 0.87)",
                                            "secondary": "rgba(0, 0, 0, 0.54)",
                                          },
                                          "tonalOffset": 0.2,
                                          "type": "light",
                                          "warning": Object {
                                            "contrastText": "rgba(0, 0, 0, 0.87)",
                                            "dark": "#f57c00",
                                            "light": "#ffb74d",
                                            "main": "#ff9800",
                                          },
                                        },
                                        "props": Object {},
                                        "shadows": Array [
                                          "none",
                                          "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                          "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                          "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                          "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                          "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                          "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                          "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                          "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                          "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                          "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                          "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                          "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                          "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                          "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                          "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                          "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                          "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                          "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                          "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                          "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                          "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                          "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                          "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                          "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                                        ],
                                        "shape": Object {
                                          "borderRadius": 4,
                                        },
                                        "spacing": [Function],
                                        "transitions": Object {
                                          "create": [Function],
                                          "duration": Object {
                                            "complex": 375,
                                            "enteringScreen": 225,
                                            "leavingScreen": 195,
                                            "short": 250,
                                            "shorter": 200,
                                            "shortest": 150,
                                            "standard": 300,
                                          },
                                          "easing": Object {
                                            "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                            "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                            "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                            "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                                          },
                                          "getAutoHeightDuration": [Function],
                                        },
                                        "typography": Object {
                                          "body1": Object {
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": "1rem",
                                            "fontWeight": 400,
                                            "letterSpacing": "0.00938em",
                                            "lineHeight": 1.5,
                                          },
                                          "body2": Object {
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": "0.875rem",
                                            "fontWeight": 400,
                                            "letterSpacing": "0.01071em",
                                            "lineHeight": 1.43,
                                          },
                                          "button": Object {
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": "0.875rem",
                                            "fontWeight": 500,
                                            "letterSpacing": "0.02857em",
                                            "lineHeight": 1.75,
                                            "textTransform": "uppercase",
                                          },
                                          "caption": Object {
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": "0.75rem",
                                            "fontWeight": 400,
                                            "letterSpacing": "0.03333em",
                                            "lineHeight": 1.66,
                                          },
                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                          "fontSize": 14,
                                          "fontWeightBold": 700,
                                          "fontWeightLight": 300,
                                          "fontWeightMedium": 500,
                                          "fontWeightRegular": 400,
                                          "h1": Object {
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": "6rem",
                                            "fontWeight": 300,
                                            "letterSpacing": "-0.01562em",
                                            "lineHeight": 1.167,
                                          },
                                          "h2": Object {
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": "3.75rem",
                                            "fontWeight": 300,
                                            "letterSpacing": "-0.00833em",
                                            "lineHeight": 1.2,
                                          },
                                          "h3": Object {
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": "3rem",
                                            "fontWeight": 400,
                                            "letterSpacing": "0em",
                                            "lineHeight": 1.167,
                                          },
                                          "h4": Object {
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": "2.125rem",
                                            "fontWeight": 400,
                                            "letterSpacing": "0.00735em",
                                            "lineHeight": 1.235,
                                          },
                                          "h5": Object {
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": "1.5rem",
                                            "fontWeight": 400,
                                            "letterSpacing": "0em",
                                            "lineHeight": 1.334,
                                          },
                                          "h6": Object {
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": "1.25rem",
                                            "fontWeight": 500,
                                            "letterSpacing": "0.0075em",
                                            "lineHeight": 1.6,
                                          },
                                          "htmlFontSize": 16,
                                          "overline": Object {
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": "0.75rem",
                                            "fontWeight": 400,
                                            "letterSpacing": "0.08333em",
                                            "lineHeight": 2.66,
                                            "textTransform": "uppercase",
                                          },
                                          "pxToRem": [Function],
                                          "round": [Function],
                                          "subtitle1": Object {
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": "1rem",
                                            "fontWeight": 400,
                                            "letterSpacing": "0.00938em",
                                            "lineHeight": 1.75,
                                          },
                                          "subtitle2": Object {
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": "0.875rem",
                                            "fontWeight": 500,
                                            "letterSpacing": "0.00714em",
                                            "lineHeight": 1.57,
                                          },
                                        },
                                        "zIndex": Object {
                                          "appBar": 1100,
                                          "drawer": 1200,
                                          "mobileStepper": 1000,
                                          "modal": 1300,
                                          "snackbar": 1400,
                                          "speedDial": 1050,
                                          "tooltip": 1500,
                                        },
                                      },
                                      "name": "MuiBackdrop",
                                    },
                                    "propTypes": Object {
                                      "classes": [Function],
                                      "innerRef": [Function],
                                    },
                                    "render": [Function],
                                    "useStyles": [Function],
                                  }
                                }
                                BackdropProps={
                                  Object {
                                    "transitionDuration": Object {
                                      "enter": 225,
                                      "exit": 195,
                                    },
                                  }
                                }
                                className="MuiDialog-root"
                                closeAfterTransition={true}
                                disableBackdropClick={false}
                                disableEscapeKeyDown={false}
                                onClose={[Function]}
                                open={true}
                                role="dialog"
                              >
                                <ForwardRef(Portal)
                                  disablePortal={false}
                                >
                                  <Portal
                                    containerInfo={
                                      <body
                                        style="padding-right: 0px; overflow: hidden;"
                                      >
                                        <div
                                          class="MuiDialog-root"
                                          role="dialog"
                                          style="position: fixed; z-index: 1300; right: 0px; bottom: 0px; top: 0px; left: 0px;"
                                        >
                                          <div
                                            aria-hidden="true"
                                            class="MuiBackdrop-root"
                                            style="opacity: 1; webkit-transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms; transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;"
                                          />
                                          <div
                                            data-test="sentinelStart"
                                            tabindex="0"
                                          />
                                          <div
                                            class="MuiDialog-container MuiDialog-scrollPaper"
                                            role="none presentation"
                                            style="opacity: 1; webkit-transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms; transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;"
                                            tabindex="-1"
                                          >
                                            <div
                                              class="MuiPaper-root MuiDialog-paper MuiPickersModal-dialogRoot MuiDialog-paperScrollPaper MuiDialog-paperWidthSm MuiPaper-elevation24 MuiPaper-rounded"
                                              role="dialog"
                                            >
                                              <div
                                                class="MuiDialogContent-root MuiPickersModal-dialog"
                                              >
                                                <div
                                                  class="MuiPickersBasePicker-container"
                                                >
                                                  <div
                                                    class="MuiToolbar-root MuiToolbar-regular MuiPickersToolbar-toolbar MuiPickersDatePickerRoot-toolbar MuiToolbar-gutters"
                                                  >
                                                    <button
                                                      class="MuiButtonBase-root MuiButton-root MuiButton-text MuiPickersToolbarButton-toolbarBtn"
                                                      tabindex="0"
                                                      type="button"
                                                    >
                                                      <span
                                                        class="MuiButton-label"
                                                      >
                                                        <h6
                                                          class="MuiTypography-root MuiPickersToolbarText-toolbarTxt MuiTypography-subtitle1"
                                                        >
                                                          2020
                                                        </h6>
                                                      </span>
                                                      <span
                                                        class="MuiTouchRipple-root"
                                                      />
                                                    </button>
                                                    <button
                                                      class="MuiButtonBase-root MuiButton-root MuiButton-text MuiPickersToolbarButton-toolbarBtn"
                                                      tabindex="0"
                                                      type="button"
                                                    >
                                                      <span
                                                        class="MuiButton-label"
                                                      >
                                                        <h4
                                                          class="MuiTypography-root MuiPickersToolbarText-toolbarTxt MuiPickersToolbarText-toolbarBtnSelected MuiTypography-h4 MuiTypography-alignCenter"
                                                        >
                                                          Sat, Feb 1
                                                        </h4>
                                                      </span>
                                                      <span
                                                        class="MuiTouchRipple-root"
                                                      />
                                                    </button>
                                                  </div>
                                                  <div
                                                    class="MuiPickersBasePicker-pickerView"
                                                  >
                                                    <div>
                                                      <div
                                                        class="MuiPickersCalendarHeader-switchHeader"
                                                      >
                                                        <button
                                                          class="MuiButtonBase-root MuiIconButton-root MuiPickersCalendarHeader-iconButton"
                                                          tabindex="0"
                                                          type="button"
                                                        >
                                                          <span
                                                            class="MuiIconButton-label"
                                                          >
                                                            <svg
                                                              aria-hidden="true"
                                                              class="MuiSvgIcon-root"
                                                              focusable="false"
                                                              role="presentation"
                                                              viewBox="0 0 24 24"
                                                            >
                                                              <path
                                                                d="M15.41 16.59L10.83 12l4.58-4.59L14 6l-6 6 6 6 1.41-1.41z"
                                                              />
                                                              <path
                                                                d="M0 0h24v24H0V0z"
                                                                fill="none"
                                                              />
                                                            </svg>
                                                          </span>
                                                          <span
                                                            class="MuiTouchRipple-root"
                                                          />
                                                        </button>
                                                        <div
                                                          class="MuiPickersSlideTransition-transitionContainer MuiPickersCalendarHeader-transitionContainer"
                                                        >
                                                          <p
                                                            class="MuiTypography-root MuiTypography-body1 MuiTypography-alignCenter"
                                                          >
                                                            February 2020
                                                          </p>
                                                        </div>
                                                        <button
                                                          class="MuiButtonBase-root MuiIconButton-root MuiPickersCalendarHeader-iconButton"
                                                          tabindex="0"
                                                          type="button"
                                                        >
                                                          <span
                                                            class="MuiIconButton-label"
                                                          >
                                                            <svg
                                                              aria-hidden="true"
                                                              class="MuiSvgIcon-root"
                                                              focusable="false"
                                                              role="presentation"
                                                              viewBox="0 0 24 24"
                                                            >
                                                              <path
                                                                d="M8.59 16.59L13.17 12 8.59 7.41 10 6l6 6-6 6-1.41-1.41z"
                                                              />
                                                              <path
                                                                d="M0 0h24v24H0V0z"
                                                                fill="none"
                                                              />
                                                            </svg>
                                                          </span>
                                                          <span
                                                            class="MuiTouchRipple-root"
                                                          />
                                                        </button>
                                                      </div>
                                                      <div
                                                        class="MuiPickersCalendarHeader-daysHeader"
                                                      >
                                                        <span
                                                          class="MuiTypography-root MuiPickersCalendarHeader-dayLabel MuiTypography-caption"
                                                        >
                                                          Su
                                                        </span>
                                                        <span
                                                          class="MuiTypography-root MuiPickersCalendarHeader-dayLabel MuiTypography-caption"
                                                        >
                                                          Mo
                                                        </span>
                                                        <span
                                                          class="MuiTypography-root MuiPickersCalendarHeader-dayLabel MuiTypography-caption"
                                                        >
                                                          Tu
                                                        </span>
                                                        <span
                                                          class="MuiTypography-root MuiPickersCalendarHeader-dayLabel MuiTypography-caption"
                                                        >
                                                          We
                                                        </span>
                                                        <span
                                                          class="MuiTypography-root MuiPickersCalendarHeader-dayLabel MuiTypography-caption"
                                                        >
                                                          Th
                                                        </span>
                                                        <span
                                                          class="MuiTypography-root MuiPickersCalendarHeader-dayLabel MuiTypography-caption"
                                                        >
                                                          Fr
                                                        </span>
                                                        <span
                                                          class="MuiTypography-root MuiPickersCalendarHeader-dayLabel MuiTypography-caption"
                                                        >
                                                          Sa
                                                        </span>
                                                      </div>
                                                    </div>
                                                    <div
                                                      class="MuiPickersSlideTransition-transitionContainer MuiPickersCalendar-transitionContainer"
                                                    >
                                                      <div>
                                                        <div
                                                          class="MuiPickersCalendar-week"
                                                        >
                                                          <div
                                                            role="presentation"
                                                          >
                                                            <button
                                                              class="MuiButtonBase-root MuiIconButton-root MuiPickersDay-day MuiPickersDay-hidden"
                                                              tabindex="-1"
                                                              type="button"
                                                            >
                                                              <span
                                                                class="MuiIconButton-label"
                                                              >
                                                                <p
                                                                  class="MuiTypography-root MuiTypography-body2 MuiTypography-colorInherit"
                                                                >
                                                                  26
                                                                </p>
                                                              </span>
                                                              <span
                                                                class="MuiTouchRipple-root"
                                                              />
                                                            </button>
                                                          </div>
                                                          <div
                                                            role="presentation"
                                                          >
                                                            <button
                                                              class="MuiButtonBase-root MuiIconButton-root MuiPickersDay-day MuiPickersDay-hidden"
                                                              tabindex="-1"
                                                              type="button"
                                                            >
                                                              <span
                                                                class="MuiIconButton-label"
                                                              >
                                                                <p
                                                                  class="MuiTypography-root MuiTypography-body2 MuiTypography-colorInherit"
                                                                >
                                                                  27
                                                                </p>
                                                              </span>
                                                              <span
                                                                class="MuiTouchRipple-root"
                                                              />
                                                            </button>
                                                          </div>
                                                          <div
                                                            role="presentation"
                                                          >
                                                            <button
                                                              class="MuiButtonBase-root MuiIconButton-root MuiPickersDay-day MuiPickersDay-hidden"
                                                              tabindex="-1"
                                                              type="button"
                                                            >
                                                              <span
                                                                class="MuiIconButton-label"
                                                              >
                                                                <p
                                                                  class="MuiTypography-root MuiTypography-body2 MuiTypography-colorInherit"
                                                                >
                                                                  28
                                                                </p>
                                                              </span>
                                                              <span
                                                                class="MuiTouchRipple-root"
                                                              />
                                                            </button>
                                                          </div>
                                                          <div
                                                            role="presentation"
                                                          >
                                                            <button
                                                              class="MuiButtonBase-root MuiIconButton-root MuiPickersDay-day MuiPickersDay-hidden"
                                                              tabindex="-1"
                                                              type="button"
                                                            >
                                                              <span
                                                                class="MuiIconButton-label"
                                                              >
                                                                <p
                                                                  class="MuiTypography-root MuiTypography-body2 MuiTypography-colorInherit"
                                                                >
                                                                  29
                                                                </p>
                                                              </span>
                                                              <span
                                                                class="MuiTouchRipple-root"
                                                              />
                                                            </button>
                                                          </div>
                                                          <div
                                                            role="presentation"
                                                          >
                                                            <button
                                                              class="MuiButtonBase-root MuiIconButton-root MuiPickersDay-day MuiPickersDay-hidden"
                                                              tabindex="-1"
                                                              type="button"
                                                            >
                                                              <span
                                                                class="MuiIconButton-label"
                                                              >
                                                                <p
                                                                  class="MuiTypography-root MuiTypography-body2 MuiTypography-colorInherit"
                                                                >
                                                                  30
                                                                </p>
                                                              </span>
                                                              <span
                                                                class="MuiTouchRipple-root"
                                                              />
                                                            </button>
                                                          </div>
                                                          <div
                                                            role="presentation"
                                                          >
                                                            <button
                                                              class="MuiButtonBase-root MuiIconButton-root MuiPickersDay-day MuiPickersDay-hidden"
                                                              tabindex="-1"
                                                              type="button"
                                                            >
                                                              <span
                                                                class="MuiIconButton-label"
                                                              >
                                                                <p
                                                                  class="MuiTypography-root MuiTypography-body2 MuiTypography-colorInherit"
                                                                >
                                                                  31
                                                                </p>
                                                              </span>
                                                              <span
                                                                class="MuiTouchRipple-root"
                                                              />
                                                            </button>
                                                          </div>
                                                          <div
                                                            role="presentation"
                                                          >
                                                            <button
                                                              class="MuiButtonBase-root MuiIconButton-root MuiPickersDay-day MuiPickersDay-daySelected"
                                                              tabindex="0"
                                                              type="button"
                                                            >
                                                              <span
                                                                class="MuiIconButton-label"
                                                              >
                                                                <p
                                                                  class="MuiTypography-root MuiTypography-body2 MuiTypography-colorInherit"
                                                                >
                                                                  1
                                                                </p>
                                                              </span>
                                                              <span
                                                                class="MuiTouchRipple-root"
                                                              />
                                                            </button>
                                                          </div>
                                                        </div>
                                                        <div
                                                          class="MuiPickersCalendar-week"
                                                        >
                                                          <div
                                                            role="presentation"
                                                          >
                                                            <button
                                                              class="MuiButtonBase-root MuiIconButton-root MuiPickersDay-day"
                                                              tabindex="0"
                                                              type="button"
                                                            >
                                                              <span
                                                                class="MuiIconButton-label"
                                                              >
                                                                <p
                                                                  class="MuiTypography-root MuiTypography-body2 MuiTypography-colorInherit"
                                                                >
                                                                  2
                                                                </p>
                                                              </span>
                                                              <span
                                                                class="MuiTouchRipple-root"
                                                              />
                                                            </button>
                                                          </div>
                                                          <div
                                                            role="presentation"
                                                          >
                                                            <button
                                                              class="MuiButtonBase-root MuiIconButton-root MuiPickersDay-day"
                                                              tabindex="0"
                                                              type="button"
                                                            >
                                                              <span
                                                                class="MuiIconButton-label"
                                                              >
                                                                <p
                                                                  class="MuiTypography-root MuiTypography-body2 MuiTypography-colorInherit"
                                                                >
                                                                  3
                                                                </p>
                                                              </span>
                                                              <span
                                                                class="MuiTouchRipple-root"
                                                              />
                                                            </button>
                                                          </div>
                                                          <div
                                                            role="presentation"
                                                          >
                                                            <button
                                                              class="MuiButtonBase-root MuiIconButton-root MuiPickersDay-day"
                                                              tabindex="0"
                                                              type="button"
                                                            >
                                                              <span
                                                                class="MuiIconButton-label"
                                                              >
                                                                <p
                                                                  class="MuiTypography-root MuiTypography-body2 MuiTypography-colorInherit"
                                                                >
                                                                  4
                                                                </p>
                                                              </span>
                                                              <span
                                                                class="MuiTouchRipple-root"
                                                              />
                                                            </button>
                                                          </div>
                                                          <div
                                                            role="presentation"
                                                          >
                                                            <button
                                                              class="MuiButtonBase-root MuiIconButton-root MuiPickersDay-day"
                                                              tabindex="0"
                                                              type="button"
                                                            >
                                                              <span
                                                                class="MuiIconButton-label"
                                                              >
                                                                <p
                                                                  class="MuiTypography-root MuiTypography-body2 MuiTypography-colorInherit"
                                                                >
                                                                  5
                                                                </p>
                                                              </span>
                                                              <span
                                                                class="MuiTouchRipple-root"
                                                              />
                                                            </button>
                                                          </div>
                                                          <div
                                                            role="presentation"
                                                          >
                                                            <button
                                                              class="MuiButtonBase-root MuiIconButton-root MuiPickersDay-day"
                                                              tabindex="0"
                                                              type="button"
                                                            >
                                                              <span
                                                                class="MuiIconButton-label"
                                                              >
                                                                <p
                                                                  class="MuiTypography-root MuiTypography-body2 MuiTypography-colorInherit"
                                                                >
                                                                  6
                                                                </p>
                                                              </span>
                                                              <span
                                                                class="MuiTouchRipple-root"
                                                              />
                                                            </button>
                                                          </div>
                                                          <div
                                                            role="presentation"
                                                          >
                                                            <button
                                                              class="MuiButtonBase-root MuiIconButton-root MuiPickersDay-day"
                                                              tabindex="0"
                                                              type="button"
                                                            >
                                                              <span
                                                                class="MuiIconButton-label"
                                                              >
                                                                <p
                                                                  class="MuiTypography-root MuiTypography-body2 MuiTypography-colorInherit"
                                                                >
                                                                  7
                                                                </p>
                                                              </span>
                                                              <span
                                                                class="MuiTouchRipple-root"
                                                              />
                                                            </button>
                                                          </div>
                                                          <div
                                                            role="presentation"
                                                          >
                                                            <button
                                                              class="MuiButtonBase-root MuiIconButton-root MuiPickersDay-day"
                                                              tabindex="0"
                                                              type="button"
                                                            >
                                                              <span
                                                                class="MuiIconButton-label"
                                                              >
                                                                <p
                                                                  class="MuiTypography-root MuiTypography-body2 MuiTypography-colorInherit"
                                                                >
                                                                  8
                                                                </p>
                                                              </span>
                                                              <span
                                                                class="MuiTouchRipple-root"
                                                              />
                                                            </button>
                                                          </div>
                                                        </div>
                                                        <div
                                                          class="MuiPickersCalendar-week"
                                                        >
                                                          <div
                                                            role="presentation"
                                                          >
                                                            <button
                                                              class="MuiButtonBase-root MuiIconButton-root MuiPickersDay-day"
                                                              tabindex="0"
                                                              type="button"
                                                            >
                                                              <span
                                                                class="MuiIconButton-label"
                                                              >
                                                                <p
                                                                  class="MuiTypography-root MuiTypography-body2 MuiTypography-colorInherit"
                                                                >
                                                                  9
                                                                </p>
                                                              </span>
                                                              <span
                                                                class="MuiTouchRipple-root"
                                                              />
                                                            </button>
                                                          </div>
                                                          <div
                                                            role="presentation"
                                                          >
                                                            <button
                                                              class="MuiButtonBase-root MuiIconButton-root MuiPickersDay-day"
                                                              tabindex="0"
                                                              type="button"
                                                            >
                                                              <span
                                                                class="MuiIconButton-label"
                                                              >
                                                                <p
                                                                  class="MuiTypography-root MuiTypography-body2 MuiTypography-colorInherit"
                                                                >
                                                                  10
                                                                </p>
                                                              </span>
                                                              <span
                                                                class="MuiTouchRipple-root"
                                                              />
                                                            </button>
                                                          </div>
                                                          <div
                                                            role="presentation"
                                                          >
                                                            <button
                                                              class="MuiButtonBase-root MuiIconButton-root MuiPickersDay-day"
                                                              tabindex="0"
                                                              type="button"
                                                            >
                                                              <span
                                                                class="MuiIconButton-label"
                                                              >
                                                                <p
                                                                  class="MuiTypography-root MuiTypography-body2 MuiTypography-colorInherit"
                                                                >
                                                                  11
                                                                </p>
                                                              </span>
                                                              <span
                                                                class="MuiTouchRipple-root"
                                                              />
                                                            </button>
                                                          </div>
                                                          <div
                                                            role="presentation"
                                                          >
                                                            <button
                                                              class="MuiButtonBase-root MuiIconButton-root MuiPickersDay-day"
                                                              tabindex="0"
                                                              type="button"
                                                            >
                                                              <span
                                                                class="MuiIconButton-label"
                                                              >
                                                                <p
                                                                  class="MuiTypography-root MuiTypography-body2 MuiTypography-colorInherit"
                                                                >
                                                                  12
                                                                </p>
                                                              </span>
                                                              <span
                                                                class="MuiTouchRipple-root"
                                                              />
                                                            </button>
                                                          </div>
                                                          <div
                                                            role="presentation"
                                                          >
                                                            <button
                                                              class="MuiButtonBase-root MuiIconButton-root MuiPickersDay-day"
                                                              tabindex="0"
                                                              type="button"
                                                            >
                                                              <span
                                                                class="MuiIconButton-label"
                                                              >
                                                                <p
                                                                  class="MuiTypography-root MuiTypography-body2 MuiTypography-colorInherit"
                                                                >
                                                                  13
                                                                </p>
                                                              </span>
                                                              <span
                                                                class="MuiTouchRipple-root"
                                                              />
                                                            </button>
                                                          </div>
                                                          <div
                                                            role="presentation"
                                                          >
                                                            <button
                                                              class="MuiButtonBase-root MuiIconButton-root MuiPickersDay-day"
                                                              tabindex="0"
                                                              type="button"
                                                            >
                                                              <span
                                                                class="MuiIconButton-label"
                                                              >
                                                                <p
                                                                  class="MuiTypography-root MuiTypography-body2 MuiTypography-colorInherit"
                                                                >
                                                                  14
                                                                </p>
                                                              </span>
                                                              <span
                                                                class="MuiTouchRipple-root"
                                                              />
                                                            </button>
                                                          </div>
                                                          <div
                                                            role="presentation"
                                                          >
                                                            <button
                                                              class="MuiButtonBase-root MuiIconButton-root MuiPickersDay-day"
                                                              tabindex="0"
                                                              type="button"
                                                            >
                                                              <span
                                                                class="MuiIconButton-label"
                                                              >
                                                                <p
                                                                  class="MuiTypography-root MuiTypography-body2 MuiTypography-colorInherit"
                                                                >
                                                                  15
                                                                </p>
                                                              </span>
                                                              <span
                                                                class="MuiTouchRipple-root"
                                                              />
                                                            </button>
                                                          </div>
                                                        </div>
                                                        <div
                                                          class="MuiPickersCalendar-week"
                                                        >
                                                          <div
                                                            role="presentation"
                                                          >
                                                            <button
                                                              class="MuiButtonBase-root MuiIconButton-root MuiPickersDay-day"
                                                              tabindex="0"
                                                              type="button"
                                                            >
                                                              <span
                                                                class="MuiIconButton-label"
                                                              >
                                                                <p
                                                                  class="MuiTypography-root MuiTypography-body2 MuiTypography-colorInherit"
                                                                >
                                                                  16
                                                                </p>
                                                              </span>
                                                              <span
                                                                class="MuiTouchRipple-root"
                                                              />
                                                            </button>
                                                          </div>
                                                          <div
                                                            role="presentation"
                                                          >
                                                            <button
                                                              class="MuiButtonBase-root MuiIconButton-root MuiPickersDay-day"
                                                              tabindex="0"
                                                              type="button"
                                                            >
                                                              <span
                                                                class="MuiIconButton-label"
                                                              >
                                                                <p
                                                                  class="MuiTypography-root MuiTypography-body2 MuiTypography-colorInherit"
                                                                >
                                                                  17
                                                                </p>
                                                              </span>
                                                              <span
                                                                class="MuiTouchRipple-root"
                                                              />
                                                            </button>
                                                          </div>
                                                          <div
                                                            role="presentation"
                                                          >
                                                            <button
                                                              class="MuiButtonBase-root MuiIconButton-root MuiPickersDay-day"
                                                              tabindex="0"
                                                              type="button"
                                                            >
                                                              <span
                                                                class="MuiIconButton-label"
                                                              >
                                                                <p
                                                                  class="MuiTypography-root MuiTypography-body2 MuiTypography-colorInherit"
                                                                >
                                                                  18
                                                                </p>
                                                              </span>
                                                              <span
                                                                class="MuiTouchRipple-root"
                                                              />
                                                            </button>
                                                          </div>
                                                          <div
                                                            role="presentation"
                                                          >
                                                            <button
                                                              class="MuiButtonBase-root MuiIconButton-root MuiPickersDay-day"
                                                              tabindex="0"
                                                              type="button"
                                                            >
                                                              <span
                                                                class="MuiIconButton-label"
                                                              >
                                                                <p
                                                                  class="MuiTypography-root MuiTypography-body2 MuiTypography-colorInherit"
                                                                >
                                                                  19
                                                                </p>
                                                              </span>
                                                              <span
                                                                class="MuiTouchRipple-root"
                                                              />
                                                            </button>
                                                          </div>
                                                          <div
                                                            role="presentation"
                                                          >
                                                            <button
                                                              class="MuiButtonBase-root MuiIconButton-root MuiPickersDay-day"
                                                              tabindex="0"
                                                              type="button"
                                                            >
                                                              <span
                                                                class="MuiIconButton-label"
                                                              >
                                                                <p
                                                                  class="MuiTypography-root MuiTypography-body2 MuiTypography-colorInherit"
                                                                >
                                                                  20
                                                                </p>
                                                              </span>
                                                              <span
                                                                class="MuiTouchRipple-root"
                                                              />
                                                            </button>
                                                          </div>
                                                          <div
                                                            role="presentation"
                                                          >
                                                            <button
                                                              class="MuiButtonBase-root MuiIconButton-root MuiPickersDay-day"
                                                              tabindex="0"
                                                              type="button"
                                                            >
                                                              <span
                                                                class="MuiIconButton-label"
                                                              >
                                                                <p
                                                                  class="MuiTypography-root MuiTypography-body2 MuiTypography-colorInherit"
                                                                >
                                                                  21
                                                                </p>
                                                              </span>
                                                              <span
                                                                class="MuiTouchRipple-root"
                                                              />
                                                            </button>
                                                          </div>
                                                          <div
                                                            role="presentation"
                                                          >
                                                            <button
                                                              class="MuiButtonBase-root MuiIconButton-root MuiPickersDay-day"
                                                              tabindex="0"
                                                              type="button"
                                                            >
                                                              <span
                                                                class="MuiIconButton-label"
                                                              >
                                                                <p
                                                                  class="MuiTypography-root MuiTypography-body2 MuiTypography-colorInherit"
                                                                >
                                                                  22
                                                                </p>
                                                              </span>
                                                              <span
                                                                class="MuiTouchRipple-root"
                                                              />
                                                            </button>
                                                          </div>
                                                        </div>
                                                        <div
                                                          class="MuiPickersCalendar-week"
                                                        >
                                                          <div
                                                            role="presentation"
                                                          >
                                                            <button
                                                              class="MuiButtonBase-root MuiIconButton-root MuiPickersDay-day"
                                                              tabindex="0"
                                                              type="button"
                                                            >
                                                              <span
                                                                class="MuiIconButton-label"
                                                              >
                                                                <p
                                                                  class="MuiTypography-root MuiTypography-body2 MuiTypography-colorInherit"
                                                                >
                                                                  23
                                                                </p>
                                                              </span>
                                                              <span
                                                                class="MuiTouchRipple-root"
                                                              />
                                                            </button>
                                                          </div>
                                                          <div
                                                            role="presentation"
                                                          >
                                                            <button
                                                              class="MuiButtonBase-root MuiIconButton-root MuiPickersDay-day"
                                                              tabindex="0"
                                                              type="button"
                                                            >
                                                              <span
                                                                class="MuiIconButton-label"
                                                              >
                                                                <p
                                                                  class="MuiTypography-root MuiTypography-body2 MuiTypography-colorInherit"
                                                                >
                                                                  24
                                                                </p>
                                                              </span>
                                                              <span
                                                                class="MuiTouchRipple-root"
                                                              />
                                                            </button>
                                                          </div>
                                                          <div
                                                            role="presentation"
                                                          >
                                                            <button
                                                              class="MuiButtonBase-root MuiIconButton-root MuiPickersDay-day"
                                                              tabindex="0"
                                                              type="button"
                                                            >
                                                              <span
                                                                class="MuiIconButton-label"
                                                              >
                                                                <p
                                                                  class="MuiTypography-root MuiTypography-body2 MuiTypography-colorInherit"
                                                                >
                                                                  25
                                                                </p>
                                                              </span>
                                                              <span
                                                                class="MuiTouchRipple-root"
                                                              />
                                                            </button>
                                                          </div>
                                                          <div
                                                            role="presentation"
                                                          >
                                                            <button
                                                              class="MuiButtonBase-root MuiIconButton-root MuiPickersDay-day"
                                                              tabindex="0"
                                                              type="button"
                                                            >
                                                              <span
                                                                class="MuiIconButton-label"
                                                              >
                                                                <p
                                                                  class="MuiTypography-root MuiTypography-body2 MuiTypography-colorInherit"
                                                                >
                                                                  26
                                                                </p>
                                                              </span>
                                                              <span
                                                                class="MuiTouchRipple-root"
                                                              />
                                                            </button>
                                                          </div>
                                                          <div
                                                            role="presentation"
                                                          >
                                                            <button
                                                              class="MuiButtonBase-root MuiIconButton-root MuiPickersDay-day"
                                                              tabindex="0"
                                                              type="button"
                                                            >
                                                              <span
                                                                class="MuiIconButton-label"
                                                              >
                                                                <p
                                                                  class="MuiTypography-root MuiTypography-body2 MuiTypography-colorInherit"
                                                                >
                                                                  27
                                                                </p>
                                                              </span>
                                                              <span
                                                                class="MuiTouchRipple-root"
                                                              />
                                                            </button>
                                                          </div>
                                                          <div
                                                            role="presentation"
                                                          >
                                                            <button
                                                              class="MuiButtonBase-root MuiIconButton-root MuiPickersDay-day"
                                                              tabindex="0"
                                                              type="button"
                                                            >
                                                              <span
                                                                class="MuiIconButton-label"
                                                              >
                                                                <p
                                                                  class="MuiTypography-root MuiTypography-body2 MuiTypography-colorInherit"
                                                                >
                                                                  28
                                                                </p>
                                                              </span>
                                                              <span
                                                                class="MuiTouchRipple-root"
                                                              />
                                                            </button>
                                                          </div>
                                                          <div
                                                            role="presentation"
                                                          >
                                                            <button
                                                              class="MuiButtonBase-root MuiIconButton-root MuiPickersDay-day"
                                                              tabindex="0"
                                                              type="button"
                                                            >
                                                              <span
                                                                class="MuiIconButton-label"
                                                              >
                                                                <p
                                                                  class="MuiTypography-root MuiTypography-body2 MuiTypography-colorInherit"
                                                                >
                                                                  29
                                                                </p>
                                                              </span>
                                                              <span
                                                                class="MuiTouchRipple-root"
                                                              />
                                                            </button>
                                                          </div>
                                                        </div>
                                                      </div>
                                                    </div>
                                                  </div>
                                                </div>
                                              </div>
                                              <div
                                                class="MuiDialogActions-root MuiDialogActions-spacing"
                                              >
                                                <button
                                                  class="MuiButtonBase-root MuiButton-root MuiButton-text MuiButton-textPrimary"
                                                  tabindex="0"
                                                  type="button"
                                                >
                                                  <span
                                                    class="MuiButton-label"
                                                  >
                                                    Cancel
                                                  </span>
                                                  <span
                                                    class="MuiTouchRipple-root"
                                                  />
                                                </button>
                                                <button
                                                  class="MuiButtonBase-root MuiButton-root MuiButton-text MuiButton-textPrimary"
                                                  tabindex="0"
                                                  type="button"
                                                >
                                                  <span
                                                    class="MuiButton-label"
                                                  >
                                                    OK
                                                  </span>
                                                  <span
                                                    class="MuiTouchRipple-root"
                                                  />
                                                </button>
                                              </div>
                                            </div>
                                          </div>
                                          <div
                                            data-test="sentinelEnd"
                                            tabindex="0"
                                          />
                                        </div>
                                      </body>
                                    }
                                  >
                                    <div
                                      className="MuiDialog-root"
                                      onKeyDown={[Function]}
                                      role="dialog"
                                      style={
                                        Object {
                                          "bottom": 0,
                                          "left": 0,
                                          "position": "fixed",
                                          "right": 0,
                                          "top": 0,
                                          "zIndex": 1300,
                                        }
                                      }
                                    >
                                      <WithStyles(ForwardRef(Backdrop))
                                        onClick={[Function]}
                                        open={true}
                                        transitionDuration={
                                          Object {
                                            "enter": 225,
                                            "exit": 195,
                                          }
                                        }
                                      >
                                        <ForwardRef(Backdrop)
                                          classes={
                                            Object {
                                              "invisible": "MuiBackdrop-invisible",
                                              "root": "MuiBackdrop-root",
                                            }
                                          }
                                          onClick={[Function]}
                                          open={true}
                                          transitionDuration={
                                            Object {
                                              "enter": 225,
                                              "exit": 195,
                                            }
                                          }
                                        >
                                          <ForwardRef(Fade)
                                            in={true}
                                            onClick={[Function]}
                                            timeout={
                                              Object {
                                                "enter": 225,
                                                "exit": 195,
                                              }
                                            }
                                          >
                                            <Transition
                                              appear={true}
                                              enter={true}
                                              exit={true}
                                              in={true}
                                              mountOnEnter={false}
                                              onClick={[Function]}
                                              onEnter={[Function]}
                                              onEntered={[Function]}
                                              onEntering={[Function]}
                                              onExit={[Function]}
                                              onExited={[Function]}
                                              onExiting={[Function]}
                                              timeout={
                                                Object {
                                                  "enter": 225,
                                                  "exit": 195,
                                                }
                                              }
                                              unmountOnExit={false}
                                            >
                                              <div
                                                aria-hidden={true}
                                                className="MuiBackdrop-root"
                                                onClick={[Function]}
                                                style={
                                                  Object {
                                                    "opacity": 1,
                                                    "visibility": undefined,
                                                  }
                                                }
                                              />
                                            </Transition>
                                          </ForwardRef(Fade)>
                                        </ForwardRef(Backdrop)>
                                      </WithStyles(ForwardRef(Backdrop))>
                                      <TrapFocus
                                        disableAutoFocus={false}
                                        disableEnforceFocus={false}
                                        disableRestoreFocus={false}
                                        getDoc={[Function]}
                                        isEnabled={[Function]}
                                        open={true}
                                      >
                                        <div
                                          data-test="sentinelStart"
                                          tabIndex={0}
                                        />
                                        <ForwardRef(Fade)
                                          appear={true}
                                          in={true}
                                          onEnter={[Function]}
                                          onExited={[Function]}
                                          role="none presentation"
                                          tabIndex="-1"
                                          timeout={
                                            Object {
                                              "enter": 225,
                                              "exit": 195,
                                            }
                                          }
                                        >
                                          <Transition
                                            appear={true}
                                            enter={true}
                                            exit={true}
                                            in={true}
                                            mountOnEnter={false}
                                            onEnter={[Function]}
                                            onEntered={[Function]}
                                            onEntering={[Function]}
                                            onExit={[Function]}
                                            onExited={[Function]}
                                            onExiting={[Function]}
                                            role="none presentation"
                                            tabIndex="-1"
                                            timeout={
                                              Object {
                                                "enter": 225,
                                                "exit": 195,
                                              }
                                            }
                                            unmountOnExit={false}
                                          >
                                            <div
                                              className="MuiDialog-container MuiDialog-scrollPaper"
                                              onClick={[Function]}
                                              onMouseDown={[Function]}
                                              role="none presentation"
                                              style={
                                                Object {
                                                  "opacity": 1,
                                                  "visibility": undefined,
                                                }
                                              }
                                              tabIndex="-1"
                                            >
                                              <WithStyles(ForwardRef(Paper))
                                                className="MuiDialog-paper MuiPickersModal-dialogRoot MuiDialog-paperScrollPaper MuiDialog-paperWidthSm"
                                                elevation={24}
                                                role="dialog"
                                              >
                                                <ForwardRef(Paper)
                                                  className="MuiDialog-paper MuiPickersModal-dialogRoot MuiDialog-paperScrollPaper MuiDialog-paperWidthSm"
                                                  classes={
                                                    Object {
                                                      "elevation0": "MuiPaper-elevation0",
                                                      "elevation1": "MuiPaper-elevation1",
                                                      "elevation10": "MuiPaper-elevation10",
                                                      "elevation11": "MuiPaper-elevation11",
                                                      "elevation12": "MuiPaper-elevation12",
                                                      "elevation13": "MuiPaper-elevation13",
                                                      "elevation14": "MuiPaper-elevation14",
                                                      "elevation15": "MuiPaper-elevation15",
                                                      "elevation16": "MuiPaper-elevation16",
                                                      "elevation17": "MuiPaper-elevation17",
                                                      "elevation18": "MuiPaper-elevation18",
                                                      "elevation19": "MuiPaper-elevation19",
                                                      "elevation2": "MuiPaper-elevation2",
                                                      "elevation20": "MuiPaper-elevation20",
                                                      "elevation21": "MuiPaper-elevation21",
                                                      "elevation22": "MuiPaper-elevation22",
                                                      "elevation23": "MuiPaper-elevation23",
                                                      "elevation24": "MuiPaper-elevation24",
                                                      "elevation3": "MuiPaper-elevation3",
                                                      "elevation4": "MuiPaper-elevation4",
                                                      "elevation5": "MuiPaper-elevation5",
                                                      "elevation6": "MuiPaper-elevation6",
                                                      "elevation7": "MuiPaper-elevation7",
                                                      "elevation8": "MuiPaper-elevation8",
                                                      "elevation9": "MuiPaper-elevation9",
                                                      "outlined": "MuiPaper-outlined",
                                                      "root": "MuiPaper-root",
                                                      "rounded": "MuiPaper-rounded",
                                                    }
                                                  }
                                                  elevation={24}
                                                  role="dialog"
                                                >
                                                  <div
                                                    className="MuiPaper-root MuiDialog-paper MuiPickersModal-dialogRoot MuiDialog-paperScrollPaper MuiDialog-paperWidthSm MuiPaper-elevation24 MuiPaper-rounded"
                                                    role="dialog"
                                                  >
                                                    <WithStyles(ForwardRef(DialogContent))
                                                      className="MuiPickersModal-dialog"
                                                    >
                                                      <ForwardRef(DialogContent)
                                                        className="MuiPickersModal-dialog"
                                                        classes={
                                                          Object {
                                                            "dividers": "MuiDialogContent-dividers",
                                                            "root": "MuiDialogContent-root",
                                                          }
                                                        }
                                                      >
                                                        <div
                                                          className="MuiDialogContent-root MuiPickersModal-dialog"
                                                        >
                                                          <Component
                                                            ToolbarComponent={[Function]}
                                                            allowKeyboardControl={true}
                                                            date={2020-02-01T03:00:00.000Z}
                                                            invalidDateMessage="Invalid Date Format"
                                                            maxDate={2100-01-01T00:00:00.000Z}
                                                            maxDateMessage="Date should not be after maximal date"
                                                            minDate={1900-01-01T00:00:00.000Z}
                                                            minDateMessage="Date should not be before minimal date"
                                                            onChange={[Function]}
                                                            openTo="date"
                                                            views={
                                                              Array [
                                                                "year",
                                                                "date",
                                                              ]
                                                            }
                                                          >
                                                            <div
                                                              className="MuiPickersBasePicker-container"
                                                            >
                                                              <Component
                                                                allowKeyboardControl={true}
                                                                date={2020-02-01T03:00:00.000Z}
                                                                invalidDateMessage="Invalid Date Format"
                                                                isLandscape={false}
                                                                maxDateMessage="Date should not be after maximal date"
                                                                minDateMessage="Date should not be before minimal date"
                                                                onChange={[Function]}
                                                                openView="date"
                                                                setOpenView={[Function]}
                                                                views={
                                                                  Array [
                                                                    "year",
                                                                    "date",
                                                                  ]
                                                                }
                                                              >
                                                                <PickerToolbar
                                                                  className="MuiPickersDatePickerRoot-toolbar"
                                                                  isLandscape={false}
                                                                >
                                                                  <WithStyles(ForwardRef(Toolbar))
                                                                    className="MuiPickersToolbar-toolbar MuiPickersDatePickerRoot-toolbar"
                                                                  >
                                                                    <ForwardRef(Toolbar)
                                                                      className="MuiPickersToolbar-toolbar MuiPickersDatePickerRoot-toolbar"
                                                                      classes={
                                                                        Object {
                                                                          "dense": "MuiToolbar-dense",
                                                                          "gutters": "MuiToolbar-gutters",
                                                                          "regular": "MuiToolbar-regular",
                                                                          "root": "MuiToolbar-root",
                                                                        }
                                                                      }
                                                                    >
                                                                      <div
                                                                        className="MuiToolbar-root MuiToolbar-regular MuiPickersToolbar-toolbar MuiPickersDatePickerRoot-toolbar MuiToolbar-gutters"
                                                                      >
                                                                        <WithStyles(ToolbarButton)
                                                                          label="2020"
                                                                          onClick={[Function]}
                                                                          selected={false}
                                                                          variant="subtitle1"
                                                                        >
                                                                          <ToolbarButton
                                                                            className=""
                                                                            classes={
                                                                              Object {
                                                                                "toolbarBtn": "MuiPickersToolbarButton-toolbarBtn",
                                                                              }
                                                                            }
                                                                            label="2020"
                                                                            onClick={[Function]}
                                                                            selected={false}
                                                                            variant="subtitle1"
                                                                          >
                                                                            <WithStyles(ForwardRef(Button))
                                                                              className="MuiPickersToolbarButton-toolbarBtn"
                                                                              onClick={[Function]}
                                                                              variant="text"
                                                                            >
                                                                              <ForwardRef(Button)
                                                                                className="MuiPickersToolbarButton-toolbarBtn"
                                                                                classes={
                                                                                  Object {
                                                                                    "colorInherit": "MuiButton-colorInherit",
                                                                                    "contained": "MuiButton-contained",
                                                                                    "containedPrimary": "MuiButton-containedPrimary",
                                                                                    "containedSecondary": "MuiButton-containedSecondary",
                                                                                    "containedSizeLarge": "MuiButton-containedSizeLarge",
                                                                                    "containedSizeSmall": "MuiButton-containedSizeSmall",
                                                                                    "disableElevation": "MuiButton-disableElevation",
                                                                                    "disabled": "Mui-disabled",
                                                                                    "endIcon": "MuiButton-endIcon",
                                                                                    "focusVisible": "Mui-focusVisible",
                                                                                    "fullWidth": "MuiButton-fullWidth",
                                                                                    "iconSizeLarge": "MuiButton-iconSizeLarge",
                                                                                    "iconSizeMedium": "MuiButton-iconSizeMedium",
                                                                                    "iconSizeSmall": "MuiButton-iconSizeSmall",
                                                                                    "label": "MuiButton-label",
                                                                                    "outlined": "MuiButton-outlined",
                                                                                    "outlinedPrimary": "MuiButton-outlinedPrimary",
                                                                                    "outlinedSecondary": "MuiButton-outlinedSecondary",
                                                                                    "outlinedSizeLarge": "MuiButton-outlinedSizeLarge",
                                                                                    "outlinedSizeSmall": "MuiButton-outlinedSizeSmall",
                                                                                    "root": "MuiButton-root",
                                                                                    "sizeLarge": "MuiButton-sizeLarge",
                                                                                    "sizeSmall": "MuiButton-sizeSmall",
                                                                                    "startIcon": "MuiButton-startIcon",
                                                                                    "text": "MuiButton-text",
                                                                                    "textPrimary": "MuiButton-textPrimary",
                                                                                    "textSecondary": "MuiButton-textSecondary",
                                                                                    "textSizeLarge": "MuiButton-textSizeLarge",
                                                                                    "textSizeSmall": "MuiButton-textSizeSmall",
                                                                                  }
                                                                                }
                                                                                onClick={[Function]}
                                                                                variant="text"
                                                                              >
                                                                                <WithStyles(ForwardRef(ButtonBase))
                                                                                  className="MuiButton-root MuiButton-text MuiPickersToolbarButton-toolbarBtn"
                                                                                  component="button"
                                                                                  disabled={false}
                                                                                  focusRipple={true}
                                                                                  focusVisibleClassName="Mui-focusVisible"
                                                                                  onClick={[Function]}
                                                                                  type="button"
                                                                                >
                                                                                  <ForwardRef(ButtonBase)
                                                                                    className="MuiButton-root MuiButton-text MuiPickersToolbarButton-toolbarBtn"
                                                                                    classes={
                                                                                      Object {
                                                                                        "disabled": "Mui-disabled",
                                                                                        "focusVisible": "Mui-focusVisible",
                                                                                        "root": "MuiButtonBase-root",
                                                                                      }
                                                                                    }
                                                                                    component="button"
                                                                                    disabled={false}
                                                                                    focusRipple={true}
                                                                                    focusVisibleClassName="Mui-focusVisible"
                                                                                    onClick={[Function]}
                                                                                    type="button"
                                                                                  >
                                                                                    <button
                                                                                      className="MuiButtonBase-root MuiButton-root MuiButton-text MuiPickersToolbarButton-toolbarBtn"
                                                                                      disabled={false}
                                                                                      onBlur={[Function]}
                                                                                      onClick={[Function]}
                                                                                      onDragLeave={[Function]}
                                                                                      onFocus={[Function]}
                                                                                      onKeyDown={[Function]}
                                                                                      onKeyUp={[Function]}
                                                                                      onMouseDown={[Function]}
                                                                                      onMouseLeave={[Function]}
                                                                                      onMouseUp={[Function]}
                                                                                      onTouchEnd={[Function]}
                                                                                      onTouchMove={[Function]}
                                                                                      onTouchStart={[Function]}
                                                                                      tabIndex={0}
                                                                                      type="button"
                                                                                    >
                                                                                      <span
                                                                                        className="MuiButton-label"
                                                                                      >
                                                                                        <ToolbarText
                                                                                          label="2020"
                                                                                          selected={false}
                                                                                          variant="subtitle1"
                                                                                        >
                                                                                          <WithStyles(ForwardRef(Typography))
                                                                                            className="MuiPickersToolbarText-toolbarTxt"
                                                                                            variant="subtitle1"
                                                                                          >
                                                                                            <ForwardRef(Typography)
                                                                                              className="MuiPickersToolbarText-toolbarTxt"
                                                                                              classes={
                                                                                                Object {
                                                                                                  "alignCenter": "MuiTypography-alignCenter",
                                                                                                  "alignJustify": "MuiTypography-alignJustify",
                                                                                                  "alignLeft": "MuiTypography-alignLeft",
                                                                                                  "alignRight": "MuiTypography-alignRight",
                                                                                                  "body1": "MuiTypography-body1",
                                                                                                  "body2": "MuiTypography-body2",
                                                                                                  "button": "MuiTypography-button",
                                                                                                  "caption": "MuiTypography-caption",
                                                                                                  "colorError": "MuiTypography-colorError",
                                                                                                  "colorInherit": "MuiTypography-colorInherit",
                                                                                                  "colorPrimary": "MuiTypography-colorPrimary",
                                                                                                  "colorSecondary": "MuiTypography-colorSecondary",
                                                                                                  "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                                                  "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                                                  "displayBlock": "MuiTypography-displayBlock",
                                                                                                  "displayInline": "MuiTypography-displayInline",
                                                                                                  "gutterBottom": "MuiTypography-gutterBottom",
                                                                                                  "h1": "MuiTypography-h1",
                                                                                                  "h2": "MuiTypography-h2",
                                                                                                  "h3": "MuiTypography-h3",
                                                                                                  "h4": "MuiTypography-h4",
                                                                                                  "h5": "MuiTypography-h5",
                                                                                                  "h6": "MuiTypography-h6",
                                                                                                  "noWrap": "MuiTypography-noWrap",
                                                                                                  "overline": "MuiTypography-overline",
                                                                                                  "paragraph": "MuiTypography-paragraph",
                                                                                                  "root": "MuiTypography-root",
                                                                                                  "srOnly": "MuiTypography-srOnly",
                                                                                                  "subtitle1": "MuiTypography-subtitle1",
                                                                                                  "subtitle2": "MuiTypography-subtitle2",
                                                                                                }
                                                                                              }
                                                                                              variant="subtitle1"
                                                                                            >
                                                                                              <h6
                                                                                                className="MuiTypography-root MuiPickersToolbarText-toolbarTxt MuiTypography-subtitle1"
                                                                                              >
                                                                                                2020
                                                                                              </h6>
                                                                                            </ForwardRef(Typography)>
                                                                                          </WithStyles(ForwardRef(Typography))>
                                                                                        </ToolbarText>
                                                                                      </span>
                                                                                      <NoSsr>
                                                                                        <WithStyles(memo)
                                                                                          center={false}
                                                                                        >
                                                                                          <ForwardRef(TouchRipple)
                                                                                            center={false}
                                                                                            classes={
                                                                                              Object {
                                                                                                "child": "MuiTouchRipple-child",
                                                                                                "childLeaving": "MuiTouchRipple-childLeaving",
                                                                                                "childPulsate": "MuiTouchRipple-childPulsate",
                                                                                                "ripple": "MuiTouchRipple-ripple",
                                                                                                "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                                                "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                                                "root": "MuiTouchRipple-root",
                                                                                              }
                                                                                            }
                                                                                          >
                                                                                            <span
                                                                                              className="MuiTouchRipple-root"
                                                                                            >
                                                                                              <TransitionGroup
                                                                                                childFactory={[Function]}
                                                                                                component={null}
                                                                                                exit={true}
                                                                                              />
                                                                                            </span>
                                                                                          </ForwardRef(TouchRipple)>
                                                                                        </WithStyles(memo)>
                                                                                      </NoSsr>
                                                                                    </button>
                                                                                  </ForwardRef(ButtonBase)>
                                                                                </WithStyles(ForwardRef(ButtonBase))>
                                                                              </ForwardRef(Button)>
                                                                            </WithStyles(ForwardRef(Button))>
                                                                          </ToolbarButton>
                                                                        </WithStyles(ToolbarButton)>
                                                                        <WithStyles(ToolbarButton)
                                                                          align="center"
                                                                          className=""
                                                                          label="Sat, Feb 1"
                                                                          onClick={[Function]}
                                                                          selected={true}
                                                                          variant="h4"
                                                                        >
                                                                          <ToolbarButton
                                                                            align="center"
                                                                            className=""
                                                                            classes={
                                                                              Object {
                                                                                "toolbarBtn": "MuiPickersToolbarButton-toolbarBtn",
                                                                              }
                                                                            }
                                                                            label="Sat, Feb 1"
                                                                            onClick={[Function]}
                                                                            selected={true}
                                                                            variant="h4"
                                                                          >
                                                                            <WithStyles(ForwardRef(Button))
                                                                              className="MuiPickersToolbarButton-toolbarBtn"
                                                                              onClick={[Function]}
                                                                              variant="text"
                                                                            >
                                                                              <ForwardRef(Button)
                                                                                className="MuiPickersToolbarButton-toolbarBtn"
                                                                                classes={
                                                                                  Object {
                                                                                    "colorInherit": "MuiButton-colorInherit",
                                                                                    "contained": "MuiButton-contained",
                                                                                    "containedPrimary": "MuiButton-containedPrimary",
                                                                                    "containedSecondary": "MuiButton-containedSecondary",
                                                                                    "containedSizeLarge": "MuiButton-containedSizeLarge",
                                                                                    "containedSizeSmall": "MuiButton-containedSizeSmall",
                                                                                    "disableElevation": "MuiButton-disableElevation",
                                                                                    "disabled": "Mui-disabled",
                                                                                    "endIcon": "MuiButton-endIcon",
                                                                                    "focusVisible": "Mui-focusVisible",
                                                                                    "fullWidth": "MuiButton-fullWidth",
                                                                                    "iconSizeLarge": "MuiButton-iconSizeLarge",
                                                                                    "iconSizeMedium": "MuiButton-iconSizeMedium",
                                                                                    "iconSizeSmall": "MuiButton-iconSizeSmall",
                                                                                    "label": "MuiButton-label",
                                                                                    "outlined": "MuiButton-outlined",
                                                                                    "outlinedPrimary": "MuiButton-outlinedPrimary",
                                                                                    "outlinedSecondary": "MuiButton-outlinedSecondary",
                                                                                    "outlinedSizeLarge": "MuiButton-outlinedSizeLarge",
                                                                                    "outlinedSizeSmall": "MuiButton-outlinedSizeSmall",
                                                                                    "root": "MuiButton-root",
                                                                                    "sizeLarge": "MuiButton-sizeLarge",
                                                                                    "sizeSmall": "MuiButton-sizeSmall",
                                                                                    "startIcon": "MuiButton-startIcon",
                                                                                    "text": "MuiButton-text",
                                                                                    "textPrimary": "MuiButton-textPrimary",
                                                                                    "textSecondary": "MuiButton-textSecondary",
                                                                                    "textSizeLarge": "MuiButton-textSizeLarge",
                                                                                    "textSizeSmall": "MuiButton-textSizeSmall",
                                                                                  }
                                                                                }
                                                                                onClick={[Function]}
                                                                                variant="text"
                                                                              >
                                                                                <WithStyles(ForwardRef(ButtonBase))
                                                                                  className="MuiButton-root MuiButton-text MuiPickersToolbarButton-toolbarBtn"
                                                                                  component="button"
                                                                                  disabled={false}
                                                                                  focusRipple={true}
                                                                                  focusVisibleClassName="Mui-focusVisible"
                                                                                  onClick={[Function]}
                                                                                  type="button"
                                                                                >
                                                                                  <ForwardRef(ButtonBase)
                                                                                    className="MuiButton-root MuiButton-text MuiPickersToolbarButton-toolbarBtn"
                                                                                    classes={
                                                                                      Object {
                                                                                        "disabled": "Mui-disabled",
                                                                                        "focusVisible": "Mui-focusVisible",
                                                                                        "root": "MuiButtonBase-root",
                                                                                      }
                                                                                    }
                                                                                    component="button"
                                                                                    disabled={false}
                                                                                    focusRipple={true}
                                                                                    focusVisibleClassName="Mui-focusVisible"
                                                                                    onClick={[Function]}
                                                                                    type="button"
                                                                                  >
                                                                                    <button
                                                                                      className="MuiButtonBase-root MuiButton-root MuiButton-text MuiPickersToolbarButton-toolbarBtn"
                                                                                      disabled={false}
                                                                                      onBlur={[Function]}
                                                                                      onClick={[Function]}
                                                                                      onDragLeave={[Function]}
                                                                                      onFocus={[Function]}
                                                                                      onKeyDown={[Function]}
                                                                                      onKeyUp={[Function]}
                                                                                      onMouseDown={[Function]}
                                                                                      onMouseLeave={[Function]}
                                                                                      onMouseUp={[Function]}
                                                                                      onTouchEnd={[Function]}
                                                                                      onTouchMove={[Function]}
                                                                                      onTouchStart={[Function]}
                                                                                      tabIndex={0}
                                                                                      type="button"
                                                                                    >
                                                                                      <span
                                                                                        className="MuiButton-label"
                                                                                      >
                                                                                        <ToolbarText
                                                                                          align="center"
                                                                                          label="Sat, Feb 1"
                                                                                          selected={true}
                                                                                          variant="h4"
                                                                                        >
                                                                                          <WithStyles(ForwardRef(Typography))
                                                                                            align="center"
                                                                                            className="MuiPickersToolbarText-toolbarTxt MuiPickersToolbarText-toolbarBtnSelected"
                                                                                            variant="h4"
                                                                                          >
                                                                                            <ForwardRef(Typography)
                                                                                              align="center"
                                                                                              className="MuiPickersToolbarText-toolbarTxt MuiPickersToolbarText-toolbarBtnSelected"
                                                                                              classes={
                                                                                                Object {
                                                                                                  "alignCenter": "MuiTypography-alignCenter",
                                                                                                  "alignJustify": "MuiTypography-alignJustify",
                                                                                                  "alignLeft": "MuiTypography-alignLeft",
                                                                                                  "alignRight": "MuiTypography-alignRight",
                                                                                                  "body1": "MuiTypography-body1",
                                                                                                  "body2": "MuiTypography-body2",
                                                                                                  "button": "MuiTypography-button",
                                                                                                  "caption": "MuiTypography-caption",
                                                                                                  "colorError": "MuiTypography-colorError",
                                                                                                  "colorInherit": "MuiTypography-colorInherit",
                                                                                                  "colorPrimary": "MuiTypography-colorPrimary",
                                                                                                  "colorSecondary": "MuiTypography-colorSecondary",
                                                                                                  "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                                                  "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                                                  "displayBlock": "MuiTypography-displayBlock",
                                                                                                  "displayInline": "MuiTypography-displayInline",
                                                                                                  "gutterBottom": "MuiTypography-gutterBottom",
                                                                                                  "h1": "MuiTypography-h1",
                                                                                                  "h2": "MuiTypography-h2",
                                                                                                  "h3": "MuiTypography-h3",
                                                                                                  "h4": "MuiTypography-h4",
                                                                                                  "h5": "MuiTypography-h5",
                                                                                                  "h6": "MuiTypography-h6",
                                                                                                  "noWrap": "MuiTypography-noWrap",
                                                                                                  "overline": "MuiTypography-overline",
                                                                                                  "paragraph": "MuiTypography-paragraph",
                                                                                                  "root": "MuiTypography-root",
                                                                                                  "srOnly": "MuiTypography-srOnly",
                                                                                                  "subtitle1": "MuiTypography-subtitle1",
                                                                                                  "subtitle2": "MuiTypography-subtitle2",
                                                                                                }
                                                                                              }
                                                                                              variant="h4"
                                                                                            >
                                                                                              <h4
                                                                                                className="MuiTypography-root MuiPickersToolbarText-toolbarTxt MuiPickersToolbarText-toolbarBtnSelected MuiTypography-h4 MuiTypography-alignCenter"
                                                                                              >
                                                                                                Sat, Feb 1
                                                                                              </h4>
                                                                                            </ForwardRef(Typography)>
                                                                                          </WithStyles(ForwardRef(Typography))>
                                                                                        </ToolbarText>
                                                                                      </span>
                                                                                      <NoSsr>
                                                                                        <WithStyles(memo)
                                                                                          center={false}
                                                                                        >
                                                                                          <ForwardRef(TouchRipple)
                                                                                            center={false}
                                                                                            classes={
                                                                                              Object {
                                                                                                "child": "MuiTouchRipple-child",
                                                                                                "childLeaving": "MuiTouchRipple-childLeaving",
                                                                                                "childPulsate": "MuiTouchRipple-childPulsate",
                                                                                                "ripple": "MuiTouchRipple-ripple",
                                                                                                "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                                                "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                                                "root": "MuiTouchRipple-root",
                                                                                              }
                                                                                            }
                                                                                          >
                                                                                            <span
                                                                                              className="MuiTouchRipple-root"
                                                                                            >
                                                                                              <TransitionGroup
                                                                                                childFactory={[Function]}
                                                                                                component={null}
                                                                                                exit={true}
                                                                                              />
                                                                                            </span>
                                                                                          </ForwardRef(TouchRipple)>
                                                                                        </WithStyles(memo)>
                                                                                      </NoSsr>
                                                                                    </button>
                                                                                  </ForwardRef(ButtonBase)>
                                                                                </WithStyles(ForwardRef(ButtonBase))>
                                                                              </ForwardRef(Button)>
                                                                            </WithStyles(ForwardRef(Button))>
                                                                          </ToolbarButton>
                                                                        </WithStyles(ToolbarButton)>
                                                                      </div>
                                                                    </ForwardRef(Toolbar)>
                                                                  </WithStyles(ForwardRef(Toolbar))>
                                                                </PickerToolbar>
                                                              </Component>
                                                              <div
                                                                className="MuiPickersBasePicker-pickerView"
                                                              >
                                                                <WithStyles(WithUtils(Calendar))
                                                                  allowKeyboardControl={true}
                                                                  date={2020-02-01T03:00:00.000Z}
                                                                  invalidDateMessage="Invalid Date Format"
                                                                  maxDate={2100-01-01T00:00:00.000Z}
                                                                  maxDateMessage="Date should not be after maximal date"
                                                                  minDate={1900-01-01T00:00:00.000Z}
                                                                  minDateMessage="Date should not be before minimal date"
                                                                  onChange={[Function]}
                                                                >
                                                                  <WithUtils(Calendar)
                                                                    allowKeyboardControl={true}
                                                                    classes={
                                                                      Object {
                                                                        "progressContainer": "MuiPickersCalendar-progressContainer",
                                                                        "transitionContainer": "MuiPickersCalendar-transitionContainer",
                                                                        "week": "MuiPickersCalendar-week",
                                                                      }
                                                                    }
                                                                    date={2020-02-01T03:00:00.000Z}
                                                                    invalidDateMessage="Invalid Date Format"
                                                                    maxDate={2100-01-01T00:00:00.000Z}
                                                                    maxDateMessage="Date should not be after maximal date"
                                                                    minDate={1900-01-01T00:00:00.000Z}
                                                                    minDateMessage="Date should not be before minimal date"
                                                                    onChange={[Function]}
                                                                    theme={
                                                                      Object {
                                                                        "breakpoints": Object {
                                                                          "between": [Function],
                                                                          "down": [Function],
                                                                          "keys": Array [
                                                                            "xs",
                                                                            "sm",
                                                                            "md",
                                                                            "lg",
                                                                            "xl",
                                                                          ],
                                                                          "only": [Function],
                                                                          "up": [Function],
                                                                          "values": Object {
                                                                            "lg": 1280,
                                                                            "md": 960,
                                                                            "sm": 600,
                                                                            "xl": 1920,
                                                                            "xs": 0,
                                                                          },
                                                                          "width": [Function],
                                                                        },
                                                                        "direction": "ltr",
                                                                        "mixins": Object {
                                                                          "gutters": [Function],
                                                                          "toolbar": Object {
                                                                            "@media (min-width:0px) and (orientation: landscape)": Object {
                                                                              "minHeight": 48,
                                                                            },
                                                                            "@media (min-width:600px)": Object {
                                                                              "minHeight": 64,
                                                                            },
                                                                            "minHeight": 56,
                                                                          },
                                                                        },
                                                                        "overrides": Object {},
                                                                        "palette": Object {
                                                                          "action": Object {
                                                                            "active": "rgba(0, 0, 0, 0.54)",
                                                                            "disabled": "rgba(0, 0, 0, 0.26)",
                                                                            "disabledBackground": "rgba(0, 0, 0, 0.12)",
                                                                            "hover": "rgba(0, 0, 0, 0.08)",
                                                                            "hoverOpacity": 0.08,
                                                                            "selected": "rgba(0, 0, 0, 0.14)",
                                                                          },
                                                                          "augmentColor": [Function],
                                                                          "background": Object {
                                                                            "default": "#fafafa",
                                                                            "paper": "#fff",
                                                                          },
                                                                          "common": Object {
                                                                            "black": "#000",
                                                                            "white": "#fff",
                                                                          },
                                                                          "contrastThreshold": 3,
                                                                          "divider": "rgba(0, 0, 0, 0.12)",
                                                                          "error": Object {
                                                                            "contrastText": "#fff",
                                                                            "dark": "#d32f2f",
                                                                            "light": "#e57373",
                                                                            "main": "#f44336",
                                                                          },
                                                                          "getContrastText": [Function],
                                                                          "grey": Object {
                                                                            "100": "#f5f5f5",
                                                                            "200": "#eeeeee",
                                                                            "300": "#e0e0e0",
                                                                            "400": "#bdbdbd",
                                                                            "50": "#fafafa",
                                                                            "500": "#9e9e9e",
                                                                            "600": "#757575",
                                                                            "700": "#616161",
                                                                            "800": "#424242",
                                                                            "900": "#212121",
                                                                            "A100": "#d5d5d5",
                                                                            "A200": "#aaaaaa",
                                                                            "A400": "#303030",
                                                                            "A700": "#616161",
                                                                          },
                                                                          "info": Object {
                                                                            "contrastText": "#fff",
                                                                            "dark": "#1976d2",
                                                                            "light": "#64b5f6",
                                                                            "main": "#2196f3",
                                                                          },
                                                                          "primary": Object {
                                                                            "contrastText": "#fff",
                                                                            "dark": "#303f9f",
                                                                            "light": "#7986cb",
                                                                            "main": "#3f51b5",
                                                                          },
                                                                          "secondary": Object {
                                                                            "contrastText": "#fff",
                                                                            "dark": "#c51162",
                                                                            "light": "#ff4081",
                                                                            "main": "#f50057",
                                                                          },
                                                                          "success": Object {
                                                                            "contrastText": "rgba(0, 0, 0, 0.87)",
                                                                            "dark": "#388e3c",
                                                                            "light": "#81c784",
                                                                            "main": "#4caf50",
                                                                          },
                                                                          "text": Object {
                                                                            "disabled": "rgba(0, 0, 0, 0.38)",
                                                                            "hint": "rgba(0, 0, 0, 0.38)",
                                                                            "primary": "rgba(0, 0, 0, 0.87)",
                                                                            "secondary": "rgba(0, 0, 0, 0.54)",
                                                                          },
                                                                          "tonalOffset": 0.2,
                                                                          "type": "light",
                                                                          "warning": Object {
                                                                            "contrastText": "rgba(0, 0, 0, 0.87)",
                                                                            "dark": "#f57c00",
                                                                            "light": "#ffb74d",
                                                                            "main": "#ff9800",
                                                                          },
                                                                        },
                                                                        "props": Object {},
                                                                        "shadows": Array [
                                                                          "none",
                                                                          "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                                                          "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                                                          "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                                                          "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                                                          "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                                                          "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                                                          "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                                                          "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                                                          "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                                                          "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                                                          "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                                                          "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                                                          "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                                                          "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                                                          "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                                                          "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                                                          "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                                                          "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                                                          "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                                                          "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                                                          "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                                                          "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                                                          "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                                                          "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                                                                        ],
                                                                        "shape": Object {
                                                                          "borderRadius": 4,
                                                                        },
                                                                        "spacing": [Function],
                                                                        "transitions": Object {
                                                                          "create": [Function],
                                                                          "duration": Object {
                                                                            "complex": 375,
                                                                            "enteringScreen": 225,
                                                                            "leavingScreen": 195,
                                                                            "short": 250,
                                                                            "shorter": 200,
                                                                            "shortest": 150,
                                                                            "standard": 300,
                                                                          },
                                                                          "easing": Object {
                                                                            "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                                                            "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                                                            "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                                                            "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                                                                          },
                                                                          "getAutoHeightDuration": [Function],
                                                                        },
                                                                        "typography": Object {
                                                                          "body1": Object {
                                                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                            "fontSize": "1rem",
                                                                            "fontWeight": 400,
                                                                            "letterSpacing": "0.00938em",
                                                                            "lineHeight": 1.5,
                                                                          },
                                                                          "body2": Object {
                                                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                            "fontSize": "0.875rem",
                                                                            "fontWeight": 400,
                                                                            "letterSpacing": "0.01071em",
                                                                            "lineHeight": 1.43,
                                                                          },
                                                                          "button": Object {
                                                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                            "fontSize": "0.875rem",
                                                                            "fontWeight": 500,
                                                                            "letterSpacing": "0.02857em",
                                                                            "lineHeight": 1.75,
                                                                            "textTransform": "uppercase",
                                                                          },
                                                                          "caption": Object {
                                                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                            "fontSize": "0.75rem",
                                                                            "fontWeight": 400,
                                                                            "letterSpacing": "0.03333em",
                                                                            "lineHeight": 1.66,
                                                                          },
                                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                          "fontSize": 14,
                                                                          "fontWeightBold": 700,
                                                                          "fontWeightLight": 300,
                                                                          "fontWeightMedium": 500,
                                                                          "fontWeightRegular": 400,
                                                                          "h1": Object {
                                                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                            "fontSize": "6rem",
                                                                            "fontWeight": 300,
                                                                            "letterSpacing": "-0.01562em",
                                                                            "lineHeight": 1.167,
                                                                          },
                                                                          "h2": Object {
                                                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                            "fontSize": "3.75rem",
                                                                            "fontWeight": 300,
                                                                            "letterSpacing": "-0.00833em",
                                                                            "lineHeight": 1.2,
                                                                          },
                                                                          "h3": Object {
                                                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                            "fontSize": "3rem",
                                                                            "fontWeight": 400,
                                                                            "letterSpacing": "0em",
                                                                            "lineHeight": 1.167,
                                                                          },
                                                                          "h4": Object {
                                                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                            "fontSize": "2.125rem",
                                                                            "fontWeight": 400,
                                                                            "letterSpacing": "0.00735em",
                                                                            "lineHeight": 1.235,
                                                                          },
                                                                          "h5": Object {
                                                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                            "fontSize": "1.5rem",
                                                                            "fontWeight": 400,
                                                                            "letterSpacing": "0em",
                                                                            "lineHeight": 1.334,
                                                                          },
                                                                          "h6": Object {
                                                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                            "fontSize": "1.25rem",
                                                                            "fontWeight": 500,
                                                                            "letterSpacing": "0.0075em",
                                                                            "lineHeight": 1.6,
                                                                          },
                                                                          "htmlFontSize": 16,
                                                                          "overline": Object {
                                                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                            "fontSize": "0.75rem",
                                                                            "fontWeight": 400,
                                                                            "letterSpacing": "0.08333em",
                                                                            "lineHeight": 2.66,
                                                                            "textTransform": "uppercase",
                                                                          },
                                                                          "pxToRem": [Function],
                                                                          "round": [Function],
                                                                          "subtitle1": Object {
                                                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                            "fontSize": "1rem",
                                                                            "fontWeight": 400,
                                                                            "letterSpacing": "0.00938em",
                                                                            "lineHeight": 1.75,
                                                                          },
                                                                          "subtitle2": Object {
                                                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                            "fontSize": "0.875rem",
                                                                            "fontWeight": 500,
                                                                            "letterSpacing": "0.00714em",
                                                                            "lineHeight": 1.57,
                                                                          },
                                                                        },
                                                                        "zIndex": Object {
                                                                          "appBar": 1100,
                                                                          "drawer": 1200,
                                                                          "mobileStepper": 1000,
                                                                          "modal": 1300,
                                                                          "snackbar": 1400,
                                                                          "speedDial": 1050,
                                                                          "tooltip": 1500,
                                                                        },
                                                                      }
                                                                    }
                                                                  >
                                                                    <Calendar
                                                                      allowKeyboardControl={true}
                                                                      classes={
                                                                        Object {
                                                                          "progressContainer": "MuiPickersCalendar-progressContainer",
                                                                          "transitionContainer": "MuiPickersCalendar-transitionContainer",
                                                                          "week": "MuiPickersCalendar-week",
                                                                        }
                                                                      }
                                                                      date={2020-02-01T03:00:00.000Z}
                                                                      disableFuture={false}
                                                                      disablePast={false}
                                                                      invalidDateMessage="Invalid Date Format"
                                                                      maxDate={2100-01-01T00:00:00.000Z}
                                                                      maxDateMessage="Date should not be after maximal date"
                                                                      minDate={1900-01-01T00:00:00.000Z}
                                                                      minDateMessage="Date should not be before minimal date"
                                                                      onChange={[Function]}
                                                                      theme={
                                                                        Object {
                                                                          "breakpoints": Object {
                                                                            "between": [Function],
                                                                            "down": [Function],
                                                                            "keys": Array [
                                                                              "xs",
                                                                              "sm",
                                                                              "md",
                                                                              "lg",
                                                                              "xl",
                                                                            ],
                                                                            "only": [Function],
                                                                            "up": [Function],
                                                                            "values": Object {
                                                                              "lg": 1280,
                                                                              "md": 960,
                                                                              "sm": 600,
                                                                              "xl": 1920,
                                                                              "xs": 0,
                                                                            },
                                                                            "width": [Function],
                                                                          },
                                                                          "direction": "ltr",
                                                                          "mixins": Object {
                                                                            "gutters": [Function],
                                                                            "toolbar": Object {
                                                                              "@media (min-width:0px) and (orientation: landscape)": Object {
                                                                                "minHeight": 48,
                                                                              },
                                                                              "@media (min-width:600px)": Object {
                                                                                "minHeight": 64,
                                                                              },
                                                                              "minHeight": 56,
                                                                            },
                                                                          },
                                                                          "overrides": Object {},
                                                                          "palette": Object {
                                                                            "action": Object {
                                                                              "active": "rgba(0, 0, 0, 0.54)",
                                                                              "disabled": "rgba(0, 0, 0, 0.26)",
                                                                              "disabledBackground": "rgba(0, 0, 0, 0.12)",
                                                                              "hover": "rgba(0, 0, 0, 0.08)",
                                                                              "hoverOpacity": 0.08,
                                                                              "selected": "rgba(0, 0, 0, 0.14)",
                                                                            },
                                                                            "augmentColor": [Function],
                                                                            "background": Object {
                                                                              "default": "#fafafa",
                                                                              "paper": "#fff",
                                                                            },
                                                                            "common": Object {
                                                                              "black": "#000",
                                                                              "white": "#fff",
                                                                            },
                                                                            "contrastThreshold": 3,
                                                                            "divider": "rgba(0, 0, 0, 0.12)",
                                                                            "error": Object {
                                                                              "contrastText": "#fff",
                                                                              "dark": "#d32f2f",
                                                                              "light": "#e57373",
                                                                              "main": "#f44336",
                                                                            },
                                                                            "getContrastText": [Function],
                                                                            "grey": Object {
                                                                              "100": "#f5f5f5",
                                                                              "200": "#eeeeee",
                                                                              "300": "#e0e0e0",
                                                                              "400": "#bdbdbd",
                                                                              "50": "#fafafa",
                                                                              "500": "#9e9e9e",
                                                                              "600": "#757575",
                                                                              "700": "#616161",
                                                                              "800": "#424242",
                                                                              "900": "#212121",
                                                                              "A100": "#d5d5d5",
                                                                              "A200": "#aaaaaa",
                                                                              "A400": "#303030",
                                                                              "A700": "#616161",
                                                                            },
                                                                            "info": Object {
                                                                              "contrastText": "#fff",
                                                                              "dark": "#1976d2",
                                                                              "light": "#64b5f6",
                                                                              "main": "#2196f3",
                                                                            },
                                                                            "primary": Object {
                                                                              "contrastText": "#fff",
                                                                              "dark": "#303f9f",
                                                                              "light": "#7986cb",
                                                                              "main": "#3f51b5",
                                                                            },
                                                                            "secondary": Object {
                                                                              "contrastText": "#fff",
                                                                              "dark": "#c51162",
                                                                              "light": "#ff4081",
                                                                              "main": "#f50057",
                                                                            },
                                                                            "success": Object {
                                                                              "contrastText": "rgba(0, 0, 0, 0.87)",
                                                                              "dark": "#388e3c",
                                                                              "light": "#81c784",
                                                                              "main": "#4caf50",
                                                                            },
                                                                            "text": Object {
                                                                              "disabled": "rgba(0, 0, 0, 0.38)",
                                                                              "hint": "rgba(0, 0, 0, 0.38)",
                                                                              "primary": "rgba(0, 0, 0, 0.87)",
                                                                              "secondary": "rgba(0, 0, 0, 0.54)",
                                                                            },
                                                                            "tonalOffset": 0.2,
                                                                            "type": "light",
                                                                            "warning": Object {
                                                                              "contrastText": "rgba(0, 0, 0, 0.87)",
                                                                              "dark": "#f57c00",
                                                                              "light": "#ffb74d",
                                                                              "main": "#ff9800",
                                                                            },
                                                                          },
                                                                          "props": Object {},
                                                                          "shadows": Array [
                                                                            "none",
                                                                            "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                                                            "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                                                            "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                                                            "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                                                            "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                                                            "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                                                            "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                                                            "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                                                            "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                                                            "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                                                            "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                                                            "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                                                            "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                                                            "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                                                            "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                                                            "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                                                            "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                                                            "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                                                            "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                                                            "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                                                            "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                                                            "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                                                            "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                                                            "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                                                                          ],
                                                                          "shape": Object {
                                                                            "borderRadius": 4,
                                                                          },
                                                                          "spacing": [Function],
                                                                          "transitions": Object {
                                                                            "create": [Function],
                                                                            "duration": Object {
                                                                              "complex": 375,
                                                                              "enteringScreen": 225,
                                                                              "leavingScreen": 195,
                                                                              "short": 250,
                                                                              "shorter": 200,
                                                                              "shortest": 150,
                                                                              "standard": 300,
                                                                            },
                                                                            "easing": Object {
                                                                              "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                                                              "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                                                              "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                                                              "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                                                                            },
                                                                            "getAutoHeightDuration": [Function],
                                                                          },
                                                                          "typography": Object {
                                                                            "body1": Object {
                                                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                              "fontSize": "1rem",
                                                                              "fontWeight": 400,
                                                                              "letterSpacing": "0.00938em",
                                                                              "lineHeight": 1.5,
                                                                            },
                                                                            "body2": Object {
                                                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                              "fontSize": "0.875rem",
                                                                              "fontWeight": 400,
                                                                              "letterSpacing": "0.01071em",
                                                                              "lineHeight": 1.43,
                                                                            },
                                                                            "button": Object {
                                                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                              "fontSize": "0.875rem",
                                                                              "fontWeight": 500,
                                                                              "letterSpacing": "0.02857em",
                                                                              "lineHeight": 1.75,
                                                                              "textTransform": "uppercase",
                                                                            },
                                                                            "caption": Object {
                                                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                              "fontSize": "0.75rem",
                                                                              "fontWeight": 400,
                                                                              "letterSpacing": "0.03333em",
                                                                              "lineHeight": 1.66,
                                                                            },
                                                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                            "fontSize": 14,
                                                                            "fontWeightBold": 700,
                                                                            "fontWeightLight": 300,
                                                                            "fontWeightMedium": 500,
                                                                            "fontWeightRegular": 400,
                                                                            "h1": Object {
                                                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                              "fontSize": "6rem",
                                                                              "fontWeight": 300,
                                                                              "letterSpacing": "-0.01562em",
                                                                              "lineHeight": 1.167,
                                                                            },
                                                                            "h2": Object {
                                                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                              "fontSize": "3.75rem",
                                                                              "fontWeight": 300,
                                                                              "letterSpacing": "-0.00833em",
                                                                              "lineHeight": 1.2,
                                                                            },
                                                                            "h3": Object {
                                                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                              "fontSize": "3rem",
                                                                              "fontWeight": 400,
                                                                              "letterSpacing": "0em",
                                                                              "lineHeight": 1.167,
                                                                            },
                                                                            "h4": Object {
                                                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                              "fontSize": "2.125rem",
                                                                              "fontWeight": 400,
                                                                              "letterSpacing": "0.00735em",
                                                                              "lineHeight": 1.235,
                                                                            },
                                                                            "h5": Object {
                                                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                              "fontSize": "1.5rem",
                                                                              "fontWeight": 400,
                                                                              "letterSpacing": "0em",
                                                                              "lineHeight": 1.334,
                                                                            },
                                                                            "h6": Object {
                                                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                              "fontSize": "1.25rem",
                                                                              "fontWeight": 500,
                                                                              "letterSpacing": "0.0075em",
                                                                              "lineHeight": 1.6,
                                                                            },
                                                                            "htmlFontSize": 16,
                                                                            "overline": Object {
                                                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                              "fontSize": "0.75rem",
                                                                              "fontWeight": 400,
                                                                              "letterSpacing": "0.08333em",
                                                                              "lineHeight": 2.66,
                                                                              "textTransform": "uppercase",
                                                                            },
                                                                            "pxToRem": [Function],
                                                                            "round": [Function],
                                                                            "subtitle1": Object {
                                                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                              "fontSize": "1rem",
                                                                              "fontWeight": 400,
                                                                              "letterSpacing": "0.00938em",
                                                                              "lineHeight": 1.75,
                                                                            },
                                                                            "subtitle2": Object {
                                                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                              "fontSize": "0.875rem",
                                                                              "fontWeight": 500,
                                                                              "letterSpacing": "0.00714em",
                                                                              "lineHeight": 1.57,
                                                                            },
                                                                          },
                                                                          "zIndex": Object {
                                                                            "appBar": 1100,
                                                                            "drawer": 1200,
                                                                            "mobileStepper": 1000,
                                                                            "modal": 1300,
                                                                            "snackbar": 1400,
                                                                            "speedDial": 1050,
                                                                            "tooltip": 1500,
                                                                          },
                                                                        }
                                                                      }
                                                                      utils={
                                                                        DateFnsUtils {
                                                                          "dateFormat": "MMMM do",
                                                                          "dateTime12hFormat": "MMMM do hh:mm aaaa",
                                                                          "dateTime24hFormat": "MMMM do HH:mm",
                                                                          "locale": undefined,
                                                                          "time12hFormat": "hh:mm a",
                                                                          "time24hFormat": "HH:mm",
                                                                          "yearFormat": "yyyy",
                                                                          "yearMonthFormat": "MMMM yyyy",
                                                                        }
                                                                      }
                                                                    >
                                                                      <KeyDownListener
                                                                        onKeyDown={[Function]}
                                                                      />
                                                                      <CalendarHeader
                                                                        currentMonth={2020-02-01T03:00:00.000Z}
                                                                        disableNextMonth={false}
                                                                        disablePrevMonth={false}
                                                                        leftArrowIcon={<Unknown />}
                                                                        onMonthChange={[Function]}
                                                                        rightArrowIcon={<Unknown />}
                                                                        slideDirection="left"
                                                                      >
                                                                        <div>
                                                                          <div
                                                                            className="MuiPickersCalendarHeader-switchHeader"
                                                                          >
                                                                            <WithStyles(ForwardRef(IconButton))
                                                                              className="MuiPickersCalendarHeader-iconButton"
                                                                              disabled={false}
                                                                              onClick={[Function]}
                                                                            >
                                                                              <ForwardRef(IconButton)
                                                                                className="MuiPickersCalendarHeader-iconButton"
                                                                                classes={
                                                                                  Object {
                                                                                    "colorInherit": "MuiIconButton-colorInherit",
                                                                                    "colorPrimary": "MuiIconButton-colorPrimary",
                                                                                    "colorSecondary": "MuiIconButton-colorSecondary",
                                                                                    "disabled": "Mui-disabled",
                                                                                    "edgeEnd": "MuiIconButton-edgeEnd",
                                                                                    "edgeStart": "MuiIconButton-edgeStart",
                                                                                    "label": "MuiIconButton-label",
                                                                                    "root": "MuiIconButton-root",
                                                                                    "sizeSmall": "MuiIconButton-sizeSmall",
                                                                                  }
                                                                                }
                                                                                disabled={false}
                                                                                onClick={[Function]}
                                                                              >
                                                                                <WithStyles(ForwardRef(ButtonBase))
                                                                                  centerRipple={true}
                                                                                  className="MuiIconButton-root MuiPickersCalendarHeader-iconButton"
                                                                                  disabled={false}
                                                                                  focusRipple={true}
                                                                                  onClick={[Function]}
                                                                                >
                                                                                  <ForwardRef(ButtonBase)
                                                                                    centerRipple={true}
                                                                                    className="MuiIconButton-root MuiPickersCalendarHeader-iconButton"
                                                                                    classes={
                                                                                      Object {
                                                                                        "disabled": "Mui-disabled",
                                                                                        "focusVisible": "Mui-focusVisible",
                                                                                        "root": "MuiButtonBase-root",
                                                                                      }
                                                                                    }
                                                                                    disabled={false}
                                                                                    focusRipple={true}
                                                                                    onClick={[Function]}
                                                                                  >
                                                                                    <button
                                                                                      className="MuiButtonBase-root MuiIconButton-root MuiPickersCalendarHeader-iconButton"
                                                                                      disabled={false}
                                                                                      onBlur={[Function]}
                                                                                      onClick={[Function]}
                                                                                      onDragLeave={[Function]}
                                                                                      onFocus={[Function]}
                                                                                      onKeyDown={[Function]}
                                                                                      onKeyUp={[Function]}
                                                                                      onMouseDown={[Function]}
                                                                                      onMouseLeave={[Function]}
                                                                                      onMouseUp={[Function]}
                                                                                      onTouchEnd={[Function]}
                                                                                      onTouchMove={[Function]}
                                                                                      onTouchStart={[Function]}
                                                                                      tabIndex={0}
                                                                                      type="button"
                                                                                    >
                                                                                      <span
                                                                                        className="MuiIconButton-label"
                                                                                      >
                                                                                        <Component>
                                                                                          <WithStyles(ForwardRef(SvgIcon))>
                                                                                            <ForwardRef(SvgIcon)
                                                                                              classes={
                                                                                                Object {
                                                                                                  "colorAction": "MuiSvgIcon-colorAction",
                                                                                                  "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                                                  "colorError": "MuiSvgIcon-colorError",
                                                                                                  "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                                                  "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                                                  "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                                                  "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                                                  "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                                                  "root": "MuiSvgIcon-root",
                                                                                                }
                                                                                              }
                                                                                            >
                                                                                              <svg
                                                                                                aria-hidden="true"
                                                                                                className="MuiSvgIcon-root"
                                                                                                focusable="false"
                                                                                                role="presentation"
                                                                                                viewBox="0 0 24 24"
                                                                                              >
                                                                                                <path
                                                                                                  d="M15.41 16.59L10.83 12l4.58-4.59L14 6l-6 6 6 6 1.41-1.41z"
                                                                                                />
                                                                                                <path
                                                                                                  d="M0 0h24v24H0V0z"
                                                                                                  fill="none"
                                                                                                />
                                                                                              </svg>
                                                                                            </ForwardRef(SvgIcon)>
                                                                                          </WithStyles(ForwardRef(SvgIcon))>
                                                                                        </Component>
                                                                                      </span>
                                                                                      <NoSsr>
                                                                                        <WithStyles(memo)
                                                                                          center={true}
                                                                                        >
                                                                                          <ForwardRef(TouchRipple)
                                                                                            center={true}
                                                                                            classes={
                                                                                              Object {
                                                                                                "child": "MuiTouchRipple-child",
                                                                                                "childLeaving": "MuiTouchRipple-childLeaving",
                                                                                                "childPulsate": "MuiTouchRipple-childPulsate",
                                                                                                "ripple": "MuiTouchRipple-ripple",
                                                                                                "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                                                "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                                                "root": "MuiTouchRipple-root",
                                                                                              }
                                                                                            }
                                                                                          >
                                                                                            <span
                                                                                              className="MuiTouchRipple-root"
                                                                                            >
                                                                                              <TransitionGroup
                                                                                                childFactory={[Function]}
                                                                                                component={null}
                                                                                                exit={true}
                                                                                              />
                                                                                            </span>
                                                                                          </ForwardRef(TouchRipple)>
                                                                                        </WithStyles(memo)>
                                                                                      </NoSsr>
                                                                                    </button>
                                                                                  </ForwardRef(ButtonBase)>
                                                                                </WithStyles(ForwardRef(ButtonBase))>
                                                                              </ForwardRef(IconButton)>
                                                                            </WithStyles(ForwardRef(IconButton))>
                                                                            <SlideTransition
                                                                              className="MuiPickersCalendarHeader-transitionContainer"
                                                                              slideDirection="left"
                                                                              transKey="Sat Feb 01 2020 00:00:00 GMT-0300 (Brasilia Standard Time)"
                                                                            >
                                                                              <TransitionGroup
                                                                                childFactory={[Function]}
                                                                                className="MuiPickersSlideTransition-transitionContainer MuiPickersCalendarHeader-transitionContainer"
                                                                                component="div"
                                                                              >
                                                                                <div
                                                                                  className="MuiPickersSlideTransition-transitionContainer MuiPickersCalendarHeader-transitionContainer"
                                                                                >
                                                                                  <CSSTransition
                                                                                    classNames={
                                                                                      Object {
                                                                                        "enter": "MuiPickersSlideTransition-slideEnter-left",
                                                                                        "enterActive": "MuiPickersSlideTransition-slideEnterActive",
                                                                                        "exit": "MuiPickersSlideTransition-slideExit",
                                                                                        "exitActive": "MuiPickersSlideTransition-slideExitActiveLeft-left",
                                                                                      }
                                                                                    }
                                                                                    in={true}
                                                                                    key=".$Sat Feb 01 2020 00=200=200 GMT-0300 (Brasilia Standard Time)left"
                                                                                    mountOnEnter={true}
                                                                                    onExited={[Function]}
                                                                                    timeout={350}
                                                                                    unmountOnExit={true}
                                                                                  >
                                                                                    <Transition
                                                                                      appear={false}
                                                                                      enter={true}
                                                                                      exit={true}
                                                                                      in={true}
                                                                                      mountOnEnter={true}
                                                                                      onEnter={[Function]}
                                                                                      onEntered={[Function]}
                                                                                      onEntering={[Function]}
                                                                                      onExit={[Function]}
                                                                                      onExited={[Function]}
                                                                                      onExiting={[Function]}
                                                                                      timeout={350}
                                                                                      unmountOnExit={true}
                                                                                    >
                                                                                      <WithStyles(ForwardRef(Typography))
                                                                                        align="center"
                                                                                        variant="body1"
                                                                                      >
                                                                                        <ForwardRef(Typography)
                                                                                          align="center"
                                                                                          classes={
                                                                                            Object {
                                                                                              "alignCenter": "MuiTypography-alignCenter",
                                                                                              "alignJustify": "MuiTypography-alignJustify",
                                                                                              "alignLeft": "MuiTypography-alignLeft",
                                                                                              "alignRight": "MuiTypography-alignRight",
                                                                                              "body1": "MuiTypography-body1",
                                                                                              "body2": "MuiTypography-body2",
                                                                                              "button": "MuiTypography-button",
                                                                                              "caption": "MuiTypography-caption",
                                                                                              "colorError": "MuiTypography-colorError",
                                                                                              "colorInherit": "MuiTypography-colorInherit",
                                                                                              "colorPrimary": "MuiTypography-colorPrimary",
                                                                                              "colorSecondary": "MuiTypography-colorSecondary",
                                                                                              "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                                              "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                                              "displayBlock": "MuiTypography-displayBlock",
                                                                                              "displayInline": "MuiTypography-displayInline",
                                                                                              "gutterBottom": "MuiTypography-gutterBottom",
                                                                                              "h1": "MuiTypography-h1",
                                                                                              "h2": "MuiTypography-h2",
                                                                                              "h3": "MuiTypography-h3",
                                                                                              "h4": "MuiTypography-h4",
                                                                                              "h5": "MuiTypography-h5",
                                                                                              "h6": "MuiTypography-h6",
                                                                                              "noWrap": "MuiTypography-noWrap",
                                                                                              "overline": "MuiTypography-overline",
                                                                                              "paragraph": "MuiTypography-paragraph",
                                                                                              "root": "MuiTypography-root",
                                                                                              "srOnly": "MuiTypography-srOnly",
                                                                                              "subtitle1": "MuiTypography-subtitle1",
                                                                                              "subtitle2": "MuiTypography-subtitle2",
                                                                                            }
                                                                                          }
                                                                                          variant="body1"
                                                                                        >
                                                                                          <p
                                                                                            className="MuiTypography-root MuiTypography-body1 MuiTypography-alignCenter"
                                                                                          >
                                                                                            February 2020
                                                                                          </p>
                                                                                        </ForwardRef(Typography)>
                                                                                      </WithStyles(ForwardRef(Typography))>
                                                                                    </Transition>
                                                                                  </CSSTransition>
                                                                                </div>
                                                                              </TransitionGroup>
                                                                            </SlideTransition>
                                                                            <WithStyles(ForwardRef(IconButton))
                                                                              className="MuiPickersCalendarHeader-iconButton"
                                                                              disabled={false}
                                                                              onClick={[Function]}
                                                                            >
                                                                              <ForwardRef(IconButton)
                                                                                className="MuiPickersCalendarHeader-iconButton"
                                                                                classes={
                                                                                  Object {
                                                                                    "colorInherit": "MuiIconButton-colorInherit",
                                                                                    "colorPrimary": "MuiIconButton-colorPrimary",
                                                                                    "colorSecondary": "MuiIconButton-colorSecondary",
                                                                                    "disabled": "Mui-disabled",
                                                                                    "edgeEnd": "MuiIconButton-edgeEnd",
                                                                                    "edgeStart": "MuiIconButton-edgeStart",
                                                                                    "label": "MuiIconButton-label",
                                                                                    "root": "MuiIconButton-root",
                                                                                    "sizeSmall": "MuiIconButton-sizeSmall",
                                                                                  }
                                                                                }
                                                                                disabled={false}
                                                                                onClick={[Function]}
                                                                              >
                                                                                <WithStyles(ForwardRef(ButtonBase))
                                                                                  centerRipple={true}
                                                                                  className="MuiIconButton-root MuiPickersCalendarHeader-iconButton"
                                                                                  disabled={false}
                                                                                  focusRipple={true}
                                                                                  onClick={[Function]}
                                                                                >
                                                                                  <ForwardRef(ButtonBase)
                                                                                    centerRipple={true}
                                                                                    className="MuiIconButton-root MuiPickersCalendarHeader-iconButton"
                                                                                    classes={
                                                                                      Object {
                                                                                        "disabled": "Mui-disabled",
                                                                                        "focusVisible": "Mui-focusVisible",
                                                                                        "root": "MuiButtonBase-root",
                                                                                      }
                                                                                    }
                                                                                    disabled={false}
                                                                                    focusRipple={true}
                                                                                    onClick={[Function]}
                                                                                  >
                                                                                    <button
                                                                                      className="MuiButtonBase-root MuiIconButton-root MuiPickersCalendarHeader-iconButton"
                                                                                      disabled={false}
                                                                                      onBlur={[Function]}
                                                                                      onClick={[Function]}
                                                                                      onDragLeave={[Function]}
                                                                                      onFocus={[Function]}
                                                                                      onKeyDown={[Function]}
                                                                                      onKeyUp={[Function]}
                                                                                      onMouseDown={[Function]}
                                                                                      onMouseLeave={[Function]}
                                                                                      onMouseUp={[Function]}
                                                                                      onTouchEnd={[Function]}
                                                                                      onTouchMove={[Function]}
                                                                                      onTouchStart={[Function]}
                                                                                      tabIndex={0}
                                                                                      type="button"
                                                                                    >
                                                                                      <span
                                                                                        className="MuiIconButton-label"
                                                                                      >
                                                                                        <Component>
                                                                                          <WithStyles(ForwardRef(SvgIcon))>
                                                                                            <ForwardRef(SvgIcon)
                                                                                              classes={
                                                                                                Object {
                                                                                                  "colorAction": "MuiSvgIcon-colorAction",
                                                                                                  "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                                                  "colorError": "MuiSvgIcon-colorError",
                                                                                                  "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                                                  "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                                                  "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                                                  "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                                                  "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                                                  "root": "MuiSvgIcon-root",
                                                                                                }
                                                                                              }
                                                                                            >
                                                                                              <svg
                                                                                                aria-hidden="true"
                                                                                                className="MuiSvgIcon-root"
                                                                                                focusable="false"
                                                                                                role="presentation"
                                                                                                viewBox="0 0 24 24"
                                                                                              >
                                                                                                <path
                                                                                                  d="M8.59 16.59L13.17 12 8.59 7.41 10 6l6 6-6 6-1.41-1.41z"
                                                                                                />
                                                                                                <path
                                                                                                  d="M0 0h24v24H0V0z"
                                                                                                  fill="none"
                                                                                                />
                                                                                              </svg>
                                                                                            </ForwardRef(SvgIcon)>
                                                                                          </WithStyles(ForwardRef(SvgIcon))>
                                                                                        </Component>
                                                                                      </span>
                                                                                      <NoSsr>
                                                                                        <WithStyles(memo)
                                                                                          center={true}
                                                                                        >
                                                                                          <ForwardRef(TouchRipple)
                                                                                            center={true}
                                                                                            classes={
                                                                                              Object {
                                                                                                "child": "MuiTouchRipple-child",
                                                                                                "childLeaving": "MuiTouchRipple-childLeaving",
                                                                                                "childPulsate": "MuiTouchRipple-childPulsate",
                                                                                                "ripple": "MuiTouchRipple-ripple",
                                                                                                "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                                                "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                                                "root": "MuiTouchRipple-root",
                                                                                              }
                                                                                            }
                                                                                          >
                                                                                            <span
                                                                                              className="MuiTouchRipple-root"
                                                                                            >
                                                                                              <TransitionGroup
                                                                                                childFactory={[Function]}
                                                                                                component={null}
                                                                                                exit={true}
                                                                                              />
                                                                                            </span>
                                                                                          </ForwardRef(TouchRipple)>
                                                                                        </WithStyles(memo)>
                                                                                      </NoSsr>
                                                                                    </button>
                                                                                  </ForwardRef(ButtonBase)>
                                                                                </WithStyles(ForwardRef(ButtonBase))>
                                                                              </ForwardRef(IconButton)>
                                                                            </WithStyles(ForwardRef(IconButton))>
                                                                          </div>
                                                                          <div
                                                                            className="MuiPickersCalendarHeader-daysHeader"
                                                                          >
                                                                            <WithStyles(ForwardRef(Typography))
                                                                              className="MuiPickersCalendarHeader-dayLabel"
                                                                              key="0"
                                                                              variant="caption"
                                                                            >
                                                                              <ForwardRef(Typography)
                                                                                className="MuiPickersCalendarHeader-dayLabel"
                                                                                classes={
                                                                                  Object {
                                                                                    "alignCenter": "MuiTypography-alignCenter",
                                                                                    "alignJustify": "MuiTypography-alignJustify",
                                                                                    "alignLeft": "MuiTypography-alignLeft",
                                                                                    "alignRight": "MuiTypography-alignRight",
                                                                                    "body1": "MuiTypography-body1",
                                                                                    "body2": "MuiTypography-body2",
                                                                                    "button": "MuiTypography-button",
                                                                                    "caption": "MuiTypography-caption",
                                                                                    "colorError": "MuiTypography-colorError",
                                                                                    "colorInherit": "MuiTypography-colorInherit",
                                                                                    "colorPrimary": "MuiTypography-colorPrimary",
                                                                                    "colorSecondary": "MuiTypography-colorSecondary",
                                                                                    "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                                    "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                                    "displayBlock": "MuiTypography-displayBlock",
                                                                                    "displayInline": "MuiTypography-displayInline",
                                                                                    "gutterBottom": "MuiTypography-gutterBottom",
                                                                                    "h1": "MuiTypography-h1",
                                                                                    "h2": "MuiTypography-h2",
                                                                                    "h3": "MuiTypography-h3",
                                                                                    "h4": "MuiTypography-h4",
                                                                                    "h5": "MuiTypography-h5",
                                                                                    "h6": "MuiTypography-h6",
                                                                                    "noWrap": "MuiTypography-noWrap",
                                                                                    "overline": "MuiTypography-overline",
                                                                                    "paragraph": "MuiTypography-paragraph",
                                                                                    "root": "MuiTypography-root",
                                                                                    "srOnly": "MuiTypography-srOnly",
                                                                                    "subtitle1": "MuiTypography-subtitle1",
                                                                                    "subtitle2": "MuiTypography-subtitle2",
                                                                                  }
                                                                                }
                                                                                variant="caption"
                                                                              >
                                                                                <span
                                                                                  className="MuiTypography-root MuiPickersCalendarHeader-dayLabel MuiTypography-caption"
                                                                                >
                                                                                  Su
                                                                                </span>
                                                                              </ForwardRef(Typography)>
                                                                            </WithStyles(ForwardRef(Typography))>
                                                                            <WithStyles(ForwardRef(Typography))
                                                                              className="MuiPickersCalendarHeader-dayLabel"
                                                                              key="1"
                                                                              variant="caption"
                                                                            >
                                                                              <ForwardRef(Typography)
                                                                                className="MuiPickersCalendarHeader-dayLabel"
                                                                                classes={
                                                                                  Object {
                                                                                    "alignCenter": "MuiTypography-alignCenter",
                                                                                    "alignJustify": "MuiTypography-alignJustify",
                                                                                    "alignLeft": "MuiTypography-alignLeft",
                                                                                    "alignRight": "MuiTypography-alignRight",
                                                                                    "body1": "MuiTypography-body1",
                                                                                    "body2": "MuiTypography-body2",
                                                                                    "button": "MuiTypography-button",
                                                                                    "caption": "MuiTypography-caption",
                                                                                    "colorError": "MuiTypography-colorError",
                                                                                    "colorInherit": "MuiTypography-colorInherit",
                                                                                    "colorPrimary": "MuiTypography-colorPrimary",
                                                                                    "colorSecondary": "MuiTypography-colorSecondary",
                                                                                    "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                                    "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                                    "displayBlock": "MuiTypography-displayBlock",
                                                                                    "displayInline": "MuiTypography-displayInline",
                                                                                    "gutterBottom": "MuiTypography-gutterBottom",
                                                                                    "h1": "MuiTypography-h1",
                                                                                    "h2": "MuiTypography-h2",
                                                                                    "h3": "MuiTypography-h3",
                                                                                    "h4": "MuiTypography-h4",
                                                                                    "h5": "MuiTypography-h5",
                                                                                    "h6": "MuiTypography-h6",
                                                                                    "noWrap": "MuiTypography-noWrap",
                                                                                    "overline": "MuiTypography-overline",
                                                                                    "paragraph": "MuiTypography-paragraph",
                                                                                    "root": "MuiTypography-root",
                                                                                    "srOnly": "MuiTypography-srOnly",
                                                                                    "subtitle1": "MuiTypography-subtitle1",
                                                                                    "subtitle2": "MuiTypography-subtitle2",
                                                                                  }
                                                                                }
                                                                                variant="caption"
                                                                              >
                                                                                <span
                                                                                  className="MuiTypography-root MuiPickersCalendarHeader-dayLabel MuiTypography-caption"
                                                                                >
                                                                                  Mo
                                                                                </span>
                                                                              </ForwardRef(Typography)>
                                                                            </WithStyles(ForwardRef(Typography))>
                                                                            <WithStyles(ForwardRef(Typography))
                                                                              className="MuiPickersCalendarHeader-dayLabel"
                                                                              key="2"
                                                                              variant="caption"
                                                                            >
                                                                              <ForwardRef(Typography)
                                                                                className="MuiPickersCalendarHeader-dayLabel"
                                                                                classes={
                                                                                  Object {
                                                                                    "alignCenter": "MuiTypography-alignCenter",
                                                                                    "alignJustify": "MuiTypography-alignJustify",
                                                                                    "alignLeft": "MuiTypography-alignLeft",
                                                                                    "alignRight": "MuiTypography-alignRight",
                                                                                    "body1": "MuiTypography-body1",
                                                                                    "body2": "MuiTypography-body2",
                                                                                    "button": "MuiTypography-button",
                                                                                    "caption": "MuiTypography-caption",
                                                                                    "colorError": "MuiTypography-colorError",
                                                                                    "colorInherit": "MuiTypography-colorInherit",
                                                                                    "colorPrimary": "MuiTypography-colorPrimary",
                                                                                    "colorSecondary": "MuiTypography-colorSecondary",
                                                                                    "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                                    "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                                    "displayBlock": "MuiTypography-displayBlock",
                                                                                    "displayInline": "MuiTypography-displayInline",
                                                                                    "gutterBottom": "MuiTypography-gutterBottom",
                                                                                    "h1": "MuiTypography-h1",
                                                                                    "h2": "MuiTypography-h2",
                                                                                    "h3": "MuiTypography-h3",
                                                                                    "h4": "MuiTypography-h4",
                                                                                    "h5": "MuiTypography-h5",
                                                                                    "h6": "MuiTypography-h6",
                                                                                    "noWrap": "MuiTypography-noWrap",
                                                                                    "overline": "MuiTypography-overline",
                                                                                    "paragraph": "MuiTypography-paragraph",
                                                                                    "root": "MuiTypography-root",
                                                                                    "srOnly": "MuiTypography-srOnly",
                                                                                    "subtitle1": "MuiTypography-subtitle1",
                                                                                    "subtitle2": "MuiTypography-subtitle2",
                                                                                  }
                                                                                }
                                                                                variant="caption"
                                                                              >
                                                                                <span
                                                                                  className="MuiTypography-root MuiPickersCalendarHeader-dayLabel MuiTypography-caption"
                                                                                >
                                                                                  Tu
                                                                                </span>
                                                                              </ForwardRef(Typography)>
                                                                            </WithStyles(ForwardRef(Typography))>
                                                                            <WithStyles(ForwardRef(Typography))
                                                                              className="MuiPickersCalendarHeader-dayLabel"
                                                                              key="3"
                                                                              variant="caption"
                                                                            >
                                                                              <ForwardRef(Typography)
                                                                                className="MuiPickersCalendarHeader-dayLabel"
                                                                                classes={
                                                                                  Object {
                                                                                    "alignCenter": "MuiTypography-alignCenter",
                                                                                    "alignJustify": "MuiTypography-alignJustify",
                                                                                    "alignLeft": "MuiTypography-alignLeft",
                                                                                    "alignRight": "MuiTypography-alignRight",
                                                                                    "body1": "MuiTypography-body1",
                                                                                    "body2": "MuiTypography-body2",
                                                                                    "button": "MuiTypography-button",
                                                                                    "caption": "MuiTypography-caption",
                                                                                    "colorError": "MuiTypography-colorError",
                                                                                    "colorInherit": "MuiTypography-colorInherit",
                                                                                    "colorPrimary": "MuiTypography-colorPrimary",
                                                                                    "colorSecondary": "MuiTypography-colorSecondary",
                                                                                    "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                                    "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                                    "displayBlock": "MuiTypography-displayBlock",
                                                                                    "displayInline": "MuiTypography-displayInline",
                                                                                    "gutterBottom": "MuiTypography-gutterBottom",
                                                                                    "h1": "MuiTypography-h1",
                                                                                    "h2": "MuiTypography-h2",
                                                                                    "h3": "MuiTypography-h3",
                                                                                    "h4": "MuiTypography-h4",
                                                                                    "h5": "MuiTypography-h5",
                                                                                    "h6": "MuiTypography-h6",
                                                                                    "noWrap": "MuiTypography-noWrap",
                                                                                    "overline": "MuiTypography-overline",
                                                                                    "paragraph": "MuiTypography-paragraph",
                                                                                    "root": "MuiTypography-root",
                                                                                    "srOnly": "MuiTypography-srOnly",
                                                                                    "subtitle1": "MuiTypography-subtitle1",
                                                                                    "subtitle2": "MuiTypography-subtitle2",
                                                                                  }
                                                                                }
                                                                                variant="caption"
                                                                              >
                                                                                <span
                                                                                  className="MuiTypography-root MuiPickersCalendarHeader-dayLabel MuiTypography-caption"
                                                                                >
                                                                                  We
                                                                                </span>
                                                                              </ForwardRef(Typography)>
                                                                            </WithStyles(ForwardRef(Typography))>
                                                                            <WithStyles(ForwardRef(Typography))
                                                                              className="MuiPickersCalendarHeader-dayLabel"
                                                                              key="4"
                                                                              variant="caption"
                                                                            >
                                                                              <ForwardRef(Typography)
                                                                                className="MuiPickersCalendarHeader-dayLabel"
                                                                                classes={
                                                                                  Object {
                                                                                    "alignCenter": "MuiTypography-alignCenter",
                                                                                    "alignJustify": "MuiTypography-alignJustify",
                                                                                    "alignLeft": "MuiTypography-alignLeft",
                                                                                    "alignRight": "MuiTypography-alignRight",
                                                                                    "body1": "MuiTypography-body1",
                                                                                    "body2": "MuiTypography-body2",
                                                                                    "button": "MuiTypography-button",
                                                                                    "caption": "MuiTypography-caption",
                                                                                    "colorError": "MuiTypography-colorError",
                                                                                    "colorInherit": "MuiTypography-colorInherit",
                                                                                    "colorPrimary": "MuiTypography-colorPrimary",
                                                                                    "colorSecondary": "MuiTypography-colorSecondary",
                                                                                    "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                                    "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                                    "displayBlock": "MuiTypography-displayBlock",
                                                                                    "displayInline": "MuiTypography-displayInline",
                                                                                    "gutterBottom": "MuiTypography-gutterBottom",
                                                                                    "h1": "MuiTypography-h1",
                                                                                    "h2": "MuiTypography-h2",
                                                                                    "h3": "MuiTypography-h3",
                                                                                    "h4": "MuiTypography-h4",
                                                                                    "h5": "MuiTypography-h5",
                                                                                    "h6": "MuiTypography-h6",
                                                                                    "noWrap": "MuiTypography-noWrap",
                                                                                    "overline": "MuiTypography-overline",
                                                                                    "paragraph": "MuiTypography-paragraph",
                                                                                    "root": "MuiTypography-root",
                                                                                    "srOnly": "MuiTypography-srOnly",
                                                                                    "subtitle1": "MuiTypography-subtitle1",
                                                                                    "subtitle2": "MuiTypography-subtitle2",
                                                                                  }
                                                                                }
                                                                                variant="caption"
                                                                              >
                                                                                <span
                                                                                  className="MuiTypography-root MuiPickersCalendarHeader-dayLabel MuiTypography-caption"
                                                                                >
                                                                                  Th
                                                                                </span>
                                                                              </ForwardRef(Typography)>
                                                                            </WithStyles(ForwardRef(Typography))>
                                                                            <WithStyles(ForwardRef(Typography))
                                                                              className="MuiPickersCalendarHeader-dayLabel"
                                                                              key="5"
                                                                              variant="caption"
                                                                            >
                                                                              <ForwardRef(Typography)
                                                                                className="MuiPickersCalendarHeader-dayLabel"
                                                                                classes={
                                                                                  Object {
                                                                                    "alignCenter": "MuiTypography-alignCenter",
                                                                                    "alignJustify": "MuiTypography-alignJustify",
                                                                                    "alignLeft": "MuiTypography-alignLeft",
                                                                                    "alignRight": "MuiTypography-alignRight",
                                                                                    "body1": "MuiTypography-body1",
                                                                                    "body2": "MuiTypography-body2",
                                                                                    "button": "MuiTypography-button",
                                                                                    "caption": "MuiTypography-caption",
                                                                                    "colorError": "MuiTypography-colorError",
                                                                                    "colorInherit": "MuiTypography-colorInherit",
                                                                                    "colorPrimary": "MuiTypography-colorPrimary",
                                                                                    "colorSecondary": "MuiTypography-colorSecondary",
                                                                                    "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                                    "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                                    "displayBlock": "MuiTypography-displayBlock",
                                                                                    "displayInline": "MuiTypography-displayInline",
                                                                                    "gutterBottom": "MuiTypography-gutterBottom",
                                                                                    "h1": "MuiTypography-h1",
                                                                                    "h2": "MuiTypography-h2",
                                                                                    "h3": "MuiTypography-h3",
                                                                                    "h4": "MuiTypography-h4",
                                                                                    "h5": "MuiTypography-h5",
                                                                                    "h6": "MuiTypography-h6",
                                                                                    "noWrap": "MuiTypography-noWrap",
                                                                                    "overline": "MuiTypography-overline",
                                                                                    "paragraph": "MuiTypography-paragraph",
                                                                                    "root": "MuiTypography-root",
                                                                                    "srOnly": "MuiTypography-srOnly",
                                                                                    "subtitle1": "MuiTypography-subtitle1",
                                                                                    "subtitle2": "MuiTypography-subtitle2",
                                                                                  }
                                                                                }
                                                                                variant="caption"
                                                                              >
                                                                                <span
                                                                                  className="MuiTypography-root MuiPickersCalendarHeader-dayLabel MuiTypography-caption"
                                                                                >
                                                                                  Fr
                                                                                </span>
                                                                              </ForwardRef(Typography)>
                                                                            </WithStyles(ForwardRef(Typography))>
                                                                            <WithStyles(ForwardRef(Typography))
                                                                              className="MuiPickersCalendarHeader-dayLabel"
                                                                              key="6"
                                                                              variant="caption"
                                                                            >
                                                                              <ForwardRef(Typography)
                                                                                className="MuiPickersCalendarHeader-dayLabel"
                                                                                classes={
                                                                                  Object {
                                                                                    "alignCenter": "MuiTypography-alignCenter",
                                                                                    "alignJustify": "MuiTypography-alignJustify",
                                                                                    "alignLeft": "MuiTypography-alignLeft",
                                                                                    "alignRight": "MuiTypography-alignRight",
                                                                                    "body1": "MuiTypography-body1",
                                                                                    "body2": "MuiTypography-body2",
                                                                                    "button": "MuiTypography-button",
                                                                                    "caption": "MuiTypography-caption",
                                                                                    "colorError": "MuiTypography-colorError",
                                                                                    "colorInherit": "MuiTypography-colorInherit",
                                                                                    "colorPrimary": "MuiTypography-colorPrimary",
                                                                                    "colorSecondary": "MuiTypography-colorSecondary",
                                                                                    "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                                    "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                                    "displayBlock": "MuiTypography-displayBlock",
                                                                                    "displayInline": "MuiTypography-displayInline",
                                                                                    "gutterBottom": "MuiTypography-gutterBottom",
                                                                                    "h1": "MuiTypography-h1",
                                                                                    "h2": "MuiTypography-h2",
                                                                                    "h3": "MuiTypography-h3",
                                                                                    "h4": "MuiTypography-h4",
                                                                                    "h5": "MuiTypography-h5",
                                                                                    "h6": "MuiTypography-h6",
                                                                                    "noWrap": "MuiTypography-noWrap",
                                                                                    "overline": "MuiTypography-overline",
                                                                                    "paragraph": "MuiTypography-paragraph",
                                                                                    "root": "MuiTypography-root",
                                                                                    "srOnly": "MuiTypography-srOnly",
                                                                                    "subtitle1": "MuiTypography-subtitle1",
                                                                                    "subtitle2": "MuiTypography-subtitle2",
                                                                                  }
                                                                                }
                                                                                variant="caption"
                                                                              >
                                                                                <span
                                                                                  className="MuiTypography-root MuiPickersCalendarHeader-dayLabel MuiTypography-caption"
                                                                                >
                                                                                  Sa
                                                                                </span>
                                                                              </ForwardRef(Typography)>
                                                                            </WithStyles(ForwardRef(Typography))>
                                                                          </div>
                                                                        </div>
                                                                      </CalendarHeader>
                                                                      <SlideTransition
                                                                        className="MuiPickersCalendar-transitionContainer"
                                                                        slideDirection="left"
                                                                        transKey="Sat Feb 01 2020 00:00:00 GMT-0300 (Brasilia Standard Time)"
                                                                      >
                                                                        <TransitionGroup
                                                                          childFactory={[Function]}
                                                                          className="MuiPickersSlideTransition-transitionContainer MuiPickersCalendar-transitionContainer"
                                                                          component="div"
                                                                        >
                                                                          <div
                                                                            className="MuiPickersSlideTransition-transitionContainer MuiPickersCalendar-transitionContainer"
                                                                          >
                                                                            <CSSTransition
                                                                              classNames={
                                                                                Object {
                                                                                  "enter": "MuiPickersSlideTransition-slideEnter-left",
                                                                                  "enterActive": "MuiPickersSlideTransition-slideEnterActive",
                                                                                  "exit": "MuiPickersSlideTransition-slideExit",
                                                                                  "exitActive": "MuiPickersSlideTransition-slideExitActiveLeft-left",
                                                                                }
                                                                              }
                                                                              in={true}
                                                                              key=".$Sat Feb 01 2020 00=200=200 GMT-0300 (Brasilia Standard Time)left"
                                                                              mountOnEnter={true}
                                                                              onExited={[Function]}
                                                                              timeout={350}
                                                                              unmountOnExit={true}
                                                                            >
                                                                              <Transition
                                                                                appear={false}
                                                                                enter={true}
                                                                                exit={true}
                                                                                in={true}
                                                                                mountOnEnter={true}
                                                                                onEnter={[Function]}
                                                                                onEntered={[Function]}
                                                                                onEntering={[Function]}
                                                                                onExit={[Function]}
                                                                                onExited={[Function]}
                                                                                onExiting={[Function]}
                                                                                timeout={350}
                                                                                unmountOnExit={true}
                                                                              >
                                                                                <div>
                                                                                  <div
                                                                                    className="MuiPickersCalendar-week"
                                                                                    key="week-Sun Jan 26 2020 00:00:00 GMT-0300 (Brasilia Standard Time)"
                                                                                  >
                                                                                    <DayWrapper
                                                                                      dayInCurrentMonth={false}
                                                                                      disabled={false}
                                                                                      key="Sun Jan 26 2020 00:00:00 GMT-0300 (Brasilia Standard Time)"
                                                                                      onSelect={[Function]}
                                                                                      value={2020-01-26T03:00:00.000Z}
                                                                                    >
                                                                                      <div
                                                                                        role="presentation"
                                                                                      >
                                                                                        <Day
                                                                                          current={false}
                                                                                          disabled={false}
                                                                                          hidden={true}
                                                                                          selected={false}
                                                                                        >
                                                                                          <WithStyles(ForwardRef(IconButton))
                                                                                            className="MuiPickersDay-day MuiPickersDay-hidden"
                                                                                            tabIndex={-1}
                                                                                          >
                                                                                            <ForwardRef(IconButton)
                                                                                              className="MuiPickersDay-day MuiPickersDay-hidden"
                                                                                              classes={
                                                                                                Object {
                                                                                                  "colorInherit": "MuiIconButton-colorInherit",
                                                                                                  "colorPrimary": "MuiIconButton-colorPrimary",
                                                                                                  "colorSecondary": "MuiIconButton-colorSecondary",
                                                                                                  "disabled": "Mui-disabled",
                                                                                                  "edgeEnd": "MuiIconButton-edgeEnd",
                                                                                                  "edgeStart": "MuiIconButton-edgeStart",
                                                                                                  "label": "MuiIconButton-label",
                                                                                                  "root": "MuiIconButton-root",
                                                                                                  "sizeSmall": "MuiIconButton-sizeSmall",
                                                                                                }
                                                                                              }
                                                                                              tabIndex={-1}
                                                                                            >
                                                                                              <WithStyles(ForwardRef(ButtonBase))
                                                                                                centerRipple={true}
                                                                                                className="MuiIconButton-root MuiPickersDay-day MuiPickersDay-hidden"
                                                                                                disabled={false}
                                                                                                focusRipple={true}
                                                                                                tabIndex={-1}
                                                                                              >
                                                                                                <ForwardRef(ButtonBase)
                                                                                                  centerRipple={true}
                                                                                                  className="MuiIconButton-root MuiPickersDay-day MuiPickersDay-hidden"
                                                                                                  classes={
                                                                                                    Object {
                                                                                                      "disabled": "Mui-disabled",
                                                                                                      "focusVisible": "Mui-focusVisible",
                                                                                                      "root": "MuiButtonBase-root",
                                                                                                    }
                                                                                                  }
                                                                                                  disabled={false}
                                                                                                  focusRipple={true}
                                                                                                  tabIndex={-1}
                                                                                                >
                                                                                                  <button
                                                                                                    className="MuiButtonBase-root MuiIconButton-root MuiPickersDay-day MuiPickersDay-hidden"
                                                                                                    disabled={false}
                                                                                                    onBlur={[Function]}
                                                                                                    onDragLeave={[Function]}
                                                                                                    onFocus={[Function]}
                                                                                                    onKeyDown={[Function]}
                                                                                                    onKeyUp={[Function]}
                                                                                                    onMouseDown={[Function]}
                                                                                                    onMouseLeave={[Function]}
                                                                                                    onMouseUp={[Function]}
                                                                                                    onTouchEnd={[Function]}
                                                                                                    onTouchMove={[Function]}
                                                                                                    onTouchStart={[Function]}
                                                                                                    tabIndex={-1}
                                                                                                    type="button"
                                                                                                  >
                                                                                                    <span
                                                                                                      className="MuiIconButton-label"
                                                                                                    >
                                                                                                      <WithStyles(ForwardRef(Typography))
                                                                                                        color="inherit"
                                                                                                        variant="body2"
                                                                                                      >
                                                                                                        <ForwardRef(Typography)
                                                                                                          classes={
                                                                                                            Object {
                                                                                                              "alignCenter": "MuiTypography-alignCenter",
                                                                                                              "alignJustify": "MuiTypography-alignJustify",
                                                                                                              "alignLeft": "MuiTypography-alignLeft",
                                                                                                              "alignRight": "MuiTypography-alignRight",
                                                                                                              "body1": "MuiTypography-body1",
                                                                                                              "body2": "MuiTypography-body2",
                                                                                                              "button": "MuiTypography-button",
                                                                                                              "caption": "MuiTypography-caption",
                                                                                                              "colorError": "MuiTypography-colorError",
                                                                                                              "colorInherit": "MuiTypography-colorInherit",
                                                                                                              "colorPrimary": "MuiTypography-colorPrimary",
                                                                                                              "colorSecondary": "MuiTypography-colorSecondary",
                                                                                                              "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                                                              "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                                                              "displayBlock": "MuiTypography-displayBlock",
                                                                                                              "displayInline": "MuiTypography-displayInline",
                                                                                                              "gutterBottom": "MuiTypography-gutterBottom",
                                                                                                              "h1": "MuiTypography-h1",
                                                                                                              "h2": "MuiTypography-h2",
                                                                                                              "h3": "MuiTypography-h3",
                                                                                                              "h4": "MuiTypography-h4",
                                                                                                              "h5": "MuiTypography-h5",
                                                                                                              "h6": "MuiTypography-h6",
                                                                                                              "noWrap": "MuiTypography-noWrap",
                                                                                                              "overline": "MuiTypography-overline",
                                                                                                              "paragraph": "MuiTypography-paragraph",
                                                                                                              "root": "MuiTypography-root",
                                                                                                              "srOnly": "MuiTypography-srOnly",
                                                                                                              "subtitle1": "MuiTypography-subtitle1",
                                                                                                              "subtitle2": "MuiTypography-subtitle2",
                                                                                                            }
                                                                                                          }
                                                                                                          color="inherit"
                                                                                                          variant="body2"
                                                                                                        >
                                                                                                          <p
                                                                                                            className="MuiTypography-root MuiTypography-body2 MuiTypography-colorInherit"
                                                                                                          >
                                                                                                            26
                                                                                                          </p>
                                                                                                        </ForwardRef(Typography)>
                                                                                                      </WithStyles(ForwardRef(Typography))>
                                                                                                    </span>
                                                                                                    <NoSsr>
                                                                                                      <WithStyles(memo)
                                                                                                        center={true}
                                                                                                      >
                                                                                                        <ForwardRef(TouchRipple)
                                                                                                          center={true}
                                                                                                          classes={
                                                                                                            Object {
                                                                                                              "child": "MuiTouchRipple-child",
                                                                                                              "childLeaving": "MuiTouchRipple-childLeaving",
                                                                                                              "childPulsate": "MuiTouchRipple-childPulsate",
                                                                                                              "ripple": "MuiTouchRipple-ripple",
                                                                                                              "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                                                              "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                                                              "root": "MuiTouchRipple-root",
                                                                                                            }
                                                                                                          }
                                                                                                        >
                                                                                                          <span
                                                                                                            className="MuiTouchRipple-root"
                                                                                                          >
                                                                                                            <TransitionGroup
                                                                                                              childFactory={[Function]}
                                                                                                              component={null}
                                                                                                              exit={true}
                                                                                                            />
                                                                                                          </span>
                                                                                                        </ForwardRef(TouchRipple)>
                                                                                                      </WithStyles(memo)>
                                                                                                    </NoSsr>
                                                                                                  </button>
                                                                                                </ForwardRef(ButtonBase)>
                                                                                              </WithStyles(ForwardRef(ButtonBase))>
                                                                                            </ForwardRef(IconButton)>
                                                                                          </WithStyles(ForwardRef(IconButton))>
                                                                                        </Day>
                                                                                      </div>
                                                                                    </DayWrapper>
                                                                                    <DayWrapper
                                                                                      dayInCurrentMonth={false}
                                                                                      disabled={false}
                                                                                      key="Mon Jan 27 2020 00:00:00 GMT-0300 (Brasilia Standard Time)"
                                                                                      onSelect={[Function]}
                                                                                      value={2020-01-27T03:00:00.000Z}
                                                                                    >
                                                                                      <div
                                                                                        role="presentation"
                                                                                      >
                                                                                        <Day
                                                                                          current={false}
                                                                                          disabled={false}
                                                                                          hidden={true}
                                                                                          selected={false}
                                                                                        >
                                                                                          <WithStyles(ForwardRef(IconButton))
                                                                                            className="MuiPickersDay-day MuiPickersDay-hidden"
                                                                                            tabIndex={-1}
                                                                                          >
                                                                                            <ForwardRef(IconButton)
                                                                                              className="MuiPickersDay-day MuiPickersDay-hidden"
                                                                                              classes={
                                                                                                Object {
                                                                                                  "colorInherit": "MuiIconButton-colorInherit",
                                                                                                  "colorPrimary": "MuiIconButton-colorPrimary",
                                                                                                  "colorSecondary": "MuiIconButton-colorSecondary",
                                                                                                  "disabled": "Mui-disabled",
                                                                                                  "edgeEnd": "MuiIconButton-edgeEnd",
                                                                                                  "edgeStart": "MuiIconButton-edgeStart",
                                                                                                  "label": "MuiIconButton-label",
                                                                                                  "root": "MuiIconButton-root",
                                                                                                  "sizeSmall": "MuiIconButton-sizeSmall",
                                                                                                }
                                                                                              }
                                                                                              tabIndex={-1}
                                                                                            >
                                                                                              <WithStyles(ForwardRef(ButtonBase))
                                                                                                centerRipple={true}
                                                                                                className="MuiIconButton-root MuiPickersDay-day MuiPickersDay-hidden"
                                                                                                disabled={false}
                                                                                                focusRipple={true}
                                                                                                tabIndex={-1}
                                                                                              >
                                                                                                <ForwardRef(ButtonBase)
                                                                                                  centerRipple={true}
                                                                                                  className="MuiIconButton-root MuiPickersDay-day MuiPickersDay-hidden"
                                                                                                  classes={
                                                                                                    Object {
                                                                                                      "disabled": "Mui-disabled",
                                                                                                      "focusVisible": "Mui-focusVisible",
                                                                                                      "root": "MuiButtonBase-root",
                                                                                                    }
                                                                                                  }
                                                                                                  disabled={false}
                                                                                                  focusRipple={true}
                                                                                                  tabIndex={-1}
                                                                                                >
                                                                                                  <button
                                                                                                    className="MuiButtonBase-root MuiIconButton-root MuiPickersDay-day MuiPickersDay-hidden"
                                                                                                    disabled={false}
                                                                                                    onBlur={[Function]}
                                                                                                    onDragLeave={[Function]}
                                                                                                    onFocus={[Function]}
                                                                                                    onKeyDown={[Function]}
                                                                                                    onKeyUp={[Function]}
                                                                                                    onMouseDown={[Function]}
                                                                                                    onMouseLeave={[Function]}
                                                                                                    onMouseUp={[Function]}
                                                                                                    onTouchEnd={[Function]}
                                                                                                    onTouchMove={[Function]}
                                                                                                    onTouchStart={[Function]}
                                                                                                    tabIndex={-1}
                                                                                                    type="button"
                                                                                                  >
                                                                                                    <span
                                                                                                      className="MuiIconButton-label"
                                                                                                    >
                                                                                                      <WithStyles(ForwardRef(Typography))
                                                                                                        color="inherit"
                                                                                                        variant="body2"
                                                                                                      >
                                                                                                        <ForwardRef(Typography)
                                                                                                          classes={
                                                                                                            Object {
                                                                                                              "alignCenter": "MuiTypography-alignCenter",
                                                                                                              "alignJustify": "MuiTypography-alignJustify",
                                                                                                              "alignLeft": "MuiTypography-alignLeft",
                                                                                                              "alignRight": "MuiTypography-alignRight",
                                                                                                              "body1": "MuiTypography-body1",
                                                                                                              "body2": "MuiTypography-body2",
                                                                                                              "button": "MuiTypography-button",
                                                                                                              "caption": "MuiTypography-caption",
                                                                                                              "colorError": "MuiTypography-colorError",
                                                                                                              "colorInherit": "MuiTypography-colorInherit",
                                                                                                              "colorPrimary": "MuiTypography-colorPrimary",
                                                                                                              "colorSecondary": "MuiTypography-colorSecondary",
                                                                                                              "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                                                              "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                                                              "displayBlock": "MuiTypography-displayBlock",
                                                                                                              "displayInline": "MuiTypography-displayInline",
                                                                                                              "gutterBottom": "MuiTypography-gutterBottom",
                                                                                                              "h1": "MuiTypography-h1",
                                                                                                              "h2": "MuiTypography-h2",
                                                                                                              "h3": "MuiTypography-h3",
                                                                                                              "h4": "MuiTypography-h4",
                                                                                                              "h5": "MuiTypography-h5",
                                                                                                              "h6": "MuiTypography-h6",
                                                                                                              "noWrap": "MuiTypography-noWrap",
                                                                                                              "overline": "MuiTypography-overline",
                                                                                                              "paragraph": "MuiTypography-paragraph",
                                                                                                              "root": "MuiTypography-root",
                                                                                                              "srOnly": "MuiTypography-srOnly",
                                                                                                              "subtitle1": "MuiTypography-subtitle1",
                                                                                                              "subtitle2": "MuiTypography-subtitle2",
                                                                                                            }
                                                                                                          }
                                                                                                          color="inherit"
                                                                                                          variant="body2"
                                                                                                        >
                                                                                                          <p
                                                                                                            className="MuiTypography-root MuiTypography-body2 MuiTypography-colorInherit"
                                                                                                          >
                                                                                                            27
                                                                                                          </p>
                                                                                                        </ForwardRef(Typography)>
                                                                                                      </WithStyles(ForwardRef(Typography))>
                                                                                                    </span>
                                                                                                    <NoSsr>
                                                                                                      <WithStyles(memo)
                                                                                                        center={true}
                                                                                                      >
                                                                                                        <ForwardRef(TouchRipple)
                                                                                                          center={true}
                                                                                                          classes={
                                                                                                            Object {
                                                                                                              "child": "MuiTouchRipple-child",
                                                                                                              "childLeaving": "MuiTouchRipple-childLeaving",
                                                                                                              "childPulsate": "MuiTouchRipple-childPulsate",
                                                                                                              "ripple": "MuiTouchRipple-ripple",
                                                                                                              "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                                                              "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                                                              "root": "MuiTouchRipple-root",
                                                                                                            }
                                                                                                          }
                                                                                                        >
                                                                                                          <span
                                                                                                            className="MuiTouchRipple-root"
                                                                                                          >
                                                                                                            <TransitionGroup
                                                                                                              childFactory={[Function]}
                                                                                                              component={null}
                                                                                                              exit={true}
                                                                                                            />
                                                                                                          </span>
                                                                                                        </ForwardRef(TouchRipple)>
                                                                                                      </WithStyles(memo)>
                                                                                                    </NoSsr>
                                                                                                  </button>
                                                                                                </ForwardRef(ButtonBase)>
                                                                                              </WithStyles(ForwardRef(ButtonBase))>
                                                                                            </ForwardRef(IconButton)>
                                                                                          </WithStyles(ForwardRef(IconButton))>
                                                                                        </Day>
                                                                                      </div>
                                                                                    </DayWrapper>
                                                                                    <DayWrapper
                                                                                      dayInCurrentMonth={false}
                                                                                      disabled={false}
                                                                                      key="Tue Jan 28 2020 00:00:00 GMT-0300 (Brasilia Standard Time)"
                                                                                      onSelect={[Function]}
                                                                                      value={2020-01-28T03:00:00.000Z}
                                                                                    >
                                                                                      <div
                                                                                        role="presentation"
                                                                                      >
                                                                                        <Day
                                                                                          current={false}
                                                                                          disabled={false}
                                                                                          hidden={true}
                                                                                          selected={false}
                                                                                        >
                                                                                          <WithStyles(ForwardRef(IconButton))
                                                                                            className="MuiPickersDay-day MuiPickersDay-hidden"
                                                                                            tabIndex={-1}
                                                                                          >
                                                                                            <ForwardRef(IconButton)
                                                                                              className="MuiPickersDay-day MuiPickersDay-hidden"
                                                                                              classes={
                                                                                                Object {
                                                                                                  "colorInherit": "MuiIconButton-colorInherit",
                                                                                                  "colorPrimary": "MuiIconButton-colorPrimary",
                                                                                                  "colorSecondary": "MuiIconButton-colorSecondary",
                                                                                                  "disabled": "Mui-disabled",
                                                                                                  "edgeEnd": "MuiIconButton-edgeEnd",
                                                                                                  "edgeStart": "MuiIconButton-edgeStart",
                                                                                                  "label": "MuiIconButton-label",
                                                                                                  "root": "MuiIconButton-root",
                                                                                                  "sizeSmall": "MuiIconButton-sizeSmall",
                                                                                                }
                                                                                              }
                                                                                              tabIndex={-1}
                                                                                            >
                                                                                              <WithStyles(ForwardRef(ButtonBase))
                                                                                                centerRipple={true}
                                                                                                className="MuiIconButton-root MuiPickersDay-day MuiPickersDay-hidden"
                                                                                                disabled={false}
                                                                                                focusRipple={true}
                                                                                                tabIndex={-1}
                                                                                              >
                                                                                                <ForwardRef(ButtonBase)
                                                                                                  centerRipple={true}
                                                                                                  className="MuiIconButton-root MuiPickersDay-day MuiPickersDay-hidden"
                                                                                                  classes={
                                                                                                    Object {
                                                                                                      "disabled": "Mui-disabled",
                                                                                                      "focusVisible": "Mui-focusVisible",
                                                                                                      "root": "MuiButtonBase-root",
                                                                                                    }
                                                                                                  }
                                                                                                  disabled={false}
                                                                                                  focusRipple={true}
                                                                                                  tabIndex={-1}
                                                                                                >
                                                                                                  <button
                                                                                                    className="MuiButtonBase-root MuiIconButton-root MuiPickersDay-day MuiPickersDay-hidden"
                                                                                                    disabled={false}
                                                                                                    onBlur={[Function]}
                                                                                                    onDragLeave={[Function]}
                                                                                                    onFocus={[Function]}
                                                                                                    onKeyDown={[Function]}
                                                                                                    onKeyUp={[Function]}
                                                                                                    onMouseDown={[Function]}
                                                                                                    onMouseLeave={[Function]}
                                                                                                    onMouseUp={[Function]}
                                                                                                    onTouchEnd={[Function]}
                                                                                                    onTouchMove={[Function]}
                                                                                                    onTouchStart={[Function]}
                                                                                                    tabIndex={-1}
                                                                                                    type="button"
                                                                                                  >
                                                                                                    <span
                                                                                                      className="MuiIconButton-label"
                                                                                                    >
                                                                                                      <WithStyles(ForwardRef(Typography))
                                                                                                        color="inherit"
                                                                                                        variant="body2"
                                                                                                      >
                                                                                                        <ForwardRef(Typography)
                                                                                                          classes={
                                                                                                            Object {
                                                                                                              "alignCenter": "MuiTypography-alignCenter",
                                                                                                              "alignJustify": "MuiTypography-alignJustify",
                                                                                                              "alignLeft": "MuiTypography-alignLeft",
                                                                                                              "alignRight": "MuiTypography-alignRight",
                                                                                                              "body1": "MuiTypography-body1",
                                                                                                              "body2": "MuiTypography-body2",
                                                                                                              "button": "MuiTypography-button",
                                                                                                              "caption": "MuiTypography-caption",
                                                                                                              "colorError": "MuiTypography-colorError",
                                                                                                              "colorInherit": "MuiTypography-colorInherit",
                                                                                                              "colorPrimary": "MuiTypography-colorPrimary",
                                                                                                              "colorSecondary": "MuiTypography-colorSecondary",
                                                                                                              "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                                                              "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                                                              "displayBlock": "MuiTypography-displayBlock",
                                                                                                              "displayInline": "MuiTypography-displayInline",
                                                                                                              "gutterBottom": "MuiTypography-gutterBottom",
                                                                                                              "h1": "MuiTypography-h1",
                                                                                                              "h2": "MuiTypography-h2",
                                                                                                              "h3": "MuiTypography-h3",
                                                                                                              "h4": "MuiTypography-h4",
                                                                                                              "h5": "MuiTypography-h5",
                                                                                                              "h6": "MuiTypography-h6",
                                                                                                              "noWrap": "MuiTypography-noWrap",
                                                                                                              "overline": "MuiTypography-overline",
                                                                                                              "paragraph": "MuiTypography-paragraph",
                                                                                                              "root": "MuiTypography-root",
                                                                                                              "srOnly": "MuiTypography-srOnly",
                                                                                                              "subtitle1": "MuiTypography-subtitle1",
                                                                                                              "subtitle2": "MuiTypography-subtitle2",
                                                                                                            }
                                                                                                          }
                                                                                                          color="inherit"
                                                                                                          variant="body2"
                                                                                                        >
                                                                                                          <p
                                                                                                            className="MuiTypography-root MuiTypography-body2 MuiTypography-colorInherit"
                                                                                                          >
                                                                                                            28
                                                                                                          </p>
                                                                                                        </ForwardRef(Typography)>
                                                                                                      </WithStyles(ForwardRef(Typography))>
                                                                                                    </span>
                                                                                                    <NoSsr>
                                                                                                      <WithStyles(memo)
                                                                                                        center={true}
                                                                                                      >
                                                                                                        <ForwardRef(TouchRipple)
                                                                                                          center={true}
                                                                                                          classes={
                                                                                                            Object {
                                                                                                              "child": "MuiTouchRipple-child",
                                                                                                              "childLeaving": "MuiTouchRipple-childLeaving",
                                                                                                              "childPulsate": "MuiTouchRipple-childPulsate",
                                                                                                              "ripple": "MuiTouchRipple-ripple",
                                                                                                              "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                                                              "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                                                              "root": "MuiTouchRipple-root",
                                                                                                            }
                                                                                                          }
                                                                                                        >
                                                                                                          <span
                                                                                                            className="MuiTouchRipple-root"
                                                                                                          >
                                                                                                            <TransitionGroup
                                                                                                              childFactory={[Function]}
                                                                                                              component={null}
                                                                                                              exit={true}
                                                                                                            />
                                                                                                          </span>
                                                                                                        </ForwardRef(TouchRipple)>
                                                                                                      </WithStyles(memo)>
                                                                                                    </NoSsr>
                                                                                                  </button>
                                                                                                </ForwardRef(ButtonBase)>
                                                                                              </WithStyles(ForwardRef(ButtonBase))>
                                                                                            </ForwardRef(IconButton)>
                                                                                          </WithStyles(ForwardRef(IconButton))>
                                                                                        </Day>
                                                                                      </div>
                                                                                    </DayWrapper>
                                                                                    <DayWrapper
                                                                                      dayInCurrentMonth={false}
                                                                                      disabled={false}
                                                                                      key="Wed Jan 29 2020 00:00:00 GMT-0300 (Brasilia Standard Time)"
                                                                                      onSelect={[Function]}
                                                                                      value={2020-01-29T03:00:00.000Z}
                                                                                    >
                                                                                      <div
                                                                                        role="presentation"
                                                                                      >
                                                                                        <Day
                                                                                          current={false}
                                                                                          disabled={false}
                                                                                          hidden={true}
                                                                                          selected={false}
                                                                                        >
                                                                                          <WithStyles(ForwardRef(IconButton))
                                                                                            className="MuiPickersDay-day MuiPickersDay-hidden"
                                                                                            tabIndex={-1}
                                                                                          >
                                                                                            <ForwardRef(IconButton)
                                                                                              className="MuiPickersDay-day MuiPickersDay-hidden"
                                                                                              classes={
                                                                                                Object {
                                                                                                  "colorInherit": "MuiIconButton-colorInherit",
                                                                                                  "colorPrimary": "MuiIconButton-colorPrimary",
                                                                                                  "colorSecondary": "MuiIconButton-colorSecondary",
                                                                                                  "disabled": "Mui-disabled",
                                                                                                  "edgeEnd": "MuiIconButton-edgeEnd",
                                                                                                  "edgeStart": "MuiIconButton-edgeStart",
                                                                                                  "label": "MuiIconButton-label",
                                                                                                  "root": "MuiIconButton-root",
                                                                                                  "sizeSmall": "MuiIconButton-sizeSmall",
                                                                                                }
                                                                                              }
                                                                                              tabIndex={-1}
                                                                                            >
                                                                                              <WithStyles(ForwardRef(ButtonBase))
                                                                                                centerRipple={true}
                                                                                                className="MuiIconButton-root MuiPickersDay-day MuiPickersDay-hidden"
                                                                                                disabled={false}
                                                                                                focusRipple={true}
                                                                                                tabIndex={-1}
                                                                                              >
                                                                                                <ForwardRef(ButtonBase)
                                                                                                  centerRipple={true}
                                                                                                  className="MuiIconButton-root MuiPickersDay-day MuiPickersDay-hidden"
                                                                                                  classes={
                                                                                                    Object {
                                                                                                      "disabled": "Mui-disabled",
                                                                                                      "focusVisible": "Mui-focusVisible",
                                                                                                      "root": "MuiButtonBase-root",
                                                                                                    }
                                                                                                  }
                                                                                                  disabled={false}
                                                                                                  focusRipple={true}
                                                                                                  tabIndex={-1}
                                                                                                >
                                                                                                  <button
                                                                                                    className="MuiButtonBase-root MuiIconButton-root MuiPickersDay-day MuiPickersDay-hidden"
                                                                                                    disabled={false}
                                                                                                    onBlur={[Function]}
                                                                                                    onDragLeave={[Function]}
                                                                                                    onFocus={[Function]}
                                                                                                    onKeyDown={[Function]}
                                                                                                    onKeyUp={[Function]}
                                                                                                    onMouseDown={[Function]}
                                                                                                    onMouseLeave={[Function]}
                                                                                                    onMouseUp={[Function]}
                                                                                                    onTouchEnd={[Function]}
                                                                                                    onTouchMove={[Function]}
                                                                                                    onTouchStart={[Function]}
                                                                                                    tabIndex={-1}
                                                                                                    type="button"
                                                                                                  >
                                                                                                    <span
                                                                                                      className="MuiIconButton-label"
                                                                                                    >
                                                                                                      <WithStyles(ForwardRef(Typography))
                                                                                                        color="inherit"
                                                                                                        variant="body2"
                                                                                                      >
                                                                                                        <ForwardRef(Typography)
                                                                                                          classes={
                                                                                                            Object {
                                                                                                              "alignCenter": "MuiTypography-alignCenter",
                                                                                                              "alignJustify": "MuiTypography-alignJustify",
                                                                                                              "alignLeft": "MuiTypography-alignLeft",
                                                                                                              "alignRight": "MuiTypography-alignRight",
                                                                                                              "body1": "MuiTypography-body1",
                                                                                                              "body2": "MuiTypography-body2",
                                                                                                              "button": "MuiTypography-button",
                                                                                                              "caption": "MuiTypography-caption",
                                                                                                              "colorError": "MuiTypography-colorError",
                                                                                                              "colorInherit": "MuiTypography-colorInherit",
                                                                                                              "colorPrimary": "MuiTypography-colorPrimary",
                                                                                                              "colorSecondary": "MuiTypography-colorSecondary",
                                                                                                              "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                                                              "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                                                              "displayBlock": "MuiTypography-displayBlock",
                                                                                                              "displayInline": "MuiTypography-displayInline",
                                                                                                              "gutterBottom": "MuiTypography-gutterBottom",
                                                                                                              "h1": "MuiTypography-h1",
                                                                                                              "h2": "MuiTypography-h2",
                                                                                                              "h3": "MuiTypography-h3",
                                                                                                              "h4": "MuiTypography-h4",
                                                                                                              "h5": "MuiTypography-h5",
                                                                                                              "h6": "MuiTypography-h6",
                                                                                                              "noWrap": "MuiTypography-noWrap",
                                                                                                              "overline": "MuiTypography-overline",
                                                                                                              "paragraph": "MuiTypography-paragraph",
                                                                                                              "root": "MuiTypography-root",
                                                                                                              "srOnly": "MuiTypography-srOnly",
                                                                                                              "subtitle1": "MuiTypography-subtitle1",
                                                                                                              "subtitle2": "MuiTypography-subtitle2",
                                                                                                            }
                                                                                                          }
                                                                                                          color="inherit"
                                                                                                          variant="body2"
                                                                                                        >
                                                                                                          <p
                                                                                                            className="MuiTypography-root MuiTypography-body2 MuiTypography-colorInherit"
                                                                                                          >
                                                                                                            29
                                                                                                          </p>
                                                                                                        </ForwardRef(Typography)>
                                                                                                      </WithStyles(ForwardRef(Typography))>
                                                                                                    </span>
                                                                                                    <NoSsr>
                                                                                                      <WithStyles(memo)
                                                                                                        center={true}
                                                                                                      >
                                                                                                        <ForwardRef(TouchRipple)
                                                                                                          center={true}
                                                                                                          classes={
                                                                                                            Object {
                                                                                                              "child": "MuiTouchRipple-child",
                                                                                                              "childLeaving": "MuiTouchRipple-childLeaving",
                                                                                                              "childPulsate": "MuiTouchRipple-childPulsate",
                                                                                                              "ripple": "MuiTouchRipple-ripple",
                                                                                                              "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                                                              "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                                                              "root": "MuiTouchRipple-root",
                                                                                                            }
                                                                                                          }
                                                                                                        >
                                                                                                          <span
                                                                                                            className="MuiTouchRipple-root"
                                                                                                          >
                                                                                                            <TransitionGroup
                                                                                                              childFactory={[Function]}
                                                                                                              component={null}
                                                                                                              exit={true}
                                                                                                            />
                                                                                                          </span>
                                                                                                        </ForwardRef(TouchRipple)>
                                                                                                      </WithStyles(memo)>
                                                                                                    </NoSsr>
                                                                                                  </button>
                                                                                                </ForwardRef(ButtonBase)>
                                                                                              </WithStyles(ForwardRef(ButtonBase))>
                                                                                            </ForwardRef(IconButton)>
                                                                                          </WithStyles(ForwardRef(IconButton))>
                                                                                        </Day>
                                                                                      </div>
                                                                                    </DayWrapper>
                                                                                    <DayWrapper
                                                                                      dayInCurrentMonth={false}
                                                                                      disabled={false}
                                                                                      key="Thu Jan 30 2020 00:00:00 GMT-0300 (Brasilia Standard Time)"
                                                                                      onSelect={[Function]}
                                                                                      value={2020-01-30T03:00:00.000Z}
                                                                                    >
                                                                                      <div
                                                                                        role="presentation"
                                                                                      >
                                                                                        <Day
                                                                                          current={false}
                                                                                          disabled={false}
                                                                                          hidden={true}
                                                                                          selected={false}
                                                                                        >
                                                                                          <WithStyles(ForwardRef(IconButton))
                                                                                            className="MuiPickersDay-day MuiPickersDay-hidden"
                                                                                            tabIndex={-1}
                                                                                          >
                                                                                            <ForwardRef(IconButton)
                                                                                              className="MuiPickersDay-day MuiPickersDay-hidden"
                                                                                              classes={
                                                                                                Object {
                                                                                                  "colorInherit": "MuiIconButton-colorInherit",
                                                                                                  "colorPrimary": "MuiIconButton-colorPrimary",
                                                                                                  "colorSecondary": "MuiIconButton-colorSecondary",
                                                                                                  "disabled": "Mui-disabled",
                                                                                                  "edgeEnd": "MuiIconButton-edgeEnd",
                                                                                                  "edgeStart": "MuiIconButton-edgeStart",
                                                                                                  "label": "MuiIconButton-label",
                                                                                                  "root": "MuiIconButton-root",
                                                                                                  "sizeSmall": "MuiIconButton-sizeSmall",
                                                                                                }
                                                                                              }
                                                                                              tabIndex={-1}
                                                                                            >
                                                                                              <WithStyles(ForwardRef(ButtonBase))
                                                                                                centerRipple={true}
                                                                                                className="MuiIconButton-root MuiPickersDay-day MuiPickersDay-hidden"
                                                                                                disabled={false}
                                                                                                focusRipple={true}
                                                                                                tabIndex={-1}
                                                                                              >
                                                                                                <ForwardRef(ButtonBase)
                                                                                                  centerRipple={true}
                                                                                                  className="MuiIconButton-root MuiPickersDay-day MuiPickersDay-hidden"
                                                                                                  classes={
                                                                                                    Object {
                                                                                                      "disabled": "Mui-disabled",
                                                                                                      "focusVisible": "Mui-focusVisible",
                                                                                                      "root": "MuiButtonBase-root",
                                                                                                    }
                                                                                                  }
                                                                                                  disabled={false}
                                                                                                  focusRipple={true}
                                                                                                  tabIndex={-1}
                                                                                                >
                                                                                                  <button
                                                                                                    className="MuiButtonBase-root MuiIconButton-root MuiPickersDay-day MuiPickersDay-hidden"
                                                                                                    disabled={false}
                                                                                                    onBlur={[Function]}
                                                                                                    onDragLeave={[Function]}
                                                                                                    onFocus={[Function]}
                                                                                                    onKeyDown={[Function]}
                                                                                                    onKeyUp={[Function]}
                                                                                                    onMouseDown={[Function]}
                                                                                                    onMouseLeave={[Function]}
                                                                                                    onMouseUp={[Function]}
                                                                                                    onTouchEnd={[Function]}
                                                                                                    onTouchMove={[Function]}
                                                                                                    onTouchStart={[Function]}
                                                                                                    tabIndex={-1}
                                                                                                    type="button"
                                                                                                  >
                                                                                                    <span
                                                                                                      className="MuiIconButton-label"
                                                                                                    >
                                                                                                      <WithStyles(ForwardRef(Typography))
                                                                                                        color="inherit"
                                                                                                        variant="body2"
                                                                                                      >
                                                                                                        <ForwardRef(Typography)
                                                                                                          classes={
                                                                                                            Object {
                                                                                                              "alignCenter": "MuiTypography-alignCenter",
                                                                                                              "alignJustify": "MuiTypography-alignJustify",
                                                                                                              "alignLeft": "MuiTypography-alignLeft",
                                                                                                              "alignRight": "MuiTypography-alignRight",
                                                                                                              "body1": "MuiTypography-body1",
                                                                                                              "body2": "MuiTypography-body2",
                                                                                                              "button": "MuiTypography-button",
                                                                                                              "caption": "MuiTypography-caption",
                                                                                                              "colorError": "MuiTypography-colorError",
                                                                                                              "colorInherit": "MuiTypography-colorInherit",
                                                                                                              "colorPrimary": "MuiTypography-colorPrimary",
                                                                                                              "colorSecondary": "MuiTypography-colorSecondary",
                                                                                                              "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                                                              "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                                                              "displayBlock": "MuiTypography-displayBlock",
                                                                                                              "displayInline": "MuiTypography-displayInline",
                                                                                                              "gutterBottom": "MuiTypography-gutterBottom",
                                                                                                              "h1": "MuiTypography-h1",
                                                                                                              "h2": "MuiTypography-h2",
                                                                                                              "h3": "MuiTypography-h3",
                                                                                                              "h4": "MuiTypography-h4",
                                                                                                              "h5": "MuiTypography-h5",
                                                                                                              "h6": "MuiTypography-h6",
                                                                                                              "noWrap": "MuiTypography-noWrap",
                                                                                                              "overline": "MuiTypography-overline",
                                                                                                              "paragraph": "MuiTypography-paragraph",
                                                                                                              "root": "MuiTypography-root",
                                                                                                              "srOnly": "MuiTypography-srOnly",
                                                                                                              "subtitle1": "MuiTypography-subtitle1",
                                                                                                              "subtitle2": "MuiTypography-subtitle2",
                                                                                                            }
                                                                                                          }
                                                                                                          color="inherit"
                                                                                                          variant="body2"
                                                                                                        >
                                                                                                          <p
                                                                                                            className="MuiTypography-root MuiTypography-body2 MuiTypography-colorInherit"
                                                                                                          >
                                                                                                            30
                                                                                                          </p>
                                                                                                        </ForwardRef(Typography)>
                                                                                                      </WithStyles(ForwardRef(Typography))>
                                                                                                    </span>
                                                                                                    <NoSsr>
                                                                                                      <WithStyles(memo)
                                                                                                        center={true}
                                                                                                      >
                                                                                                        <ForwardRef(TouchRipple)
                                                                                                          center={true}
                                                                                                          classes={
                                                                                                            Object {
                                                                                                              "child": "MuiTouchRipple-child",
                                                                                                              "childLeaving": "MuiTouchRipple-childLeaving",
                                                                                                              "childPulsate": "MuiTouchRipple-childPulsate",
                                                                                                              "ripple": "MuiTouchRipple-ripple",
                                                                                                              "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                                                              "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                                                              "root": "MuiTouchRipple-root",
                                                                                                            }
                                                                                                          }
                                                                                                        >
                                                                                                          <span
                                                                                                            className="MuiTouchRipple-root"
                                                                                                          >
                                                                                                            <TransitionGroup
                                                                                                              childFactory={[Function]}
                                                                                                              component={null}
                                                                                                              exit={true}
                                                                                                            />
                                                                                                          </span>
                                                                                                        </ForwardRef(TouchRipple)>
                                                                                                      </WithStyles(memo)>
                                                                                                    </NoSsr>
                                                                                                  </button>
                                                                                                </ForwardRef(ButtonBase)>
                                                                                              </WithStyles(ForwardRef(ButtonBase))>
                                                                                            </ForwardRef(IconButton)>
                                                                                          </WithStyles(ForwardRef(IconButton))>
                                                                                        </Day>
                                                                                      </div>
                                                                                    </DayWrapper>
                                                                                    <DayWrapper
                                                                                      dayInCurrentMonth={false}
                                                                                      disabled={false}
                                                                                      key="Fri Jan 31 2020 00:00:00 GMT-0300 (Brasilia Standard Time)"
                                                                                      onSelect={[Function]}
                                                                                      value={2020-01-31T03:00:00.000Z}
                                                                                    >
                                                                                      <div
                                                                                        role="presentation"
                                                                                      >
                                                                                        <Day
                                                                                          current={false}
                                                                                          disabled={false}
                                                                                          hidden={true}
                                                                                          selected={false}
                                                                                        >
                                                                                          <WithStyles(ForwardRef(IconButton))
                                                                                            className="MuiPickersDay-day MuiPickersDay-hidden"
                                                                                            tabIndex={-1}
                                                                                          >
                                                                                            <ForwardRef(IconButton)
                                                                                              className="MuiPickersDay-day MuiPickersDay-hidden"
                                                                                              classes={
                                                                                                Object {
                                                                                                  "colorInherit": "MuiIconButton-colorInherit",
                                                                                                  "colorPrimary": "MuiIconButton-colorPrimary",
                                                                                                  "colorSecondary": "MuiIconButton-colorSecondary",
                                                                                                  "disabled": "Mui-disabled",
                                                                                                  "edgeEnd": "MuiIconButton-edgeEnd",
                                                                                                  "edgeStart": "MuiIconButton-edgeStart",
                                                                                                  "label": "MuiIconButton-label",
                                                                                                  "root": "MuiIconButton-root",
                                                                                                  "sizeSmall": "MuiIconButton-sizeSmall",
                                                                                                }
                                                                                              }
                                                                                              tabIndex={-1}
                                                                                            >
                                                                                              <WithStyles(ForwardRef(ButtonBase))
                                                                                                centerRipple={true}
                                                                                                className="MuiIconButton-root MuiPickersDay-day MuiPickersDay-hidden"
                                                                                                disabled={false}
                                                                                                focusRipple={true}
                                                                                                tabIndex={-1}
                                                                                              >
                                                                                                <ForwardRef(ButtonBase)
                                                                                                  centerRipple={true}
                                                                                                  className="MuiIconButton-root MuiPickersDay-day MuiPickersDay-hidden"
                                                                                                  classes={
                                                                                                    Object {
                                                                                                      "disabled": "Mui-disabled",
                                                                                                      "focusVisible": "Mui-focusVisible",
                                                                                                      "root": "MuiButtonBase-root",
                                                                                                    }
                                                                                                  }
                                                                                                  disabled={false}
                                                                                                  focusRipple={true}
                                                                                                  tabIndex={-1}
                                                                                                >
                                                                                                  <button
                                                                                                    className="MuiButtonBase-root MuiIconButton-root MuiPickersDay-day MuiPickersDay-hidden"
                                                                                                    disabled={false}
                                                                                                    onBlur={[Function]}
                                                                                                    onDragLeave={[Function]}
                                                                                                    onFocus={[Function]}
                                                                                                    onKeyDown={[Function]}
                                                                                                    onKeyUp={[Function]}
                                                                                                    onMouseDown={[Function]}
                                                                                                    onMouseLeave={[Function]}
                                                                                                    onMouseUp={[Function]}
                                                                                                    onTouchEnd={[Function]}
                                                                                                    onTouchMove={[Function]}
                                                                                                    onTouchStart={[Function]}
                                                                                                    tabIndex={-1}
                                                                                                    type="button"
                                                                                                  >
                                                                                                    <span
                                                                                                      className="MuiIconButton-label"
                                                                                                    >
                                                                                                      <WithStyles(ForwardRef(Typography))
                                                                                                        color="inherit"
                                                                                                        variant="body2"
                                                                                                      >
                                                                                                        <ForwardRef(Typography)
                                                                                                          classes={
                                                                                                            Object {
                                                                                                              "alignCenter": "MuiTypography-alignCenter",
                                                                                                              "alignJustify": "MuiTypography-alignJustify",
                                                                                                              "alignLeft": "MuiTypography-alignLeft",
                                                                                                              "alignRight": "MuiTypography-alignRight",
                                                                                                              "body1": "MuiTypography-body1",
                                                                                                              "body2": "MuiTypography-body2",
                                                                                                              "button": "MuiTypography-button",
                                                                                                              "caption": "MuiTypography-caption",
                                                                                                              "colorError": "MuiTypography-colorError",
                                                                                                              "colorInherit": "MuiTypography-colorInherit",
                                                                                                              "colorPrimary": "MuiTypography-colorPrimary",
                                                                                                              "colorSecondary": "MuiTypography-colorSecondary",
                                                                                                              "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                                                              "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                                                              "displayBlock": "MuiTypography-displayBlock",
                                                                                                              "displayInline": "MuiTypography-displayInline",
                                                                                                              "gutterBottom": "MuiTypography-gutterBottom",
                                                                                                              "h1": "MuiTypography-h1",
                                                                                                              "h2": "MuiTypography-h2",
                                                                                                              "h3": "MuiTypography-h3",
                                                                                                              "h4": "MuiTypography-h4",
                                                                                                              "h5": "MuiTypography-h5",
                                                                                                              "h6": "MuiTypography-h6",
                                                                                                              "noWrap": "MuiTypography-noWrap",
                                                                                                              "overline": "MuiTypography-overline",
                                                                                                              "paragraph": "MuiTypography-paragraph",
                                                                                                              "root": "MuiTypography-root",
                                                                                                              "srOnly": "MuiTypography-srOnly",
                                                                                                              "subtitle1": "MuiTypography-subtitle1",
                                                                                                              "subtitle2": "MuiTypography-subtitle2",
                                                                                                            }
                                                                                                          }
                                                                                                          color="inherit"
                                                                                                          variant="body2"
                                                                                                        >
                                                                                                          <p
                                                                                                            className="MuiTypography-root MuiTypography-body2 MuiTypography-colorInherit"
                                                                                                          >
                                                                                                            31
                                                                                                          </p>
                                                                                                        </ForwardRef(Typography)>
                                                                                                      </WithStyles(ForwardRef(Typography))>
                                                                                                    </span>
                                                                                                    <NoSsr>
                                                                                                      <WithStyles(memo)
                                                                                                        center={true}
                                                                                                      >
                                                                                                        <ForwardRef(TouchRipple)
                                                                                                          center={true}
                                                                                                          classes={
                                                                                                            Object {
                                                                                                              "child": "MuiTouchRipple-child",
                                                                                                              "childLeaving": "MuiTouchRipple-childLeaving",
                                                                                                              "childPulsate": "MuiTouchRipple-childPulsate",
                                                                                                              "ripple": "MuiTouchRipple-ripple",
                                                                                                              "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                                                              "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                                                              "root": "MuiTouchRipple-root",
                                                                                                            }
                                                                                                          }
                                                                                                        >
                                                                                                          <span
                                                                                                            className="MuiTouchRipple-root"
                                                                                                          >
                                                                                                            <TransitionGroup
                                                                                                              childFactory={[Function]}
                                                                                                              component={null}
                                                                                                              exit={true}
                                                                                                            />
                                                                                                          </span>
                                                                                                        </ForwardRef(TouchRipple)>
                                                                                                      </WithStyles(memo)>
                                                                                                    </NoSsr>
                                                                                                  </button>
                                                                                                </ForwardRef(ButtonBase)>
                                                                                              </WithStyles(ForwardRef(ButtonBase))>
                                                                                            </ForwardRef(IconButton)>
                                                                                          </WithStyles(ForwardRef(IconButton))>
                                                                                        </Day>
                                                                                      </div>
                                                                                    </DayWrapper>
                                                                                    <DayWrapper
                                                                                      dayInCurrentMonth={true}
                                                                                      disabled={false}
                                                                                      key="Sat Feb 01 2020 00:00:00 GMT-0300 (Brasilia Standard Time)"
                                                                                      onSelect={[Function]}
                                                                                      value={2020-02-01T03:00:00.000Z}
                                                                                    >
                                                                                      <div
                                                                                        onClick={[Function]}
                                                                                        onKeyPress={[Function]}
                                                                                        role="presentation"
                                                                                      >
                                                                                        <Day
                                                                                          current={false}
                                                                                          disabled={false}
                                                                                          hidden={false}
                                                                                          selected={true}
                                                                                        >
                                                                                          <WithStyles(ForwardRef(IconButton))
                                                                                            className="MuiPickersDay-day MuiPickersDay-daySelected"
                                                                                            tabIndex={0}
                                                                                          >
                                                                                            <ForwardRef(IconButton)
                                                                                              className="MuiPickersDay-day MuiPickersDay-daySelected"
                                                                                              classes={
                                                                                                Object {
                                                                                                  "colorInherit": "MuiIconButton-colorInherit",
                                                                                                  "colorPrimary": "MuiIconButton-colorPrimary",
                                                                                                  "colorSecondary": "MuiIconButton-colorSecondary",
                                                                                                  "disabled": "Mui-disabled",
                                                                                                  "edgeEnd": "MuiIconButton-edgeEnd",
                                                                                                  "edgeStart": "MuiIconButton-edgeStart",
                                                                                                  "label": "MuiIconButton-label",
                                                                                                  "root": "MuiIconButton-root",
                                                                                                  "sizeSmall": "MuiIconButton-sizeSmall",
                                                                                                }
                                                                                              }
                                                                                              tabIndex={0}
                                                                                            >
                                                                                              <WithStyles(ForwardRef(ButtonBase))
                                                                                                centerRipple={true}
                                                                                                className="MuiIconButton-root MuiPickersDay-day MuiPickersDay-daySelected"
                                                                                                disabled={false}
                                                                                                focusRipple={true}
                                                                                                tabIndex={0}
                                                                                              >
                                                                                                <ForwardRef(ButtonBase)
                                                                                                  centerRipple={true}
                                                                                                  className="MuiIconButton-root MuiPickersDay-day MuiPickersDay-daySelected"
                                                                                                  classes={
                                                                                                    Object {
                                                                                                      "disabled": "Mui-disabled",
                                                                                                      "focusVisible": "Mui-focusVisible",
                                                                                                      "root": "MuiButtonBase-root",
                                                                                                    }
                                                                                                  }
                                                                                                  disabled={false}
                                                                                                  focusRipple={true}
                                                                                                  tabIndex={0}
                                                                                                >
                                                                                                  <button
                                                                                                    className="MuiButtonBase-root MuiIconButton-root MuiPickersDay-day MuiPickersDay-daySelected"
                                                                                                    disabled={false}
                                                                                                    onBlur={[Function]}
                                                                                                    onDragLeave={[Function]}
                                                                                                    onFocus={[Function]}
                                                                                                    onKeyDown={[Function]}
                                                                                                    onKeyUp={[Function]}
                                                                                                    onMouseDown={[Function]}
                                                                                                    onMouseLeave={[Function]}
                                                                                                    onMouseUp={[Function]}
                                                                                                    onTouchEnd={[Function]}
                                                                                                    onTouchMove={[Function]}
                                                                                                    onTouchStart={[Function]}
                                                                                                    tabIndex={0}
                                                                                                    type="button"
                                                                                                  >
                                                                                                    <span
                                                                                                      className="MuiIconButton-label"
                                                                                                    >
                                                                                                      <WithStyles(ForwardRef(Typography))
                                                                                                        color="inherit"
                                                                                                        variant="body2"
                                                                                                      >
                                                                                                        <ForwardRef(Typography)
                                                                                                          classes={
                                                                                                            Object {
                                                                                                              "alignCenter": "MuiTypography-alignCenter",
                                                                                                              "alignJustify": "MuiTypography-alignJustify",
                                                                                                              "alignLeft": "MuiTypography-alignLeft",
                                                                                                              "alignRight": "MuiTypography-alignRight",
                                                                                                              "body1": "MuiTypography-body1",
                                                                                                              "body2": "MuiTypography-body2",
                                                                                                              "button": "MuiTypography-button",
                                                                                                              "caption": "MuiTypography-caption",
                                                                                                              "colorError": "MuiTypography-colorError",
                                                                                                              "colorInherit": "MuiTypography-colorInherit",
                                                                                                              "colorPrimary": "MuiTypography-colorPrimary",
                                                                                                              "colorSecondary": "MuiTypography-colorSecondary",
                                                                                                              "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                                                              "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                                                              "displayBlock": "MuiTypography-displayBlock",
                                                                                                              "displayInline": "MuiTypography-displayInline",
                                                                                                              "gutterBottom": "MuiTypography-gutterBottom",
                                                                                                              "h1": "MuiTypography-h1",
                                                                                                              "h2": "MuiTypography-h2",
                                                                                                              "h3": "MuiTypography-h3",
                                                                                                              "h4": "MuiTypography-h4",
                                                                                                              "h5": "MuiTypography-h5",
                                                                                                              "h6": "MuiTypography-h6",
                                                                                                              "noWrap": "MuiTypography-noWrap",
                                                                                                              "overline": "MuiTypography-overline",
                                                                                                              "paragraph": "MuiTypography-paragraph",
                                                                                                              "root": "MuiTypography-root",
                                                                                                              "srOnly": "MuiTypography-srOnly",
                                                                                                              "subtitle1": "MuiTypography-subtitle1",
                                                                                                              "subtitle2": "MuiTypography-subtitle2",
                                                                                                            }
                                                                                                          }
                                                                                                          color="inherit"
                                                                                                          variant="body2"
                                                                                                        >
                                                                                                          <p
                                                                                                            className="MuiTypography-root MuiTypography-body2 MuiTypography-colorInherit"
                                                                                                          >
                                                                                                            1
                                                                                                          </p>
                                                                                                        </ForwardRef(Typography)>
                                                                                                      </WithStyles(ForwardRef(Typography))>
                                                                                                    </span>
                                                                                                    <NoSsr>
                                                                                                      <WithStyles(memo)
                                                                                                        center={true}
                                                                                                      >
                                                                                                        <ForwardRef(TouchRipple)
                                                                                                          center={true}
                                                                                                          classes={
                                                                                                            Object {
                                                                                                              "child": "MuiTouchRipple-child",
                                                                                                              "childLeaving": "MuiTouchRipple-childLeaving",
                                                                                                              "childPulsate": "MuiTouchRipple-childPulsate",
                                                                                                              "ripple": "MuiTouchRipple-ripple",
                                                                                                              "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                                                              "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                                                              "root": "MuiTouchRipple-root",
                                                                                                            }
                                                                                                          }
                                                                                                        >
                                                                                                          <span
                                                                                                            className="MuiTouchRipple-root"
                                                                                                          >
                                                                                                            <TransitionGroup
                                                                                                              childFactory={[Function]}
                                                                                                              component={null}
                                                                                                              exit={true}
                                                                                                            />
                                                                                                          </span>
                                                                                                        </ForwardRef(TouchRipple)>
                                                                                                      </WithStyles(memo)>
                                                                                                    </NoSsr>
                                                                                                  </button>
                                                                                                </ForwardRef(ButtonBase)>
                                                                                              </WithStyles(ForwardRef(ButtonBase))>
                                                                                            </ForwardRef(IconButton)>
                                                                                          </WithStyles(ForwardRef(IconButton))>
                                                                                        </Day>
                                                                                      </div>
                                                                                    </DayWrapper>
                                                                                  </div>
                                                                                  <div
                                                                                    className="MuiPickersCalendar-week"
                                                                                    key="week-Sun Feb 02 2020 00:00:00 GMT-0300 (Brasilia Standard Time)"
                                                                                  >
                                                                                    <DayWrapper
                                                                                      dayInCurrentMonth={true}
                                                                                      disabled={false}
                                                                                      key="Sun Feb 02 2020 00:00:00 GMT-0300 (Brasilia Standard Time)"
                                                                                      onSelect={[Function]}
                                                                                      value={2020-02-02T03:00:00.000Z}
                                                                                    >
                                                                                      <div
                                                                                        onClick={[Function]}
                                                                                        onKeyPress={[Function]}
                                                                                        role="presentation"
                                                                                      >
                                                                                        <Day
                                                                                          current={false}
                                                                                          disabled={false}
                                                                                          hidden={false}
                                                                                          selected={false}
                                                                                        >
                                                                                          <WithStyles(ForwardRef(IconButton))
                                                                                            className="MuiPickersDay-day"
                                                                                            tabIndex={0}
                                                                                          >
                                                                                            <ForwardRef(IconButton)
                                                                                              className="MuiPickersDay-day"
                                                                                              classes={
                                                                                                Object {
                                                                                                  "colorInherit": "MuiIconButton-colorInherit",
                                                                                                  "colorPrimary": "MuiIconButton-colorPrimary",
                                                                                                  "colorSecondary": "MuiIconButton-colorSecondary",
                                                                                                  "disabled": "Mui-disabled",
                                                                                                  "edgeEnd": "MuiIconButton-edgeEnd",
                                                                                                  "edgeStart": "MuiIconButton-edgeStart",
                                                                                                  "label": "MuiIconButton-label",
                                                                                                  "root": "MuiIconButton-root",
                                                                                                  "sizeSmall": "MuiIconButton-sizeSmall",
                                                                                                }
                                                                                              }
                                                                                              tabIndex={0}
                                                                                            >
                                                                                              <WithStyles(ForwardRef(ButtonBase))
                                                                                                centerRipple={true}
                                                                                                className="MuiIconButton-root MuiPickersDay-day"
                                                                                                disabled={false}
                                                                                                focusRipple={true}
                                                                                                tabIndex={0}
                                                                                              >
                                                                                                <ForwardRef(ButtonBase)
                                                                                                  centerRipple={true}
                                                                                                  className="MuiIconButton-root MuiPickersDay-day"
                                                                                                  classes={
                                                                                                    Object {
                                                                                                      "disabled": "Mui-disabled",
                                                                                                      "focusVisible": "Mui-focusVisible",
                                                                                                      "root": "MuiButtonBase-root",
                                                                                                    }
                                                                                                  }
                                                                                                  disabled={false}
                                                                                                  focusRipple={true}
                                                                                                  tabIndex={0}
                                                                                                >
                                                                                                  <button
                                                                                                    className="MuiButtonBase-root MuiIconButton-root MuiPickersDay-day"
                                                                                                    disabled={false}
                                                                                                    onBlur={[Function]}
                                                                                                    onDragLeave={[Function]}
                                                                                                    onFocus={[Function]}
                                                                                                    onKeyDown={[Function]}
                                                                                                    onKeyUp={[Function]}
                                                                                                    onMouseDown={[Function]}
                                                                                                    onMouseLeave={[Function]}
                                                                                                    onMouseUp={[Function]}
                                                                                                    onTouchEnd={[Function]}
                                                                                                    onTouchMove={[Function]}
                                                                                                    onTouchStart={[Function]}
                                                                                                    tabIndex={0}
                                                                                                    type="button"
                                                                                                  >
                                                                                                    <span
                                                                                                      className="MuiIconButton-label"
                                                                                                    >
                                                                                                      <WithStyles(ForwardRef(Typography))
                                                                                                        color="inherit"
                                                                                                        variant="body2"
                                                                                                      >
                                                                                                        <ForwardRef(Typography)
                                                                                                          classes={
                                                                                                            Object {
                                                                                                              "alignCenter": "MuiTypography-alignCenter",
                                                                                                              "alignJustify": "MuiTypography-alignJustify",
                                                                                                              "alignLeft": "MuiTypography-alignLeft",
                                                                                                              "alignRight": "MuiTypography-alignRight",
                                                                                                              "body1": "MuiTypography-body1",
                                                                                                              "body2": "MuiTypography-body2",
                                                                                                              "button": "MuiTypography-button",
                                                                                                              "caption": "MuiTypography-caption",
                                                                                                              "colorError": "MuiTypography-colorError",
                                                                                                              "colorInherit": "MuiTypography-colorInherit",
                                                                                                              "colorPrimary": "MuiTypography-colorPrimary",
                                                                                                              "colorSecondary": "MuiTypography-colorSecondary",
                                                                                                              "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                                                              "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                                                              "displayBlock": "MuiTypography-displayBlock",
                                                                                                              "displayInline": "MuiTypography-displayInline",
                                                                                                              "gutterBottom": "MuiTypography-gutterBottom",
                                                                                                              "h1": "MuiTypography-h1",
                                                                                                              "h2": "MuiTypography-h2",
                                                                                                              "h3": "MuiTypography-h3",
                                                                                                              "h4": "MuiTypography-h4",
                                                                                                              "h5": "MuiTypography-h5",
                                                                                                              "h6": "MuiTypography-h6",
                                                                                                              "noWrap": "MuiTypography-noWrap",
                                                                                                              "overline": "MuiTypography-overline",
                                                                                                              "paragraph": "MuiTypography-paragraph",
                                                                                                              "root": "MuiTypography-root",
                                                                                                              "srOnly": "MuiTypography-srOnly",
                                                                                                              "subtitle1": "MuiTypography-subtitle1",
                                                                                                              "subtitle2": "MuiTypography-subtitle2",
                                                                                                            }
                                                                                                          }
                                                                                                          color="inherit"
                                                                                                          variant="body2"
                                                                                                        >
                                                                                                          <p
                                                                                                            className="MuiTypography-root MuiTypography-body2 MuiTypography-colorInherit"
                                                                                                          >
                                                                                                            2
                                                                                                          </p>
                                                                                                        </ForwardRef(Typography)>
                                                                                                      </WithStyles(ForwardRef(Typography))>
                                                                                                    </span>
                                                                                                    <NoSsr>
                                                                                                      <WithStyles(memo)
                                                                                                        center={true}
                                                                                                      >
                                                                                                        <ForwardRef(TouchRipple)
                                                                                                          center={true}
                                                                                                          classes={
                                                                                                            Object {
                                                                                                              "child": "MuiTouchRipple-child",
                                                                                                              "childLeaving": "MuiTouchRipple-childLeaving",
                                                                                                              "childPulsate": "MuiTouchRipple-childPulsate",
                                                                                                              "ripple": "MuiTouchRipple-ripple",
                                                                                                              "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                                                              "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                                                              "root": "MuiTouchRipple-root",
                                                                                                            }
                                                                                                          }
                                                                                                        >
                                                                                                          <span
                                                                                                            className="MuiTouchRipple-root"
                                                                                                          >
                                                                                                            <TransitionGroup
                                                                                                              childFactory={[Function]}
                                                                                                              component={null}
                                                                                                              exit={true}
                                                                                                            />
                                                                                                          </span>
                                                                                                        </ForwardRef(TouchRipple)>
                                                                                                      </WithStyles(memo)>
                                                                                                    </NoSsr>
                                                                                                  </button>
                                                                                                </ForwardRef(ButtonBase)>
                                                                                              </WithStyles(ForwardRef(ButtonBase))>
                                                                                            </ForwardRef(IconButton)>
                                                                                          </WithStyles(ForwardRef(IconButton))>
                                                                                        </Day>
                                                                                      </div>
                                                                                    </DayWrapper>
                                                                                    <DayWrapper
                                                                                      dayInCurrentMonth={true}
                                                                                      disabled={false}
                                                                                      key="Mon Feb 03 2020 00:00:00 GMT-0300 (Brasilia Standard Time)"
                                                                                      onSelect={[Function]}
                                                                                      value={2020-02-03T03:00:00.000Z}
                                                                                    >
                                                                                      <div
                                                                                        onClick={[Function]}
                                                                                        onKeyPress={[Function]}
                                                                                        role="presentation"
                                                                                      >
                                                                                        <Day
                                                                                          current={false}
                                                                                          disabled={false}
                                                                                          hidden={false}
                                                                                          selected={false}
                                                                                        >
                                                                                          <WithStyles(ForwardRef(IconButton))
                                                                                            className="MuiPickersDay-day"
                                                                                            tabIndex={0}
                                                                                          >
                                                                                            <ForwardRef(IconButton)
                                                                                              className="MuiPickersDay-day"
                                                                                              classes={
                                                                                                Object {
                                                                                                  "colorInherit": "MuiIconButton-colorInherit",
                                                                                                  "colorPrimary": "MuiIconButton-colorPrimary",
                                                                                                  "colorSecondary": "MuiIconButton-colorSecondary",
                                                                                                  "disabled": "Mui-disabled",
                                                                                                  "edgeEnd": "MuiIconButton-edgeEnd",
                                                                                                  "edgeStart": "MuiIconButton-edgeStart",
                                                                                                  "label": "MuiIconButton-label",
                                                                                                  "root": "MuiIconButton-root",
                                                                                                  "sizeSmall": "MuiIconButton-sizeSmall",
                                                                                                }
                                                                                              }
                                                                                              tabIndex={0}
                                                                                            >
                                                                                              <WithStyles(ForwardRef(ButtonBase))
                                                                                                centerRipple={true}
                                                                                                className="MuiIconButton-root MuiPickersDay-day"
                                                                                                disabled={false}
                                                                                                focusRipple={true}
                                                                                                tabIndex={0}
                                                                                              >
                                                                                                <ForwardRef(ButtonBase)
                                                                                                  centerRipple={true}
                                                                                                  className="MuiIconButton-root MuiPickersDay-day"
                                                                                                  classes={
                                                                                                    Object {
                                                                                                      "disabled": "Mui-disabled",
                                                                                                      "focusVisible": "Mui-focusVisible",
                                                                                                      "root": "MuiButtonBase-root",
                                                                                                    }
                                                                                                  }
                                                                                                  disabled={false}
                                                                                                  focusRipple={true}
                                                                                                  tabIndex={0}
                                                                                                >
                                                                                                  <button
                                                                                                    className="MuiButtonBase-root MuiIconButton-root MuiPickersDay-day"
                                                                                                    disabled={false}
                                                                                                    onBlur={[Function]}
                                                                                                    onDragLeave={[Function]}
                                                                                                    onFocus={[Function]}
                                                                                                    onKeyDown={[Function]}
                                                                                                    onKeyUp={[Function]}
                                                                                                    onMouseDown={[Function]}
                                                                                                    onMouseLeave={[Function]}
                                                                                                    onMouseUp={[Function]}
                                                                                                    onTouchEnd={[Function]}
                                                                                                    onTouchMove={[Function]}
                                                                                                    onTouchStart={[Function]}
                                                                                                    tabIndex={0}
                                                                                                    type="button"
                                                                                                  >
                                                                                                    <span
                                                                                                      className="MuiIconButton-label"
                                                                                                    >
                                                                                                      <WithStyles(ForwardRef(Typography))
                                                                                                        color="inherit"
                                                                                                        variant="body2"
                                                                                                      >
                                                                                                        <ForwardRef(Typography)
                                                                                                          classes={
                                                                                                            Object {
                                                                                                              "alignCenter": "MuiTypography-alignCenter",
                                                                                                              "alignJustify": "MuiTypography-alignJustify",
                                                                                                              "alignLeft": "MuiTypography-alignLeft",
                                                                                                              "alignRight": "MuiTypography-alignRight",
                                                                                                              "body1": "MuiTypography-body1",
                                                                                                              "body2": "MuiTypography-body2",
                                                                                                              "button": "MuiTypography-button",
                                                                                                              "caption": "MuiTypography-caption",
                                                                                                              "colorError": "MuiTypography-colorError",
                                                                                                              "colorInherit": "MuiTypography-colorInherit",
                                                                                                              "colorPrimary": "MuiTypography-colorPrimary",
                                                                                                              "colorSecondary": "MuiTypography-colorSecondary",
                                                                                                              "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                                                              "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                                                              "displayBlock": "MuiTypography-displayBlock",
                                                                                                              "displayInline": "MuiTypography-displayInline",
                                                                                                              "gutterBottom": "MuiTypography-gutterBottom",
                                                                                                              "h1": "MuiTypography-h1",
                                                                                                              "h2": "MuiTypography-h2",
                                                                                                              "h3": "MuiTypography-h3",
                                                                                                              "h4": "MuiTypography-h4",
                                                                                                              "h5": "MuiTypography-h5",
                                                                                                              "h6": "MuiTypography-h6",
                                                                                                              "noWrap": "MuiTypography-noWrap",
                                                                                                              "overline": "MuiTypography-overline",
                                                                                                              "paragraph": "MuiTypography-paragraph",
                                                                                                              "root": "MuiTypography-root",
                                                                                                              "srOnly": "MuiTypography-srOnly",
                                                                                                              "subtitle1": "MuiTypography-subtitle1",
                                                                                                              "subtitle2": "MuiTypography-subtitle2",
                                                                                                            }
                                                                                                          }
                                                                                                          color="inherit"
                                                                                                          variant="body2"
                                                                                                        >
                                                                                                          <p
                                                                                                            className="MuiTypography-root MuiTypography-body2 MuiTypography-colorInherit"
                                                                                                          >
                                                                                                            3
                                                                                                          </p>
                                                                                                        </ForwardRef(Typography)>
                                                                                                      </WithStyles(ForwardRef(Typography))>
                                                                                                    </span>
                                                                                                    <NoSsr>
                                                                                                      <WithStyles(memo)
                                                                                                        center={true}
                                                                                                      >
                                                                                                        <ForwardRef(TouchRipple)
                                                                                                          center={true}
                                                                                                          classes={
                                                                                                            Object {
                                                                                                              "child": "MuiTouchRipple-child",
                                                                                                              "childLeaving": "MuiTouchRipple-childLeaving",
                                                                                                              "childPulsate": "MuiTouchRipple-childPulsate",
                                                                                                              "ripple": "MuiTouchRipple-ripple",
                                                                                                              "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                                                              "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                                                              "root": "MuiTouchRipple-root",
                                                                                                            }
                                                                                                          }
                                                                                                        >
                                                                                                          <span
                                                                                                            className="MuiTouchRipple-root"
                                                                                                          >
                                                                                                            <TransitionGroup
                                                                                                              childFactory={[Function]}
                                                                                                              component={null}
                                                                                                              exit={true}
                                                                                                            />
                                                                                                          </span>
                                                                                                        </ForwardRef(TouchRipple)>
                                                                                                      </WithStyles(memo)>
                                                                                                    </NoSsr>
                                                                                                  </button>
                                                                                                </ForwardRef(ButtonBase)>
                                                                                              </WithStyles(ForwardRef(ButtonBase))>
                                                                                            </ForwardRef(IconButton)>
                                                                                          </WithStyles(ForwardRef(IconButton))>
                                                                                        </Day>
                                                                                      </div>
                                                                                    </DayWrapper>
                                                                                    <DayWrapper
                                                                                      dayInCurrentMonth={true}
                                                                                      disabled={false}
                                                                                      key="Tue Feb 04 2020 00:00:00 GMT-0300 (Brasilia Standard Time)"
                                                                                      onSelect={[Function]}
                                                                                      value={2020-02-04T03:00:00.000Z}
                                                                                    >
                                                                                      <div
                                                                                        onClick={[Function]}
                                                                                        onKeyPress={[Function]}
                                                                                        role="presentation"
                                                                                      >
                                                                                        <Day
                                                                                          current={false}
                                                                                          disabled={false}
                                                                                          hidden={false}
                                                                                          selected={false}
                                                                                        >
                                                                                          <WithStyles(ForwardRef(IconButton))
                                                                                            className="MuiPickersDay-day"
                                                                                            tabIndex={0}
                                                                                          >
                                                                                            <ForwardRef(IconButton)
                                                                                              className="MuiPickersDay-day"
                                                                                              classes={
                                                                                                Object {
                                                                                                  "colorInherit": "MuiIconButton-colorInherit",
                                                                                                  "colorPrimary": "MuiIconButton-colorPrimary",
                                                                                                  "colorSecondary": "MuiIconButton-colorSecondary",
                                                                                                  "disabled": "Mui-disabled",
                                                                                                  "edgeEnd": "MuiIconButton-edgeEnd",
                                                                                                  "edgeStart": "MuiIconButton-edgeStart",
                                                                                                  "label": "MuiIconButton-label",
                                                                                                  "root": "MuiIconButton-root",
                                                                                                  "sizeSmall": "MuiIconButton-sizeSmall",
                                                                                                }
                                                                                              }
                                                                                              tabIndex={0}
                                                                                            >
                                                                                              <WithStyles(ForwardRef(ButtonBase))
                                                                                                centerRipple={true}
                                                                                                className="MuiIconButton-root MuiPickersDay-day"
                                                                                                disabled={false}
                                                                                                focusRipple={true}
                                                                                                tabIndex={0}
                                                                                              >
                                                                                                <ForwardRef(ButtonBase)
                                                                                                  centerRipple={true}
                                                                                                  className="MuiIconButton-root MuiPickersDay-day"
                                                                                                  classes={
                                                                                                    Object {
                                                                                                      "disabled": "Mui-disabled",
                                                                                                      "focusVisible": "Mui-focusVisible",
                                                                                                      "root": "MuiButtonBase-root",
                                                                                                    }
                                                                                                  }
                                                                                                  disabled={false}
                                                                                                  focusRipple={true}
                                                                                                  tabIndex={0}
                                                                                                >
                                                                                                  <button
                                                                                                    className="MuiButtonBase-root MuiIconButton-root MuiPickersDay-day"
                                                                                                    disabled={false}
                                                                                                    onBlur={[Function]}
                                                                                                    onDragLeave={[Function]}
                                                                                                    onFocus={[Function]}
                                                                                                    onKeyDown={[Function]}
                                                                                                    onKeyUp={[Function]}
                                                                                                    onMouseDown={[Function]}
                                                                                                    onMouseLeave={[Function]}
                                                                                                    onMouseUp={[Function]}
                                                                                                    onTouchEnd={[Function]}
                                                                                                    onTouchMove={[Function]}
                                                                                                    onTouchStart={[Function]}
                                                                                                    tabIndex={0}
                                                                                                    type="button"
                                                                                                  >
                                                                                                    <span
                                                                                                      className="MuiIconButton-label"
                                                                                                    >
                                                                                                      <WithStyles(ForwardRef(Typography))
                                                                                                        color="inherit"
                                                                                                        variant="body2"
                                                                                                      >
                                                                                                        <ForwardRef(Typography)
                                                                                                          classes={
                                                                                                            Object {
                                                                                                              "alignCenter": "MuiTypography-alignCenter",
                                                                                                              "alignJustify": "MuiTypography-alignJustify",
                                                                                                              "alignLeft": "MuiTypography-alignLeft",
                                                                                                              "alignRight": "MuiTypography-alignRight",
                                                                                                              "body1": "MuiTypography-body1",
                                                                                                              "body2": "MuiTypography-body2",
                                                                                                              "button": "MuiTypography-button",
                                                                                                              "caption": "MuiTypography-caption",
                                                                                                              "colorError": "MuiTypography-colorError",
                                                                                                              "colorInherit": "MuiTypography-colorInherit",
                                                                                                              "colorPrimary": "MuiTypography-colorPrimary",
                                                                                                              "colorSecondary": "MuiTypography-colorSecondary",
                                                                                                              "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                                                              "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                                                              "displayBlock": "MuiTypography-displayBlock",
                                                                                                              "displayInline": "MuiTypography-displayInline",
                                                                                                              "gutterBottom": "MuiTypography-gutterBottom",
                                                                                                              "h1": "MuiTypography-h1",
                                                                                                              "h2": "MuiTypography-h2",
                                                                                                              "h3": "MuiTypography-h3",
                                                                                                              "h4": "MuiTypography-h4",
                                                                                                              "h5": "MuiTypography-h5",
                                                                                                              "h6": "MuiTypography-h6",
                                                                                                              "noWrap": "MuiTypography-noWrap",
                                                                                                              "overline": "MuiTypography-overline",
                                                                                                              "paragraph": "MuiTypography-paragraph",
                                                                                                              "root": "MuiTypography-root",
                                                                                                              "srOnly": "MuiTypography-srOnly",
                                                                                                              "subtitle1": "MuiTypography-subtitle1",
                                                                                                              "subtitle2": "MuiTypography-subtitle2",
                                                                                                            }
                                                                                                          }
                                                                                                          color="inherit"
                                                                                                          variant="body2"
                                                                                                        >
                                                                                                          <p
                                                                                                            className="MuiTypography-root MuiTypography-body2 MuiTypography-colorInherit"
                                                                                                          >
                                                                                                            4
                                                                                                          </p>
                                                                                                        </ForwardRef(Typography)>
                                                                                                      </WithStyles(ForwardRef(Typography))>
                                                                                                    </span>
                                                                                                    <NoSsr>
                                                                                                      <WithStyles(memo)
                                                                                                        center={true}
                                                                                                      >
                                                                                                        <ForwardRef(TouchRipple)
                                                                                                          center={true}
                                                                                                          classes={
                                                                                                            Object {
                                                                                                              "child": "MuiTouchRipple-child",
                                                                                                              "childLeaving": "MuiTouchRipple-childLeaving",
                                                                                                              "childPulsate": "MuiTouchRipple-childPulsate",
                                                                                                              "ripple": "MuiTouchRipple-ripple",
                                                                                                              "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                                                              "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                                                              "root": "MuiTouchRipple-root",
                                                                                                            }
                                                                                                          }
                                                                                                        >
                                                                                                          <span
                                                                                                            className="MuiTouchRipple-root"
                                                                                                          >
                                                                                                            <TransitionGroup
                                                                                                              childFactory={[Function]}
                                                                                                              component={null}
                                                                                                              exit={true}
                                                                                                            />
                                                                                                          </span>
                                                                                                        </ForwardRef(TouchRipple)>
                                                                                                      </WithStyles(memo)>
                                                                                                    </NoSsr>
                                                                                                  </button>
                                                                                                </ForwardRef(ButtonBase)>
                                                                                              </WithStyles(ForwardRef(ButtonBase))>
                                                                                            </ForwardRef(IconButton)>
                                                                                          </WithStyles(ForwardRef(IconButton))>
                                                                                        </Day>
                                                                                      </div>
                                                                                    </DayWrapper>
                                                                                    <DayWrapper
                                                                                      dayInCurrentMonth={true}
                                                                                      disabled={false}
                                                                                      key="Wed Feb 05 2020 00:00:00 GMT-0300 (Brasilia Standard Time)"
                                                                                      onSelect={[Function]}
                                                                                      value={2020-02-05T03:00:00.000Z}
                                                                                    >
                                                                                      <div
                                                                                        onClick={[Function]}
                                                                                        onKeyPress={[Function]}
                                                                                        role="presentation"
                                                                                      >
                                                                                        <Day
                                                                                          current={false}
                                                                                          disabled={false}
                                                                                          hidden={false}
                                                                                          selected={false}
                                                                                        >
                                                                                          <WithStyles(ForwardRef(IconButton))
                                                                                            className="MuiPickersDay-day"
                                                                                            tabIndex={0}
                                                                                          >
                                                                                            <ForwardRef(IconButton)
                                                                                              className="MuiPickersDay-day"
                                                                                              classes={
                                                                                                Object {
                                                                                                  "colorInherit": "MuiIconButton-colorInherit",
                                                                                                  "colorPrimary": "MuiIconButton-colorPrimary",
                                                                                                  "colorSecondary": "MuiIconButton-colorSecondary",
                                                                                                  "disabled": "Mui-disabled",
                                                                                                  "edgeEnd": "MuiIconButton-edgeEnd",
                                                                                                  "edgeStart": "MuiIconButton-edgeStart",
                                                                                                  "label": "MuiIconButton-label",
                                                                                                  "root": "MuiIconButton-root",
                                                                                                  "sizeSmall": "MuiIconButton-sizeSmall",
                                                                                                }
                                                                                              }
                                                                                              tabIndex={0}
                                                                                            >
                                                                                              <WithStyles(ForwardRef(ButtonBase))
                                                                                                centerRipple={true}
                                                                                                className="MuiIconButton-root MuiPickersDay-day"
                                                                                                disabled={false}
                                                                                                focusRipple={true}
                                                                                                tabIndex={0}
                                                                                              >
                                                                                                <ForwardRef(ButtonBase)
                                                                                                  centerRipple={true}
                                                                                                  className="MuiIconButton-root MuiPickersDay-day"
                                                                                                  classes={
                                                                                                    Object {
                                                                                                      "disabled": "Mui-disabled",
                                                                                                      "focusVisible": "Mui-focusVisible",
                                                                                                      "root": "MuiButtonBase-root",
                                                                                                    }
                                                                                                  }
                                                                                                  disabled={false}
                                                                                                  focusRipple={true}
                                                                                                  tabIndex={0}
                                                                                                >
                                                                                                  <button
                                                                                                    className="MuiButtonBase-root MuiIconButton-root MuiPickersDay-day"
                                                                                                    disabled={false}
                                                                                                    onBlur={[Function]}
                                                                                                    onDragLeave={[Function]}
                                                                                                    onFocus={[Function]}
                                                                                                    onKeyDown={[Function]}
                                                                                                    onKeyUp={[Function]}
                                                                                                    onMouseDown={[Function]}
                                                                                                    onMouseLeave={[Function]}
                                                                                                    onMouseUp={[Function]}
                                                                                                    onTouchEnd={[Function]}
                                                                                                    onTouchMove={[Function]}
                                                                                                    onTouchStart={[Function]}
                                                                                                    tabIndex={0}
                                                                                                    type="button"
                                                                                                  >
                                                                                                    <span
                                                                                                      className="MuiIconButton-label"
                                                                                                    >
                                                                                                      <WithStyles(ForwardRef(Typography))
                                                                                                        color="inherit"
                                                                                                        variant="body2"
                                                                                                      >
                                                                                                        <ForwardRef(Typography)
                                                                                                          classes={
                                                                                                            Object {
                                                                                                              "alignCenter": "MuiTypography-alignCenter",
                                                                                                              "alignJustify": "MuiTypography-alignJustify",
                                                                                                              "alignLeft": "MuiTypography-alignLeft",
                                                                                                              "alignRight": "MuiTypography-alignRight",
                                                                                                              "body1": "MuiTypography-body1",
                                                                                                              "body2": "MuiTypography-body2",
                                                                                                              "button": "MuiTypography-button",
                                                                                                              "caption": "MuiTypography-caption",
                                                                                                              "colorError": "MuiTypography-colorError",
                                                                                                              "colorInherit": "MuiTypography-colorInherit",
                                                                                                              "colorPrimary": "MuiTypography-colorPrimary",
                                                                                                              "colorSecondary": "MuiTypography-colorSecondary",
                                                                                                              "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                                                              "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                                                              "displayBlock": "MuiTypography-displayBlock",
                                                                                                              "displayInline": "MuiTypography-displayInline",
                                                                                                              "gutterBottom": "MuiTypography-gutterBottom",
                                                                                                              "h1": "MuiTypography-h1",
                                                                                                              "h2": "MuiTypography-h2",
                                                                                                              "h3": "MuiTypography-h3",
                                                                                                              "h4": "MuiTypography-h4",
                                                                                                              "h5": "MuiTypography-h5",
                                                                                                              "h6": "MuiTypography-h6",
                                                                                                              "noWrap": "MuiTypography-noWrap",
                                                                                                              "overline": "MuiTypography-overline",
                                                                                                              "paragraph": "MuiTypography-paragraph",
                                                                                                              "root": "MuiTypography-root",
                                                                                                              "srOnly": "MuiTypography-srOnly",
                                                                                                              "subtitle1": "MuiTypography-subtitle1",
                                                                                                              "subtitle2": "MuiTypography-subtitle2",
                                                                                                            }
                                                                                                          }
                                                                                                          color="inherit"
                                                                                                          variant="body2"
                                                                                                        >
                                                                                                          <p
                                                                                                            className="MuiTypography-root MuiTypography-body2 MuiTypography-colorInherit"
                                                                                                          >
                                                                                                            5
                                                                                                          </p>
                                                                                                        </ForwardRef(Typography)>
                                                                                                      </WithStyles(ForwardRef(Typography))>
                                                                                                    </span>
                                                                                                    <NoSsr>
                                                                                                      <WithStyles(memo)
                                                                                                        center={true}
                                                                                                      >
                                                                                                        <ForwardRef(TouchRipple)
                                                                                                          center={true}
                                                                                                          classes={
                                                                                                            Object {
                                                                                                              "child": "MuiTouchRipple-child",
                                                                                                              "childLeaving": "MuiTouchRipple-childLeaving",
                                                                                                              "childPulsate": "MuiTouchRipple-childPulsate",
                                                                                                              "ripple": "MuiTouchRipple-ripple",
                                                                                                              "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                                                              "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                                                              "root": "MuiTouchRipple-root",
                                                                                                            }
                                                                                                          }
                                                                                                        >
                                                                                                          <span
                                                                                                            className="MuiTouchRipple-root"
                                                                                                          >
                                                                                                            <TransitionGroup
                                                                                                              childFactory={[Function]}
                                                                                                              component={null}
                                                                                                              exit={true}
                                                                                                            />
                                                                                                          </span>
                                                                                                        </ForwardRef(TouchRipple)>
                                                                                                      </WithStyles(memo)>
                                                                                                    </NoSsr>
                                                                                                  </button>
                                                                                                </ForwardRef(ButtonBase)>
                                                                                              </WithStyles(ForwardRef(ButtonBase))>
                                                                                            </ForwardRef(IconButton)>
                                                                                          </WithStyles(ForwardRef(IconButton))>
                                                                                        </Day>
                                                                                      </div>
                                                                                    </DayWrapper>
                                                                                    <DayWrapper
                                                                                      dayInCurrentMonth={true}
                                                                                      disabled={false}
                                                                                      key="Thu Feb 06 2020 00:00:00 GMT-0300 (Brasilia Standard Time)"
                                                                                      onSelect={[Function]}
                                                                                      value={2020-02-06T03:00:00.000Z}
                                                                                    >
                                                                                      <div
                                                                                        onClick={[Function]}
                                                                                        onKeyPress={[Function]}
                                                                                        role="presentation"
                                                                                      >
                                                                                        <Day
                                                                                          current={false}
                                                                                          disabled={false}
                                                                                          hidden={false}
                                                                                          selected={false}
                                                                                        >
                                                                                          <WithStyles(ForwardRef(IconButton))
                                                                                            className="MuiPickersDay-day"
                                                                                            tabIndex={0}
                                                                                          >
                                                                                            <ForwardRef(IconButton)
                                                                                              className="MuiPickersDay-day"
                                                                                              classes={
                                                                                                Object {
                                                                                                  "colorInherit": "MuiIconButton-colorInherit",
                                                                                                  "colorPrimary": "MuiIconButton-colorPrimary",
                                                                                                  "colorSecondary": "MuiIconButton-colorSecondary",
                                                                                                  "disabled": "Mui-disabled",
                                                                                                  "edgeEnd": "MuiIconButton-edgeEnd",
                                                                                                  "edgeStart": "MuiIconButton-edgeStart",
                                                                                                  "label": "MuiIconButton-label",
                                                                                                  "root": "MuiIconButton-root",
                                                                                                  "sizeSmall": "MuiIconButton-sizeSmall",
                                                                                                }
                                                                                              }
                                                                                              tabIndex={0}
                                                                                            >
                                                                                              <WithStyles(ForwardRef(ButtonBase))
                                                                                                centerRipple={true}
                                                                                                className="MuiIconButton-root MuiPickersDay-day"
                                                                                                disabled={false}
                                                                                                focusRipple={true}
                                                                                                tabIndex={0}
                                                                                              >
                                                                                                <ForwardRef(ButtonBase)
                                                                                                  centerRipple={true}
                                                                                                  className="MuiIconButton-root MuiPickersDay-day"
                                                                                                  classes={
                                                                                                    Object {
                                                                                                      "disabled": "Mui-disabled",
                                                                                                      "focusVisible": "Mui-focusVisible",
                                                                                                      "root": "MuiButtonBase-root",
                                                                                                    }
                                                                                                  }
                                                                                                  disabled={false}
                                                                                                  focusRipple={true}
                                                                                                  tabIndex={0}
                                                                                                >
                                                                                                  <button
                                                                                                    className="MuiButtonBase-root MuiIconButton-root MuiPickersDay-day"
                                                                                                    disabled={false}
                                                                                                    onBlur={[Function]}
                                                                                                    onDragLeave={[Function]}
                                                                                                    onFocus={[Function]}
                                                                                                    onKeyDown={[Function]}
                                                                                                    onKeyUp={[Function]}
                                                                                                    onMouseDown={[Function]}
                                                                                                    onMouseLeave={[Function]}
                                                                                                    onMouseUp={[Function]}
                                                                                                    onTouchEnd={[Function]}
                                                                                                    onTouchMove={[Function]}
                                                                                                    onTouchStart={[Function]}
                                                                                                    tabIndex={0}
                                                                                                    type="button"
                                                                                                  >
                                                                                                    <span
                                                                                                      className="MuiIconButton-label"
                                                                                                    >
                                                                                                      <WithStyles(ForwardRef(Typography))
                                                                                                        color="inherit"
                                                                                                        variant="body2"
                                                                                                      >
                                                                                                        <ForwardRef(Typography)
                                                                                                          classes={
                                                                                                            Object {
                                                                                                              "alignCenter": "MuiTypography-alignCenter",
                                                                                                              "alignJustify": "MuiTypography-alignJustify",
                                                                                                              "alignLeft": "MuiTypography-alignLeft",
                                                                                                              "alignRight": "MuiTypography-alignRight",
                                                                                                              "body1": "MuiTypography-body1",
                                                                                                              "body2": "MuiTypography-body2",
                                                                                                              "button": "MuiTypography-button",
                                                                                                              "caption": "MuiTypography-caption",
                                                                                                              "colorError": "MuiTypography-colorError",
                                                                                                              "colorInherit": "MuiTypography-colorInherit",
                                                                                                              "colorPrimary": "MuiTypography-colorPrimary",
                                                                                                              "colorSecondary": "MuiTypography-colorSecondary",
                                                                                                              "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                                                              "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                                                              "displayBlock": "MuiTypography-displayBlock",
                                                                                                              "displayInline": "MuiTypography-displayInline",
                                                                                                              "gutterBottom": "MuiTypography-gutterBottom",
                                                                                                              "h1": "MuiTypography-h1",
                                                                                                              "h2": "MuiTypography-h2",
                                                                                                              "h3": "MuiTypography-h3",
                                                                                                              "h4": "MuiTypography-h4",
                                                                                                              "h5": "MuiTypography-h5",
                                                                                                              "h6": "MuiTypography-h6",
                                                                                                              "noWrap": "MuiTypography-noWrap",
                                                                                                              "overline": "MuiTypography-overline",
                                                                                                              "paragraph": "MuiTypography-paragraph",
                                                                                                              "root": "MuiTypography-root",
                                                                                                              "srOnly": "MuiTypography-srOnly",
                                                                                                              "subtitle1": "MuiTypography-subtitle1",
                                                                                                              "subtitle2": "MuiTypography-subtitle2",
                                                                                                            }
                                                                                                          }
                                                                                                          color="inherit"
                                                                                                          variant="body2"
                                                                                                        >
                                                                                                          <p
                                                                                                            className="MuiTypography-root MuiTypography-body2 MuiTypography-colorInherit"
                                                                                                          >
                                                                                                            6
                                                                                                          </p>
                                                                                                        </ForwardRef(Typography)>
                                                                                                      </WithStyles(ForwardRef(Typography))>
                                                                                                    </span>
                                                                                                    <NoSsr>
                                                                                                      <WithStyles(memo)
                                                                                                        center={true}
                                                                                                      >
                                                                                                        <ForwardRef(TouchRipple)
                                                                                                          center={true}
                                                                                                          classes={
                                                                                                            Object {
                                                                                                              "child": "MuiTouchRipple-child",
                                                                                                              "childLeaving": "MuiTouchRipple-childLeaving",
                                                                                                              "childPulsate": "MuiTouchRipple-childPulsate",
                                                                                                              "ripple": "MuiTouchRipple-ripple",
                                                                                                              "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                                                              "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                                                              "root": "MuiTouchRipple-root",
                                                                                                            }
                                                                                                          }
                                                                                                        >
                                                                                                          <span
                                                                                                            className="MuiTouchRipple-root"
                                                                                                          >
                                                                                                            <TransitionGroup
                                                                                                              childFactory={[Function]}
                                                                                                              component={null}
                                                                                                              exit={true}
                                                                                                            />
                                                                                                          </span>
                                                                                                        </ForwardRef(TouchRipple)>
                                                                                                      </WithStyles(memo)>
                                                                                                    </NoSsr>
                                                                                                  </button>
                                                                                                </ForwardRef(ButtonBase)>
                                                                                              </WithStyles(ForwardRef(ButtonBase))>
                                                                                            </ForwardRef(IconButton)>
                                                                                          </WithStyles(ForwardRef(IconButton))>
                                                                                        </Day>
                                                                                      </div>
                                                                                    </DayWrapper>
                                                                                    <DayWrapper
                                                                                      dayInCurrentMonth={true}
                                                                                      disabled={false}
                                                                                      key="Fri Feb 07 2020 00:00:00 GMT-0300 (Brasilia Standard Time)"
                                                                                      onSelect={[Function]}
                                                                                      value={2020-02-07T03:00:00.000Z}
                                                                                    >
                                                                                      <div
                                                                                        onClick={[Function]}
                                                                                        onKeyPress={[Function]}
                                                                                        role="presentation"
                                                                                      >
                                                                                        <Day
                                                                                          current={false}
                                                                                          disabled={false}
                                                                                          hidden={false}
                                                                                          selected={false}
                                                                                        >
                                                                                          <WithStyles(ForwardRef(IconButton))
                                                                                            className="MuiPickersDay-day"
                                                                                            tabIndex={0}
                                                                                          >
                                                                                            <ForwardRef(IconButton)
                                                                                              className="MuiPickersDay-day"
                                                                                              classes={
                                                                                                Object {
                                                                                                  "colorInherit": "MuiIconButton-colorInherit",
                                                                                                  "colorPrimary": "MuiIconButton-colorPrimary",
                                                                                                  "colorSecondary": "MuiIconButton-colorSecondary",
                                                                                                  "disabled": "Mui-disabled",
                                                                                                  "edgeEnd": "MuiIconButton-edgeEnd",
                                                                                                  "edgeStart": "MuiIconButton-edgeStart",
                                                                                                  "label": "MuiIconButton-label",
                                                                                                  "root": "MuiIconButton-root",
                                                                                                  "sizeSmall": "MuiIconButton-sizeSmall",
                                                                                                }
                                                                                              }
                                                                                              tabIndex={0}
                                                                                            >
                                                                                              <WithStyles(ForwardRef(ButtonBase))
                                                                                                centerRipple={true}
                                                                                                className="MuiIconButton-root MuiPickersDay-day"
                                                                                                disabled={false}
                                                                                                focusRipple={true}
                                                                                                tabIndex={0}
                                                                                              >
                                                                                                <ForwardRef(ButtonBase)
                                                                                                  centerRipple={true}
                                                                                                  className="MuiIconButton-root MuiPickersDay-day"
                                                                                                  classes={
                                                                                                    Object {
                                                                                                      "disabled": "Mui-disabled",
                                                                                                      "focusVisible": "Mui-focusVisible",
                                                                                                      "root": "MuiButtonBase-root",
                                                                                                    }
                                                                                                  }
                                                                                                  disabled={false}
                                                                                                  focusRipple={true}
                                                                                                  tabIndex={0}
                                                                                                >
                                                                                                  <button
                                                                                                    className="MuiButtonBase-root MuiIconButton-root MuiPickersDay-day"
                                                                                                    disabled={false}
                                                                                                    onBlur={[Function]}
                                                                                                    onDragLeave={[Function]}
                                                                                                    onFocus={[Function]}
                                                                                                    onKeyDown={[Function]}
                                                                                                    onKeyUp={[Function]}
                                                                                                    onMouseDown={[Function]}
                                                                                                    onMouseLeave={[Function]}
                                                                                                    onMouseUp={[Function]}
                                                                                                    onTouchEnd={[Function]}
                                                                                                    onTouchMove={[Function]}
                                                                                                    onTouchStart={[Function]}
                                                                                                    tabIndex={0}
                                                                                                    type="button"
                                                                                                  >
                                                                                                    <span
                                                                                                      className="MuiIconButton-label"
                                                                                                    >
                                                                                                      <WithStyles(ForwardRef(Typography))
                                                                                                        color="inherit"
                                                                                                        variant="body2"
                                                                                                      >
                                                                                                        <ForwardRef(Typography)
                                                                                                          classes={
                                                                                                            Object {
                                                                                                              "alignCenter": "MuiTypography-alignCenter",
                                                                                                              "alignJustify": "MuiTypography-alignJustify",
                                                                                                              "alignLeft": "MuiTypography-alignLeft",
                                                                                                              "alignRight": "MuiTypography-alignRight",
                                                                                                              "body1": "MuiTypography-body1",
                                                                                                              "body2": "MuiTypography-body2",
                                                                                                              "button": "MuiTypography-button",
                                                                                                              "caption": "MuiTypography-caption",
                                                                                                              "colorError": "MuiTypography-colorError",
                                                                                                              "colorInherit": "MuiTypography-colorInherit",
                                                                                                              "colorPrimary": "MuiTypography-colorPrimary",
                                                                                                              "colorSecondary": "MuiTypography-colorSecondary",
                                                                                                              "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                                                              "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                                                              "displayBlock": "MuiTypography-displayBlock",
                                                                                                              "displayInline": "MuiTypography-displayInline",
                                                                                                              "gutterBottom": "MuiTypography-gutterBottom",
                                                                                                              "h1": "MuiTypography-h1",
                                                                                                              "h2": "MuiTypography-h2",
                                                                                                              "h3": "MuiTypography-h3",
                                                                                                              "h4": "MuiTypography-h4",
                                                                                                              "h5": "MuiTypography-h5",
                                                                                                              "h6": "MuiTypography-h6",
                                                                                                              "noWrap": "MuiTypography-noWrap",
                                                                                                              "overline": "MuiTypography-overline",
                                                                                                              "paragraph": "MuiTypography-paragraph",
                                                                                                              "root": "MuiTypography-root",
                                                                                                              "srOnly": "MuiTypography-srOnly",
                                                                                                              "subtitle1": "MuiTypography-subtitle1",
                                                                                                              "subtitle2": "MuiTypography-subtitle2",
                                                                                                            }
                                                                                                          }
                                                                                                          color="inherit"
                                                                                                          variant="body2"
                                                                                                        >
                                                                                                          <p
                                                                                                            className="MuiTypography-root MuiTypography-body2 MuiTypography-colorInherit"
                                                                                                          >
                                                                                                            7
                                                                                                          </p>
                                                                                                        </ForwardRef(Typography)>
                                                                                                      </WithStyles(ForwardRef(Typography))>
                                                                                                    </span>
                                                                                                    <NoSsr>
                                                                                                      <WithStyles(memo)
                                                                                                        center={true}
                                                                                                      >
                                                                                                        <ForwardRef(TouchRipple)
                                                                                                          center={true}
                                                                                                          classes={
                                                                                                            Object {
                                                                                                              "child": "MuiTouchRipple-child",
                                                                                                              "childLeaving": "MuiTouchRipple-childLeaving",
                                                                                                              "childPulsate": "MuiTouchRipple-childPulsate",
                                                                                                              "ripple": "MuiTouchRipple-ripple",
                                                                                                              "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                                                              "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                                                              "root": "MuiTouchRipple-root",
                                                                                                            }
                                                                                                          }
                                                                                                        >
                                                                                                          <span
                                                                                                            className="MuiTouchRipple-root"
                                                                                                          >
                                                                                                            <TransitionGroup
                                                                                                              childFactory={[Function]}
                                                                                                              component={null}
                                                                                                              exit={true}
                                                                                                            />
                                                                                                          </span>
                                                                                                        </ForwardRef(TouchRipple)>
                                                                                                      </WithStyles(memo)>
                                                                                                    </NoSsr>
                                                                                                  </button>
                                                                                                </ForwardRef(ButtonBase)>
                                                                                              </WithStyles(ForwardRef(ButtonBase))>
                                                                                            </ForwardRef(IconButton)>
                                                                                          </WithStyles(ForwardRef(IconButton))>
                                                                                        </Day>
                                                                                      </div>
                                                                                    </DayWrapper>
                                                                                    <DayWrapper
                                                                                      dayInCurrentMonth={true}
                                                                                      disabled={false}
                                                                                      key="Sat Feb 08 2020 00:00:00 GMT-0300 (Brasilia Standard Time)"
                                                                                      onSelect={[Function]}
                                                                                      value={2020-02-08T03:00:00.000Z}
                                                                                    >
                                                                                      <div
                                                                                        onClick={[Function]}
                                                                                        onKeyPress={[Function]}
                                                                                        role="presentation"
                                                                                      >
                                                                                        <Day
                                                                                          current={false}
                                                                                          disabled={false}
                                                                                          hidden={false}
                                                                                          selected={false}
                                                                                        >
                                                                                          <WithStyles(ForwardRef(IconButton))
                                                                                            className="MuiPickersDay-day"
                                                                                            tabIndex={0}
                                                                                          >
                                                                                            <ForwardRef(IconButton)
                                                                                              className="MuiPickersDay-day"
                                                                                              classes={
                                                                                                Object {
                                                                                                  "colorInherit": "MuiIconButton-colorInherit",
                                                                                                  "colorPrimary": "MuiIconButton-colorPrimary",
                                                                                                  "colorSecondary": "MuiIconButton-colorSecondary",
                                                                                                  "disabled": "Mui-disabled",
                                                                                                  "edgeEnd": "MuiIconButton-edgeEnd",
                                                                                                  "edgeStart": "MuiIconButton-edgeStart",
                                                                                                  "label": "MuiIconButton-label",
                                                                                                  "root": "MuiIconButton-root",
                                                                                                  "sizeSmall": "MuiIconButton-sizeSmall",
                                                                                                }
                                                                                              }
                                                                                              tabIndex={0}
                                                                                            >
                                                                                              <WithStyles(ForwardRef(ButtonBase))
                                                                                                centerRipple={true}
                                                                                                className="MuiIconButton-root MuiPickersDay-day"
                                                                                                disabled={false}
                                                                                                focusRipple={true}
                                                                                                tabIndex={0}
                                                                                              >
                                                                                                <ForwardRef(ButtonBase)
                                                                                                  centerRipple={true}
                                                                                                  className="MuiIconButton-root MuiPickersDay-day"
                                                                                                  classes={
                                                                                                    Object {
                                                                                                      "disabled": "Mui-disabled",
                                                                                                      "focusVisible": "Mui-focusVisible",
                                                                                                      "root": "MuiButtonBase-root",
                                                                                                    }
                                                                                                  }
                                                                                                  disabled={false}
                                                                                                  focusRipple={true}
                                                                                                  tabIndex={0}
                                                                                                >
                                                                                                  <button
                                                                                                    className="MuiButtonBase-root MuiIconButton-root MuiPickersDay-day"
                                                                                                    disabled={false}
                                                                                                    onBlur={[Function]}
                                                                                                    onDragLeave={[Function]}
                                                                                                    onFocus={[Function]}
                                                                                                    onKeyDown={[Function]}
                                                                                                    onKeyUp={[Function]}
                                                                                                    onMouseDown={[Function]}
                                                                                                    onMouseLeave={[Function]}
                                                                                                    onMouseUp={[Function]}
                                                                                                    onTouchEnd={[Function]}
                                                                                                    onTouchMove={[Function]}
                                                                                                    onTouchStart={[Function]}
                                                                                                    tabIndex={0}
                                                                                                    type="button"
                                                                                                  >
                                                                                                    <span
                                                                                                      className="MuiIconButton-label"
                                                                                                    >
                                                                                                      <WithStyles(ForwardRef(Typography))
                                                                                                        color="inherit"
                                                                                                        variant="body2"
                                                                                                      >
                                                                                                        <ForwardRef(Typography)
                                                                                                          classes={
                                                                                                            Object {
                                                                                                              "alignCenter": "MuiTypography-alignCenter",
                                                                                                              "alignJustify": "MuiTypography-alignJustify",
                                                                                                              "alignLeft": "MuiTypography-alignLeft",
                                                                                                              "alignRight": "MuiTypography-alignRight",
                                                                                                              "body1": "MuiTypography-body1",
                                                                                                              "body2": "MuiTypography-body2",
                                                                                                              "button": "MuiTypography-button",
                                                                                                              "caption": "MuiTypography-caption",
                                                                                                              "colorError": "MuiTypography-colorError",
                                                                                                              "colorInherit": "MuiTypography-colorInherit",
                                                                                                              "colorPrimary": "MuiTypography-colorPrimary",
                                                                                                              "colorSecondary": "MuiTypography-colorSecondary",
                                                                                                              "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                                                              "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                                                              "displayBlock": "MuiTypography-displayBlock",
                                                                                                              "displayInline": "MuiTypography-displayInline",
                                                                                                              "gutterBottom": "MuiTypography-gutterBottom",
                                                                                                              "h1": "MuiTypography-h1",
                                                                                                              "h2": "MuiTypography-h2",
                                                                                                              "h3": "MuiTypography-h3",
                                                                                                              "h4": "MuiTypography-h4",
                                                                                                              "h5": "MuiTypography-h5",
                                                                                                              "h6": "MuiTypography-h6",
                                                                                                              "noWrap": "MuiTypography-noWrap",
                                                                                                              "overline": "MuiTypography-overline",
                                                                                                              "paragraph": "MuiTypography-paragraph",
                                                                                                              "root": "MuiTypography-root",
                                                                                                              "srOnly": "MuiTypography-srOnly",
                                                                                                              "subtitle1": "MuiTypography-subtitle1",
                                                                                                              "subtitle2": "MuiTypography-subtitle2",
                                                                                                            }
                                                                                                          }
                                                                                                          color="inherit"
                                                                                                          variant="body2"
                                                                                                        >
                                                                                                          <p
                                                                                                            className="MuiTypography-root MuiTypography-body2 MuiTypography-colorInherit"
                                                                                                          >
                                                                                                            8
                                                                                                          </p>
                                                                                                        </ForwardRef(Typography)>
                                                                                                      </WithStyles(ForwardRef(Typography))>
                                                                                                    </span>
                                                                                                    <NoSsr>
                                                                                                      <WithStyles(memo)
                                                                                                        center={true}
                                                                                                      >
                                                                                                        <ForwardRef(TouchRipple)
                                                                                                          center={true}
                                                                                                          classes={
                                                                                                            Object {
                                                                                                              "child": "MuiTouchRipple-child",
                                                                                                              "childLeaving": "MuiTouchRipple-childLeaving",
                                                                                                              "childPulsate": "MuiTouchRipple-childPulsate",
                                                                                                              "ripple": "MuiTouchRipple-ripple",
                                                                                                              "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                                                              "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                                                              "root": "MuiTouchRipple-root",
                                                                                                            }
                                                                                                          }
                                                                                                        >
                                                                                                          <span
                                                                                                            className="MuiTouchRipple-root"
                                                                                                          >
                                                                                                            <TransitionGroup
                                                                                                              childFactory={[Function]}
                                                                                                              component={null}
                                                                                                              exit={true}
                                                                                                            />
                                                                                                          </span>
                                                                                                        </ForwardRef(TouchRipple)>
                                                                                                      </WithStyles(memo)>
                                                                                                    </NoSsr>
                                                                                                  </button>
                                                                                                </ForwardRef(ButtonBase)>
                                                                                              </WithStyles(ForwardRef(ButtonBase))>
                                                                                            </ForwardRef(IconButton)>
                                                                                          </WithStyles(ForwardRef(IconButton))>
                                                                                        </Day>
                                                                                      </div>
                                                                                    </DayWrapper>
                                                                                  </div>
                                                                                  <div
                                                                                    className="MuiPickersCalendar-week"
                                                                                    key="week-Sun Feb 09 2020 00:00:00 GMT-0300 (Brasilia Standard Time)"
                                                                                  >
                                                                                    <DayWrapper
                                                                                      dayInCurrentMonth={true}
                                                                                      disabled={false}
                                                                                      key="Sun Feb 09 2020 00:00:00 GMT-0300 (Brasilia Standard Time)"
                                                                                      onSelect={[Function]}
                                                                                      value={2020-02-09T03:00:00.000Z}
                                                                                    >
                                                                                      <div
                                                                                        onClick={[Function]}
                                                                                        onKeyPress={[Function]}
                                                                                        role="presentation"
                                                                                      >
                                                                                        <Day
                                                                                          current={false}
                                                                                          disabled={false}
                                                                                          hidden={false}
                                                                                          selected={false}
                                                                                        >
                                                                                          <WithStyles(ForwardRef(IconButton))
                                                                                            className="MuiPickersDay-day"
                                                                                            tabIndex={0}
                                                                                          >
                                                                                            <ForwardRef(IconButton)
                                                                                              className="MuiPickersDay-day"
                                                                                              classes={
                                                                                                Object {
                                                                                                  "colorInherit": "MuiIconButton-colorInherit",
                                                                                                  "colorPrimary": "MuiIconButton-colorPrimary",
                                                                                                  "colorSecondary": "MuiIconButton-colorSecondary",
                                                                                                  "disabled": "Mui-disabled",
                                                                                                  "edgeEnd": "MuiIconButton-edgeEnd",
                                                                                                  "edgeStart": "MuiIconButton-edgeStart",
                                                                                                  "label": "MuiIconButton-label",
                                                                                                  "root": "MuiIconButton-root",
                                                                                                  "sizeSmall": "MuiIconButton-sizeSmall",
                                                                                                }
                                                                                              }
                                                                                              tabIndex={0}
                                                                                            >
                                                                                              <WithStyles(ForwardRef(ButtonBase))
                                                                                                centerRipple={true}
                                                                                                className="MuiIconButton-root MuiPickersDay-day"
                                                                                                disabled={false}
                                                                                                focusRipple={true}
                                                                                                tabIndex={0}
                                                                                              >
                                                                                                <ForwardRef(ButtonBase)
                                                                                                  centerRipple={true}
                                                                                                  className="MuiIconButton-root MuiPickersDay-day"
                                                                                                  classes={
                                                                                                    Object {
                                                                                                      "disabled": "Mui-disabled",
                                                                                                      "focusVisible": "Mui-focusVisible",
                                                                                                      "root": "MuiButtonBase-root",
                                                                                                    }
                                                                                                  }
                                                                                                  disabled={false}
                                                                                                  focusRipple={true}
                                                                                                  tabIndex={0}
                                                                                                >
                                                                                                  <button
                                                                                                    className="MuiButtonBase-root MuiIconButton-root MuiPickersDay-day"
                                                                                                    disabled={false}
                                                                                                    onBlur={[Function]}
                                                                                                    onDragLeave={[Function]}
                                                                                                    onFocus={[Function]}
                                                                                                    onKeyDown={[Function]}
                                                                                                    onKeyUp={[Function]}
                                                                                                    onMouseDown={[Function]}
                                                                                                    onMouseLeave={[Function]}
                                                                                                    onMouseUp={[Function]}
                                                                                                    onTouchEnd={[Function]}
                                                                                                    onTouchMove={[Function]}
                                                                                                    onTouchStart={[Function]}
                                                                                                    tabIndex={0}
                                                                                                    type="button"
                                                                                                  >
                                                                                                    <span
                                                                                                      className="MuiIconButton-label"
                                                                                                    >
                                                                                                      <WithStyles(ForwardRef(Typography))
                                                                                                        color="inherit"
                                                                                                        variant="body2"
                                                                                                      >
                                                                                                        <ForwardRef(Typography)
                                                                                                          classes={
                                                                                                            Object {
                                                                                                              "alignCenter": "MuiTypography-alignCenter",
                                                                                                              "alignJustify": "MuiTypography-alignJustify",
                                                                                                              "alignLeft": "MuiTypography-alignLeft",
                                                                                                              "alignRight": "MuiTypography-alignRight",
                                                                                                              "body1": "MuiTypography-body1",
                                                                                                              "body2": "MuiTypography-body2",
                                                                                                              "button": "MuiTypography-button",
                                                                                                              "caption": "MuiTypography-caption",
                                                                                                              "colorError": "MuiTypography-colorError",
                                                                                                              "colorInherit": "MuiTypography-colorInherit",
                                                                                                              "colorPrimary": "MuiTypography-colorPrimary",
                                                                                                              "colorSecondary": "MuiTypography-colorSecondary",
                                                                                                              "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                                                              "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                                                              "displayBlock": "MuiTypography-displayBlock",
                                                                                                              "displayInline": "MuiTypography-displayInline",
                                                                                                              "gutterBottom": "MuiTypography-gutterBottom",
                                                                                                              "h1": "MuiTypography-h1",
                                                                                                              "h2": "MuiTypography-h2",
                                                                                                              "h3": "MuiTypography-h3",
                                                                                                              "h4": "MuiTypography-h4",
                                                                                                              "h5": "MuiTypography-h5",
                                                                                                              "h6": "MuiTypography-h6",
                                                                                                              "noWrap": "MuiTypography-noWrap",
                                                                                                              "overline": "MuiTypography-overline",
                                                                                                              "paragraph": "MuiTypography-paragraph",
                                                                                                              "root": "MuiTypography-root",
                                                                                                              "srOnly": "MuiTypography-srOnly",
                                                                                                              "subtitle1": "MuiTypography-subtitle1",
                                                                                                              "subtitle2": "MuiTypography-subtitle2",
                                                                                                            }
                                                                                                          }
                                                                                                          color="inherit"
                                                                                                          variant="body2"
                                                                                                        >
                                                                                                          <p
                                                                                                            className="MuiTypography-root MuiTypography-body2 MuiTypography-colorInherit"
                                                                                                          >
                                                                                                            9
                                                                                                          </p>
                                                                                                        </ForwardRef(Typography)>
                                                                                                      </WithStyles(ForwardRef(Typography))>
                                                                                                    </span>
                                                                                                    <NoSsr>
                                                                                                      <WithStyles(memo)
                                                                                                        center={true}
                                                                                                      >
                                                                                                        <ForwardRef(TouchRipple)
                                                                                                          center={true}
                                                                                                          classes={
                                                                                                            Object {
                                                                                                              "child": "MuiTouchRipple-child",
                                                                                                              "childLeaving": "MuiTouchRipple-childLeaving",
                                                                                                              "childPulsate": "MuiTouchRipple-childPulsate",
                                                                                                              "ripple": "MuiTouchRipple-ripple",
                                                                                                              "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                                                              "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                                                              "root": "MuiTouchRipple-root",
                                                                                                            }
                                                                                                          }
                                                                                                        >
                                                                                                          <span
                                                                                                            className="MuiTouchRipple-root"
                                                                                                          >
                                                                                                            <TransitionGroup
                                                                                                              childFactory={[Function]}
                                                                                                              component={null}
                                                                                                              exit={true}
                                                                                                            />
                                                                                                          </span>
                                                                                                        </ForwardRef(TouchRipple)>
                                                                                                      </WithStyles(memo)>
                                                                                                    </NoSsr>
                                                                                                  </button>
                                                                                                </ForwardRef(ButtonBase)>
                                                                                              </WithStyles(ForwardRef(ButtonBase))>
                                                                                            </ForwardRef(IconButton)>
                                                                                          </WithStyles(ForwardRef(IconButton))>
                                                                                        </Day>
                                                                                      </div>
                                                                                    </DayWrapper>
                                                                                    <DayWrapper
                                                                                      dayInCurrentMonth={true}
                                                                                      disabled={false}
                                                                                      key="Mon Feb 10 2020 00:00:00 GMT-0300 (Brasilia Standard Time)"
                                                                                      onSelect={[Function]}
                                                                                      value={2020-02-10T03:00:00.000Z}
                                                                                    >
                                                                                      <div
                                                                                        onClick={[Function]}
                                                                                        onKeyPress={[Function]}
                                                                                        role="presentation"
                                                                                      >
                                                                                        <Day
                                                                                          current={false}
                                                                                          disabled={false}
                                                                                          hidden={false}
                                                                                          selected={false}
                                                                                        >
                                                                                          <WithStyles(ForwardRef(IconButton))
                                                                                            className="MuiPickersDay-day"
                                                                                            tabIndex={0}
                                                                                          >
                                                                                            <ForwardRef(IconButton)
                                                                                              className="MuiPickersDay-day"
                                                                                              classes={
                                                                                                Object {
                                                                                                  "colorInherit": "MuiIconButton-colorInherit",
                                                                                                  "colorPrimary": "MuiIconButton-colorPrimary",
                                                                                                  "colorSecondary": "MuiIconButton-colorSecondary",
                                                                                                  "disabled": "Mui-disabled",
                                                                                                  "edgeEnd": "MuiIconButton-edgeEnd",
                                                                                                  "edgeStart": "MuiIconButton-edgeStart",
                                                                                                  "label": "MuiIconButton-label",
                                                                                                  "root": "MuiIconButton-root",
                                                                                                  "sizeSmall": "MuiIconButton-sizeSmall",
                                                                                                }
                                                                                              }
                                                                                              tabIndex={0}
                                                                                            >
                                                                                              <WithStyles(ForwardRef(ButtonBase))
                                                                                                centerRipple={true}
                                                                                                className="MuiIconButton-root MuiPickersDay-day"
                                                                                                disabled={false}
                                                                                                focusRipple={true}
                                                                                                tabIndex={0}
                                                                                              >
                                                                                                <ForwardRef(ButtonBase)
                                                                                                  centerRipple={true}
                                                                                                  className="MuiIconButton-root MuiPickersDay-day"
                                                                                                  classes={
                                                                                                    Object {
                                                                                                      "disabled": "Mui-disabled",
                                                                                                      "focusVisible": "Mui-focusVisible",
                                                                                                      "root": "MuiButtonBase-root",
                                                                                                    }
                                                                                                  }
                                                                                                  disabled={false}
                                                                                                  focusRipple={true}
                                                                                                  tabIndex={0}
                                                                                                >
                                                                                                  <button
                                                                                                    className="MuiButtonBase-root MuiIconButton-root MuiPickersDay-day"
                                                                                                    disabled={false}
                                                                                                    onBlur={[Function]}
                                                                                                    onDragLeave={[Function]}
                                                                                                    onFocus={[Function]}
                                                                                                    onKeyDown={[Function]}
                                                                                                    onKeyUp={[Function]}
                                                                                                    onMouseDown={[Function]}
                                                                                                    onMouseLeave={[Function]}
                                                                                                    onMouseUp={[Function]}
                                                                                                    onTouchEnd={[Function]}
                                                                                                    onTouchMove={[Function]}
                                                                                                    onTouchStart={[Function]}
                                                                                                    tabIndex={0}
                                                                                                    type="button"
                                                                                                  >
                                                                                                    <span
                                                                                                      className="MuiIconButton-label"
                                                                                                    >
                                                                                                      <WithStyles(ForwardRef(Typography))
                                                                                                        color="inherit"
                                                                                                        variant="body2"
                                                                                                      >
                                                                                                        <ForwardRef(Typography)
                                                                                                          classes={
                                                                                                            Object {
                                                                                                              "alignCenter": "MuiTypography-alignCenter",
                                                                                                              "alignJustify": "MuiTypography-alignJustify",
                                                                                                              "alignLeft": "MuiTypography-alignLeft",
                                                                                                              "alignRight": "MuiTypography-alignRight",
                                                                                                              "body1": "MuiTypography-body1",
                                                                                                              "body2": "MuiTypography-body2",
                                                                                                              "button": "MuiTypography-button",
                                                                                                              "caption": "MuiTypography-caption",
                                                                                                              "colorError": "MuiTypography-colorError",
                                                                                                              "colorInherit": "MuiTypography-colorInherit",
                                                                                                              "colorPrimary": "MuiTypography-colorPrimary",
                                                                                                              "colorSecondary": "MuiTypography-colorSecondary",
                                                                                                              "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                                                              "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                                                              "displayBlock": "MuiTypography-displayBlock",
                                                                                                              "displayInline": "MuiTypography-displayInline",
                                                                                                              "gutterBottom": "MuiTypography-gutterBottom",
                                                                                                              "h1": "MuiTypography-h1",
                                                                                                              "h2": "MuiTypography-h2",
                                                                                                              "h3": "MuiTypography-h3",
                                                                                                              "h4": "MuiTypography-h4",
                                                                                                              "h5": "MuiTypography-h5",
                                                                                                              "h6": "MuiTypography-h6",
                                                                                                              "noWrap": "MuiTypography-noWrap",
                                                                                                              "overline": "MuiTypography-overline",
                                                                                                              "paragraph": "MuiTypography-paragraph",
                                                                                                              "root": "MuiTypography-root",
                                                                                                              "srOnly": "MuiTypography-srOnly",
                                                                                                              "subtitle1": "MuiTypography-subtitle1",
                                                                                                              "subtitle2": "MuiTypography-subtitle2",
                                                                                                            }
                                                                                                          }
                                                                                                          color="inherit"
                                                                                                          variant="body2"
                                                                                                        >
                                                                                                          <p
                                                                                                            className="MuiTypography-root MuiTypography-body2 MuiTypography-colorInherit"
                                                                                                          >
                                                                                                            10
                                                                                                          </p>
                                                                                                        </ForwardRef(Typography)>
                                                                                                      </WithStyles(ForwardRef(Typography))>
                                                                                                    </span>
                                                                                                    <NoSsr>
                                                                                                      <WithStyles(memo)
                                                                                                        center={true}
                                                                                                      >
                                                                                                        <ForwardRef(TouchRipple)
                                                                                                          center={true}
                                                                                                          classes={
                                                                                                            Object {
                                                                                                              "child": "MuiTouchRipple-child",
                                                                                                              "childLeaving": "MuiTouchRipple-childLeaving",
                                                                                                              "childPulsate": "MuiTouchRipple-childPulsate",
                                                                                                              "ripple": "MuiTouchRipple-ripple",
                                                                                                              "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                                                              "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                                                              "root": "MuiTouchRipple-root",
                                                                                                            }
                                                                                                          }
                                                                                                        >
                                                                                                          <span
                                                                                                            className="MuiTouchRipple-root"
                                                                                                          >
                                                                                                            <TransitionGroup
                                                                                                              childFactory={[Function]}
                                                                                                              component={null}
                                                                                                              exit={true}
                                                                                                            />
                                                                                                          </span>
                                                                                                        </ForwardRef(TouchRipple)>
                                                                                                      </WithStyles(memo)>
                                                                                                    </NoSsr>
                                                                                                  </button>
                                                                                                </ForwardRef(ButtonBase)>
                                                                                              </WithStyles(ForwardRef(ButtonBase))>
                                                                                            </ForwardRef(IconButton)>
                                                                                          </WithStyles(ForwardRef(IconButton))>
                                                                                        </Day>
                                                                                      </div>
                                                                                    </DayWrapper>
                                                                                    <DayWrapper
                                                                                      dayInCurrentMonth={true}
                                                                                      disabled={false}
                                                                                      key="Tue Feb 11 2020 00:00:00 GMT-0300 (Brasilia Standard Time)"
                                                                                      onSelect={[Function]}
                                                                                      value={2020-02-11T03:00:00.000Z}
                                                                                    >
                                                                                      <div
                                                                                        onClick={[Function]}
                                                                                        onKeyPress={[Function]}
                                                                                        role="presentation"
                                                                                      >
                                                                                        <Day
                                                                                          current={false}
                                                                                          disabled={false}
                                                                                          hidden={false}
                                                                                          selected={false}
                                                                                        >
                                                                                          <WithStyles(ForwardRef(IconButton))
                                                                                            className="MuiPickersDay-day"
                                                                                            tabIndex={0}
                                                                                          >
                                                                                            <ForwardRef(IconButton)
                                                                                              className="MuiPickersDay-day"
                                                                                              classes={
                                                                                                Object {
                                                                                                  "colorInherit": "MuiIconButton-colorInherit",
                                                                                                  "colorPrimary": "MuiIconButton-colorPrimary",
                                                                                                  "colorSecondary": "MuiIconButton-colorSecondary",
                                                                                                  "disabled": "Mui-disabled",
                                                                                                  "edgeEnd": "MuiIconButton-edgeEnd",
                                                                                                  "edgeStart": "MuiIconButton-edgeStart",
                                                                                                  "label": "MuiIconButton-label",
                                                                                                  "root": "MuiIconButton-root",
                                                                                                  "sizeSmall": "MuiIconButton-sizeSmall",
                                                                                                }
                                                                                              }
                                                                                              tabIndex={0}
                                                                                            >
                                                                                              <WithStyles(ForwardRef(ButtonBase))
                                                                                                centerRipple={true}
                                                                                                className="MuiIconButton-root MuiPickersDay-day"
                                                                                                disabled={false}
                                                                                                focusRipple={true}
                                                                                                tabIndex={0}
                                                                                              >
                                                                                                <ForwardRef(ButtonBase)
                                                                                                  centerRipple={true}
                                                                                                  className="MuiIconButton-root MuiPickersDay-day"
                                                                                                  classes={
                                                                                                    Object {
                                                                                                      "disabled": "Mui-disabled",
                                                                                                      "focusVisible": "Mui-focusVisible",
                                                                                                      "root": "MuiButtonBase-root",
                                                                                                    }
                                                                                                  }
                                                                                                  disabled={false}
                                                                                                  focusRipple={true}
                                                                                                  tabIndex={0}
                                                                                                >
                                                                                                  <button
                                                                                                    className="MuiButtonBase-root MuiIconButton-root MuiPickersDay-day"
                                                                                                    disabled={false}
                                                                                                    onBlur={[Function]}
                                                                                                    onDragLeave={[Function]}
                                                                                                    onFocus={[Function]}
                                                                                                    onKeyDown={[Function]}
                                                                                                    onKeyUp={[Function]}
                                                                                                    onMouseDown={[Function]}
                                                                                                    onMouseLeave={[Function]}
                                                                                                    onMouseUp={[Function]}
                                                                                                    onTouchEnd={[Function]}
                                                                                                    onTouchMove={[Function]}
                                                                                                    onTouchStart={[Function]}
                                                                                                    tabIndex={0}
                                                                                                    type="button"
                                                                                                  >
                                                                                                    <span
                                                                                                      className="MuiIconButton-label"
                                                                                                    >
                                                                                                      <WithStyles(ForwardRef(Typography))
                                                                                                        color="inherit"
                                                                                                        variant="body2"
                                                                                                      >
                                                                                                        <ForwardRef(Typography)
                                                                                                          classes={
                                                                                                            Object {
                                                                                                              "alignCenter": "MuiTypography-alignCenter",
                                                                                                              "alignJustify": "MuiTypography-alignJustify",
                                                                                                              "alignLeft": "MuiTypography-alignLeft",
                                                                                                              "alignRight": "MuiTypography-alignRight",
                                                                                                              "body1": "MuiTypography-body1",
                                                                                                              "body2": "MuiTypography-body2",
                                                                                                              "button": "MuiTypography-button",
                                                                                                              "caption": "MuiTypography-caption",
                                                                                                              "colorError": "MuiTypography-colorError",
                                                                                                              "colorInherit": "MuiTypography-colorInherit",
                                                                                                              "colorPrimary": "MuiTypography-colorPrimary",
                                                                                                              "colorSecondary": "MuiTypography-colorSecondary",
                                                                                                              "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                                                              "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                                                              "displayBlock": "MuiTypography-displayBlock",
                                                                                                              "displayInline": "MuiTypography-displayInline",
                                                                                                              "gutterBottom": "MuiTypography-gutterBottom",
                                                                                                              "h1": "MuiTypography-h1",
                                                                                                              "h2": "MuiTypography-h2",
                                                                                                              "h3": "MuiTypography-h3",
                                                                                                              "h4": "MuiTypography-h4",
                                                                                                              "h5": "MuiTypography-h5",
                                                                                                              "h6": "MuiTypography-h6",
                                                                                                              "noWrap": "MuiTypography-noWrap",
                                                                                                              "overline": "MuiTypography-overline",
                                                                                                              "paragraph": "MuiTypography-paragraph",
                                                                                                              "root": "MuiTypography-root",
                                                                                                              "srOnly": "MuiTypography-srOnly",
                                                                                                              "subtitle1": "MuiTypography-subtitle1",
                                                                                                              "subtitle2": "MuiTypography-subtitle2",
                                                                                                            }
                                                                                                          }
                                                                                                          color="inherit"
                                                                                                          variant="body2"
                                                                                                        >
                                                                                                          <p
                                                                                                            className="MuiTypography-root MuiTypography-body2 MuiTypography-colorInherit"
                                                                                                          >
                                                                                                            11
                                                                                                          </p>
                                                                                                        </ForwardRef(Typography)>
                                                                                                      </WithStyles(ForwardRef(Typography))>
                                                                                                    </span>
                                                                                                    <NoSsr>
                                                                                                      <WithStyles(memo)
                                                                                                        center={true}
                                                                                                      >
                                                                                                        <ForwardRef(TouchRipple)
                                                                                                          center={true}
                                                                                                          classes={
                                                                                                            Object {
                                                                                                              "child": "MuiTouchRipple-child",
                                                                                                              "childLeaving": "MuiTouchRipple-childLeaving",
                                                                                                              "childPulsate": "MuiTouchRipple-childPulsate",
                                                                                                              "ripple": "MuiTouchRipple-ripple",
                                                                                                              "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                                                              "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                                                              "root": "MuiTouchRipple-root",
                                                                                                            }
                                                                                                          }
                                                                                                        >
                                                                                                          <span
                                                                                                            className="MuiTouchRipple-root"
                                                                                                          >
                                                                                                            <TransitionGroup
                                                                                                              childFactory={[Function]}
                                                                                                              component={null}
                                                                                                              exit={true}
                                                                                                            />
                                                                                                          </span>
                                                                                                        </ForwardRef(TouchRipple)>
                                                                                                      </WithStyles(memo)>
                                                                                                    </NoSsr>
                                                                                                  </button>
                                                                                                </ForwardRef(ButtonBase)>
                                                                                              </WithStyles(ForwardRef(ButtonBase))>
                                                                                            </ForwardRef(IconButton)>
                                                                                          </WithStyles(ForwardRef(IconButton))>
                                                                                        </Day>
                                                                                      </div>
                                                                                    </DayWrapper>
                                                                                    <DayWrapper
                                                                                      dayInCurrentMonth={true}
                                                                                      disabled={false}
                                                                                      key="Wed Feb 12 2020 00:00:00 GMT-0300 (Brasilia Standard Time)"
                                                                                      onSelect={[Function]}
                                                                                      value={2020-02-12T03:00:00.000Z}
                                                                                    >
                                                                                      <div
                                                                                        onClick={[Function]}
                                                                                        onKeyPress={[Function]}
                                                                                        role="presentation"
                                                                                      >
                                                                                        <Day
                                                                                          current={false}
                                                                                          disabled={false}
                                                                                          hidden={false}
                                                                                          selected={false}
                                                                                        >
                                                                                          <WithStyles(ForwardRef(IconButton))
                                                                                            className="MuiPickersDay-day"
                                                                                            tabIndex={0}
                                                                                          >
                                                                                            <ForwardRef(IconButton)
                                                                                              className="MuiPickersDay-day"
                                                                                              classes={
                                                                                                Object {
                                                                                                  "colorInherit": "MuiIconButton-colorInherit",
                                                                                                  "colorPrimary": "MuiIconButton-colorPrimary",
                                                                                                  "colorSecondary": "MuiIconButton-colorSecondary",
                                                                                                  "disabled": "Mui-disabled",
                                                                                                  "edgeEnd": "MuiIconButton-edgeEnd",
                                                                                                  "edgeStart": "MuiIconButton-edgeStart",
                                                                                                  "label": "MuiIconButton-label",
                                                                                                  "root": "MuiIconButton-root",
                                                                                                  "sizeSmall": "MuiIconButton-sizeSmall",
                                                                                                }
                                                                                              }
                                                                                              tabIndex={0}
                                                                                            >
                                                                                              <WithStyles(ForwardRef(ButtonBase))
                                                                                                centerRipple={true}
                                                                                                className="MuiIconButton-root MuiPickersDay-day"
                                                                                                disabled={false}
                                                                                                focusRipple={true}
                                                                                                tabIndex={0}
                                                                                              >
                                                                                                <ForwardRef(ButtonBase)
                                                                                                  centerRipple={true}
                                                                                                  className="MuiIconButton-root MuiPickersDay-day"
                                                                                                  classes={
                                                                                                    Object {
                                                                                                      "disabled": "Mui-disabled",
                                                                                                      "focusVisible": "Mui-focusVisible",
                                                                                                      "root": "MuiButtonBase-root",
                                                                                                    }
                                                                                                  }
                                                                                                  disabled={false}
                                                                                                  focusRipple={true}
                                                                                                  tabIndex={0}
                                                                                                >
                                                                                                  <button
                                                                                                    className="MuiButtonBase-root MuiIconButton-root MuiPickersDay-day"
                                                                                                    disabled={false}
                                                                                                    onBlur={[Function]}
                                                                                                    onDragLeave={[Function]}
                                                                                                    onFocus={[Function]}
                                                                                                    onKeyDown={[Function]}
                                                                                                    onKeyUp={[Function]}
                                                                                                    onMouseDown={[Function]}
                                                                                                    onMouseLeave={[Function]}
                                                                                                    onMouseUp={[Function]}
                                                                                                    onTouchEnd={[Function]}
                                                                                                    onTouchMove={[Function]}
                                                                                                    onTouchStart={[Function]}
                                                                                                    tabIndex={0}
                                                                                                    type="button"
                                                                                                  >
                                                                                                    <span
                                                                                                      className="MuiIconButton-label"
                                                                                                    >
                                                                                                      <WithStyles(ForwardRef(Typography))
                                                                                                        color="inherit"
                                                                                                        variant="body2"
                                                                                                      >
                                                                                                        <ForwardRef(Typography)
                                                                                                          classes={
                                                                                                            Object {
                                                                                                              "alignCenter": "MuiTypography-alignCenter",
                                                                                                              "alignJustify": "MuiTypography-alignJustify",
                                                                                                              "alignLeft": "MuiTypography-alignLeft",
                                                                                                              "alignRight": "MuiTypography-alignRight",
                                                                                                              "body1": "MuiTypography-body1",
                                                                                                              "body2": "MuiTypography-body2",
                                                                                                              "button": "MuiTypography-button",
                                                                                                              "caption": "MuiTypography-caption",
                                                                                                              "colorError": "MuiTypography-colorError",
                                                                                                              "colorInherit": "MuiTypography-colorInherit",
                                                                                                              "colorPrimary": "MuiTypography-colorPrimary",
                                                                                                              "colorSecondary": "MuiTypography-colorSecondary",
                                                                                                              "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                                                              "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                                                              "displayBlock": "MuiTypography-displayBlock",
                                                                                                              "displayInline": "MuiTypography-displayInline",
                                                                                                              "gutterBottom": "MuiTypography-gutterBottom",
                                                                                                              "h1": "MuiTypography-h1",
                                                                                                              "h2": "MuiTypography-h2",
                                                                                                              "h3": "MuiTypography-h3",
                                                                                                              "h4": "MuiTypography-h4",
                                                                                                              "h5": "MuiTypography-h5",
                                                                                                              "h6": "MuiTypography-h6",
                                                                                                              "noWrap": "MuiTypography-noWrap",
                                                                                                              "overline": "MuiTypography-overline",
                                                                                                              "paragraph": "MuiTypography-paragraph",
                                                                                                              "root": "MuiTypography-root",
                                                                                                              "srOnly": "MuiTypography-srOnly",
                                                                                                              "subtitle1": "MuiTypography-subtitle1",
                                                                                                              "subtitle2": "MuiTypography-subtitle2",
                                                                                                            }
                                                                                                          }
                                                                                                          color="inherit"
                                                                                                          variant="body2"
                                                                                                        >
                                                                                                          <p
                                                                                                            className="MuiTypography-root MuiTypography-body2 MuiTypography-colorInherit"
                                                                                                          >
                                                                                                            12
                                                                                                          </p>
                                                                                                        </ForwardRef(Typography)>
                                                                                                      </WithStyles(ForwardRef(Typography))>
                                                                                                    </span>
                                                                                                    <NoSsr>
                                                                                                      <WithStyles(memo)
                                                                                                        center={true}
                                                                                                      >
                                                                                                        <ForwardRef(TouchRipple)
                                                                                                          center={true}
                                                                                                          classes={
                                                                                                            Object {
                                                                                                              "child": "MuiTouchRipple-child",
                                                                                                              "childLeaving": "MuiTouchRipple-childLeaving",
                                                                                                              "childPulsate": "MuiTouchRipple-childPulsate",
                                                                                                              "ripple": "MuiTouchRipple-ripple",
                                                                                                              "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                                                              "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                                                              "root": "MuiTouchRipple-root",
                                                                                                            }
                                                                                                          }
                                                                                                        >
                                                                                                          <span
                                                                                                            className="MuiTouchRipple-root"
                                                                                                          >
                                                                                                            <TransitionGroup
                                                                                                              childFactory={[Function]}
                                                                                                              component={null}
                                                                                                              exit={true}
                                                                                                            />
                                                                                                          </span>
                                                                                                        </ForwardRef(TouchRipple)>
                                                                                                      </WithStyles(memo)>
                                                                                                    </NoSsr>
                                                                                                  </button>
                                                                                                </ForwardRef(ButtonBase)>
                                                                                              </WithStyles(ForwardRef(ButtonBase))>
                                                                                            </ForwardRef(IconButton)>
                                                                                          </WithStyles(ForwardRef(IconButton))>
                                                                                        </Day>
                                                                                      </div>
                                                                                    </DayWrapper>
                                                                                    <DayWrapper
                                                                                      dayInCurrentMonth={true}
                                                                                      disabled={false}
                                                                                      key="Thu Feb 13 2020 00:00:00 GMT-0300 (Brasilia Standard Time)"
                                                                                      onSelect={[Function]}
                                                                                      value={2020-02-13T03:00:00.000Z}
                                                                                    >
                                                                                      <div
                                                                                        onClick={[Function]}
                                                                                        onKeyPress={[Function]}
                                                                                        role="presentation"
                                                                                      >
                                                                                        <Day
                                                                                          current={false}
                                                                                          disabled={false}
                                                                                          hidden={false}
                                                                                          selected={false}
                                                                                        >
                                                                                          <WithStyles(ForwardRef(IconButton))
                                                                                            className="MuiPickersDay-day"
                                                                                            tabIndex={0}
                                                                                          >
                                                                                            <ForwardRef(IconButton)
                                                                                              className="MuiPickersDay-day"
                                                                                              classes={
                                                                                                Object {
                                                                                                  "colorInherit": "MuiIconButton-colorInherit",
                                                                                                  "colorPrimary": "MuiIconButton-colorPrimary",
                                                                                                  "colorSecondary": "MuiIconButton-colorSecondary",
                                                                                                  "disabled": "Mui-disabled",
                                                                                                  "edgeEnd": "MuiIconButton-edgeEnd",
                                                                                                  "edgeStart": "MuiIconButton-edgeStart",
                                                                                                  "label": "MuiIconButton-label",
                                                                                                  "root": "MuiIconButton-root",
                                                                                                  "sizeSmall": "MuiIconButton-sizeSmall",
                                                                                                }
                                                                                              }
                                                                                              tabIndex={0}
                                                                                            >
                                                                                              <WithStyles(ForwardRef(ButtonBase))
                                                                                                centerRipple={true}
                                                                                                className="MuiIconButton-root MuiPickersDay-day"
                                                                                                disabled={false}
                                                                                                focusRipple={true}
                                                                                                tabIndex={0}
                                                                                              >
                                                                                                <ForwardRef(ButtonBase)
                                                                                                  centerRipple={true}
                                                                                                  className="MuiIconButton-root MuiPickersDay-day"
                                                                                                  classes={
                                                                                                    Object {
                                                                                                      "disabled": "Mui-disabled",
                                                                                                      "focusVisible": "Mui-focusVisible",
                                                                                                      "root": "MuiButtonBase-root",
                                                                                                    }
                                                                                                  }
                                                                                                  disabled={false}
                                                                                                  focusRipple={true}
                                                                                                  tabIndex={0}
                                                                                                >
                                                                                                  <button
                                                                                                    className="MuiButtonBase-root MuiIconButton-root MuiPickersDay-day"
                                                                                                    disabled={false}
                                                                                                    onBlur={[Function]}
                                                                                                    onDragLeave={[Function]}
                                                                                                    onFocus={[Function]}
                                                                                                    onKeyDown={[Function]}
                                                                                                    onKeyUp={[Function]}
                                                                                                    onMouseDown={[Function]}
                                                                                                    onMouseLeave={[Function]}
                                                                                                    onMouseUp={[Function]}
                                                                                                    onTouchEnd={[Function]}
                                                                                                    onTouchMove={[Function]}
                                                                                                    onTouchStart={[Function]}
                                                                                                    tabIndex={0}
                                                                                                    type="button"
                                                                                                  >
                                                                                                    <span
                                                                                                      className="MuiIconButton-label"
                                                                                                    >
                                                                                                      <WithStyles(ForwardRef(Typography))
                                                                                                        color="inherit"
                                                                                                        variant="body2"
                                                                                                      >
                                                                                                        <ForwardRef(Typography)
                                                                                                          classes={
                                                                                                            Object {
                                                                                                              "alignCenter": "MuiTypography-alignCenter",
                                                                                                              "alignJustify": "MuiTypography-alignJustify",
                                                                                                              "alignLeft": "MuiTypography-alignLeft",
                                                                                                              "alignRight": "MuiTypography-alignRight",
                                                                                                              "body1": "MuiTypography-body1",
                                                                                                              "body2": "MuiTypography-body2",
                                                                                                              "button": "MuiTypography-button",
                                                                                                              "caption": "MuiTypography-caption",
                                                                                                              "colorError": "MuiTypography-colorError",
                                                                                                              "colorInherit": "MuiTypography-colorInherit",
                                                                                                              "colorPrimary": "MuiTypography-colorPrimary",
                                                                                                              "colorSecondary": "MuiTypography-colorSecondary",
                                                                                                              "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                                                              "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                                                              "displayBlock": "MuiTypography-displayBlock",
                                                                                                              "displayInline": "MuiTypography-displayInline",
                                                                                                              "gutterBottom": "MuiTypography-gutterBottom",
                                                                                                              "h1": "MuiTypography-h1",
                                                                                                              "h2": "MuiTypography-h2",
                                                                                                              "h3": "MuiTypography-h3",
                                                                                                              "h4": "MuiTypography-h4",
                                                                                                              "h5": "MuiTypography-h5",
                                                                                                              "h6": "MuiTypography-h6",
                                                                                                              "noWrap": "MuiTypography-noWrap",
                                                                                                              "overline": "MuiTypography-overline",
                                                                                                              "paragraph": "MuiTypography-paragraph",
                                                                                                              "root": "MuiTypography-root",
                                                                                                              "srOnly": "MuiTypography-srOnly",
                                                                                                              "subtitle1": "MuiTypography-subtitle1",
                                                                                                              "subtitle2": "MuiTypography-subtitle2",
                                                                                                            }
                                                                                                          }
                                                                                                          color="inherit"
                                                                                                          variant="body2"
                                                                                                        >
                                                                                                          <p
                                                                                                            className="MuiTypography-root MuiTypography-body2 MuiTypography-colorInherit"
                                                                                                          >
                                                                                                            13
                                                                                                          </p>
                                                                                                        </ForwardRef(Typography)>
                                                                                                      </WithStyles(ForwardRef(Typography))>
                                                                                                    </span>
                                                                                                    <NoSsr>
                                                                                                      <WithStyles(memo)
                                                                                                        center={true}
                                                                                                      >
                                                                                                        <ForwardRef(TouchRipple)
                                                                                                          center={true}
                                                                                                          classes={
                                                                                                            Object {
                                                                                                              "child": "MuiTouchRipple-child",
                                                                                                              "childLeaving": "MuiTouchRipple-childLeaving",
                                                                                                              "childPulsate": "MuiTouchRipple-childPulsate",
                                                                                                              "ripple": "MuiTouchRipple-ripple",
                                                                                                              "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                                                              "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                                                              "root": "MuiTouchRipple-root",
                                                                                                            }
                                                                                                          }
                                                                                                        >
                                                                                                          <span
                                                                                                            className="MuiTouchRipple-root"
                                                                                                          >
                                                                                                            <TransitionGroup
                                                                                                              childFactory={[Function]}
                                                                                                              component={null}
                                                                                                              exit={true}
                                                                                                            />
                                                                                                          </span>
                                                                                                        </ForwardRef(TouchRipple)>
                                                                                                      </WithStyles(memo)>
                                                                                                    </NoSsr>
                                                                                                  </button>
                                                                                                </ForwardRef(ButtonBase)>
                                                                                              </WithStyles(ForwardRef(ButtonBase))>
                                                                                            </ForwardRef(IconButton)>
                                                                                          </WithStyles(ForwardRef(IconButton))>
                                                                                        </Day>
                                                                                      </div>
                                                                                    </DayWrapper>
                                                                                    <DayWrapper
                                                                                      dayInCurrentMonth={true}
                                                                                      disabled={false}
                                                                                      key="Fri Feb 14 2020 00:00:00 GMT-0300 (Brasilia Standard Time)"
                                                                                      onSelect={[Function]}
                                                                                      value={2020-02-14T03:00:00.000Z}
                                                                                    >
                                                                                      <div
                                                                                        onClick={[Function]}
                                                                                        onKeyPress={[Function]}
                                                                                        role="presentation"
                                                                                      >
                                                                                        <Day
                                                                                          current={false}
                                                                                          disabled={false}
                                                                                          hidden={false}
                                                                                          selected={false}
                                                                                        >
                                                                                          <WithStyles(ForwardRef(IconButton))
                                                                                            className="MuiPickersDay-day"
                                                                                            tabIndex={0}
                                                                                          >
                                                                                            <ForwardRef(IconButton)
                                                                                              className="MuiPickersDay-day"
                                                                                              classes={
                                                                                                Object {
                                                                                                  "colorInherit": "MuiIconButton-colorInherit",
                                                                                                  "colorPrimary": "MuiIconButton-colorPrimary",
                                                                                                  "colorSecondary": "MuiIconButton-colorSecondary",
                                                                                                  "disabled": "Mui-disabled",
                                                                                                  "edgeEnd": "MuiIconButton-edgeEnd",
                                                                                                  "edgeStart": "MuiIconButton-edgeStart",
                                                                                                  "label": "MuiIconButton-label",
                                                                                                  "root": "MuiIconButton-root",
                                                                                                  "sizeSmall": "MuiIconButton-sizeSmall",
                                                                                                }
                                                                                              }
                                                                                              tabIndex={0}
                                                                                            >
                                                                                              <WithStyles(ForwardRef(ButtonBase))
                                                                                                centerRipple={true}
                                                                                                className="MuiIconButton-root MuiPickersDay-day"
                                                                                                disabled={false}
                                                                                                focusRipple={true}
                                                                                                tabIndex={0}
                                                                                              >
                                                                                                <ForwardRef(ButtonBase)
                                                                                                  centerRipple={true}
                                                                                                  className="MuiIconButton-root MuiPickersDay-day"
                                                                                                  classes={
                                                                                                    Object {
                                                                                                      "disabled": "Mui-disabled",
                                                                                                      "focusVisible": "Mui-focusVisible",
                                                                                                      "root": "MuiButtonBase-root",
                                                                                                    }
                                                                                                  }
                                                                                                  disabled={false}
                                                                                                  focusRipple={true}
                                                                                                  tabIndex={0}
                                                                                                >
                                                                                                  <button
                                                                                                    className="MuiButtonBase-root MuiIconButton-root MuiPickersDay-day"
                                                                                                    disabled={false}
                                                                                                    onBlur={[Function]}
                                                                                                    onDragLeave={[Function]}
                                                                                                    onFocus={[Function]}
                                                                                                    onKeyDown={[Function]}
                                                                                                    onKeyUp={[Function]}
                                                                                                    onMouseDown={[Function]}
                                                                                                    onMouseLeave={[Function]}
                                                                                                    onMouseUp={[Function]}
                                                                                                    onTouchEnd={[Function]}
                                                                                                    onTouchMove={[Function]}
                                                                                                    onTouchStart={[Function]}
                                                                                                    tabIndex={0}
                                                                                                    type="button"
                                                                                                  >
                                                                                                    <span
                                                                                                      className="MuiIconButton-label"
                                                                                                    >
                                                                                                      <WithStyles(ForwardRef(Typography))
                                                                                                        color="inherit"
                                                                                                        variant="body2"
                                                                                                      >
                                                                                                        <ForwardRef(Typography)
                                                                                                          classes={
                                                                                                            Object {
                                                                                                              "alignCenter": "MuiTypography-alignCenter",
                                                                                                              "alignJustify": "MuiTypography-alignJustify",
                                                                                                              "alignLeft": "MuiTypography-alignLeft",
                                                                                                              "alignRight": "MuiTypography-alignRight",
                                                                                                              "body1": "MuiTypography-body1",
                                                                                                              "body2": "MuiTypography-body2",
                                                                                                              "button": "MuiTypography-button",
                                                                                                              "caption": "MuiTypography-caption",
                                                                                                              "colorError": "MuiTypography-colorError",
                                                                                                              "colorInherit": "MuiTypography-colorInherit",
                                                                                                              "colorPrimary": "MuiTypography-colorPrimary",
                                                                                                              "colorSecondary": "MuiTypography-colorSecondary",
                                                                                                              "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                                                              "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                                                              "displayBlock": "MuiTypography-displayBlock",
                                                                                                              "displayInline": "MuiTypography-displayInline",
                                                                                                              "gutterBottom": "MuiTypography-gutterBottom",
                                                                                                              "h1": "MuiTypography-h1",
                                                                                                              "h2": "MuiTypography-h2",
                                                                                                              "h3": "MuiTypography-h3",
                                                                                                              "h4": "MuiTypography-h4",
                                                                                                              "h5": "MuiTypography-h5",
                                                                                                              "h6": "MuiTypography-h6",
                                                                                                              "noWrap": "MuiTypography-noWrap",
                                                                                                              "overline": "MuiTypography-overline",
                                                                                                              "paragraph": "MuiTypography-paragraph",
                                                                                                              "root": "MuiTypography-root",
                                                                                                              "srOnly": "MuiTypography-srOnly",
                                                                                                              "subtitle1": "MuiTypography-subtitle1",
                                                                                                              "subtitle2": "MuiTypography-subtitle2",
                                                                                                            }
                                                                                                          }
                                                                                                          color="inherit"
                                                                                                          variant="body2"
                                                                                                        >
                                                                                                          <p
                                                                                                            className="MuiTypography-root MuiTypography-body2 MuiTypography-colorInherit"
                                                                                                          >
                                                                                                            14
                                                                                                          </p>
                                                                                                        </ForwardRef(Typography)>
                                                                                                      </WithStyles(ForwardRef(Typography))>
                                                                                                    </span>
                                                                                                    <NoSsr>
                                                                                                      <WithStyles(memo)
                                                                                                        center={true}
                                                                                                      >
                                                                                                        <ForwardRef(TouchRipple)
                                                                                                          center={true}
                                                                                                          classes={
                                                                                                            Object {
                                                                                                              "child": "MuiTouchRipple-child",
                                                                                                              "childLeaving": "MuiTouchRipple-childLeaving",
                                                                                                              "childPulsate": "MuiTouchRipple-childPulsate",
                                                                                                              "ripple": "MuiTouchRipple-ripple",
                                                                                                              "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                                                              "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                                                              "root": "MuiTouchRipple-root",
                                                                                                            }
                                                                                                          }
                                                                                                        >
                                                                                                          <span
                                                                                                            className="MuiTouchRipple-root"
                                                                                                          >
                                                                                                            <TransitionGroup
                                                                                                              childFactory={[Function]}
                                                                                                              component={null}
                                                                                                              exit={true}
                                                                                                            />
                                                                                                          </span>
                                                                                                        </ForwardRef(TouchRipple)>
                                                                                                      </WithStyles(memo)>
                                                                                                    </NoSsr>
                                                                                                  </button>
                                                                                                </ForwardRef(ButtonBase)>
                                                                                              </WithStyles(ForwardRef(ButtonBase))>
                                                                                            </ForwardRef(IconButton)>
                                                                                          </WithStyles(ForwardRef(IconButton))>
                                                                                        </Day>
                                                                                      </div>
                                                                                    </DayWrapper>
                                                                                    <DayWrapper
                                                                                      dayInCurrentMonth={true}
                                                                                      disabled={false}
                                                                                      key="Sat Feb 15 2020 00:00:00 GMT-0300 (Brasilia Standard Time)"
                                                                                      onSelect={[Function]}
                                                                                      value={2020-02-15T03:00:00.000Z}
                                                                                    >
                                                                                      <div
                                                                                        onClick={[Function]}
                                                                                        onKeyPress={[Function]}
                                                                                        role="presentation"
                                                                                      >
                                                                                        <Day
                                                                                          current={false}
                                                                                          disabled={false}
                                                                                          hidden={false}
                                                                                          selected={false}
                                                                                        >
                                                                                          <WithStyles(ForwardRef(IconButton))
                                                                                            className="MuiPickersDay-day"
                                                                                            tabIndex={0}
                                                                                          >
                                                                                            <ForwardRef(IconButton)
                                                                                              className="MuiPickersDay-day"
                                                                                              classes={
                                                                                                Object {
                                                                                                  "colorInherit": "MuiIconButton-colorInherit",
                                                                                                  "colorPrimary": "MuiIconButton-colorPrimary",
                                                                                                  "colorSecondary": "MuiIconButton-colorSecondary",
                                                                                                  "disabled": "Mui-disabled",
                                                                                                  "edgeEnd": "MuiIconButton-edgeEnd",
                                                                                                  "edgeStart": "MuiIconButton-edgeStart",
                                                                                                  "label": "MuiIconButton-label",
                                                                                                  "root": "MuiIconButton-root",
                                                                                                  "sizeSmall": "MuiIconButton-sizeSmall",
                                                                                                }
                                                                                              }
                                                                                              tabIndex={0}
                                                                                            >
                                                                                              <WithStyles(ForwardRef(ButtonBase))
                                                                                                centerRipple={true}
                                                                                                className="MuiIconButton-root MuiPickersDay-day"
                                                                                                disabled={false}
                                                                                                focusRipple={true}
                                                                                                tabIndex={0}
                                                                                              >
                                                                                                <ForwardRef(ButtonBase)
                                                                                                  centerRipple={true}
                                                                                                  className="MuiIconButton-root MuiPickersDay-day"
                                                                                                  classes={
                                                                                                    Object {
                                                                                                      "disabled": "Mui-disabled",
                                                                                                      "focusVisible": "Mui-focusVisible",
                                                                                                      "root": "MuiButtonBase-root",
                                                                                                    }
                                                                                                  }
                                                                                                  disabled={false}
                                                                                                  focusRipple={true}
                                                                                                  tabIndex={0}
                                                                                                >
                                                                                                  <button
                                                                                                    className="MuiButtonBase-root MuiIconButton-root MuiPickersDay-day"
                                                                                                    disabled={false}
                                                                                                    onBlur={[Function]}
                                                                                                    onDragLeave={[Function]}
                                                                                                    onFocus={[Function]}
                                                                                                    onKeyDown={[Function]}
                                                                                                    onKeyUp={[Function]}
                                                                                                    onMouseDown={[Function]}
                                                                                                    onMouseLeave={[Function]}
                                                                                                    onMouseUp={[Function]}
                                                                                                    onTouchEnd={[Function]}
                                                                                                    onTouchMove={[Function]}
                                                                                                    onTouchStart={[Function]}
                                                                                                    tabIndex={0}
                                                                                                    type="button"
                                                                                                  >
                                                                                                    <span
                                                                                                      className="MuiIconButton-label"
                                                                                                    >
                                                                                                      <WithStyles(ForwardRef(Typography))
                                                                                                        color="inherit"
                                                                                                        variant="body2"
                                                                                                      >
                                                                                                        <ForwardRef(Typography)
                                                                                                          classes={
                                                                                                            Object {
                                                                                                              "alignCenter": "MuiTypography-alignCenter",
                                                                                                              "alignJustify": "MuiTypography-alignJustify",
                                                                                                              "alignLeft": "MuiTypography-alignLeft",
                                                                                                              "alignRight": "MuiTypography-alignRight",
                                                                                                              "body1": "MuiTypography-body1",
                                                                                                              "body2": "MuiTypography-body2",
                                                                                                              "button": "MuiTypography-button",
                                                                                                              "caption": "MuiTypography-caption",
                                                                                                              "colorError": "MuiTypography-colorError",
                                                                                                              "colorInherit": "MuiTypography-colorInherit",
                                                                                                              "colorPrimary": "MuiTypography-colorPrimary",
                                                                                                              "colorSecondary": "MuiTypography-colorSecondary",
                                                                                                              "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                                                              "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                                                              "displayBlock": "MuiTypography-displayBlock",
                                                                                                              "displayInline": "MuiTypography-displayInline",
                                                                                                              "gutterBottom": "MuiTypography-gutterBottom",
                                                                                                              "h1": "MuiTypography-h1",
                                                                                                              "h2": "MuiTypography-h2",
                                                                                                              "h3": "MuiTypography-h3",
                                                                                                              "h4": "MuiTypography-h4",
                                                                                                              "h5": "MuiTypography-h5",
                                                                                                              "h6": "MuiTypography-h6",
                                                                                                              "noWrap": "MuiTypography-noWrap",
                                                                                                              "overline": "MuiTypography-overline",
                                                                                                              "paragraph": "MuiTypography-paragraph",
                                                                                                              "root": "MuiTypography-root",
                                                                                                              "srOnly": "MuiTypography-srOnly",
                                                                                                              "subtitle1": "MuiTypography-subtitle1",
                                                                                                              "subtitle2": "MuiTypography-subtitle2",
                                                                                                            }
                                                                                                          }
                                                                                                          color="inherit"
                                                                                                          variant="body2"
                                                                                                        >
                                                                                                          <p
                                                                                                            className="MuiTypography-root MuiTypography-body2 MuiTypography-colorInherit"
                                                                                                          >
                                                                                                            15
                                                                                                          </p>
                                                                                                        </ForwardRef(Typography)>
                                                                                                      </WithStyles(ForwardRef(Typography))>
                                                                                                    </span>
                                                                                                    <NoSsr>
                                                                                                      <WithStyles(memo)
                                                                                                        center={true}
                                                                                                      >
                                                                                                        <ForwardRef(TouchRipple)
                                                                                                          center={true}
                                                                                                          classes={
                                                                                                            Object {
                                                                                                              "child": "MuiTouchRipple-child",
                                                                                                              "childLeaving": "MuiTouchRipple-childLeaving",
                                                                                                              "childPulsate": "MuiTouchRipple-childPulsate",
                                                                                                              "ripple": "MuiTouchRipple-ripple",
                                                                                                              "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                                                              "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                                                              "root": "MuiTouchRipple-root",
                                                                                                            }
                                                                                                          }
                                                                                                        >
                                                                                                          <span
                                                                                                            className="MuiTouchRipple-root"
                                                                                                          >
                                                                                                            <TransitionGroup
                                                                                                              childFactory={[Function]}
                                                                                                              component={null}
                                                                                                              exit={true}
                                                                                                            />
                                                                                                          </span>
                                                                                                        </ForwardRef(TouchRipple)>
                                                                                                      </WithStyles(memo)>
                                                                                                    </NoSsr>
                                                                                                  </button>
                                                                                                </ForwardRef(ButtonBase)>
                                                                                              </WithStyles(ForwardRef(ButtonBase))>
                                                                                            </ForwardRef(IconButton)>
                                                                                          </WithStyles(ForwardRef(IconButton))>
                                                                                        </Day>
                                                                                      </div>
                                                                                    </DayWrapper>
                                                                                  </div>
                                                                                  <div
                                                                                    className="MuiPickersCalendar-week"
                                                                                    key="week-Sun Feb 16 2020 00:00:00 GMT-0300 (Brasilia Standard Time)"
                                                                                  >
                                                                                    <DayWrapper
                                                                                      dayInCurrentMonth={true}
                                                                                      disabled={false}
                                                                                      key="Sun Feb 16 2020 00:00:00 GMT-0300 (Brasilia Standard Time)"
                                                                                      onSelect={[Function]}
                                                                                      value={2020-02-16T03:00:00.000Z}
                                                                                    >
                                                                                      <div
                                                                                        onClick={[Function]}
                                                                                        onKeyPress={[Function]}
                                                                                        role="presentation"
                                                                                      >
                                                                                        <Day
                                                                                          current={false}
                                                                                          disabled={false}
                                                                                          hidden={false}
                                                                                          selected={false}
                                                                                        >
                                                                                          <WithStyles(ForwardRef(IconButton))
                                                                                            className="MuiPickersDay-day"
                                                                                            tabIndex={0}
                                                                                          >
                                                                                            <ForwardRef(IconButton)
                                                                                              className="MuiPickersDay-day"
                                                                                              classes={
                                                                                                Object {
                                                                                                  "colorInherit": "MuiIconButton-colorInherit",
                                                                                                  "colorPrimary": "MuiIconButton-colorPrimary",
                                                                                                  "colorSecondary": "MuiIconButton-colorSecondary",
                                                                                                  "disabled": "Mui-disabled",
                                                                                                  "edgeEnd": "MuiIconButton-edgeEnd",
                                                                                                  "edgeStart": "MuiIconButton-edgeStart",
                                                                                                  "label": "MuiIconButton-label",
                                                                                                  "root": "MuiIconButton-root",
                                                                                                  "sizeSmall": "MuiIconButton-sizeSmall",
                                                                                                }
                                                                                              }
                                                                                              tabIndex={0}
                                                                                            >
                                                                                              <WithStyles(ForwardRef(ButtonBase))
                                                                                                centerRipple={true}
                                                                                                className="MuiIconButton-root MuiPickersDay-day"
                                                                                                disabled={false}
                                                                                                focusRipple={true}
                                                                                                tabIndex={0}
                                                                                              >
                                                                                                <ForwardRef(ButtonBase)
                                                                                                  centerRipple={true}
                                                                                                  className="MuiIconButton-root MuiPickersDay-day"
                                                                                                  classes={
                                                                                                    Object {
                                                                                                      "disabled": "Mui-disabled",
                                                                                                      "focusVisible": "Mui-focusVisible",
                                                                                                      "root": "MuiButtonBase-root",
                                                                                                    }
                                                                                                  }
                                                                                                  disabled={false}
                                                                                                  focusRipple={true}
                                                                                                  tabIndex={0}
                                                                                                >
                                                                                                  <button
                                                                                                    className="MuiButtonBase-root MuiIconButton-root MuiPickersDay-day"
                                                                                                    disabled={false}
                                                                                                    onBlur={[Function]}
                                                                                                    onDragLeave={[Function]}
                                                                                                    onFocus={[Function]}
                                                                                                    onKeyDown={[Function]}
                                                                                                    onKeyUp={[Function]}
                                                                                                    onMouseDown={[Function]}
                                                                                                    onMouseLeave={[Function]}
                                                                                                    onMouseUp={[Function]}
                                                                                                    onTouchEnd={[Function]}
                                                                                                    onTouchMove={[Function]}
                                                                                                    onTouchStart={[Function]}
                                                                                                    tabIndex={0}
                                                                                                    type="button"
                                                                                                  >
                                                                                                    <span
                                                                                                      className="MuiIconButton-label"
                                                                                                    >
                                                                                                      <WithStyles(ForwardRef(Typography))
                                                                                                        color="inherit"
                                                                                                        variant="body2"
                                                                                                      >
                                                                                                        <ForwardRef(Typography)
                                                                                                          classes={
                                                                                                            Object {
                                                                                                              "alignCenter": "MuiTypography-alignCenter",
                                                                                                              "alignJustify": "MuiTypography-alignJustify",
                                                                                                              "alignLeft": "MuiTypography-alignLeft",
                                                                                                              "alignRight": "MuiTypography-alignRight",
                                                                                                              "body1": "MuiTypography-body1",
                                                                                                              "body2": "MuiTypography-body2",
                                                                                                              "button": "MuiTypography-button",
                                                                                                              "caption": "MuiTypography-caption",
                                                                                                              "colorError": "MuiTypography-colorError",
                                                                                                              "colorInherit": "MuiTypography-colorInherit",
                                                                                                              "colorPrimary": "MuiTypography-colorPrimary",
                                                                                                              "colorSecondary": "MuiTypography-colorSecondary",
                                                                                                              "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                                                              "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                                                              "displayBlock": "MuiTypography-displayBlock",
                                                                                                              "displayInline": "MuiTypography-displayInline",
                                                                                                              "gutterBottom": "MuiTypography-gutterBottom",
                                                                                                              "h1": "MuiTypography-h1",
                                                                                                              "h2": "MuiTypography-h2",
                                                                                                              "h3": "MuiTypography-h3",
                                                                                                              "h4": "MuiTypography-h4",
                                                                                                              "h5": "MuiTypography-h5",
                                                                                                              "h6": "MuiTypography-h6",
                                                                                                              "noWrap": "MuiTypography-noWrap",
                                                                                                              "overline": "MuiTypography-overline",
                                                                                                              "paragraph": "MuiTypography-paragraph",
                                                                                                              "root": "MuiTypography-root",
                                                                                                              "srOnly": "MuiTypography-srOnly",
                                                                                                              "subtitle1": "MuiTypography-subtitle1",
                                                                                                              "subtitle2": "MuiTypography-subtitle2",
                                                                                                            }
                                                                                                          }
                                                                                                          color="inherit"
                                                                                                          variant="body2"
                                                                                                        >
                                                                                                          <p
                                                                                                            className="MuiTypography-root MuiTypography-body2 MuiTypography-colorInherit"
                                                                                                          >
                                                                                                            16
                                                                                                          </p>
                                                                                                        </ForwardRef(Typography)>
                                                                                                      </WithStyles(ForwardRef(Typography))>
                                                                                                    </span>
                                                                                                    <NoSsr>
                                                                                                      <WithStyles(memo)
                                                                                                        center={true}
                                                                                                      >
                                                                                                        <ForwardRef(TouchRipple)
                                                                                                          center={true}
                                                                                                          classes={
                                                                                                            Object {
                                                                                                              "child": "MuiTouchRipple-child",
                                                                                                              "childLeaving": "MuiTouchRipple-childLeaving",
                                                                                                              "childPulsate": "MuiTouchRipple-childPulsate",
                                                                                                              "ripple": "MuiTouchRipple-ripple",
                                                                                                              "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                                                              "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                                                              "root": "MuiTouchRipple-root",
                                                                                                            }
                                                                                                          }
                                                                                                        >
                                                                                                          <span
                                                                                                            className="MuiTouchRipple-root"
                                                                                                          >
                                                                                                            <TransitionGroup
                                                                                                              childFactory={[Function]}
                                                                                                              component={null}
                                                                                                              exit={true}
                                                                                                            />
                                                                                                          </span>
                                                                                                        </ForwardRef(TouchRipple)>
                                                                                                      </WithStyles(memo)>
                                                                                                    </NoSsr>
                                                                                                  </button>
                                                                                                </ForwardRef(ButtonBase)>
                                                                                              </WithStyles(ForwardRef(ButtonBase))>
                                                                                            </ForwardRef(IconButton)>
                                                                                          </WithStyles(ForwardRef(IconButton))>
                                                                                        </Day>
                                                                                      </div>
                                                                                    </DayWrapper>
                                                                                    <DayWrapper
                                                                                      dayInCurrentMonth={true}
                                                                                      disabled={false}
                                                                                      key="Mon Feb 17 2020 00:00:00 GMT-0300 (Brasilia Standard Time)"
                                                                                      onSelect={[Function]}
                                                                                      value={2020-02-17T03:00:00.000Z}
                                                                                    >
                                                                                      <div
                                                                                        onClick={[Function]}
                                                                                        onKeyPress={[Function]}
                                                                                        role="presentation"
                                                                                      >
                                                                                        <Day
                                                                                          current={false}
                                                                                          disabled={false}
                                                                                          hidden={false}
                                                                                          selected={false}
                                                                                        >
                                                                                          <WithStyles(ForwardRef(IconButton))
                                                                                            className="MuiPickersDay-day"
                                                                                            tabIndex={0}
                                                                                          >
                                                                                            <ForwardRef(IconButton)
                                                                                              className="MuiPickersDay-day"
                                                                                              classes={
                                                                                                Object {
                                                                                                  "colorInherit": "MuiIconButton-colorInherit",
                                                                                                  "colorPrimary": "MuiIconButton-colorPrimary",
                                                                                                  "colorSecondary": "MuiIconButton-colorSecondary",
                                                                                                  "disabled": "Mui-disabled",
                                                                                                  "edgeEnd": "MuiIconButton-edgeEnd",
                                                                                                  "edgeStart": "MuiIconButton-edgeStart",
                                                                                                  "label": "MuiIconButton-label",
                                                                                                  "root": "MuiIconButton-root",
                                                                                                  "sizeSmall": "MuiIconButton-sizeSmall",
                                                                                                }
                                                                                              }
                                                                                              tabIndex={0}
                                                                                            >
                                                                                              <WithStyles(ForwardRef(ButtonBase))
                                                                                                centerRipple={true}
                                                                                                className="MuiIconButton-root MuiPickersDay-day"
                                                                                                disabled={false}
                                                                                                focusRipple={true}
                                                                                                tabIndex={0}
                                                                                              >
                                                                                                <ForwardRef(ButtonBase)
                                                                                                  centerRipple={true}
                                                                                                  className="MuiIconButton-root MuiPickersDay-day"
                                                                                                  classes={
                                                                                                    Object {
                                                                                                      "disabled": "Mui-disabled",
                                                                                                      "focusVisible": "Mui-focusVisible",
                                                                                                      "root": "MuiButtonBase-root",
                                                                                                    }
                                                                                                  }
                                                                                                  disabled={false}
                                                                                                  focusRipple={true}
                                                                                                  tabIndex={0}
                                                                                                >
                                                                                                  <button
                                                                                                    className="MuiButtonBase-root MuiIconButton-root MuiPickersDay-day"
                                                                                                    disabled={false}
                                                                                                    onBlur={[Function]}
                                                                                                    onDragLeave={[Function]}
                                                                                                    onFocus={[Function]}
                                                                                                    onKeyDown={[Function]}
                                                                                                    onKeyUp={[Function]}
                                                                                                    onMouseDown={[Function]}
                                                                                                    onMouseLeave={[Function]}
                                                                                                    onMouseUp={[Function]}
                                                                                                    onTouchEnd={[Function]}
                                                                                                    onTouchMove={[Function]}
                                                                                                    onTouchStart={[Function]}
                                                                                                    tabIndex={0}
                                                                                                    type="button"
                                                                                                  >
                                                                                                    <span
                                                                                                      className="MuiIconButton-label"
                                                                                                    >
                                                                                                      <WithStyles(ForwardRef(Typography))
                                                                                                        color="inherit"
                                                                                                        variant="body2"
                                                                                                      >
                                                                                                        <ForwardRef(Typography)
                                                                                                          classes={
                                                                                                            Object {
                                                                                                              "alignCenter": "MuiTypography-alignCenter",
                                                                                                              "alignJustify": "MuiTypography-alignJustify",
                                                                                                              "alignLeft": "MuiTypography-alignLeft",
                                                                                                              "alignRight": "MuiTypography-alignRight",
                                                                                                              "body1": "MuiTypography-body1",
                                                                                                              "body2": "MuiTypography-body2",
                                                                                                              "button": "MuiTypography-button",
                                                                                                              "caption": "MuiTypography-caption",
                                                                                                              "colorError": "MuiTypography-colorError",
                                                                                                              "colorInherit": "MuiTypography-colorInherit",
                                                                                                              "colorPrimary": "MuiTypography-colorPrimary",
                                                                                                              "colorSecondary": "MuiTypography-colorSecondary",
                                                                                                              "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                                                              "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                                                              "displayBlock": "MuiTypography-displayBlock",
                                                                                                              "displayInline": "MuiTypography-displayInline",
                                                                                                              "gutterBottom": "MuiTypography-gutterBottom",
                                                                                                              "h1": "MuiTypography-h1",
                                                                                                              "h2": "MuiTypography-h2",
                                                                                                              "h3": "MuiTypography-h3",
                                                                                                              "h4": "MuiTypography-h4",
                                                                                                              "h5": "MuiTypography-h5",
                                                                                                              "h6": "MuiTypography-h6",
                                                                                                              "noWrap": "MuiTypography-noWrap",
                                                                                                              "overline": "MuiTypography-overline",
                                                                                                              "paragraph": "MuiTypography-paragraph",
                                                                                                              "root": "MuiTypography-root",
                                                                                                              "srOnly": "MuiTypography-srOnly",
                                                                                                              "subtitle1": "MuiTypography-subtitle1",
                                                                                                              "subtitle2": "MuiTypography-subtitle2",
                                                                                                            }
                                                                                                          }
                                                                                                          color="inherit"
                                                                                                          variant="body2"
                                                                                                        >
                                                                                                          <p
                                                                                                            className="MuiTypography-root MuiTypography-body2 MuiTypography-colorInherit"
                                                                                                          >
                                                                                                            17
                                                                                                          </p>
                                                                                                        </ForwardRef(Typography)>
                                                                                                      </WithStyles(ForwardRef(Typography))>
                                                                                                    </span>
                                                                                                    <NoSsr>
                                                                                                      <WithStyles(memo)
                                                                                                        center={true}
                                                                                                      >
                                                                                                        <ForwardRef(TouchRipple)
                                                                                                          center={true}
                                                                                                          classes={
                                                                                                            Object {
                                                                                                              "child": "MuiTouchRipple-child",
                                                                                                              "childLeaving": "MuiTouchRipple-childLeaving",
                                                                                                              "childPulsate": "MuiTouchRipple-childPulsate",
                                                                                                              "ripple": "MuiTouchRipple-ripple",
                                                                                                              "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                                                              "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                                                              "root": "MuiTouchRipple-root",
                                                                                                            }
                                                                                                          }
                                                                                                        >
                                                                                                          <span
                                                                                                            className="MuiTouchRipple-root"
                                                                                                          >
                                                                                                            <TransitionGroup
                                                                                                              childFactory={[Function]}
                                                                                                              component={null}
                                                                                                              exit={true}
                                                                                                            />
                                                                                                          </span>
                                                                                                        </ForwardRef(TouchRipple)>
                                                                                                      </WithStyles(memo)>
                                                                                                    </NoSsr>
                                                                                                  </button>
                                                                                                </ForwardRef(ButtonBase)>
                                                                                              </WithStyles(ForwardRef(ButtonBase))>
                                                                                            </ForwardRef(IconButton)>
                                                                                          </WithStyles(ForwardRef(IconButton))>
                                                                                        </Day>
                                                                                      </div>
                                                                                    </DayWrapper>
                                                                                    <DayWrapper
                                                                                      dayInCurrentMonth={true}
                                                                                      disabled={false}
                                                                                      key="Tue Feb 18 2020 00:00:00 GMT-0300 (Brasilia Standard Time)"
                                                                                      onSelect={[Function]}
                                                                                      value={2020-02-18T03:00:00.000Z}
                                                                                    >
                                                                                      <div
                                                                                        onClick={[Function]}
                                                                                        onKeyPress={[Function]}
                                                                                        role="presentation"
                                                                                      >
                                                                                        <Day
                                                                                          current={false}
                                                                                          disabled={false}
                                                                                          hidden={false}
                                                                                          selected={false}
                                                                                        >
                                                                                          <WithStyles(ForwardRef(IconButton))
                                                                                            className="MuiPickersDay-day"
                                                                                            tabIndex={0}
                                                                                          >
                                                                                            <ForwardRef(IconButton)
                                                                                              className="MuiPickersDay-day"
                                                                                              classes={
                                                                                                Object {
                                                                                                  "colorInherit": "MuiIconButton-colorInherit",
                                                                                                  "colorPrimary": "MuiIconButton-colorPrimary",
                                                                                                  "colorSecondary": "MuiIconButton-colorSecondary",
                                                                                                  "disabled": "Mui-disabled",
                                                                                                  "edgeEnd": "MuiIconButton-edgeEnd",
                                                                                                  "edgeStart": "MuiIconButton-edgeStart",
                                                                                                  "label": "MuiIconButton-label",
                                                                                                  "root": "MuiIconButton-root",
                                                                                                  "sizeSmall": "MuiIconButton-sizeSmall",
                                                                                                }
                                                                                              }
                                                                                              tabIndex={0}
                                                                                            >
                                                                                              <WithStyles(ForwardRef(ButtonBase))
                                                                                                centerRipple={true}
                                                                                                className="MuiIconButton-root MuiPickersDay-day"
                                                                                                disabled={false}
                                                                                                focusRipple={true}
                                                                                                tabIndex={0}
                                                                                              >
                                                                                                <ForwardRef(ButtonBase)
                                                                                                  centerRipple={true}
                                                                                                  className="MuiIconButton-root MuiPickersDay-day"
                                                                                                  classes={
                                                                                                    Object {
                                                                                                      "disabled": "Mui-disabled",
                                                                                                      "focusVisible": "Mui-focusVisible",
                                                                                                      "root": "MuiButtonBase-root",
                                                                                                    }
                                                                                                  }
                                                                                                  disabled={false}
                                                                                                  focusRipple={true}
                                                                                                  tabIndex={0}
                                                                                                >
                                                                                                  <button
                                                                                                    className="MuiButtonBase-root MuiIconButton-root MuiPickersDay-day"
                                                                                                    disabled={false}
                                                                                                    onBlur={[Function]}
                                                                                                    onDragLeave={[Function]}
                                                                                                    onFocus={[Function]}
                                                                                                    onKeyDown={[Function]}
                                                                                                    onKeyUp={[Function]}
                                                                                                    onMouseDown={[Function]}
                                                                                                    onMouseLeave={[Function]}
                                                                                                    onMouseUp={[Function]}
                                                                                                    onTouchEnd={[Function]}
                                                                                                    onTouchMove={[Function]}
                                                                                                    onTouchStart={[Function]}
                                                                                                    tabIndex={0}
                                                                                                    type="button"
                                                                                                  >
                                                                                                    <span
                                                                                                      className="MuiIconButton-label"
                                                                                                    >
                                                                                                      <WithStyles(ForwardRef(Typography))
                                                                                                        color="inherit"
                                                                                                        variant="body2"
                                                                                                      >
                                                                                                        <ForwardRef(Typography)
                                                                                                          classes={
                                                                                                            Object {
                                                                                                              "alignCenter": "MuiTypography-alignCenter",
                                                                                                              "alignJustify": "MuiTypography-alignJustify",
                                                                                                              "alignLeft": "MuiTypography-alignLeft",
                                                                                                              "alignRight": "MuiTypography-alignRight",
                                                                                                              "body1": "MuiTypography-body1",
                                                                                                              "body2": "MuiTypography-body2",
                                                                                                              "button": "MuiTypography-button",
                                                                                                              "caption": "MuiTypography-caption",
                                                                                                              "colorError": "MuiTypography-colorError",
                                                                                                              "colorInherit": "MuiTypography-colorInherit",
                                                                                                              "colorPrimary": "MuiTypography-colorPrimary",
                                                                                                              "colorSecondary": "MuiTypography-colorSecondary",
                                                                                                              "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                                                              "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                                                              "displayBlock": "MuiTypography-displayBlock",
                                                                                                              "displayInline": "MuiTypography-displayInline",
                                                                                                              "gutterBottom": "MuiTypography-gutterBottom",
                                                                                                              "h1": "MuiTypography-h1",
                                                                                                              "h2": "MuiTypography-h2",
                                                                                                              "h3": "MuiTypography-h3",
                                                                                                              "h4": "MuiTypography-h4",
                                                                                                              "h5": "MuiTypography-h5",
                                                                                                              "h6": "MuiTypography-h6",
                                                                                                              "noWrap": "MuiTypography-noWrap",
                                                                                                              "overline": "MuiTypography-overline",
                                                                                                              "paragraph": "MuiTypography-paragraph",
                                                                                                              "root": "MuiTypography-root",
                                                                                                              "srOnly": "MuiTypography-srOnly",
                                                                                                              "subtitle1": "MuiTypography-subtitle1",
                                                                                                              "subtitle2": "MuiTypography-subtitle2",
                                                                                                            }
                                                                                                          }
                                                                                                          color="inherit"
                                                                                                          variant="body2"
                                                                                                        >
                                                                                                          <p
                                                                                                            className="MuiTypography-root MuiTypography-body2 MuiTypography-colorInherit"
                                                                                                          >
                                                                                                            18
                                                                                                          </p>
                                                                                                        </ForwardRef(Typography)>
                                                                                                      </WithStyles(ForwardRef(Typography))>
                                                                                                    </span>
                                                                                                    <NoSsr>
                                                                                                      <WithStyles(memo)
                                                                                                        center={true}
                                                                                                      >
                                                                                                        <ForwardRef(TouchRipple)
                                                                                                          center={true}
                                                                                                          classes={
                                                                                                            Object {
                                                                                                              "child": "MuiTouchRipple-child",
                                                                                                              "childLeaving": "MuiTouchRipple-childLeaving",
                                                                                                              "childPulsate": "MuiTouchRipple-childPulsate",
                                                                                                              "ripple": "MuiTouchRipple-ripple",
                                                                                                              "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                                                              "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                                                              "root": "MuiTouchRipple-root",
                                                                                                            }
                                                                                                          }
                                                                                                        >
                                                                                                          <span
                                                                                                            className="MuiTouchRipple-root"
                                                                                                          >
                                                                                                            <TransitionGroup
                                                                                                              childFactory={[Function]}
                                                                                                              component={null}
                                                                                                              exit={true}
                                                                                                            />
                                                                                                          </span>
                                                                                                        </ForwardRef(TouchRipple)>
                                                                                                      </WithStyles(memo)>
                                                                                                    </NoSsr>
                                                                                                  </button>
                                                                                                </ForwardRef(ButtonBase)>
                                                                                              </WithStyles(ForwardRef(ButtonBase))>
                                                                                            </ForwardRef(IconButton)>
                                                                                          </WithStyles(ForwardRef(IconButton))>
                                                                                        </Day>
                                                                                      </div>
                                                                                    </DayWrapper>
                                                                                    <DayWrapper
                                                                                      dayInCurrentMonth={true}
                                                                                      disabled={false}
                                                                                      key="Wed Feb 19 2020 00:00:00 GMT-0300 (Brasilia Standard Time)"
                                                                                      onSelect={[Function]}
                                                                                      value={2020-02-19T03:00:00.000Z}
                                                                                    >
                                                                                      <div
                                                                                        onClick={[Function]}
                                                                                        onKeyPress={[Function]}
                                                                                        role="presentation"
                                                                                      >
                                                                                        <Day
                                                                                          current={false}
                                                                                          disabled={false}
                                                                                          hidden={false}
                                                                                          selected={false}
                                                                                        >
                                                                                          <WithStyles(ForwardRef(IconButton))
                                                                                            className="MuiPickersDay-day"
                                                                                            tabIndex={0}
                                                                                          >
                                                                                            <ForwardRef(IconButton)
                                                                                              className="MuiPickersDay-day"
                                                                                              classes={
                                                                                                Object {
                                                                                                  "colorInherit": "MuiIconButton-colorInherit",
                                                                                                  "colorPrimary": "MuiIconButton-colorPrimary",
                                                                                                  "colorSecondary": "MuiIconButton-colorSecondary",
                                                                                                  "disabled": "Mui-disabled",
                                                                                                  "edgeEnd": "MuiIconButton-edgeEnd",
                                                                                                  "edgeStart": "MuiIconButton-edgeStart",
                                                                                                  "label": "MuiIconButton-label",
                                                                                                  "root": "MuiIconButton-root",
                                                                                                  "sizeSmall": "MuiIconButton-sizeSmall",
                                                                                                }
                                                                                              }
                                                                                              tabIndex={0}
                                                                                            >
                                                                                              <WithStyles(ForwardRef(ButtonBase))
                                                                                                centerRipple={true}
                                                                                                className="MuiIconButton-root MuiPickersDay-day"
                                                                                                disabled={false}
                                                                                                focusRipple={true}
                                                                                                tabIndex={0}
                                                                                              >
                                                                                                <ForwardRef(ButtonBase)
                                                                                                  centerRipple={true}
                                                                                                  className="MuiIconButton-root MuiPickersDay-day"
                                                                                                  classes={
                                                                                                    Object {
                                                                                                      "disabled": "Mui-disabled",
                                                                                                      "focusVisible": "Mui-focusVisible",
                                                                                                      "root": "MuiButtonBase-root",
                                                                                                    }
                                                                                                  }
                                                                                                  disabled={false}
                                                                                                  focusRipple={true}
                                                                                                  tabIndex={0}
                                                                                                >
                                                                                                  <button
                                                                                                    className="MuiButtonBase-root MuiIconButton-root MuiPickersDay-day"
                                                                                                    disabled={false}
                                                                                                    onBlur={[Function]}
                                                                                                    onDragLeave={[Function]}
                                                                                                    onFocus={[Function]}
                                                                                                    onKeyDown={[Function]}
                                                                                                    onKeyUp={[Function]}
                                                                                                    onMouseDown={[Function]}
                                                                                                    onMouseLeave={[Function]}
                                                                                                    onMouseUp={[Function]}
                                                                                                    onTouchEnd={[Function]}
                                                                                                    onTouchMove={[Function]}
                                                                                                    onTouchStart={[Function]}
                                                                                                    tabIndex={0}
                                                                                                    type="button"
                                                                                                  >
                                                                                                    <span
                                                                                                      className="MuiIconButton-label"
                                                                                                    >
                                                                                                      <WithStyles(ForwardRef(Typography))
                                                                                                        color="inherit"
                                                                                                        variant="body2"
                                                                                                      >
                                                                                                        <ForwardRef(Typography)
                                                                                                          classes={
                                                                                                            Object {
                                                                                                              "alignCenter": "MuiTypography-alignCenter",
                                                                                                              "alignJustify": "MuiTypography-alignJustify",
                                                                                                              "alignLeft": "MuiTypography-alignLeft",
                                                                                                              "alignRight": "MuiTypography-alignRight",
                                                                                                              "body1": "MuiTypography-body1",
                                                                                                              "body2": "MuiTypography-body2",
                                                                                                              "button": "MuiTypography-button",
                                                                                                              "caption": "MuiTypography-caption",
                                                                                                              "colorError": "MuiTypography-colorError",
                                                                                                              "colorInherit": "MuiTypography-colorInherit",
                                                                                                              "colorPrimary": "MuiTypography-colorPrimary",
                                                                                                              "colorSecondary": "MuiTypography-colorSecondary",
                                                                                                              "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                                                              "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                                                              "displayBlock": "MuiTypography-displayBlock",
                                                                                                              "displayInline": "MuiTypography-displayInline",
                                                                                                              "gutterBottom": "MuiTypography-gutterBottom",
                                                                                                              "h1": "MuiTypography-h1",
                                                                                                              "h2": "MuiTypography-h2",
                                                                                                              "h3": "MuiTypography-h3",
                                                                                                              "h4": "MuiTypography-h4",
                                                                                                              "h5": "MuiTypography-h5",
                                                                                                              "h6": "MuiTypography-h6",
                                                                                                              "noWrap": "MuiTypography-noWrap",
                                                                                                              "overline": "MuiTypography-overline",
                                                                                                              "paragraph": "MuiTypography-paragraph",
                                                                                                              "root": "MuiTypography-root",
                                                                                                              "srOnly": "MuiTypography-srOnly",
                                                                                                              "subtitle1": "MuiTypography-subtitle1",
                                                                                                              "subtitle2": "MuiTypography-subtitle2",
                                                                                                            }
                                                                                                          }
                                                                                                          color="inherit"
                                                                                                          variant="body2"
                                                                                                        >
                                                                                                          <p
                                                                                                            className="MuiTypography-root MuiTypography-body2 MuiTypography-colorInherit"
                                                                                                          >
                                                                                                            19
                                                                                                          </p>
                                                                                                        </ForwardRef(Typography)>
                                                                                                      </WithStyles(ForwardRef(Typography))>
                                                                                                    </span>
                                                                                                    <NoSsr>
                                                                                                      <WithStyles(memo)
                                                                                                        center={true}
                                                                                                      >
                                                                                                        <ForwardRef(TouchRipple)
                                                                                                          center={true}
                                                                                                          classes={
                                                                                                            Object {
                                                                                                              "child": "MuiTouchRipple-child",
                                                                                                              "childLeaving": "MuiTouchRipple-childLeaving",
                                                                                                              "childPulsate": "MuiTouchRipple-childPulsate",
                                                                                                              "ripple": "MuiTouchRipple-ripple",
                                                                                                              "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                                                              "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                                                              "root": "MuiTouchRipple-root",
                                                                                                            }
                                                                                                          }
                                                                                                        >
                                                                                                          <span
                                                                                                            className="MuiTouchRipple-root"
                                                                                                          >
                                                                                                            <TransitionGroup
                                                                                                              childFactory={[Function]}
                                                                                                              component={null}
                                                                                                              exit={true}
                                                                                                            />
                                                                                                          </span>
                                                                                                        </ForwardRef(TouchRipple)>
                                                                                                      </WithStyles(memo)>
                                                                                                    </NoSsr>
                                                                                                  </button>
                                                                                                </ForwardRef(ButtonBase)>
                                                                                              </WithStyles(ForwardRef(ButtonBase))>
                                                                                            </ForwardRef(IconButton)>
                                                                                          </WithStyles(ForwardRef(IconButton))>
                                                                                        </Day>
                                                                                      </div>
                                                                                    </DayWrapper>
                                                                                    <DayWrapper
                                                                                      dayInCurrentMonth={true}
                                                                                      disabled={false}
                                                                                      key="Thu Feb 20 2020 00:00:00 GMT-0300 (Brasilia Standard Time)"
                                                                                      onSelect={[Function]}
                                                                                      value={2020-02-20T03:00:00.000Z}
                                                                                    >
                                                                                      <div
                                                                                        onClick={[Function]}
                                                                                        onKeyPress={[Function]}
                                                                                        role="presentation"
                                                                                      >
                                                                                        <Day
                                                                                          current={false}
                                                                                          disabled={false}
                                                                                          hidden={false}
                                                                                          selected={false}
                                                                                        >
                                                                                          <WithStyles(ForwardRef(IconButton))
                                                                                            className="MuiPickersDay-day"
                                                                                            tabIndex={0}
                                                                                          >
                                                                                            <ForwardRef(IconButton)
                                                                                              className="MuiPickersDay-day"
                                                                                              classes={
                                                                                                Object {
                                                                                                  "colorInherit": "MuiIconButton-colorInherit",
                                                                                                  "colorPrimary": "MuiIconButton-colorPrimary",
                                                                                                  "colorSecondary": "MuiIconButton-colorSecondary",
                                                                                                  "disabled": "Mui-disabled",
                                                                                                  "edgeEnd": "MuiIconButton-edgeEnd",
                                                                                                  "edgeStart": "MuiIconButton-edgeStart",
                                                                                                  "label": "MuiIconButton-label",
                                                                                                  "root": "MuiIconButton-root",
                                                                                                  "sizeSmall": "MuiIconButton-sizeSmall",
                                                                                                }
                                                                                              }
                                                                                              tabIndex={0}
                                                                                            >
                                                                                              <WithStyles(ForwardRef(ButtonBase))
                                                                                                centerRipple={true}
                                                                                                className="MuiIconButton-root MuiPickersDay-day"
                                                                                                disabled={false}
                                                                                                focusRipple={true}
                                                                                                tabIndex={0}
                                                                                              >
                                                                                                <ForwardRef(ButtonBase)
                                                                                                  centerRipple={true}
                                                                                                  className="MuiIconButton-root MuiPickersDay-day"
                                                                                                  classes={
                                                                                                    Object {
                                                                                                      "disabled": "Mui-disabled",
                                                                                                      "focusVisible": "Mui-focusVisible",
                                                                                                      "root": "MuiButtonBase-root",
                                                                                                    }
                                                                                                  }
                                                                                                  disabled={false}
                                                                                                  focusRipple={true}
                                                                                                  tabIndex={0}
                                                                                                >
                                                                                                  <button
                                                                                                    className="MuiButtonBase-root MuiIconButton-root MuiPickersDay-day"
                                                                                                    disabled={false}
                                                                                                    onBlur={[Function]}
                                                                                                    onDragLeave={[Function]}
                                                                                                    onFocus={[Function]}
                                                                                                    onKeyDown={[Function]}
                                                                                                    onKeyUp={[Function]}
                                                                                                    onMouseDown={[Function]}
                                                                                                    onMouseLeave={[Function]}
                                                                                                    onMouseUp={[Function]}
                                                                                                    onTouchEnd={[Function]}
                                                                                                    onTouchMove={[Function]}
                                                                                                    onTouchStart={[Function]}
                                                                                                    tabIndex={0}
                                                                                                    type="button"
                                                                                                  >
                                                                                                    <span
                                                                                                      className="MuiIconButton-label"
                                                                                                    >
                                                                                                      <WithStyles(ForwardRef(Typography))
                                                                                                        color="inherit"
                                                                                                        variant="body2"
                                                                                                      >
                                                                                                        <ForwardRef(Typography)
                                                                                                          classes={
                                                                                                            Object {
                                                                                                              "alignCenter": "MuiTypography-alignCenter",
                                                                                                              "alignJustify": "MuiTypography-alignJustify",
                                                                                                              "alignLeft": "MuiTypography-alignLeft",
                                                                                                              "alignRight": "MuiTypography-alignRight",
                                                                                                              "body1": "MuiTypography-body1",
                                                                                                              "body2": "MuiTypography-body2",
                                                                                                              "button": "MuiTypography-button",
                                                                                                              "caption": "MuiTypography-caption",
                                                                                                              "colorError": "MuiTypography-colorError",
                                                                                                              "colorInherit": "MuiTypography-colorInherit",
                                                                                                              "colorPrimary": "MuiTypography-colorPrimary",
                                                                                                              "colorSecondary": "MuiTypography-colorSecondary",
                                                                                                              "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                                                              "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                                                              "displayBlock": "MuiTypography-displayBlock",
                                                                                                              "displayInline": "MuiTypography-displayInline",
                                                                                                              "gutterBottom": "MuiTypography-gutterBottom",
                                                                                                              "h1": "MuiTypography-h1",
                                                                                                              "h2": "MuiTypography-h2",
                                                                                                              "h3": "MuiTypography-h3",
                                                                                                              "h4": "MuiTypography-h4",
                                                                                                              "h5": "MuiTypography-h5",
                                                                                                              "h6": "MuiTypography-h6",
                                                                                                              "noWrap": "MuiTypography-noWrap",
                                                                                                              "overline": "MuiTypography-overline",
                                                                                                              "paragraph": "MuiTypography-paragraph",
                                                                                                              "root": "MuiTypography-root",
                                                                                                              "srOnly": "MuiTypography-srOnly",
                                                                                                              "subtitle1": "MuiTypography-subtitle1",
                                                                                                              "subtitle2": "MuiTypography-subtitle2",
                                                                                                            }
                                                                                                          }
                                                                                                          color="inherit"
                                                                                                          variant="body2"
                                                                                                        >
                                                                                                          <p
                                                                                                            className="MuiTypography-root MuiTypography-body2 MuiTypography-colorInherit"
                                                                                                          >
                                                                                                            20
                                                                                                          </p>
                                                                                                        </ForwardRef(Typography)>
                                                                                                      </WithStyles(ForwardRef(Typography))>
                                                                                                    </span>
                                                                                                    <NoSsr>
                                                                                                      <WithStyles(memo)
                                                                                                        center={true}
                                                                                                      >
                                                                                                        <ForwardRef(TouchRipple)
                                                                                                          center={true}
                                                                                                          classes={
                                                                                                            Object {
                                                                                                              "child": "MuiTouchRipple-child",
                                                                                                              "childLeaving": "MuiTouchRipple-childLeaving",
                                                                                                              "childPulsate": "MuiTouchRipple-childPulsate",
                                                                                                              "ripple": "MuiTouchRipple-ripple",
                                                                                                              "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                                                              "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                                                              "root": "MuiTouchRipple-root",
                                                                                                            }
                                                                                                          }
                                                                                                        >
                                                                                                          <span
                                                                                                            className="MuiTouchRipple-root"
                                                                                                          >
                                                                                                            <TransitionGroup
                                                                                                              childFactory={[Function]}
                                                                                                              component={null}
                                                                                                              exit={true}
                                                                                                            />
                                                                                                          </span>
                                                                                                        </ForwardRef(TouchRipple)>
                                                                                                      </WithStyles(memo)>
                                                                                                    </NoSsr>
                                                                                                  </button>
                                                                                                </ForwardRef(ButtonBase)>
                                                                                              </WithStyles(ForwardRef(ButtonBase))>
                                                                                            </ForwardRef(IconButton)>
                                                                                          </WithStyles(ForwardRef(IconButton))>
                                                                                        </Day>
                                                                                      </div>
                                                                                    </DayWrapper>
                                                                                    <DayWrapper
                                                                                      dayInCurrentMonth={true}
                                                                                      disabled={false}
                                                                                      key="Fri Feb 21 2020 00:00:00 GMT-0300 (Brasilia Standard Time)"
                                                                                      onSelect={[Function]}
                                                                                      value={2020-02-21T03:00:00.000Z}
                                                                                    >
                                                                                      <div
                                                                                        onClick={[Function]}
                                                                                        onKeyPress={[Function]}
                                                                                        role="presentation"
                                                                                      >
                                                                                        <Day
                                                                                          current={false}
                                                                                          disabled={false}
                                                                                          hidden={false}
                                                                                          selected={false}
                                                                                        >
                                                                                          <WithStyles(ForwardRef(IconButton))
                                                                                            className="MuiPickersDay-day"
                                                                                            tabIndex={0}
                                                                                          >
                                                                                            <ForwardRef(IconButton)
                                                                                              className="MuiPickersDay-day"
                                                                                              classes={
                                                                                                Object {
                                                                                                  "colorInherit": "MuiIconButton-colorInherit",
                                                                                                  "colorPrimary": "MuiIconButton-colorPrimary",
                                                                                                  "colorSecondary": "MuiIconButton-colorSecondary",
                                                                                                  "disabled": "Mui-disabled",
                                                                                                  "edgeEnd": "MuiIconButton-edgeEnd",
                                                                                                  "edgeStart": "MuiIconButton-edgeStart",
                                                                                                  "label": "MuiIconButton-label",
                                                                                                  "root": "MuiIconButton-root",
                                                                                                  "sizeSmall": "MuiIconButton-sizeSmall",
                                                                                                }
                                                                                              }
                                                                                              tabIndex={0}
                                                                                            >
                                                                                              <WithStyles(ForwardRef(ButtonBase))
                                                                                                centerRipple={true}
                                                                                                className="MuiIconButton-root MuiPickersDay-day"
                                                                                                disabled={false}
                                                                                                focusRipple={true}
                                                                                                tabIndex={0}
                                                                                              >
                                                                                                <ForwardRef(ButtonBase)
                                                                                                  centerRipple={true}
                                                                                                  className="MuiIconButton-root MuiPickersDay-day"
                                                                                                  classes={
                                                                                                    Object {
                                                                                                      "disabled": "Mui-disabled",
                                                                                                      "focusVisible": "Mui-focusVisible",
                                                                                                      "root": "MuiButtonBase-root",
                                                                                                    }
                                                                                                  }
                                                                                                  disabled={false}
                                                                                                  focusRipple={true}
                                                                                                  tabIndex={0}
                                                                                                >
                                                                                                  <button
                                                                                                    className="MuiButtonBase-root MuiIconButton-root MuiPickersDay-day"
                                                                                                    disabled={false}
                                                                                                    onBlur={[Function]}
                                                                                                    onDragLeave={[Function]}
                                                                                                    onFocus={[Function]}
                                                                                                    onKeyDown={[Function]}
                                                                                                    onKeyUp={[Function]}
                                                                                                    onMouseDown={[Function]}
                                                                                                    onMouseLeave={[Function]}
                                                                                                    onMouseUp={[Function]}
                                                                                                    onTouchEnd={[Function]}
                                                                                                    onTouchMove={[Function]}
                                                                                                    onTouchStart={[Function]}
                                                                                                    tabIndex={0}
                                                                                                    type="button"
                                                                                                  >
                                                                                                    <span
                                                                                                      className="MuiIconButton-label"
                                                                                                    >
                                                                                                      <WithStyles(ForwardRef(Typography))
                                                                                                        color="inherit"
                                                                                                        variant="body2"
                                                                                                      >
                                                                                                        <ForwardRef(Typography)
                                                                                                          classes={
                                                                                                            Object {
                                                                                                              "alignCenter": "MuiTypography-alignCenter",
                                                                                                              "alignJustify": "MuiTypography-alignJustify",
                                                                                                              "alignLeft": "MuiTypography-alignLeft",
                                                                                                              "alignRight": "MuiTypography-alignRight",
                                                                                                              "body1": "MuiTypography-body1",
                                                                                                              "body2": "MuiTypography-body2",
                                                                                                              "button": "MuiTypography-button",
                                                                                                              "caption": "MuiTypography-caption",
                                                                                                              "colorError": "MuiTypography-colorError",
                                                                                                              "colorInherit": "MuiTypography-colorInherit",
                                                                                                              "colorPrimary": "MuiTypography-colorPrimary",
                                                                                                              "colorSecondary": "MuiTypography-colorSecondary",
                                                                                                              "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                                                              "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                                                              "displayBlock": "MuiTypography-displayBlock",
                                                                                                              "displayInline": "MuiTypography-displayInline",
                                                                                                              "gutterBottom": "MuiTypography-gutterBottom",
                                                                                                              "h1": "MuiTypography-h1",
                                                                                                              "h2": "MuiTypography-h2",
                                                                                                              "h3": "MuiTypography-h3",
                                                                                                              "h4": "MuiTypography-h4",
                                                                                                              "h5": "MuiTypography-h5",
                                                                                                              "h6": "MuiTypography-h6",
                                                                                                              "noWrap": "MuiTypography-noWrap",
                                                                                                              "overline": "MuiTypography-overline",
                                                                                                              "paragraph": "MuiTypography-paragraph",
                                                                                                              "root": "MuiTypography-root",
                                                                                                              "srOnly": "MuiTypography-srOnly",
                                                                                                              "subtitle1": "MuiTypography-subtitle1",
                                                                                                              "subtitle2": "MuiTypography-subtitle2",
                                                                                                            }
                                                                                                          }
                                                                                                          color="inherit"
                                                                                                          variant="body2"
                                                                                                        >
                                                                                                          <p
                                                                                                            className="MuiTypography-root MuiTypography-body2 MuiTypography-colorInherit"
                                                                                                          >
                                                                                                            21
                                                                                                          </p>
                                                                                                        </ForwardRef(Typography)>
                                                                                                      </WithStyles(ForwardRef(Typography))>
                                                                                                    </span>
                                                                                                    <NoSsr>
                                                                                                      <WithStyles(memo)
                                                                                                        center={true}
                                                                                                      >
                                                                                                        <ForwardRef(TouchRipple)
                                                                                                          center={true}
                                                                                                          classes={
                                                                                                            Object {
                                                                                                              "child": "MuiTouchRipple-child",
                                                                                                              "childLeaving": "MuiTouchRipple-childLeaving",
                                                                                                              "childPulsate": "MuiTouchRipple-childPulsate",
                                                                                                              "ripple": "MuiTouchRipple-ripple",
                                                                                                              "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                                                              "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                                                              "root": "MuiTouchRipple-root",
                                                                                                            }
                                                                                                          }
                                                                                                        >
                                                                                                          <span
                                                                                                            className="MuiTouchRipple-root"
                                                                                                          >
                                                                                                            <TransitionGroup
                                                                                                              childFactory={[Function]}
                                                                                                              component={null}
                                                                                                              exit={true}
                                                                                                            />
                                                                                                          </span>
                                                                                                        </ForwardRef(TouchRipple)>
                                                                                                      </WithStyles(memo)>
                                                                                                    </NoSsr>
                                                                                                  </button>
                                                                                                </ForwardRef(ButtonBase)>
                                                                                              </WithStyles(ForwardRef(ButtonBase))>
                                                                                            </ForwardRef(IconButton)>
                                                                                          </WithStyles(ForwardRef(IconButton))>
                                                                                        </Day>
                                                                                      </div>
                                                                                    </DayWrapper>
                                                                                    <DayWrapper
                                                                                      dayInCurrentMonth={true}
                                                                                      disabled={false}
                                                                                      key="Sat Feb 22 2020 00:00:00 GMT-0300 (Brasilia Standard Time)"
                                                                                      onSelect={[Function]}
                                                                                      value={2020-02-22T03:00:00.000Z}
                                                                                    >
                                                                                      <div
                                                                                        onClick={[Function]}
                                                                                        onKeyPress={[Function]}
                                                                                        role="presentation"
                                                                                      >
                                                                                        <Day
                                                                                          current={false}
                                                                                          disabled={false}
                                                                                          hidden={false}
                                                                                          selected={false}
                                                                                        >
                                                                                          <WithStyles(ForwardRef(IconButton))
                                                                                            className="MuiPickersDay-day"
                                                                                            tabIndex={0}
                                                                                          >
                                                                                            <ForwardRef(IconButton)
                                                                                              className="MuiPickersDay-day"
                                                                                              classes={
                                                                                                Object {
                                                                                                  "colorInherit": "MuiIconButton-colorInherit",
                                                                                                  "colorPrimary": "MuiIconButton-colorPrimary",
                                                                                                  "colorSecondary": "MuiIconButton-colorSecondary",
                                                                                                  "disabled": "Mui-disabled",
                                                                                                  "edgeEnd": "MuiIconButton-edgeEnd",
                                                                                                  "edgeStart": "MuiIconButton-edgeStart",
                                                                                                  "label": "MuiIconButton-label",
                                                                                                  "root": "MuiIconButton-root",
                                                                                                  "sizeSmall": "MuiIconButton-sizeSmall",
                                                                                                }
                                                                                              }
                                                                                              tabIndex={0}
                                                                                            >
                                                                                              <WithStyles(ForwardRef(ButtonBase))
                                                                                                centerRipple={true}
                                                                                                className="MuiIconButton-root MuiPickersDay-day"
                                                                                                disabled={false}
                                                                                                focusRipple={true}
                                                                                                tabIndex={0}
                                                                                              >
                                                                                                <ForwardRef(ButtonBase)
                                                                                                  centerRipple={true}
                                                                                                  className="MuiIconButton-root MuiPickersDay-day"
                                                                                                  classes={
                                                                                                    Object {
                                                                                                      "disabled": "Mui-disabled",
                                                                                                      "focusVisible": "Mui-focusVisible",
                                                                                                      "root": "MuiButtonBase-root",
                                                                                                    }
                                                                                                  }
                                                                                                  disabled={false}
                                                                                                  focusRipple={true}
                                                                                                  tabIndex={0}
                                                                                                >
                                                                                                  <button
                                                                                                    className="MuiButtonBase-root MuiIconButton-root MuiPickersDay-day"
                                                                                                    disabled={false}
                                                                                                    onBlur={[Function]}
                                                                                                    onDragLeave={[Function]}
                                                                                                    onFocus={[Function]}
                                                                                                    onKeyDown={[Function]}
                                                                                                    onKeyUp={[Function]}
                                                                                                    onMouseDown={[Function]}
                                                                                                    onMouseLeave={[Function]}
                                                                                                    onMouseUp={[Function]}
                                                                                                    onTouchEnd={[Function]}
                                                                                                    onTouchMove={[Function]}
                                                                                                    onTouchStart={[Function]}
                                                                                                    tabIndex={0}
                                                                                                    type="button"
                                                                                                  >
                                                                                                    <span
                                                                                                      className="MuiIconButton-label"
                                                                                                    >
                                                                                                      <WithStyles(ForwardRef(Typography))
                                                                                                        color="inherit"
                                                                                                        variant="body2"
                                                                                                      >
                                                                                                        <ForwardRef(Typography)
                                                                                                          classes={
                                                                                                            Object {
                                                                                                              "alignCenter": "MuiTypography-alignCenter",
                                                                                                              "alignJustify": "MuiTypography-alignJustify",
                                                                                                              "alignLeft": "MuiTypography-alignLeft",
                                                                                                              "alignRight": "MuiTypography-alignRight",
                                                                                                              "body1": "MuiTypography-body1",
                                                                                                              "body2": "MuiTypography-body2",
                                                                                                              "button": "MuiTypography-button",
                                                                                                              "caption": "MuiTypography-caption",
                                                                                                              "colorError": "MuiTypography-colorError",
                                                                                                              "colorInherit": "MuiTypography-colorInherit",
                                                                                                              "colorPrimary": "MuiTypography-colorPrimary",
                                                                                                              "colorSecondary": "MuiTypography-colorSecondary",
                                                                                                              "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                                                              "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                                                              "displayBlock": "MuiTypography-displayBlock",
                                                                                                              "displayInline": "MuiTypography-displayInline",
                                                                                                              "gutterBottom": "MuiTypography-gutterBottom",
                                                                                                              "h1": "MuiTypography-h1",
                                                                                                              "h2": "MuiTypography-h2",
                                                                                                              "h3": "MuiTypography-h3",
                                                                                                              "h4": "MuiTypography-h4",
                                                                                                              "h5": "MuiTypography-h5",
                                                                                                              "h6": "MuiTypography-h6",
                                                                                                              "noWrap": "MuiTypography-noWrap",
                                                                                                              "overline": "MuiTypography-overline",
                                                                                                              "paragraph": "MuiTypography-paragraph",
                                                                                                              "root": "MuiTypography-root",
                                                                                                              "srOnly": "MuiTypography-srOnly",
                                                                                                              "subtitle1": "MuiTypography-subtitle1",
                                                                                                              "subtitle2": "MuiTypography-subtitle2",
                                                                                                            }
                                                                                                          }
                                                                                                          color="inherit"
                                                                                                          variant="body2"
                                                                                                        >
                                                                                                          <p
                                                                                                            className="MuiTypography-root MuiTypography-body2 MuiTypography-colorInherit"
                                                                                                          >
                                                                                                            22
                                                                                                          </p>
                                                                                                        </ForwardRef(Typography)>
                                                                                                      </WithStyles(ForwardRef(Typography))>
                                                                                                    </span>
                                                                                                    <NoSsr>
                                                                                                      <WithStyles(memo)
                                                                                                        center={true}
                                                                                                      >
                                                                                                        <ForwardRef(TouchRipple)
                                                                                                          center={true}
                                                                                                          classes={
                                                                                                            Object {
                                                                                                              "child": "MuiTouchRipple-child",
                                                                                                              "childLeaving": "MuiTouchRipple-childLeaving",
                                                                                                              "childPulsate": "MuiTouchRipple-childPulsate",
                                                                                                              "ripple": "MuiTouchRipple-ripple",
                                                                                                              "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                                                              "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                                                              "root": "MuiTouchRipple-root",
                                                                                                            }
                                                                                                          }
                                                                                                        >
                                                                                                          <span
                                                                                                            className="MuiTouchRipple-root"
                                                                                                          >
                                                                                                            <TransitionGroup
                                                                                                              childFactory={[Function]}
                                                                                                              component={null}
                                                                                                              exit={true}
                                                                                                            />
                                                                                                          </span>
                                                                                                        </ForwardRef(TouchRipple)>
                                                                                                      </WithStyles(memo)>
                                                                                                    </NoSsr>
                                                                                                  </button>
                                                                                                </ForwardRef(ButtonBase)>
                                                                                              </WithStyles(ForwardRef(ButtonBase))>
                                                                                            </ForwardRef(IconButton)>
                                                                                          </WithStyles(ForwardRef(IconButton))>
                                                                                        </Day>
                                                                                      </div>
                                                                                    </DayWrapper>
                                                                                  </div>
                                                                                  <div
                                                                                    className="MuiPickersCalendar-week"
                                                                                    key="week-Sun Feb 23 2020 00:00:00 GMT-0300 (Brasilia Standard Time)"
                                                                                  >
                                                                                    <DayWrapper
                                                                                      dayInCurrentMonth={true}
                                                                                      disabled={false}
                                                                                      key="Sun Feb 23 2020 00:00:00 GMT-0300 (Brasilia Standard Time)"
                                                                                      onSelect={[Function]}
                                                                                      value={2020-02-23T03:00:00.000Z}
                                                                                    >
                                                                                      <div
                                                                                        onClick={[Function]}
                                                                                        onKeyPress={[Function]}
                                                                                        role="presentation"
                                                                                      >
                                                                                        <Day
                                                                                          current={false}
                                                                                          disabled={false}
                                                                                          hidden={false}
                                                                                          selected={false}
                                                                                        >
                                                                                          <WithStyles(ForwardRef(IconButton))
                                                                                            className="MuiPickersDay-day"
                                                                                            tabIndex={0}
                                                                                          >
                                                                                            <ForwardRef(IconButton)
                                                                                              className="MuiPickersDay-day"
                                                                                              classes={
                                                                                                Object {
                                                                                                  "colorInherit": "MuiIconButton-colorInherit",
                                                                                                  "colorPrimary": "MuiIconButton-colorPrimary",
                                                                                                  "colorSecondary": "MuiIconButton-colorSecondary",
                                                                                                  "disabled": "Mui-disabled",
                                                                                                  "edgeEnd": "MuiIconButton-edgeEnd",
                                                                                                  "edgeStart": "MuiIconButton-edgeStart",
                                                                                                  "label": "MuiIconButton-label",
                                                                                                  "root": "MuiIconButton-root",
                                                                                                  "sizeSmall": "MuiIconButton-sizeSmall",
                                                                                                }
                                                                                              }
                                                                                              tabIndex={0}
                                                                                            >
                                                                                              <WithStyles(ForwardRef(ButtonBase))
                                                                                                centerRipple={true}
                                                                                                className="MuiIconButton-root MuiPickersDay-day"
                                                                                                disabled={false}
                                                                                                focusRipple={true}
                                                                                                tabIndex={0}
                                                                                              >
                                                                                                <ForwardRef(ButtonBase)
                                                                                                  centerRipple={true}
                                                                                                  className="MuiIconButton-root MuiPickersDay-day"
                                                                                                  classes={
                                                                                                    Object {
                                                                                                      "disabled": "Mui-disabled",
                                                                                                      "focusVisible": "Mui-focusVisible",
                                                                                                      "root": "MuiButtonBase-root",
                                                                                                    }
                                                                                                  }
                                                                                                  disabled={false}
                                                                                                  focusRipple={true}
                                                                                                  tabIndex={0}
                                                                                                >
                                                                                                  <button
                                                                                                    className="MuiButtonBase-root MuiIconButton-root MuiPickersDay-day"
                                                                                                    disabled={false}
                                                                                                    onBlur={[Function]}
                                                                                                    onDragLeave={[Function]}
                                                                                                    onFocus={[Function]}
                                                                                                    onKeyDown={[Function]}
                                                                                                    onKeyUp={[Function]}
                                                                                                    onMouseDown={[Function]}
                                                                                                    onMouseLeave={[Function]}
                                                                                                    onMouseUp={[Function]}
                                                                                                    onTouchEnd={[Function]}
                                                                                                    onTouchMove={[Function]}
                                                                                                    onTouchStart={[Function]}
                                                                                                    tabIndex={0}
                                                                                                    type="button"
                                                                                                  >
                                                                                                    <span
                                                                                                      className="MuiIconButton-label"
                                                                                                    >
                                                                                                      <WithStyles(ForwardRef(Typography))
                                                                                                        color="inherit"
                                                                                                        variant="body2"
                                                                                                      >
                                                                                                        <ForwardRef(Typography)
                                                                                                          classes={
                                                                                                            Object {
                                                                                                              "alignCenter": "MuiTypography-alignCenter",
                                                                                                              "alignJustify": "MuiTypography-alignJustify",
                                                                                                              "alignLeft": "MuiTypography-alignLeft",
                                                                                                              "alignRight": "MuiTypography-alignRight",
                                                                                                              "body1": "MuiTypography-body1",
                                                                                                              "body2": "MuiTypography-body2",
                                                                                                              "button": "MuiTypography-button",
                                                                                                              "caption": "MuiTypography-caption",
                                                                                                              "colorError": "MuiTypography-colorError",
                                                                                                              "colorInherit": "MuiTypography-colorInherit",
                                                                                                              "colorPrimary": "MuiTypography-colorPrimary",
                                                                                                              "colorSecondary": "MuiTypography-colorSecondary",
                                                                                                              "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                                                              "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                                                              "displayBlock": "MuiTypography-displayBlock",
                                                                                                              "displayInline": "MuiTypography-displayInline",
                                                                                                              "gutterBottom": "MuiTypography-gutterBottom",
                                                                                                              "h1": "MuiTypography-h1",
                                                                                                              "h2": "MuiTypography-h2",
                                                                                                              "h3": "MuiTypography-h3",
                                                                                                              "h4": "MuiTypography-h4",
                                                                                                              "h5": "MuiTypography-h5",
                                                                                                              "h6": "MuiTypography-h6",
                                                                                                              "noWrap": "MuiTypography-noWrap",
                                                                                                              "overline": "MuiTypography-overline",
                                                                                                              "paragraph": "MuiTypography-paragraph",
                                                                                                              "root": "MuiTypography-root",
                                                                                                              "srOnly": "MuiTypography-srOnly",
                                                                                                              "subtitle1": "MuiTypography-subtitle1",
                                                                                                              "subtitle2": "MuiTypography-subtitle2",
                                                                                                            }
                                                                                                          }
                                                                                                          color="inherit"
                                                                                                          variant="body2"
                                                                                                        >
                                                                                                          <p
                                                                                                            className="MuiTypography-root MuiTypography-body2 MuiTypography-colorInherit"
                                                                                                          >
                                                                                                            23
                                                                                                          </p>
                                                                                                        </ForwardRef(Typography)>
                                                                                                      </WithStyles(ForwardRef(Typography))>
                                                                                                    </span>
                                                                                                    <NoSsr>
                                                                                                      <WithStyles(memo)
                                                                                                        center={true}
                                                                                                      >
                                                                                                        <ForwardRef(TouchRipple)
                                                                                                          center={true}
                                                                                                          classes={
                                                                                                            Object {
                                                                                                              "child": "MuiTouchRipple-child",
                                                                                                              "childLeaving": "MuiTouchRipple-childLeaving",
                                                                                                              "childPulsate": "MuiTouchRipple-childPulsate",
                                                                                                              "ripple": "MuiTouchRipple-ripple",
                                                                                                              "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                                                              "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                                                              "root": "MuiTouchRipple-root",
                                                                                                            }
                                                                                                          }
                                                                                                        >
                                                                                                          <span
                                                                                                            className="MuiTouchRipple-root"
                                                                                                          >
                                                                                                            <TransitionGroup
                                                                                                              childFactory={[Function]}
                                                                                                              component={null}
                                                                                                              exit={true}
                                                                                                            />
                                                                                                          </span>
                                                                                                        </ForwardRef(TouchRipple)>
                                                                                                      </WithStyles(memo)>
                                                                                                    </NoSsr>
                                                                                                  </button>
                                                                                                </ForwardRef(ButtonBase)>
                                                                                              </WithStyles(ForwardRef(ButtonBase))>
                                                                                            </ForwardRef(IconButton)>
                                                                                          </WithStyles(ForwardRef(IconButton))>
                                                                                        </Day>
                                                                                      </div>
                                                                                    </DayWrapper>
                                                                                    <DayWrapper
                                                                                      dayInCurrentMonth={true}
                                                                                      disabled={false}
                                                                                      key="Mon Feb 24 2020 00:00:00 GMT-0300 (Brasilia Standard Time)"
                                                                                      onSelect={[Function]}
                                                                                      value={2020-02-24T03:00:00.000Z}
                                                                                    >
                                                                                      <div
                                                                                        onClick={[Function]}
                                                                                        onKeyPress={[Function]}
                                                                                        role="presentation"
                                                                                      >
                                                                                        <Day
                                                                                          current={false}
                                                                                          disabled={false}
                                                                                          hidden={false}
                                                                                          selected={false}
                                                                                        >
                                                                                          <WithStyles(ForwardRef(IconButton))
                                                                                            className="MuiPickersDay-day"
                                                                                            tabIndex={0}
                                                                                          >
                                                                                            <ForwardRef(IconButton)
                                                                                              className="MuiPickersDay-day"
                                                                                              classes={
                                                                                                Object {
                                                                                                  "colorInherit": "MuiIconButton-colorInherit",
                                                                                                  "colorPrimary": "MuiIconButton-colorPrimary",
                                                                                                  "colorSecondary": "MuiIconButton-colorSecondary",
                                                                                                  "disabled": "Mui-disabled",
                                                                                                  "edgeEnd": "MuiIconButton-edgeEnd",
                                                                                                  "edgeStart": "MuiIconButton-edgeStart",
                                                                                                  "label": "MuiIconButton-label",
                                                                                                  "root": "MuiIconButton-root",
                                                                                                  "sizeSmall": "MuiIconButton-sizeSmall",
                                                                                                }
                                                                                              }
                                                                                              tabIndex={0}
                                                                                            >
                                                                                              <WithStyles(ForwardRef(ButtonBase))
                                                                                                centerRipple={true}
                                                                                                className="MuiIconButton-root MuiPickersDay-day"
                                                                                                disabled={false}
                                                                                                focusRipple={true}
                                                                                                tabIndex={0}
                                                                                              >
                                                                                                <ForwardRef(ButtonBase)
                                                                                                  centerRipple={true}
                                                                                                  className="MuiIconButton-root MuiPickersDay-day"
                                                                                                  classes={
                                                                                                    Object {
                                                                                                      "disabled": "Mui-disabled",
                                                                                                      "focusVisible": "Mui-focusVisible",
                                                                                                      "root": "MuiButtonBase-root",
                                                                                                    }
                                                                                                  }
                                                                                                  disabled={false}
                                                                                                  focusRipple={true}
                                                                                                  tabIndex={0}
                                                                                                >
                                                                                                  <button
                                                                                                    className="MuiButtonBase-root MuiIconButton-root MuiPickersDay-day"
                                                                                                    disabled={false}
                                                                                                    onBlur={[Function]}
                                                                                                    onDragLeave={[Function]}
                                                                                                    onFocus={[Function]}
                                                                                                    onKeyDown={[Function]}
                                                                                                    onKeyUp={[Function]}
                                                                                                    onMouseDown={[Function]}
                                                                                                    onMouseLeave={[Function]}
                                                                                                    onMouseUp={[Function]}
                                                                                                    onTouchEnd={[Function]}
                                                                                                    onTouchMove={[Function]}
                                                                                                    onTouchStart={[Function]}
                                                                                                    tabIndex={0}
                                                                                                    type="button"
                                                                                                  >
                                                                                                    <span
                                                                                                      className="MuiIconButton-label"
                                                                                                    >
                                                                                                      <WithStyles(ForwardRef(Typography))
                                                                                                        color="inherit"
                                                                                                        variant="body2"
                                                                                                      >
                                                                                                        <ForwardRef(Typography)
                                                                                                          classes={
                                                                                                            Object {
                                                                                                              "alignCenter": "MuiTypography-alignCenter",
                                                                                                              "alignJustify": "MuiTypography-alignJustify",
                                                                                                              "alignLeft": "MuiTypography-alignLeft",
                                                                                                              "alignRight": "MuiTypography-alignRight",
                                                                                                              "body1": "MuiTypography-body1",
                                                                                                              "body2": "MuiTypography-body2",
                                                                                                              "button": "MuiTypography-button",
                                                                                                              "caption": "MuiTypography-caption",
                                                                                                              "colorError": "MuiTypography-colorError",
                                                                                                              "colorInherit": "MuiTypography-colorInherit",
                                                                                                              "colorPrimary": "MuiTypography-colorPrimary",
                                                                                                              "colorSecondary": "MuiTypography-colorSecondary",
                                                                                                              "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                                                              "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                                                              "displayBlock": "MuiTypography-displayBlock",
                                                                                                              "displayInline": "MuiTypography-displayInline",
                                                                                                              "gutterBottom": "MuiTypography-gutterBottom",
                                                                                                              "h1": "MuiTypography-h1",
                                                                                                              "h2": "MuiTypography-h2",
                                                                                                              "h3": "MuiTypography-h3",
                                                                                                              "h4": "MuiTypography-h4",
                                                                                                              "h5": "MuiTypography-h5",
                                                                                                              "h6": "MuiTypography-h6",
                                                                                                              "noWrap": "MuiTypography-noWrap",
                                                                                                              "overline": "MuiTypography-overline",
                                                                                                              "paragraph": "MuiTypography-paragraph",
                                                                                                              "root": "MuiTypography-root",
                                                                                                              "srOnly": "MuiTypography-srOnly",
                                                                                                              "subtitle1": "MuiTypography-subtitle1",
                                                                                                              "subtitle2": "MuiTypography-subtitle2",
                                                                                                            }
                                                                                                          }
                                                                                                          color="inherit"
                                                                                                          variant="body2"
                                                                                                        >
                                                                                                          <p
                                                                                                            className="MuiTypography-root MuiTypography-body2 MuiTypography-colorInherit"
                                                                                                          >
                                                                                                            24
                                                                                                          </p>
                                                                                                        </ForwardRef(Typography)>
                                                                                                      </WithStyles(ForwardRef(Typography))>
                                                                                                    </span>
                                                                                                    <NoSsr>
                                                                                                      <WithStyles(memo)
                                                                                                        center={true}
                                                                                                      >
                                                                                                        <ForwardRef(TouchRipple)
                                                                                                          center={true}
                                                                                                          classes={
                                                                                                            Object {
                                                                                                              "child": "MuiTouchRipple-child",
                                                                                                              "childLeaving": "MuiTouchRipple-childLeaving",
                                                                                                              "childPulsate": "MuiTouchRipple-childPulsate",
                                                                                                              "ripple": "MuiTouchRipple-ripple",
                                                                                                              "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                                                              "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                                                              "root": "MuiTouchRipple-root",
                                                                                                            }
                                                                                                          }
                                                                                                        >
                                                                                                          <span
                                                                                                            className="MuiTouchRipple-root"
                                                                                                          >
                                                                                                            <TransitionGroup
                                                                                                              childFactory={[Function]}
                                                                                                              component={null}
                                                                                                              exit={true}
                                                                                                            />
                                                                                                          </span>
                                                                                                        </ForwardRef(TouchRipple)>
                                                                                                      </WithStyles(memo)>
                                                                                                    </NoSsr>
                                                                                                  </button>
                                                                                                </ForwardRef(ButtonBase)>
                                                                                              </WithStyles(ForwardRef(ButtonBase))>
                                                                                            </ForwardRef(IconButton)>
                                                                                          </WithStyles(ForwardRef(IconButton))>
                                                                                        </Day>
                                                                                      </div>
                                                                                    </DayWrapper>
                                                                                    <DayWrapper
                                                                                      dayInCurrentMonth={true}
                                                                                      disabled={false}
                                                                                      key="Tue Feb 25 2020 00:00:00 GMT-0300 (Brasilia Standard Time)"
                                                                                      onSelect={[Function]}
                                                                                      value={2020-02-25T03:00:00.000Z}
                                                                                    >
                                                                                      <div
                                                                                        onClick={[Function]}
                                                                                        onKeyPress={[Function]}
                                                                                        role="presentation"
                                                                                      >
                                                                                        <Day
                                                                                          current={false}
                                                                                          disabled={false}
                                                                                          hidden={false}
                                                                                          selected={false}
                                                                                        >
                                                                                          <WithStyles(ForwardRef(IconButton))
                                                                                            className="MuiPickersDay-day"
                                                                                            tabIndex={0}
                                                                                          >
                                                                                            <ForwardRef(IconButton)
                                                                                              className="MuiPickersDay-day"
                                                                                              classes={
                                                                                                Object {
                                                                                                  "colorInherit": "MuiIconButton-colorInherit",
                                                                                                  "colorPrimary": "MuiIconButton-colorPrimary",
                                                                                                  "colorSecondary": "MuiIconButton-colorSecondary",
                                                                                                  "disabled": "Mui-disabled",
                                                                                                  "edgeEnd": "MuiIconButton-edgeEnd",
                                                                                                  "edgeStart": "MuiIconButton-edgeStart",
                                                                                                  "label": "MuiIconButton-label",
                                                                                                  "root": "MuiIconButton-root",
                                                                                                  "sizeSmall": "MuiIconButton-sizeSmall",
                                                                                                }
                                                                                              }
                                                                                              tabIndex={0}
                                                                                            >
                                                                                              <WithStyles(ForwardRef(ButtonBase))
                                                                                                centerRipple={true}
                                                                                                className="MuiIconButton-root MuiPickersDay-day"
                                                                                                disabled={false}
                                                                                                focusRipple={true}
                                                                                                tabIndex={0}
                                                                                              >
                                                                                                <ForwardRef(ButtonBase)
                                                                                                  centerRipple={true}
                                                                                                  className="MuiIconButton-root MuiPickersDay-day"
                                                                                                  classes={
                                                                                                    Object {
                                                                                                      "disabled": "Mui-disabled",
                                                                                                      "focusVisible": "Mui-focusVisible",
                                                                                                      "root": "MuiButtonBase-root",
                                                                                                    }
                                                                                                  }
                                                                                                  disabled={false}
                                                                                                  focusRipple={true}
                                                                                                  tabIndex={0}
                                                                                                >
                                                                                                  <button
                                                                                                    className="MuiButtonBase-root MuiIconButton-root MuiPickersDay-day"
                                                                                                    disabled={false}
                                                                                                    onBlur={[Function]}
                                                                                                    onDragLeave={[Function]}
                                                                                                    onFocus={[Function]}
                                                                                                    onKeyDown={[Function]}
                                                                                                    onKeyUp={[Function]}
                                                                                                    onMouseDown={[Function]}
                                                                                                    onMouseLeave={[Function]}
                                                                                                    onMouseUp={[Function]}
                                                                                                    onTouchEnd={[Function]}
                                                                                                    onTouchMove={[Function]}
                                                                                                    onTouchStart={[Function]}
                                                                                                    tabIndex={0}
                                                                                                    type="button"
                                                                                                  >
                                                                                                    <span
                                                                                                      className="MuiIconButton-label"
                                                                                                    >
                                                                                                      <WithStyles(ForwardRef(Typography))
                                                                                                        color="inherit"
                                                                                                        variant="body2"
                                                                                                      >
                                                                                                        <ForwardRef(Typography)
                                                                                                          classes={
                                                                                                            Object {
                                                                                                              "alignCenter": "MuiTypography-alignCenter",
                                                                                                              "alignJustify": "MuiTypography-alignJustify",
                                                                                                              "alignLeft": "MuiTypography-alignLeft",
                                                                                                              "alignRight": "MuiTypography-alignRight",
                                                                                                              "body1": "MuiTypography-body1",
                                                                                                              "body2": "MuiTypography-body2",
                                                                                                              "button": "MuiTypography-button",
                                                                                                              "caption": "MuiTypography-caption",
                                                                                                              "colorError": "MuiTypography-colorError",
                                                                                                              "colorInherit": "MuiTypography-colorInherit",
                                                                                                              "colorPrimary": "MuiTypography-colorPrimary",
                                                                                                              "colorSecondary": "MuiTypography-colorSecondary",
                                                                                                              "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                                                              "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                                                              "displayBlock": "MuiTypography-displayBlock",
                                                                                                              "displayInline": "MuiTypography-displayInline",
                                                                                                              "gutterBottom": "MuiTypography-gutterBottom",
                                                                                                              "h1": "MuiTypography-h1",
                                                                                                              "h2": "MuiTypography-h2",
                                                                                                              "h3": "MuiTypography-h3",
                                                                                                              "h4": "MuiTypography-h4",
                                                                                                              "h5": "MuiTypography-h5",
                                                                                                              "h6": "MuiTypography-h6",
                                                                                                              "noWrap": "MuiTypography-noWrap",
                                                                                                              "overline": "MuiTypography-overline",
                                                                                                              "paragraph": "MuiTypography-paragraph",
                                                                                                              "root": "MuiTypography-root",
                                                                                                              "srOnly": "MuiTypography-srOnly",
                                                                                                              "subtitle1": "MuiTypography-subtitle1",
                                                                                                              "subtitle2": "MuiTypography-subtitle2",
                                                                                                            }
                                                                                                          }
                                                                                                          color="inherit"
                                                                                                          variant="body2"
                                                                                                        >
                                                                                                          <p
                                                                                                            className="MuiTypography-root MuiTypography-body2 MuiTypography-colorInherit"
                                                                                                          >
                                                                                                            25
                                                                                                          </p>
                                                                                                        </ForwardRef(Typography)>
                                                                                                      </WithStyles(ForwardRef(Typography))>
                                                                                                    </span>
                                                                                                    <NoSsr>
                                                                                                      <WithStyles(memo)
                                                                                                        center={true}
                                                                                                      >
                                                                                                        <ForwardRef(TouchRipple)
                                                                                                          center={true}
                                                                                                          classes={
                                                                                                            Object {
                                                                                                              "child": "MuiTouchRipple-child",
                                                                                                              "childLeaving": "MuiTouchRipple-childLeaving",
                                                                                                              "childPulsate": "MuiTouchRipple-childPulsate",
                                                                                                              "ripple": "MuiTouchRipple-ripple",
                                                                                                              "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                                                              "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                                                              "root": "MuiTouchRipple-root",
                                                                                                            }
                                                                                                          }
                                                                                                        >
                                                                                                          <span
                                                                                                            className="MuiTouchRipple-root"
                                                                                                          >
                                                                                                            <TransitionGroup
                                                                                                              childFactory={[Function]}
                                                                                                              component={null}
                                                                                                              exit={true}
                                                                                                            />
                                                                                                          </span>
                                                                                                        </ForwardRef(TouchRipple)>
                                                                                                      </WithStyles(memo)>
                                                                                                    </NoSsr>
                                                                                                  </button>
                                                                                                </ForwardRef(ButtonBase)>
                                                                                              </WithStyles(ForwardRef(ButtonBase))>
                                                                                            </ForwardRef(IconButton)>
                                                                                          </WithStyles(ForwardRef(IconButton))>
                                                                                        </Day>
                                                                                      </div>
                                                                                    </DayWrapper>
                                                                                    <DayWrapper
                                                                                      dayInCurrentMonth={true}
                                                                                      disabled={false}
                                                                                      key="Wed Feb 26 2020 00:00:00 GMT-0300 (Brasilia Standard Time)"
                                                                                      onSelect={[Function]}
                                                                                      value={2020-02-26T03:00:00.000Z}
                                                                                    >
                                                                                      <div
                                                                                        onClick={[Function]}
                                                                                        onKeyPress={[Function]}
                                                                                        role="presentation"
                                                                                      >
                                                                                        <Day
                                                                                          current={false}
                                                                                          disabled={false}
                                                                                          hidden={false}
                                                                                          selected={false}
                                                                                        >
                                                                                          <WithStyles(ForwardRef(IconButton))
                                                                                            className="MuiPickersDay-day"
                                                                                            tabIndex={0}
                                                                                          >
                                                                                            <ForwardRef(IconButton)
                                                                                              className="MuiPickersDay-day"
                                                                                              classes={
                                                                                                Object {
                                                                                                  "colorInherit": "MuiIconButton-colorInherit",
                                                                                                  "colorPrimary": "MuiIconButton-colorPrimary",
                                                                                                  "colorSecondary": "MuiIconButton-colorSecondary",
                                                                                                  "disabled": "Mui-disabled",
                                                                                                  "edgeEnd": "MuiIconButton-edgeEnd",
                                                                                                  "edgeStart": "MuiIconButton-edgeStart",
                                                                                                  "label": "MuiIconButton-label",
                                                                                                  "root": "MuiIconButton-root",
                                                                                                  "sizeSmall": "MuiIconButton-sizeSmall",
                                                                                                }
                                                                                              }
                                                                                              tabIndex={0}
                                                                                            >
                                                                                              <WithStyles(ForwardRef(ButtonBase))
                                                                                                centerRipple={true}
                                                                                                className="MuiIconButton-root MuiPickersDay-day"
                                                                                                disabled={false}
                                                                                                focusRipple={true}
                                                                                                tabIndex={0}
                                                                                              >
                                                                                                <ForwardRef(ButtonBase)
                                                                                                  centerRipple={true}
                                                                                                  className="MuiIconButton-root MuiPickersDay-day"
                                                                                                  classes={
                                                                                                    Object {
                                                                                                      "disabled": "Mui-disabled",
                                                                                                      "focusVisible": "Mui-focusVisible",
                                                                                                      "root": "MuiButtonBase-root",
                                                                                                    }
                                                                                                  }
                                                                                                  disabled={false}
                                                                                                  focusRipple={true}
                                                                                                  tabIndex={0}
                                                                                                >
                                                                                                  <button
                                                                                                    className="MuiButtonBase-root MuiIconButton-root MuiPickersDay-day"
                                                                                                    disabled={false}
                                                                                                    onBlur={[Function]}
                                                                                                    onDragLeave={[Function]}
                                                                                                    onFocus={[Function]}
                                                                                                    onKeyDown={[Function]}
                                                                                                    onKeyUp={[Function]}
                                                                                                    onMouseDown={[Function]}
                                                                                                    onMouseLeave={[Function]}
                                                                                                    onMouseUp={[Function]}
                                                                                                    onTouchEnd={[Function]}
                                                                                                    onTouchMove={[Function]}
                                                                                                    onTouchStart={[Function]}
                                                                                                    tabIndex={0}
                                                                                                    type="button"
                                                                                                  >
                                                                                                    <span
                                                                                                      className="MuiIconButton-label"
                                                                                                    >
                                                                                                      <WithStyles(ForwardRef(Typography))
                                                                                                        color="inherit"
                                                                                                        variant="body2"
                                                                                                      >
                                                                                                        <ForwardRef(Typography)
                                                                                                          classes={
                                                                                                            Object {
                                                                                                              "alignCenter": "MuiTypography-alignCenter",
                                                                                                              "alignJustify": "MuiTypography-alignJustify",
                                                                                                              "alignLeft": "MuiTypography-alignLeft",
                                                                                                              "alignRight": "MuiTypography-alignRight",
                                                                                                              "body1": "MuiTypography-body1",
                                                                                                              "body2": "MuiTypography-body2",
                                                                                                              "button": "MuiTypography-button",
                                                                                                              "caption": "MuiTypography-caption",
                                                                                                              "colorError": "MuiTypography-colorError",
                                                                                                              "colorInherit": "MuiTypography-colorInherit",
                                                                                                              "colorPrimary": "MuiTypography-colorPrimary",
                                                                                                              "colorSecondary": "MuiTypography-colorSecondary",
                                                                                                              "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                                                              "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                                                              "displayBlock": "MuiTypography-displayBlock",
                                                                                                              "displayInline": "MuiTypography-displayInline",
                                                                                                              "gutterBottom": "MuiTypography-gutterBottom",
                                                                                                              "h1": "MuiTypography-h1",
                                                                                                              "h2": "MuiTypography-h2",
                                                                                                              "h3": "MuiTypography-h3",
                                                                                                              "h4": "MuiTypography-h4",
                                                                                                              "h5": "MuiTypography-h5",
                                                                                                              "h6": "MuiTypography-h6",
                                                                                                              "noWrap": "MuiTypography-noWrap",
                                                                                                              "overline": "MuiTypography-overline",
                                                                                                              "paragraph": "MuiTypography-paragraph",
                                                                                                              "root": "MuiTypography-root",
                                                                                                              "srOnly": "MuiTypography-srOnly",
                                                                                                              "subtitle1": "MuiTypography-subtitle1",
                                                                                                              "subtitle2": "MuiTypography-subtitle2",
                                                                                                            }
                                                                                                          }
                                                                                                          color="inherit"
                                                                                                          variant="body2"
                                                                                                        >
                                                                                                          <p
                                                                                                            className="MuiTypography-root MuiTypography-body2 MuiTypography-colorInherit"
                                                                                                          >
                                                                                                            26
                                                                                                          </p>
                                                                                                        </ForwardRef(Typography)>
                                                                                                      </WithStyles(ForwardRef(Typography))>
                                                                                                    </span>
                                                                                                    <NoSsr>
                                                                                                      <WithStyles(memo)
                                                                                                        center={true}
                                                                                                      >
                                                                                                        <ForwardRef(TouchRipple)
                                                                                                          center={true}
                                                                                                          classes={
                                                                                                            Object {
                                                                                                              "child": "MuiTouchRipple-child",
                                                                                                              "childLeaving": "MuiTouchRipple-childLeaving",
                                                                                                              "childPulsate": "MuiTouchRipple-childPulsate",
                                                                                                              "ripple": "MuiTouchRipple-ripple",
                                                                                                              "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                                                              "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                                                              "root": "MuiTouchRipple-root",
                                                                                                            }
                                                                                                          }
                                                                                                        >
                                                                                                          <span
                                                                                                            className="MuiTouchRipple-root"
                                                                                                          >
                                                                                                            <TransitionGroup
                                                                                                              childFactory={[Function]}
                                                                                                              component={null}
                                                                                                              exit={true}
                                                                                                            />
                                                                                                          </span>
                                                                                                        </ForwardRef(TouchRipple)>
                                                                                                      </WithStyles(memo)>
                                                                                                    </NoSsr>
                                                                                                  </button>
                                                                                                </ForwardRef(ButtonBase)>
                                                                                              </WithStyles(ForwardRef(ButtonBase))>
                                                                                            </ForwardRef(IconButton)>
                                                                                          </WithStyles(ForwardRef(IconButton))>
                                                                                        </Day>
                                                                                      </div>
                                                                                    </DayWrapper>
                                                                                    <DayWrapper
                                                                                      dayInCurrentMonth={true}
                                                                                      disabled={false}
                                                                                      key="Thu Feb 27 2020 00:00:00 GMT-0300 (Brasilia Standard Time)"
                                                                                      onSelect={[Function]}
                                                                                      value={2020-02-27T03:00:00.000Z}
                                                                                    >
                                                                                      <div
                                                                                        onClick={[Function]}
                                                                                        onKeyPress={[Function]}
                                                                                        role="presentation"
                                                                                      >
                                                                                        <Day
                                                                                          current={false}
                                                                                          disabled={false}
                                                                                          hidden={false}
                                                                                          selected={false}
                                                                                        >
                                                                                          <WithStyles(ForwardRef(IconButton))
                                                                                            className="MuiPickersDay-day"
                                                                                            tabIndex={0}
                                                                                          >
                                                                                            <ForwardRef(IconButton)
                                                                                              className="MuiPickersDay-day"
                                                                                              classes={
                                                                                                Object {
                                                                                                  "colorInherit": "MuiIconButton-colorInherit",
                                                                                                  "colorPrimary": "MuiIconButton-colorPrimary",
                                                                                                  "colorSecondary": "MuiIconButton-colorSecondary",
                                                                                                  "disabled": "Mui-disabled",
                                                                                                  "edgeEnd": "MuiIconButton-edgeEnd",
                                                                                                  "edgeStart": "MuiIconButton-edgeStart",
                                                                                                  "label": "MuiIconButton-label",
                                                                                                  "root": "MuiIconButton-root",
                                                                                                  "sizeSmall": "MuiIconButton-sizeSmall",
                                                                                                }
                                                                                              }
                                                                                              tabIndex={0}
                                                                                            >
                                                                                              <WithStyles(ForwardRef(ButtonBase))
                                                                                                centerRipple={true}
                                                                                                className="MuiIconButton-root MuiPickersDay-day"
                                                                                                disabled={false}
                                                                                                focusRipple={true}
                                                                                                tabIndex={0}
                                                                                              >
                                                                                                <ForwardRef(ButtonBase)
                                                                                                  centerRipple={true}
                                                                                                  className="MuiIconButton-root MuiPickersDay-day"
                                                                                                  classes={
                                                                                                    Object {
                                                                                                      "disabled": "Mui-disabled",
                                                                                                      "focusVisible": "Mui-focusVisible",
                                                                                                      "root": "MuiButtonBase-root",
                                                                                                    }
                                                                                                  }
                                                                                                  disabled={false}
                                                                                                  focusRipple={true}
                                                                                                  tabIndex={0}
                                                                                                >
                                                                                                  <button
                                                                                                    className="MuiButtonBase-root MuiIconButton-root MuiPickersDay-day"
                                                                                                    disabled={false}
                                                                                                    onBlur={[Function]}
                                                                                                    onDragLeave={[Function]}
                                                                                                    onFocus={[Function]}
                                                                                                    onKeyDown={[Function]}
                                                                                                    onKeyUp={[Function]}
                                                                                                    onMouseDown={[Function]}
                                                                                                    onMouseLeave={[Function]}
                                                                                                    onMouseUp={[Function]}
                                                                                                    onTouchEnd={[Function]}
                                                                                                    onTouchMove={[Function]}
                                                                                                    onTouchStart={[Function]}
                                                                                                    tabIndex={0}
                                                                                                    type="button"
                                                                                                  >
                                                                                                    <span
                                                                                                      className="MuiIconButton-label"
                                                                                                    >
                                                                                                      <WithStyles(ForwardRef(Typography))
                                                                                                        color="inherit"
                                                                                                        variant="body2"
                                                                                                      >
                                                                                                        <ForwardRef(Typography)
                                                                                                          classes={
                                                                                                            Object {
                                                                                                              "alignCenter": "MuiTypography-alignCenter",
                                                                                                              "alignJustify": "MuiTypography-alignJustify",
                                                                                                              "alignLeft": "MuiTypography-alignLeft",
                                                                                                              "alignRight": "MuiTypography-alignRight",
                                                                                                              "body1": "MuiTypography-body1",
                                                                                                              "body2": "MuiTypography-body2",
                                                                                                              "button": "MuiTypography-button",
                                                                                                              "caption": "MuiTypography-caption",
                                                                                                              "colorError": "MuiTypography-colorError",
                                                                                                              "colorInherit": "MuiTypography-colorInherit",
                                                                                                              "colorPrimary": "MuiTypography-colorPrimary",
                                                                                                              "colorSecondary": "MuiTypography-colorSecondary",
                                                                                                              "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                                                              "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                                                              "displayBlock": "MuiTypography-displayBlock",
                                                                                                              "displayInline": "MuiTypography-displayInline",
                                                                                                              "gutterBottom": "MuiTypography-gutterBottom",
                                                                                                              "h1": "MuiTypography-h1",
                                                                                                              "h2": "MuiTypography-h2",
                                                                                                              "h3": "MuiTypography-h3",
                                                                                                              "h4": "MuiTypography-h4",
                                                                                                              "h5": "MuiTypography-h5",
                                                                                                              "h6": "MuiTypography-h6",
                                                                                                              "noWrap": "MuiTypography-noWrap",
                                                                                                              "overline": "MuiTypography-overline",
                                                                                                              "paragraph": "MuiTypography-paragraph",
                                                                                                              "root": "MuiTypography-root",
                                                                                                              "srOnly": "MuiTypography-srOnly",
                                                                                                              "subtitle1": "MuiTypography-subtitle1",
                                                                                                              "subtitle2": "MuiTypography-subtitle2",
                                                                                                            }
                                                                                                          }
                                                                                                          color="inherit"
                                                                                                          variant="body2"
                                                                                                        >
                                                                                                          <p
                                                                                                            className="MuiTypography-root MuiTypography-body2 MuiTypography-colorInherit"
                                                                                                          >
                                                                                                            27
                                                                                                          </p>
                                                                                                        </ForwardRef(Typography)>
                                                                                                      </WithStyles(ForwardRef(Typography))>
                                                                                                    </span>
                                                                                                    <NoSsr>
                                                                                                      <WithStyles(memo)
                                                                                                        center={true}
                                                                                                      >
                                                                                                        <ForwardRef(TouchRipple)
                                                                                                          center={true}
                                                                                                          classes={
                                                                                                            Object {
                                                                                                              "child": "MuiTouchRipple-child",
                                                                                                              "childLeaving": "MuiTouchRipple-childLeaving",
                                                                                                              "childPulsate": "MuiTouchRipple-childPulsate",
                                                                                                              "ripple": "MuiTouchRipple-ripple",
                                                                                                              "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                                                              "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                                                              "root": "MuiTouchRipple-root",
                                                                                                            }
                                                                                                          }
                                                                                                        >
                                                                                                          <span
                                                                                                            className="MuiTouchRipple-root"
                                                                                                          >
                                                                                                            <TransitionGroup
                                                                                                              childFactory={[Function]}
                                                                                                              component={null}
                                                                                                              exit={true}
                                                                                                            />
                                                                                                          </span>
                                                                                                        </ForwardRef(TouchRipple)>
                                                                                                      </WithStyles(memo)>
                                                                                                    </NoSsr>
                                                                                                  </button>
                                                                                                </ForwardRef(ButtonBase)>
                                                                                              </WithStyles(ForwardRef(ButtonBase))>
                                                                                            </ForwardRef(IconButton)>
                                                                                          </WithStyles(ForwardRef(IconButton))>
                                                                                        </Day>
                                                                                      </div>
                                                                                    </DayWrapper>
                                                                                    <DayWrapper
                                                                                      dayInCurrentMonth={true}
                                                                                      disabled={false}
                                                                                      key="Fri Feb 28 2020 00:00:00 GMT-0300 (Brasilia Standard Time)"
                                                                                      onSelect={[Function]}
                                                                                      value={2020-02-28T03:00:00.000Z}
                                                                                    >
                                                                                      <div
                                                                                        onClick={[Function]}
                                                                                        onKeyPress={[Function]}
                                                                                        role="presentation"
                                                                                      >
                                                                                        <Day
                                                                                          current={false}
                                                                                          disabled={false}
                                                                                          hidden={false}
                                                                                          selected={false}
                                                                                        >
                                                                                          <WithStyles(ForwardRef(IconButton))
                                                                                            className="MuiPickersDay-day"
                                                                                            tabIndex={0}
                                                                                          >
                                                                                            <ForwardRef(IconButton)
                                                                                              className="MuiPickersDay-day"
                                                                                              classes={
                                                                                                Object {
                                                                                                  "colorInherit": "MuiIconButton-colorInherit",
                                                                                                  "colorPrimary": "MuiIconButton-colorPrimary",
                                                                                                  "colorSecondary": "MuiIconButton-colorSecondary",
                                                                                                  "disabled": "Mui-disabled",
                                                                                                  "edgeEnd": "MuiIconButton-edgeEnd",
                                                                                                  "edgeStart": "MuiIconButton-edgeStart",
                                                                                                  "label": "MuiIconButton-label",
                                                                                                  "root": "MuiIconButton-root",
                                                                                                  "sizeSmall": "MuiIconButton-sizeSmall",
                                                                                                }
                                                                                              }
                                                                                              tabIndex={0}
                                                                                            >
                                                                                              <WithStyles(ForwardRef(ButtonBase))
                                                                                                centerRipple={true}
                                                                                                className="MuiIconButton-root MuiPickersDay-day"
                                                                                                disabled={false}
                                                                                                focusRipple={true}
                                                                                                tabIndex={0}
                                                                                              >
                                                                                                <ForwardRef(ButtonBase)
                                                                                                  centerRipple={true}
                                                                                                  className="MuiIconButton-root MuiPickersDay-day"
                                                                                                  classes={
                                                                                                    Object {
                                                                                                      "disabled": "Mui-disabled",
                                                                                                      "focusVisible": "Mui-focusVisible",
                                                                                                      "root": "MuiButtonBase-root",
                                                                                                    }
                                                                                                  }
                                                                                                  disabled={false}
                                                                                                  focusRipple={true}
                                                                                                  tabIndex={0}
                                                                                                >
                                                                                                  <button
                                                                                                    className="MuiButtonBase-root MuiIconButton-root MuiPickersDay-day"
                                                                                                    disabled={false}
                                                                                                    onBlur={[Function]}
                                                                                                    onDragLeave={[Function]}
                                                                                                    onFocus={[Function]}
                                                                                                    onKeyDown={[Function]}
                                                                                                    onKeyUp={[Function]}
                                                                                                    onMouseDown={[Function]}
                                                                                                    onMouseLeave={[Function]}
                                                                                                    onMouseUp={[Function]}
                                                                                                    onTouchEnd={[Function]}
                                                                                                    onTouchMove={[Function]}
                                                                                                    onTouchStart={[Function]}
                                                                                                    tabIndex={0}
                                                                                                    type="button"
                                                                                                  >
                                                                                                    <span
                                                                                                      className="MuiIconButton-label"
                                                                                                    >
                                                                                                      <WithStyles(ForwardRef(Typography))
                                                                                                        color="inherit"
                                                                                                        variant="body2"
                                                                                                      >
                                                                                                        <ForwardRef(Typography)
                                                                                                          classes={
                                                                                                            Object {
                                                                                                              "alignCenter": "MuiTypography-alignCenter",
                                                                                                              "alignJustify": "MuiTypography-alignJustify",
                                                                                                              "alignLeft": "MuiTypography-alignLeft",
                                                                                                              "alignRight": "MuiTypography-alignRight",
                                                                                                              "body1": "MuiTypography-body1",
                                                                                                              "body2": "MuiTypography-body2",
                                                                                                              "button": "MuiTypography-button",
                                                                                                              "caption": "MuiTypography-caption",
                                                                                                              "colorError": "MuiTypography-colorError",
                                                                                                              "colorInherit": "MuiTypography-colorInherit",
                                                                                                              "colorPrimary": "MuiTypography-colorPrimary",
                                                                                                              "colorSecondary": "MuiTypography-colorSecondary",
                                                                                                              "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                                                              "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                                                              "displayBlock": "MuiTypography-displayBlock",
                                                                                                              "displayInline": "MuiTypography-displayInline",
                                                                                                              "gutterBottom": "MuiTypography-gutterBottom",
                                                                                                              "h1": "MuiTypography-h1",
                                                                                                              "h2": "MuiTypography-h2",
                                                                                                              "h3": "MuiTypography-h3",
                                                                                                              "h4": "MuiTypography-h4",
                                                                                                              "h5": "MuiTypography-h5",
                                                                                                              "h6": "MuiTypography-h6",
                                                                                                              "noWrap": "MuiTypography-noWrap",
                                                                                                              "overline": "MuiTypography-overline",
                                                                                                              "paragraph": "MuiTypography-paragraph",
                                                                                                              "root": "MuiTypography-root",
                                                                                                              "srOnly": "MuiTypography-srOnly",
                                                                                                              "subtitle1": "MuiTypography-subtitle1",
                                                                                                              "subtitle2": "MuiTypography-subtitle2",
                                                                                                            }
                                                                                                          }
                                                                                                          color="inherit"
                                                                                                          variant="body2"
                                                                                                        >
                                                                                                          <p
                                                                                                            className="MuiTypography-root MuiTypography-body2 MuiTypography-colorInherit"
                                                                                                          >
                                                                                                            28
                                                                                                          </p>
                                                                                                        </ForwardRef(Typography)>
                                                                                                      </WithStyles(ForwardRef(Typography))>
                                                                                                    </span>
                                                                                                    <NoSsr>
                                                                                                      <WithStyles(memo)
                                                                                                        center={true}
                                                                                                      >
                                                                                                        <ForwardRef(TouchRipple)
                                                                                                          center={true}
                                                                                                          classes={
                                                                                                            Object {
                                                                                                              "child": "MuiTouchRipple-child",
                                                                                                              "childLeaving": "MuiTouchRipple-childLeaving",
                                                                                                              "childPulsate": "MuiTouchRipple-childPulsate",
                                                                                                              "ripple": "MuiTouchRipple-ripple",
                                                                                                              "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                                                              "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                                                              "root": "MuiTouchRipple-root",
                                                                                                            }
                                                                                                          }
                                                                                                        >
                                                                                                          <span
                                                                                                            className="MuiTouchRipple-root"
                                                                                                          >
                                                                                                            <TransitionGroup
                                                                                                              childFactory={[Function]}
                                                                                                              component={null}
                                                                                                              exit={true}
                                                                                                            />
                                                                                                          </span>
                                                                                                        </ForwardRef(TouchRipple)>
                                                                                                      </WithStyles(memo)>
                                                                                                    </NoSsr>
                                                                                                  </button>
                                                                                                </ForwardRef(ButtonBase)>
                                                                                              </WithStyles(ForwardRef(ButtonBase))>
                                                                                            </ForwardRef(IconButton)>
                                                                                          </WithStyles(ForwardRef(IconButton))>
                                                                                        </Day>
                                                                                      </div>
                                                                                    </DayWrapper>
                                                                                    <DayWrapper
                                                                                      dayInCurrentMonth={true}
                                                                                      disabled={false}
                                                                                      key="Sat Feb 29 2020 00:00:00 GMT-0300 (Brasilia Standard Time)"
                                                                                      onSelect={[Function]}
                                                                                      value={2020-02-29T03:00:00.000Z}
                                                                                    >
                                                                                      <div
                                                                                        onClick={[Function]}
                                                                                        onKeyPress={[Function]}
                                                                                        role="presentation"
                                                                                      >
                                                                                        <Day
                                                                                          current={false}
                                                                                          disabled={false}
                                                                                          hidden={false}
                                                                                          selected={false}
                                                                                        >
                                                                                          <WithStyles(ForwardRef(IconButton))
                                                                                            className="MuiPickersDay-day"
                                                                                            tabIndex={0}
                                                                                          >
                                                                                            <ForwardRef(IconButton)
                                                                                              className="MuiPickersDay-day"
                                                                                              classes={
                                                                                                Object {
                                                                                                  "colorInherit": "MuiIconButton-colorInherit",
                                                                                                  "colorPrimary": "MuiIconButton-colorPrimary",
                                                                                                  "colorSecondary": "MuiIconButton-colorSecondary",
                                                                                                  "disabled": "Mui-disabled",
                                                                                                  "edgeEnd": "MuiIconButton-edgeEnd",
                                                                                                  "edgeStart": "MuiIconButton-edgeStart",
                                                                                                  "label": "MuiIconButton-label",
                                                                                                  "root": "MuiIconButton-root",
                                                                                                  "sizeSmall": "MuiIconButton-sizeSmall",
                                                                                                }
                                                                                              }
                                                                                              tabIndex={0}
                                                                                            >
                                                                                              <WithStyles(ForwardRef(ButtonBase))
                                                                                                centerRipple={true}
                                                                                                className="MuiIconButton-root MuiPickersDay-day"
                                                                                                disabled={false}
                                                                                                focusRipple={true}
                                                                                                tabIndex={0}
                                                                                              >
                                                                                                <ForwardRef(ButtonBase)
                                                                                                  centerRipple={true}
                                                                                                  className="MuiIconButton-root MuiPickersDay-day"
                                                                                                  classes={
                                                                                                    Object {
                                                                                                      "disabled": "Mui-disabled",
                                                                                                      "focusVisible": "Mui-focusVisible",
                                                                                                      "root": "MuiButtonBase-root",
                                                                                                    }
                                                                                                  }
                                                                                                  disabled={false}
                                                                                                  focusRipple={true}
                                                                                                  tabIndex={0}
                                                                                                >
                                                                                                  <button
                                                                                                    className="MuiButtonBase-root MuiIconButton-root MuiPickersDay-day"
                                                                                                    disabled={false}
                                                                                                    onBlur={[Function]}
                                                                                                    onDragLeave={[Function]}
                                                                                                    onFocus={[Function]}
                                                                                                    onKeyDown={[Function]}
                                                                                                    onKeyUp={[Function]}
                                                                                                    onMouseDown={[Function]}
                                                                                                    onMouseLeave={[Function]}
                                                                                                    onMouseUp={[Function]}
                                                                                                    onTouchEnd={[Function]}
                                                                                                    onTouchMove={[Function]}
                                                                                                    onTouchStart={[Function]}
                                                                                                    tabIndex={0}
                                                                                                    type="button"
                                                                                                  >
                                                                                                    <span
                                                                                                      className="MuiIconButton-label"
                                                                                                    >
                                                                                                      <WithStyles(ForwardRef(Typography))
                                                                                                        color="inherit"
                                                                                                        variant="body2"
                                                                                                      >
                                                                                                        <ForwardRef(Typography)
                                                                                                          classes={
                                                                                                            Object {
                                                                                                              "alignCenter": "MuiTypography-alignCenter",
                                                                                                              "alignJustify": "MuiTypography-alignJustify",
                                                                                                              "alignLeft": "MuiTypography-alignLeft",
                                                                                                              "alignRight": "MuiTypography-alignRight",
                                                                                                              "body1": "MuiTypography-body1",
                                                                                                              "body2": "MuiTypography-body2",
                                                                                                              "button": "MuiTypography-button",
                                                                                                              "caption": "MuiTypography-caption",
                                                                                                              "colorError": "MuiTypography-colorError",
                                                                                                              "colorInherit": "MuiTypography-colorInherit",
                                                                                                              "colorPrimary": "MuiTypography-colorPrimary",
                                                                                                              "colorSecondary": "MuiTypography-colorSecondary",
                                                                                                              "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                                                              "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                                                              "displayBlock": "MuiTypography-displayBlock",
                                                                                                              "displayInline": "MuiTypography-displayInline",
                                                                                                              "gutterBottom": "MuiTypography-gutterBottom",
                                                                                                              "h1": "MuiTypography-h1",
                                                                                                              "h2": "MuiTypography-h2",
                                                                                                              "h3": "MuiTypography-h3",
                                                                                                              "h4": "MuiTypography-h4",
                                                                                                              "h5": "MuiTypography-h5",
                                                                                                              "h6": "MuiTypography-h6",
                                                                                                              "noWrap": "MuiTypography-noWrap",
                                                                                                              "overline": "MuiTypography-overline",
                                                                                                              "paragraph": "MuiTypography-paragraph",
                                                                                                              "root": "MuiTypography-root",
                                                                                                              "srOnly": "MuiTypography-srOnly",
                                                                                                              "subtitle1": "MuiTypography-subtitle1",
                                                                                                              "subtitle2": "MuiTypography-subtitle2",
                                                                                                            }
                                                                                                          }
                                                                                                          color="inherit"
                                                                                                          variant="body2"
                                                                                                        >
                                                                                                          <p
                                                                                                            className="MuiTypography-root MuiTypography-body2 MuiTypography-colorInherit"
                                                                                                          >
                                                                                                            29
                                                                                                          </p>
                                                                                                        </ForwardRef(Typography)>
                                                                                                      </WithStyles(ForwardRef(Typography))>
                                                                                                    </span>
                                                                                                    <NoSsr>
                                                                                                      <WithStyles(memo)
                                                                                                        center={true}
                                                                                                      >
                                                                                                        <ForwardRef(TouchRipple)
                                                                                                          center={true}
                                                                                                          classes={
                                                                                                            Object {
                                                                                                              "child": "MuiTouchRipple-child",
                                                                                                              "childLeaving": "MuiTouchRipple-childLeaving",
                                                                                                              "childPulsate": "MuiTouchRipple-childPulsate",
                                                                                                              "ripple": "MuiTouchRipple-ripple",
                                                                                                              "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                                                              "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                                                              "root": "MuiTouchRipple-root",
                                                                                                            }
                                                                                                          }
                                                                                                        >
                                                                                                          <span
                                                                                                            className="MuiTouchRipple-root"
                                                                                                          >
                                                                                                            <TransitionGroup
                                                                                                              childFactory={[Function]}
                                                                                                              component={null}
                                                                                                              exit={true}
                                                                                                            />
                                                                                                          </span>
                                                                                                        </ForwardRef(TouchRipple)>
                                                                                                      </WithStyles(memo)>
                                                                                                    </NoSsr>
                                                                                                  </button>
                                                                                                </ForwardRef(ButtonBase)>
                                                                                              </WithStyles(ForwardRef(ButtonBase))>
                                                                                            </ForwardRef(IconButton)>
                                                                                          </WithStyles(ForwardRef(IconButton))>
                                                                                        </Day>
                                                                                      </div>
                                                                                    </DayWrapper>
                                                                                  </div>
                                                                                </div>
                                                                              </Transition>
                                                                            </CSSTransition>
                                                                          </div>
                                                                        </TransitionGroup>
                                                                      </SlideTransition>
                                                                    </Calendar>
                                                                  </WithUtils(Calendar)>
                                                                </WithStyles(WithUtils(Calendar))>
                                                              </div>
                                                            </div>
                                                          </Component>
                                                        </div>
                                                      </ForwardRef(DialogContent)>
                                                    </WithStyles(ForwardRef(DialogContent))>
                                                    <WithStyles(ForwardRef(DialogActions))
                                                      classes={
                                                        Object {
                                                          "root": "",
                                                        }
                                                      }
                                                    >
                                                      <ForwardRef(DialogActions)
                                                        classes={
                                                          Object {
                                                            "root": "MuiDialogActions-root",
                                                            "spacing": "MuiDialogActions-spacing",
                                                          }
                                                        }
                                                      >
                                                        <div
                                                          className="MuiDialogActions-root MuiDialogActions-spacing"
                                                        >
                                                          <WithStyles(ForwardRef(Button))
                                                            color="primary"
                                                            onClick={[Function]}
                                                          >
                                                            <ForwardRef(Button)
                                                              classes={
                                                                Object {
                                                                  "colorInherit": "MuiButton-colorInherit",
                                                                  "contained": "MuiButton-contained",
                                                                  "containedPrimary": "MuiButton-containedPrimary",
                                                                  "containedSecondary": "MuiButton-containedSecondary",
                                                                  "containedSizeLarge": "MuiButton-containedSizeLarge",
                                                                  "containedSizeSmall": "MuiButton-containedSizeSmall",
                                                                  "disableElevation": "MuiButton-disableElevation",
                                                                  "disabled": "Mui-disabled",
                                                                  "endIcon": "MuiButton-endIcon",
                                                                  "focusVisible": "Mui-focusVisible",
                                                                  "fullWidth": "MuiButton-fullWidth",
                                                                  "iconSizeLarge": "MuiButton-iconSizeLarge",
                                                                  "iconSizeMedium": "MuiButton-iconSizeMedium",
                                                                  "iconSizeSmall": "MuiButton-iconSizeSmall",
                                                                  "label": "MuiButton-label",
                                                                  "outlined": "MuiButton-outlined",
                                                                  "outlinedPrimary": "MuiButton-outlinedPrimary",
                                                                  "outlinedSecondary": "MuiButton-outlinedSecondary",
                                                                  "outlinedSizeLarge": "MuiButton-outlinedSizeLarge",
                                                                  "outlinedSizeSmall": "MuiButton-outlinedSizeSmall",
                                                                  "root": "MuiButton-root",
                                                                  "sizeLarge": "MuiButton-sizeLarge",
                                                                  "sizeSmall": "MuiButton-sizeSmall",
                                                                  "startIcon": "MuiButton-startIcon",
                                                                  "text": "MuiButton-text",
                                                                  "textPrimary": "MuiButton-textPrimary",
                                                                  "textSecondary": "MuiButton-textSecondary",
                                                                  "textSizeLarge": "MuiButton-textSizeLarge",
                                                                  "textSizeSmall": "MuiButton-textSizeSmall",
                                                                }
                                                              }
                                                              color="primary"
                                                              onClick={[Function]}
                                                            >
                                                              <WithStyles(ForwardRef(ButtonBase))
                                                                className="MuiButton-root MuiButton-text MuiButton-textPrimary"
                                                                component="button"
                                                                disabled={false}
                                                                focusRipple={true}
                                                                focusVisibleClassName="Mui-focusVisible"
                                                                onClick={[Function]}
                                                                type="button"
                                                              >
                                                                <ForwardRef(ButtonBase)
                                                                  className="MuiButton-root MuiButton-text MuiButton-textPrimary"
                                                                  classes={
                                                                    Object {
                                                                      "disabled": "Mui-disabled",
                                                                      "focusVisible": "Mui-focusVisible",
                                                                      "root": "MuiButtonBase-root",
                                                                    }
                                                                  }
                                                                  component="button"
                                                                  disabled={false}
                                                                  focusRipple={true}
                                                                  focusVisibleClassName="Mui-focusVisible"
                                                                  onClick={[Function]}
                                                                  type="button"
                                                                >
                                                                  <button
                                                                    className="MuiButtonBase-root MuiButton-root MuiButton-text MuiButton-textPrimary"
                                                                    disabled={false}
                                                                    onBlur={[Function]}
                                                                    onClick={[Function]}
                                                                    onDragLeave={[Function]}
                                                                    onFocus={[Function]}
                                                                    onKeyDown={[Function]}
                                                                    onKeyUp={[Function]}
                                                                    onMouseDown={[Function]}
                                                                    onMouseLeave={[Function]}
                                                                    onMouseUp={[Function]}
                                                                    onTouchEnd={[Function]}
                                                                    onTouchMove={[Function]}
                                                                    onTouchStart={[Function]}
                                                                    tabIndex={0}
                                                                    type="button"
                                                                  >
                                                                    <span
                                                                      className="MuiButton-label"
                                                                    >
                                                                      Cancel
                                                                    </span>
                                                                    <NoSsr>
                                                                      <WithStyles(memo)
                                                                        center={false}
                                                                      >
                                                                        <ForwardRef(TouchRipple)
                                                                          center={false}
                                                                          classes={
                                                                            Object {
                                                                              "child": "MuiTouchRipple-child",
                                                                              "childLeaving": "MuiTouchRipple-childLeaving",
                                                                              "childPulsate": "MuiTouchRipple-childPulsate",
                                                                              "ripple": "MuiTouchRipple-ripple",
                                                                              "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                              "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                              "root": "MuiTouchRipple-root",
                                                                            }
                                                                          }
                                                                        >
                                                                          <span
                                                                            className="MuiTouchRipple-root"
                                                                          >
                                                                            <TransitionGroup
                                                                              childFactory={[Function]}
                                                                              component={null}
                                                                              exit={true}
                                                                            />
                                                                          </span>
                                                                        </ForwardRef(TouchRipple)>
                                                                      </WithStyles(memo)>
                                                                    </NoSsr>
                                                                  </button>
                                                                </ForwardRef(ButtonBase)>
                                                              </WithStyles(ForwardRef(ButtonBase))>
                                                            </ForwardRef(Button)>
                                                          </WithStyles(ForwardRef(Button))>
                                                          <WithStyles(ForwardRef(Button))
                                                            color="primary"
                                                            onClick={[Function]}
                                                          >
                                                            <ForwardRef(Button)
                                                              classes={
                                                                Object {
                                                                  "colorInherit": "MuiButton-colorInherit",
                                                                  "contained": "MuiButton-contained",
                                                                  "containedPrimary": "MuiButton-containedPrimary",
                                                                  "containedSecondary": "MuiButton-containedSecondary",
                                                                  "containedSizeLarge": "MuiButton-containedSizeLarge",
                                                                  "containedSizeSmall": "MuiButton-containedSizeSmall",
                                                                  "disableElevation": "MuiButton-disableElevation",
                                                                  "disabled": "Mui-disabled",
                                                                  "endIcon": "MuiButton-endIcon",
                                                                  "focusVisible": "Mui-focusVisible",
                                                                  "fullWidth": "MuiButton-fullWidth",
                                                                  "iconSizeLarge": "MuiButton-iconSizeLarge",
                                                                  "iconSizeMedium": "MuiButton-iconSizeMedium",
                                                                  "iconSizeSmall": "MuiButton-iconSizeSmall",
                                                                  "label": "MuiButton-label",
                                                                  "outlined": "MuiButton-outlined",
                                                                  "outlinedPrimary": "MuiButton-outlinedPrimary",
                                                                  "outlinedSecondary": "MuiButton-outlinedSecondary",
                                                                  "outlinedSizeLarge": "MuiButton-outlinedSizeLarge",
                                                                  "outlinedSizeSmall": "MuiButton-outlinedSizeSmall",
                                                                  "root": "MuiButton-root",
                                                                  "sizeLarge": "MuiButton-sizeLarge",
                                                                  "sizeSmall": "MuiButton-sizeSmall",
                                                                  "startIcon": "MuiButton-startIcon",
                                                                  "text": "MuiButton-text",
                                                                  "textPrimary": "MuiButton-textPrimary",
                                                                  "textSecondary": "MuiButton-textSecondary",
                                                                  "textSizeLarge": "MuiButton-textSizeLarge",
                                                                  "textSizeSmall": "MuiButton-textSizeSmall",
                                                                }
                                                              }
                                                              color="primary"
                                                              onClick={[Function]}
                                                            >
                                                              <WithStyles(ForwardRef(ButtonBase))
                                                                className="MuiButton-root MuiButton-text MuiButton-textPrimary"
                                                                component="button"
                                                                disabled={false}
                                                                focusRipple={true}
                                                                focusVisibleClassName="Mui-focusVisible"
                                                                onClick={[Function]}
                                                                type="button"
                                                              >
                                                                <ForwardRef(ButtonBase)
                                                                  className="MuiButton-root MuiButton-text MuiButton-textPrimary"
                                                                  classes={
                                                                    Object {
                                                                      "disabled": "Mui-disabled",
                                                                      "focusVisible": "Mui-focusVisible",
                                                                      "root": "MuiButtonBase-root",
                                                                    }
                                                                  }
                                                                  component="button"
                                                                  disabled={false}
                                                                  focusRipple={true}
                                                                  focusVisibleClassName="Mui-focusVisible"
                                                                  onClick={[Function]}
                                                                  type="button"
                                                                >
                                                                  <button
                                                                    className="MuiButtonBase-root MuiButton-root MuiButton-text MuiButton-textPrimary"
                                                                    disabled={false}
                                                                    onBlur={[Function]}
                                                                    onClick={[Function]}
                                                                    onDragLeave={[Function]}
                                                                    onFocus={[Function]}
                                                                    onKeyDown={[Function]}
                                                                    onKeyUp={[Function]}
                                                                    onMouseDown={[Function]}
                                                                    onMouseLeave={[Function]}
                                                                    onMouseUp={[Function]}
                                                                    onTouchEnd={[Function]}
                                                                    onTouchMove={[Function]}
                                                                    onTouchStart={[Function]}
                                                                    tabIndex={0}
                                                                    type="button"
                                                                  >
                                                                    <span
                                                                      className="MuiButton-label"
                                                                    >
                                                                      OK
                                                                    </span>
                                                                    <NoSsr>
                                                                      <WithStyles(memo)
                                                                        center={false}
                                                                      >
                                                                        <ForwardRef(TouchRipple)
                                                                          center={false}
                                                                          classes={
                                                                            Object {
                                                                              "child": "MuiTouchRipple-child",
                                                                              "childLeaving": "MuiTouchRipple-childLeaving",
                                                                              "childPulsate": "MuiTouchRipple-childPulsate",
                                                                              "ripple": "MuiTouchRipple-ripple",
                                                                              "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                              "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                              "root": "MuiTouchRipple-root",
                                                                            }
                                                                          }
                                                                        >
                                                                          <span
                                                                            className="MuiTouchRipple-root"
                                                                          >
                                                                            <TransitionGroup
                                                                              childFactory={[Function]}
                                                                              component={null}
                                                                              exit={true}
                                                                            />
                                                                          </span>
                                                                        </ForwardRef(TouchRipple)>
                                                                      </WithStyles(memo)>
                                                                    </NoSsr>
                                                                  </button>
                                                                </ForwardRef(ButtonBase)>
                                                              </WithStyles(ForwardRef(ButtonBase))>
                                                            </ForwardRef(Button)>
                                                          </WithStyles(ForwardRef(Button))>
                                                        </div>
                                                      </ForwardRef(DialogActions)>
                                                    </WithStyles(ForwardRef(DialogActions))>
                                                  </div>
                                                </ForwardRef(Paper)>
                                              </WithStyles(ForwardRef(Paper))>
                                            </div>
                                          </Transition>
                                        </ForwardRef(Fade)>
                                        <div
                                          data-test="sentinelEnd"
                                          tabIndex={0}
                                        />
                                      </TrapFocus>
                                    </div>
                                  </Portal>
                                </ForwardRef(Portal)>
                              </ForwardRef(Modal)>
                            </ForwardRef(Dialog)>
                          </WithStyles(ForwardRef(Dialog))>
                        </ModalDialog>
                      </WithStyles(ModalDialog)>
                    </Component>
                  </Component>
                </PickerWithState>
              </div>
            </StyledComponent>
          </styled.div>
        </Component>
      </ForwardRef>
    </WithTheme(ForwardRef)>
  </Component>
</Component>
`;

exports[`KeyboardDatePicker components should match to snapshot - Required: KeyboardDatePicker required snapshot 1`] = `
<Component
  onChange={[Function]}
  required={true}
  value={2020-02-01T03:00:00.000Z}
>
  <Component
    utils={[Function]}
  >
    <WithTheme(ForwardRef)
      label="Only calendar"
      onChange={[Function]}
      required={true}
      value={2020-02-01T03:00:00.000Z}
      variant="dialog"
    >
      <ForwardRef
        label="Only calendar"
        onChange={[Function]}
        required={true}
        value={2020-02-01T03:00:00.000Z}
        variant="dialog"
      >
        <Component
          label="Only calendar"
          onChange={[Function]}
          required={true}
          value={2020-02-01T03:00:00.000Z}
          variant="dialog"
        >
          <styled.div>
            <StyledComponent
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-gqjmRU",
                    "isStatic": false,
                    "lastClassName": "fOizOf",
                    "rules": Array [
                      "
  display: flex;
  flex-flow: column nowrap;
  font-family: ",
                      [Function],
                      ";
",
                    ],
                  },
                  "displayName": "styled.div",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "sc-gqjmRU",
                  "target": "div",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
            >
              <div
                className="sc-gqjmRU fOizOf"
              >
                <styled.label
                  disabled={false}
                >
                  <StyledComponent
                    disabled={false}
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "sc-VigVT",
                          "isStatic": false,
                          "lastClassName": "kbirlQ",
                          "rules": Array [
                            "
  font-size: ",
                            [Function],
                            ";
  font-weight: ",
                            [Function],
                            ";
  color: ",
                            [Function],
                            ";
  line-height: 1.2;
  padding: 0 0 ",
                            "4",
                            "px;
  font-family: ",
                            [Function],
                            ";
",
                          ],
                        },
                        "displayName": "styled.label",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "sc-VigVT",
                        "target": "label",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <label
                      className="sc-VigVT kbirlQ"
                      disabled={false}
                    >
                      Only calendar *
                    </label>
                  </StyledComponent>
                </styled.label>
                <PickerWithState
                  allowKeyboardControl={true}
                  helperText=""
                  inputProps={Object {}}
                  invalidDateMessage="Invalid Date Format"
                  keyboardIcon={
                    <ForwardRef(WithTheme)
                      name="outlined-action-calendar"
                      size="tiny"
                    />
                  }
                  label=""
                  maxDate={2100-01-01T00:00:00.000Z}
                  maxDateMessage="Date should not be after maximal date"
                  minDate={1900-01-01T00:00:00.000Z}
                  minDateMessage="Date should not be before minimal date"
                  onChange={[Function]}
                  openTo="date"
                  required={false}
                  value={2020-02-01T03:00:00.000Z}
                  variant="dialog"
                  views={
                    Array [
                      "year",
                      "date",
                    ]
                  }
                >
                  <Component
                    DateInputProps={
                      Object {
                        "format": "MMMM do",
                        "inputValue": "February 1st",
                        "onChange": [Function],
                        "openPicker": [Function],
                        "validationError": "",
                      }
                    }
                    InputComponent={[Function]}
                    format="MMMM do"
                    helperText=""
                    inputProps={Object {}}
                    keyboardIcon={
                      <ForwardRef(WithTheme)
                        name="outlined-action-calendar"
                        size="tiny"
                      />
                    }
                    label=""
                    onAccept={[Function]}
                    onClear={[Function]}
                    onDismiss={[Function]}
                    onSetToday={[Function]}
                    open={false}
                    required={false}
                    variant="dialog"
                  >
                    <Component
                      DateInputProps={
                        Object {
                          "format": "MMMM do",
                          "inputValue": "February 1st",
                          "onChange": [Function],
                          "openPicker": [Function],
                          "validationError": "",
                        }
                      }
                      InputComponent={[Function]}
                      cancelLabel="Cancel"
                      clearLabel="Clear"
                      clearable={false}
                      format="MMMM do"
                      helperText=""
                      inputProps={Object {}}
                      keyboardIcon={
                        <ForwardRef(WithTheme)
                          name="outlined-action-calendar"
                          size="tiny"
                        />
                      }
                      label=""
                      okLabel="OK"
                      onAccept={[Function]}
                      onClear={[Function]}
                      onDismiss={[Function]}
                      onSetToday={[Function]}
                      open={false}
                      required={false}
                      showTodayButton={false}
                      todayLabel="Today"
                    >
                      <Component
                        format="MMMM do"
                        helperText=""
                        inputProps={Object {}}
                        inputValue="February 1st"
                        keyboardIcon={
                          <ForwardRef(WithTheme)
                            name="outlined-action-calendar"
                            size="tiny"
                          />
                        }
                        label=""
                        onChange={[Function]}
                        openPicker={[Function]}
                        required={false}
                        validationError=""
                      >
                        <Rifm
                          format={[Function]}
                          key="____ __"
                          onChange={[Function]}
                          refuse={/\\[\\^\\\\d\\]\\+/gi}
                          value="February 1st"
                        >
                          <WithStyles(ForwardRef(TextField))
                            InputProps={
                              Object {
                                "endAdornment": <ForwardRef(WithStyles)
                                  position="end"
                                >
                                  <ForwardRef(WithStyles)
                                    onClick={[Function]}
                                  >
                                    <ForwardRef(WithTheme)
                                      name="outlined-action-calendar"
                                      size="tiny"
                                    />
                                  </ForwardRef(WithStyles)>
                                </ForwardRef(WithStyles)>,
                              }
                            }
                            error={false}
                            helperText=""
                            inputProps={Object {}}
                            label=""
                            onChange={[Function]}
                            required={false}
                            value="February 1st"
                          >
                            <ForwardRef(TextField)
                              InputProps={
                                Object {
                                  "endAdornment": <ForwardRef(WithStyles)
                                    position="end"
                                  >
                                    <ForwardRef(WithStyles)
                                      onClick={[Function]}
                                    >
                                      <ForwardRef(WithTheme)
                                        name="outlined-action-calendar"
                                        size="tiny"
                                      />
                                    </ForwardRef(WithStyles)>
                                  </ForwardRef(WithStyles)>,
                                }
                              }
                              classes={
                                Object {
                                  "root": "MuiTextField-root",
                                }
                              }
                              error={false}
                              helperText=""
                              inputProps={Object {}}
                              label=""
                              onChange={[Function]}
                              required={false}
                              value="February 1st"
                            >
                              <WithStyles(ForwardRef(FormControl))
                                className="MuiTextField-root"
                                color="primary"
                                disabled={false}
                                error={false}
                                fullWidth={false}
                                required={false}
                                variant="standard"
                              >
                                <ForwardRef(FormControl)
                                  className="MuiTextField-root"
                                  classes={
                                    Object {
                                      "fullWidth": "MuiFormControl-fullWidth",
                                      "marginDense": "MuiFormControl-marginDense",
                                      "marginNormal": "MuiFormControl-marginNormal",
                                      "root": "MuiFormControl-root",
                                    }
                                  }
                                  color="primary"
                                  disabled={false}
                                  error={false}
                                  fullWidth={false}
                                  required={false}
                                  variant="standard"
                                >
                                  <div
                                    className="MuiFormControl-root MuiTextField-root"
                                  >
                                    <WithStyles(ForwardRef(Input))
                                      autoFocus={false}
                                      endAdornment={
                                        <ForwardRef(WithStyles)
                                          position="end"
                                        >
                                          <ForwardRef(WithStyles)
                                            onClick={[Function]}
                                          >
                                            <ForwardRef(WithTheme)
                                              name="outlined-action-calendar"
                                              size="tiny"
                                            />
                                          </ForwardRef(WithStyles)>
                                        </ForwardRef(WithStyles)>
                                      }
                                      fullWidth={false}
                                      inputProps={Object {}}
                                      multiline={false}
                                      onChange={[Function]}
                                      value="February 1st"
                                    >
                                      <ForwardRef(Input)
                                        autoFocus={false}
                                        classes={
                                          Object {
                                            "colorSecondary": "MuiInput-colorSecondary",
                                            "disabled": "Mui-disabled",
                                            "error": "Mui-error",
                                            "focused": "Mui-focused",
                                            "formControl": "MuiInput-formControl",
                                            "fullWidth": "MuiInput-fullWidth",
                                            "input": "MuiInput-input",
                                            "inputMarginDense": "MuiInput-inputMarginDense",
                                            "inputMultiline": "MuiInput-inputMultiline",
                                            "inputTypeSearch": "MuiInput-inputTypeSearch",
                                            "marginDense": "MuiInput-marginDense",
                                            "multiline": "MuiInput-multiline",
                                            "root": "MuiInput-root",
                                            "underline": "MuiInput-underline",
                                          }
                                        }
                                        endAdornment={
                                          <ForwardRef(WithStyles)
                                            position="end"
                                          >
                                            <ForwardRef(WithStyles)
                                              onClick={[Function]}
                                            >
                                              <ForwardRef(WithTheme)
                                                name="outlined-action-calendar"
                                                size="tiny"
                                              />
                                            </ForwardRef(WithStyles)>
                                          </ForwardRef(WithStyles)>
                                        }
                                        fullWidth={false}
                                        inputProps={Object {}}
                                        multiline={false}
                                        onChange={[Function]}
                                        value="February 1st"
                                      >
                                        <WithStyles(ForwardRef(InputBase))
                                          autoFocus={false}
                                          classes={
                                            Object {
                                              "colorSecondary": "MuiInput-colorSecondary",
                                              "disabled": "Mui-disabled",
                                              "error": "Mui-error",
                                              "focused": "Mui-focused",
                                              "formControl": "MuiInput-formControl",
                                              "fullWidth": "MuiInput-fullWidth",
                                              "input": "MuiInput-input",
                                              "inputMarginDense": "MuiInput-inputMarginDense",
                                              "inputMultiline": "MuiInput-inputMultiline",
                                              "inputTypeSearch": "MuiInput-inputTypeSearch",
                                              "marginDense": "MuiInput-marginDense",
                                              "multiline": "MuiInput-multiline",
                                              "root": "MuiInput-root MuiInput-underline",
                                              "underline": null,
                                            }
                                          }
                                          endAdornment={
                                            <ForwardRef(WithStyles)
                                              position="end"
                                            >
                                              <ForwardRef(WithStyles)
                                                onClick={[Function]}
                                              >
                                                <ForwardRef(WithTheme)
                                                  name="outlined-action-calendar"
                                                  size="tiny"
                                                />
                                              </ForwardRef(WithStyles)>
                                            </ForwardRef(WithStyles)>
                                          }
                                          fullWidth={false}
                                          inputComponent="input"
                                          inputProps={Object {}}
                                          multiline={false}
                                          onChange={[Function]}
                                          type="text"
                                          value="February 1st"
                                        >
                                          <ForwardRef(InputBase)
                                            autoFocus={false}
                                            classes={
                                              Object {
                                                "adornedEnd": "MuiInputBase-adornedEnd",
                                                "adornedStart": "MuiInputBase-adornedStart",
                                                "colorSecondary": "MuiInputBase-colorSecondary MuiInput-colorSecondary",
                                                "disabled": "Mui-disabled Mui-disabled",
                                                "error": "Mui-error Mui-error",
                                                "focused": "Mui-focused Mui-focused",
                                                "formControl": "MuiInputBase-formControl MuiInput-formControl",
                                                "fullWidth": "MuiInputBase-fullWidth MuiInput-fullWidth",
                                                "input": "MuiInputBase-input MuiInput-input",
                                                "inputAdornedEnd": "MuiInputBase-inputAdornedEnd",
                                                "inputAdornedStart": "MuiInputBase-inputAdornedStart",
                                                "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                                "inputMarginDense": "MuiInputBase-inputMarginDense MuiInput-inputMarginDense",
                                                "inputMultiline": "MuiInputBase-inputMultiline MuiInput-inputMultiline",
                                                "inputTypeSearch": "MuiInputBase-inputTypeSearch MuiInput-inputTypeSearch",
                                                "marginDense": "MuiInputBase-marginDense MuiInput-marginDense",
                                                "multiline": "MuiInputBase-multiline MuiInput-multiline",
                                                "root": "MuiInputBase-root MuiInput-root MuiInput-underline",
                                              }
                                            }
                                            endAdornment={
                                              <ForwardRef(WithStyles)
                                                position="end"
                                              >
                                                <ForwardRef(WithStyles)
                                                  onClick={[Function]}
                                                >
                                                  <ForwardRef(WithTheme)
                                                    name="outlined-action-calendar"
                                                    size="tiny"
                                                  />
                                                </ForwardRef(WithStyles)>
                                              </ForwardRef(WithStyles)>
                                            }
                                            fullWidth={false}
                                            inputComponent="input"
                                            inputProps={Object {}}
                                            multiline={false}
                                            onChange={[Function]}
                                            type="text"
                                            value="February 1st"
                                          >
                                            <div
                                              className="MuiInputBase-root MuiInput-root MuiInput-underline MuiInputBase-formControl MuiInput-formControl MuiInputBase-adornedEnd"
                                              onClick={[Function]}
                                            >
                                              <input
                                                aria-invalid={false}
                                                autoFocus={false}
                                                className="MuiInputBase-input MuiInput-input MuiInputBase-inputAdornedEnd"
                                                disabled={false}
                                                onAnimationStart={[Function]}
                                                onBlur={[Function]}
                                                onChange={[Function]}
                                                onFocus={[Function]}
                                                required={false}
                                                type="text"
                                                value="February 1st"
                                              />
                                              <WithStyles(ForwardRef(InputAdornment))
                                                position="end"
                                              >
                                                <ForwardRef(InputAdornment)
                                                  classes={
                                                    Object {
                                                      "disablePointerEvents": "MuiInputAdornment-disablePointerEvents",
                                                      "filled": "MuiInputAdornment-filled",
                                                      "hiddenLabel": "MuiInputAdornment-hiddenLabel",
                                                      "marginDense": "MuiInputAdornment-marginDense",
                                                      "positionEnd": "MuiInputAdornment-positionEnd",
                                                      "positionStart": "MuiInputAdornment-positionStart",
                                                      "root": "MuiInputAdornment-root",
                                                    }
                                                  }
                                                  position="end"
                                                >
                                                  <div
                                                    className="MuiInputAdornment-root MuiInputAdornment-positionEnd"
                                                  >
                                                    <WithStyles(ForwardRef(IconButton))
                                                      onClick={[Function]}
                                                    >
                                                      <ForwardRef(IconButton)
                                                        classes={
                                                          Object {
                                                            "colorInherit": "MuiIconButton-colorInherit",
                                                            "colorPrimary": "MuiIconButton-colorPrimary",
                                                            "colorSecondary": "MuiIconButton-colorSecondary",
                                                            "disabled": "Mui-disabled",
                                                            "edgeEnd": "MuiIconButton-edgeEnd",
                                                            "edgeStart": "MuiIconButton-edgeStart",
                                                            "label": "MuiIconButton-label",
                                                            "root": "MuiIconButton-root",
                                                            "sizeSmall": "MuiIconButton-sizeSmall",
                                                          }
                                                        }
                                                        onClick={[Function]}
                                                      >
                                                        <WithStyles(ForwardRef(ButtonBase))
                                                          centerRipple={true}
                                                          className="MuiIconButton-root"
                                                          disabled={false}
                                                          focusRipple={true}
                                                          onClick={[Function]}
                                                        >
                                                          <ForwardRef(ButtonBase)
                                                            centerRipple={true}
                                                            className="MuiIconButton-root"
                                                            classes={
                                                              Object {
                                                                "disabled": "Mui-disabled",
                                                                "focusVisible": "Mui-focusVisible",
                                                                "root": "MuiButtonBase-root",
                                                              }
                                                            }
                                                            disabled={false}
                                                            focusRipple={true}
                                                            onClick={[Function]}
                                                          >
                                                            <button
                                                              className="MuiButtonBase-root MuiIconButton-root"
                                                              disabled={false}
                                                              onBlur={[Function]}
                                                              onClick={[Function]}
                                                              onDragLeave={[Function]}
                                                              onFocus={[Function]}
                                                              onKeyDown={[Function]}
                                                              onKeyUp={[Function]}
                                                              onMouseDown={[Function]}
                                                              onMouseLeave={[Function]}
                                                              onMouseUp={[Function]}
                                                              onTouchEnd={[Function]}
                                                              onTouchMove={[Function]}
                                                              onTouchStart={[Function]}
                                                              tabIndex={0}
                                                              type="button"
                                                            >
                                                              <span
                                                                className="MuiIconButton-label"
                                                              >
                                                                <WithTheme(ForwardRef)
                                                                  name="outlined-action-calendar"
                                                                  size="tiny"
                                                                >
                                                                  <ForwardRef
                                                                    name="outlined-action-calendar"
                                                                    size="tiny"
                                                                  >
                                                                    <styled.i
                                                                      className="natds-icons natds-icons-outlined-action-calendar undefined"
                                                                      size="tiny"
                                                                    >
                                                                      <StyledComponent
                                                                        className="natds-icons natds-icons-outlined-action-calendar undefined"
                                                                        forwardedComponent={
                                                                          Object {
                                                                            "$$typeof": Symbol(react.forward_ref),
                                                                            "attrs": Array [],
                                                                            "componentStyle": ComponentStyle {
                                                                              "componentId": "sc-bdVaJa",
                                                                              "isStatic": false,
                                                                              "lastClassName": "jWbhAs",
                                                                              "rules": Array [
                                                                                "
  font-size: ",
                                                                                [Function],
                                                                                ";
",
                                                                              ],
                                                                            },
                                                                            "displayName": "styled.i",
                                                                            "foldedComponentIds": Array [],
                                                                            "render": [Function],
                                                                            "styledComponentId": "sc-bdVaJa",
                                                                            "target": "i",
                                                                            "toString": [Function],
                                                                            "warnTooManyClasses": [Function],
                                                                            "withComponent": [Function],
                                                                          }
                                                                        }
                                                                        forwardedRef={null}
                                                                        size="tiny"
                                                                      >
                                                                        <i
                                                                          className="sc-bdVaJa jWbhAs natds-icons natds-icons-outlined-action-calendar undefined"
                                                                          size="tiny"
                                                                        />
                                                                      </StyledComponent>
                                                                    </styled.i>
                                                                  </ForwardRef>
                                                                </WithTheme(ForwardRef)>
                                                              </span>
                                                              <NoSsr>
                                                                <WithStyles(memo)
                                                                  center={true}
                                                                >
                                                                  <ForwardRef(TouchRipple)
                                                                    center={true}
                                                                    classes={
                                                                      Object {
                                                                        "child": "MuiTouchRipple-child",
                                                                        "childLeaving": "MuiTouchRipple-childLeaving",
                                                                        "childPulsate": "MuiTouchRipple-childPulsate",
                                                                        "ripple": "MuiTouchRipple-ripple",
                                                                        "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                        "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                        "root": "MuiTouchRipple-root",
                                                                      }
                                                                    }
                                                                  >
                                                                    <span
                                                                      className="MuiTouchRipple-root"
                                                                    >
                                                                      <TransitionGroup
                                                                        childFactory={[Function]}
                                                                        component={null}
                                                                        exit={true}
                                                                      />
                                                                    </span>
                                                                  </ForwardRef(TouchRipple)>
                                                                </WithStyles(memo)>
                                                              </NoSsr>
                                                            </button>
                                                          </ForwardRef(ButtonBase)>
                                                        </WithStyles(ForwardRef(ButtonBase))>
                                                      </ForwardRef(IconButton)>
                                                    </WithStyles(ForwardRef(IconButton))>
                                                  </div>
                                                </ForwardRef(InputAdornment)>
                                              </WithStyles(ForwardRef(InputAdornment))>
                                            </div>
                                          </ForwardRef(InputBase)>
                                        </WithStyles(ForwardRef(InputBase))>
                                      </ForwardRef(Input)>
                                    </WithStyles(ForwardRef(Input))>
                                  </div>
                                </ForwardRef(FormControl)>
                              </WithStyles(ForwardRef(FormControl))>
                            </ForwardRef(TextField)>
                          </WithStyles(ForwardRef(TextField))>
                        </Rifm>
                      </Component>
                      <WithStyles(ModalDialog)
                        cancelLabel="Cancel"
                        clearLabel="Clear"
                        clearable={false}
                        okLabel="OK"
                        onAccept={[Function]}
                        onClear={[Function]}
                        onDismiss={[Function]}
                        onSetToday={[Function]}
                        open={false}
                        showTodayButton={false}
                        todayLabel="Today"
                      >
                        <ModalDialog
                          cancelLabel="Cancel"
                          classes={
                            Object {
                              "dialog": "MuiPickersModal-dialog",
                              "dialogRoot": "MuiPickersModal-dialogRoot",
                              "dialogRootWider": "MuiPickersModal-dialogRootWider",
                              "withAdditionalAction": "MuiPickersModal-withAdditionalAction",
                            }
                          }
                          clearLabel="Clear"
                          clearable={false}
                          okLabel="OK"
                          onAccept={[Function]}
                          onClear={[Function]}
                          onDismiss={[Function]}
                          onSetToday={[Function]}
                          open={false}
                          showTodayButton={false}
                          todayLabel="Today"
                        >
                          <WithStyles(ForwardRef(Dialog))
                            classes={
                              Object {
                                "paper": "MuiPickersModal-dialogRoot",
                              }
                            }
                            onClose={[Function]}
                            open={false}
                            role="dialog"
                          >
                            <ForwardRef(Dialog)
                              classes={
                                Object {
                                  "container": "MuiDialog-container",
                                  "paper": "MuiDialog-paper MuiPickersModal-dialogRoot",
                                  "paperFullScreen": "MuiDialog-paperFullScreen",
                                  "paperFullWidth": "MuiDialog-paperFullWidth",
                                  "paperScrollBody": "MuiDialog-paperScrollBody",
                                  "paperScrollPaper": "MuiDialog-paperScrollPaper",
                                  "paperWidthFalse": "MuiDialog-paperWidthFalse",
                                  "paperWidthLg": "MuiDialog-paperWidthLg",
                                  "paperWidthMd": "MuiDialog-paperWidthMd",
                                  "paperWidthSm": "MuiDialog-paperWidthSm",
                                  "paperWidthXl": "MuiDialog-paperWidthXl",
                                  "paperWidthXs": "MuiDialog-paperWidthXs",
                                  "root": "MuiDialog-root",
                                  "scrollBody": "MuiDialog-scrollBody",
                                  "scrollPaper": "MuiDialog-scrollPaper",
                                }
                              }
                              onClose={[Function]}
                              open={false}
                              role="dialog"
                            >
                              <ForwardRef(Modal)
                                BackdropComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "Naked": Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "propTypes": Object {
                                        "children": [Function],
                                        "className": [Function],
                                        "classes": [Function],
                                        "invisible": [Function],
                                        "open": [Function],
                                        "transitionDuration": [Function],
                                      },
                                      "render": [Function],
                                    },
                                    "displayName": "WithStyles(ForwardRef(Backdrop))",
                                    "options": Object {
                                      "defaultTheme": Object {
                                        "breakpoints": Object {
                                          "between": [Function],
                                          "down": [Function],
                                          "keys": Array [
                                            "xs",
                                            "sm",
                                            "md",
                                            "lg",
                                            "xl",
                                          ],
                                          "only": [Function],
                                          "up": [Function],
                                          "values": Object {
                                            "lg": 1280,
                                            "md": 960,
                                            "sm": 600,
                                            "xl": 1920,
                                            "xs": 0,
                                          },
                                          "width": [Function],
                                        },
                                        "direction": "ltr",
                                        "mixins": Object {
                                          "gutters": [Function],
                                          "toolbar": Object {
                                            "@media (min-width:0px) and (orientation: landscape)": Object {
                                              "minHeight": 48,
                                            },
                                            "@media (min-width:600px)": Object {
                                              "minHeight": 64,
                                            },
                                            "minHeight": 56,
                                          },
                                        },
                                        "overrides": Object {},
                                        "palette": Object {
                                          "action": Object {
                                            "active": "rgba(0, 0, 0, 0.54)",
                                            "disabled": "rgba(0, 0, 0, 0.26)",
                                            "disabledBackground": "rgba(0, 0, 0, 0.12)",
                                            "hover": "rgba(0, 0, 0, 0.08)",
                                            "hoverOpacity": 0.08,
                                            "selected": "rgba(0, 0, 0, 0.14)",
                                          },
                                          "augmentColor": [Function],
                                          "background": Object {
                                            "default": "#fafafa",
                                            "paper": "#fff",
                                          },
                                          "common": Object {
                                            "black": "#000",
                                            "white": "#fff",
                                          },
                                          "contrastThreshold": 3,
                                          "divider": "rgba(0, 0, 0, 0.12)",
                                          "error": Object {
                                            "contrastText": "#fff",
                                            "dark": "#d32f2f",
                                            "light": "#e57373",
                                            "main": "#f44336",
                                          },
                                          "getContrastText": [Function],
                                          "grey": Object {
                                            "100": "#f5f5f5",
                                            "200": "#eeeeee",
                                            "300": "#e0e0e0",
                                            "400": "#bdbdbd",
                                            "50": "#fafafa",
                                            "500": "#9e9e9e",
                                            "600": "#757575",
                                            "700": "#616161",
                                            "800": "#424242",
                                            "900": "#212121",
                                            "A100": "#d5d5d5",
                                            "A200": "#aaaaaa",
                                            "A400": "#303030",
                                            "A700": "#616161",
                                          },
                                          "info": Object {
                                            "contrastText": "#fff",
                                            "dark": "#1976d2",
                                            "light": "#64b5f6",
                                            "main": "#2196f3",
                                          },
                                          "primary": Object {
                                            "contrastText": "#fff",
                                            "dark": "#303f9f",
                                            "light": "#7986cb",
                                            "main": "#3f51b5",
                                          },
                                          "secondary": Object {
                                            "contrastText": "#fff",
                                            "dark": "#c51162",
                                            "light": "#ff4081",
                                            "main": "#f50057",
                                          },
                                          "success": Object {
                                            "contrastText": "rgba(0, 0, 0, 0.87)",
                                            "dark": "#388e3c",
                                            "light": "#81c784",
                                            "main": "#4caf50",
                                          },
                                          "text": Object {
                                            "disabled": "rgba(0, 0, 0, 0.38)",
                                            "hint": "rgba(0, 0, 0, 0.38)",
                                            "primary": "rgba(0, 0, 0, 0.87)",
                                            "secondary": "rgba(0, 0, 0, 0.54)",
                                          },
                                          "tonalOffset": 0.2,
                                          "type": "light",
                                          "warning": Object {
                                            "contrastText": "rgba(0, 0, 0, 0.87)",
                                            "dark": "#f57c00",
                                            "light": "#ffb74d",
                                            "main": "#ff9800",
                                          },
                                        },
                                        "props": Object {},
                                        "shadows": Array [
                                          "none",
                                          "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                          "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                          "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                          "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                          "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                          "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                          "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                          "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                          "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                          "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                          "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                          "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                          "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                          "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                          "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                          "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                          "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                          "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                          "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                          "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                          "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                          "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                          "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                          "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                                        ],
                                        "shape": Object {
                                          "borderRadius": 4,
                                        },
                                        "spacing": [Function],
                                        "transitions": Object {
                                          "create": [Function],
                                          "duration": Object {
                                            "complex": 375,
                                            "enteringScreen": 225,
                                            "leavingScreen": 195,
                                            "short": 250,
                                            "shorter": 200,
                                            "shortest": 150,
                                            "standard": 300,
                                          },
                                          "easing": Object {
                                            "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                            "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                            "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                            "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                                          },
                                          "getAutoHeightDuration": [Function],
                                        },
                                        "typography": Object {
                                          "body1": Object {
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": "1rem",
                                            "fontWeight": 400,
                                            "letterSpacing": "0.00938em",
                                            "lineHeight": 1.5,
                                          },
                                          "body2": Object {
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": "0.875rem",
                                            "fontWeight": 400,
                                            "letterSpacing": "0.01071em",
                                            "lineHeight": 1.43,
                                          },
                                          "button": Object {
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": "0.875rem",
                                            "fontWeight": 500,
                                            "letterSpacing": "0.02857em",
                                            "lineHeight": 1.75,
                                            "textTransform": "uppercase",
                                          },
                                          "caption": Object {
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": "0.75rem",
                                            "fontWeight": 400,
                                            "letterSpacing": "0.03333em",
                                            "lineHeight": 1.66,
                                          },
                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                          "fontSize": 14,
                                          "fontWeightBold": 700,
                                          "fontWeightLight": 300,
                                          "fontWeightMedium": 500,
                                          "fontWeightRegular": 400,
                                          "h1": Object {
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": "6rem",
                                            "fontWeight": 300,
                                            "letterSpacing": "-0.01562em",
                                            "lineHeight": 1.167,
                                          },
                                          "h2": Object {
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": "3.75rem",
                                            "fontWeight": 300,
                                            "letterSpacing": "-0.00833em",
                                            "lineHeight": 1.2,
                                          },
                                          "h3": Object {
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": "3rem",
                                            "fontWeight": 400,
                                            "letterSpacing": "0em",
                                            "lineHeight": 1.167,
                                          },
                                          "h4": Object {
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": "2.125rem",
                                            "fontWeight": 400,
                                            "letterSpacing": "0.00735em",
                                            "lineHeight": 1.235,
                                          },
                                          "h5": Object {
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": "1.5rem",
                                            "fontWeight": 400,
                                            "letterSpacing": "0em",
                                            "lineHeight": 1.334,
                                          },
                                          "h6": Object {
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": "1.25rem",
                                            "fontWeight": 500,
                                            "letterSpacing": "0.0075em",
                                            "lineHeight": 1.6,
                                          },
                                          "htmlFontSize": 16,
                                          "overline": Object {
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": "0.75rem",
                                            "fontWeight": 400,
                                            "letterSpacing": "0.08333em",
                                            "lineHeight": 2.66,
                                            "textTransform": "uppercase",
                                          },
                                          "pxToRem": [Function],
                                          "round": [Function],
                                          "subtitle1": Object {
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": "1rem",
                                            "fontWeight": 400,
                                            "letterSpacing": "0.00938em",
                                            "lineHeight": 1.75,
                                          },
                                          "subtitle2": Object {
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": "0.875rem",
                                            "fontWeight": 500,
                                            "letterSpacing": "0.00714em",
                                            "lineHeight": 1.57,
                                          },
                                        },
                                        "zIndex": Object {
                                          "appBar": 1100,
                                          "drawer": 1200,
                                          "mobileStepper": 1000,
                                          "modal": 1300,
                                          "snackbar": 1400,
                                          "speedDial": 1050,
                                          "tooltip": 1500,
                                        },
                                      },
                                      "name": "MuiBackdrop",
                                    },
                                    "propTypes": Object {
                                      "classes": [Function],
                                      "innerRef": [Function],
                                    },
                                    "render": [Function],
                                    "useStyles": [Function],
                                  }
                                }
                                BackdropProps={
                                  Object {
                                    "transitionDuration": Object {
                                      "enter": 225,
                                      "exit": 195,
                                    },
                                  }
                                }
                                className="MuiDialog-root"
                                closeAfterTransition={true}
                                disableBackdropClick={false}
                                disableEscapeKeyDown={false}
                                onClose={[Function]}
                                open={false}
                                role="dialog"
                              />
                            </ForwardRef(Dialog)>
                          </WithStyles(ForwardRef(Dialog))>
                        </ModalDialog>
                      </WithStyles(ModalDialog)>
                    </Component>
                  </Component>
                </PickerWithState>
              </div>
            </StyledComponent>
          </styled.div>
        </Component>
      </ForwardRef>
    </WithTheme(ForwardRef)>
  </Component>
</Component>
`;

exports[`KeyboardDatePicker components should match to snapshot - Static variant: KeyboardDatePicker static variant snapshot 1`] = `
<Component
  onChange={[Function]}
  value={2020-02-01T03:00:00.000Z}
  variant="static"
>
  <Component
    utils={[Function]}
  >
    <WithTheme(ForwardRef)
      label="Only calendar"
      onChange={[Function]}
      value={2020-02-01T03:00:00.000Z}
      variant="static"
    >
      <ForwardRef
        label="Only calendar"
        onChange={[Function]}
        value={2020-02-01T03:00:00.000Z}
        variant="static"
      >
        <PickerWithState
          allowKeyboardControl={true}
          helperText=""
          inputProps={Object {}}
          invalidDateMessage="Invalid Date Format"
          keyboardIcon={
            <ForwardRef(WithTheme)
              name="outlined-action-calendar"
              size="tiny"
            />
          }
          label=""
          maxDate={2100-01-01T00:00:00.000Z}
          maxDateMessage="Date should not be after maximal date"
          minDate={1900-01-01T00:00:00.000Z}
          minDateMessage="Date should not be before minimal date"
          onChange={[Function]}
          openTo="date"
          required={false}
          value={2020-02-01T03:00:00.000Z}
          variant="static"
          views={
            Array [
              "year",
              "date",
            ]
          }
        >
          <Component
            DateInputProps={
              Object {
                "format": "MMMM do",
                "inputValue": "February 1st",
                "onChange": [Function],
                "openPicker": [Function],
                "validationError": "",
              }
            }
            InputComponent={[Function]}
            format="MMMM do"
            helperText=""
            inputProps={Object {}}
            keyboardIcon={
              <ForwardRef(WithTheme)
                name="outlined-action-calendar"
                size="tiny"
              />
            }
            label=""
            onAccept={[Function]}
            onClear={[Function]}
            onDismiss={[Function]}
            onSetToday={[Function]}
            open={false}
            required={false}
            variant="static"
          >
            <Component
              DateInputProps={
                Object {
                  "format": "MMMM do",
                  "inputValue": "February 1st",
                  "onChange": [Function],
                  "openPicker": [Function],
                  "validationError": "",
                }
              }
              InputComponent={[Function]}
              format="MMMM do"
              helperText=""
              inputProps={Object {}}
              keyboardIcon={
                <ForwardRef(WithTheme)
                  name="outlined-action-calendar"
                  size="tiny"
                />
              }
              label=""
              onAccept={[Function]}
              onClear={[Function]}
              onDismiss={[Function]}
              onSetToday={[Function]}
              open={false}
              required={false}
            >
              <div
                className="MuiPickersStaticWrapper-staticWrapperRoot"
              >
                <Component
                  ToolbarComponent={[Function]}
                  allowKeyboardControl={true}
                  date={2020-02-01T03:00:00.000Z}
                  invalidDateMessage="Invalid Date Format"
                  maxDate={2100-01-01T00:00:00.000Z}
                  maxDateMessage="Date should not be after maximal date"
                  minDate={1900-01-01T00:00:00.000Z}
                  minDateMessage="Date should not be before minimal date"
                  onChange={[Function]}
                  openTo="date"
                  views={
                    Array [
                      "year",
                      "date",
                    ]
                  }
                >
                  <div
                    className="MuiPickersBasePicker-container"
                  >
                    <Component
                      allowKeyboardControl={true}
                      date={2020-02-01T03:00:00.000Z}
                      invalidDateMessage="Invalid Date Format"
                      isLandscape={false}
                      maxDateMessage="Date should not be after maximal date"
                      minDateMessage="Date should not be before minimal date"
                      onChange={[Function]}
                      openView="date"
                      setOpenView={[Function]}
                      views={
                        Array [
                          "year",
                          "date",
                        ]
                      }
                    >
                      <PickerToolbar
                        className="MuiPickersDatePickerRoot-toolbar"
                        isLandscape={false}
                      >
                        <WithStyles(ForwardRef(Toolbar))
                          className="MuiPickersToolbar-toolbar MuiPickersDatePickerRoot-toolbar"
                        >
                          <ForwardRef(Toolbar)
                            className="MuiPickersToolbar-toolbar MuiPickersDatePickerRoot-toolbar"
                            classes={
                              Object {
                                "dense": "MuiToolbar-dense",
                                "gutters": "MuiToolbar-gutters",
                                "regular": "MuiToolbar-regular",
                                "root": "MuiToolbar-root",
                              }
                            }
                          >
                            <div
                              className="MuiToolbar-root MuiToolbar-regular MuiPickersToolbar-toolbar MuiPickersDatePickerRoot-toolbar MuiToolbar-gutters"
                            >
                              <WithStyles(ToolbarButton)
                                label="2020"
                                onClick={[Function]}
                                selected={false}
                                variant="subtitle1"
                              >
                                <ToolbarButton
                                  className=""
                                  classes={
                                    Object {
                                      "toolbarBtn": "MuiPickersToolbarButton-toolbarBtn",
                                    }
                                  }
                                  label="2020"
                                  onClick={[Function]}
                                  selected={false}
                                  variant="subtitle1"
                                >
                                  <WithStyles(ForwardRef(Button))
                                    className="MuiPickersToolbarButton-toolbarBtn"
                                    onClick={[Function]}
                                    variant="text"
                                  >
                                    <ForwardRef(Button)
                                      className="MuiPickersToolbarButton-toolbarBtn"
                                      classes={
                                        Object {
                                          "colorInherit": "MuiButton-colorInherit",
                                          "contained": "MuiButton-contained",
                                          "containedPrimary": "MuiButton-containedPrimary",
                                          "containedSecondary": "MuiButton-containedSecondary",
                                          "containedSizeLarge": "MuiButton-containedSizeLarge",
                                          "containedSizeSmall": "MuiButton-containedSizeSmall",
                                          "disableElevation": "MuiButton-disableElevation",
                                          "disabled": "Mui-disabled",
                                          "endIcon": "MuiButton-endIcon",
                                          "focusVisible": "Mui-focusVisible",
                                          "fullWidth": "MuiButton-fullWidth",
                                          "iconSizeLarge": "MuiButton-iconSizeLarge",
                                          "iconSizeMedium": "MuiButton-iconSizeMedium",
                                          "iconSizeSmall": "MuiButton-iconSizeSmall",
                                          "label": "MuiButton-label",
                                          "outlined": "MuiButton-outlined",
                                          "outlinedPrimary": "MuiButton-outlinedPrimary",
                                          "outlinedSecondary": "MuiButton-outlinedSecondary",
                                          "outlinedSizeLarge": "MuiButton-outlinedSizeLarge",
                                          "outlinedSizeSmall": "MuiButton-outlinedSizeSmall",
                                          "root": "MuiButton-root",
                                          "sizeLarge": "MuiButton-sizeLarge",
                                          "sizeSmall": "MuiButton-sizeSmall",
                                          "startIcon": "MuiButton-startIcon",
                                          "text": "MuiButton-text",
                                          "textPrimary": "MuiButton-textPrimary",
                                          "textSecondary": "MuiButton-textSecondary",
                                          "textSizeLarge": "MuiButton-textSizeLarge",
                                          "textSizeSmall": "MuiButton-textSizeSmall",
                                        }
                                      }
                                      onClick={[Function]}
                                      variant="text"
                                    >
                                      <WithStyles(ForwardRef(ButtonBase))
                                        className="MuiButton-root MuiButton-text MuiPickersToolbarButton-toolbarBtn"
                                        component="button"
                                        disabled={false}
                                        focusRipple={true}
                                        focusVisibleClassName="Mui-focusVisible"
                                        onClick={[Function]}
                                        type="button"
                                      >
                                        <ForwardRef(ButtonBase)
                                          className="MuiButton-root MuiButton-text MuiPickersToolbarButton-toolbarBtn"
                                          classes={
                                            Object {
                                              "disabled": "Mui-disabled",
                                              "focusVisible": "Mui-focusVisible",
                                              "root": "MuiButtonBase-root",
                                            }
                                          }
                                          component="button"
                                          disabled={false}
                                          focusRipple={true}
                                          focusVisibleClassName="Mui-focusVisible"
                                          onClick={[Function]}
                                          type="button"
                                        >
                                          <button
                                            className="MuiButtonBase-root MuiButton-root MuiButton-text MuiPickersToolbarButton-toolbarBtn"
                                            disabled={false}
                                            onBlur={[Function]}
                                            onClick={[Function]}
                                            onDragLeave={[Function]}
                                            onFocus={[Function]}
                                            onKeyDown={[Function]}
                                            onKeyUp={[Function]}
                                            onMouseDown={[Function]}
                                            onMouseLeave={[Function]}
                                            onMouseUp={[Function]}
                                            onTouchEnd={[Function]}
                                            onTouchMove={[Function]}
                                            onTouchStart={[Function]}
                                            tabIndex={0}
                                            type="button"
                                          >
                                            <span
                                              className="MuiButton-label"
                                            >
                                              <ToolbarText
                                                label="2020"
                                                selected={false}
                                                variant="subtitle1"
                                              >
                                                <WithStyles(ForwardRef(Typography))
                                                  className="MuiPickersToolbarText-toolbarTxt"
                                                  variant="subtitle1"
                                                >
                                                  <ForwardRef(Typography)
                                                    className="MuiPickersToolbarText-toolbarTxt"
                                                    classes={
                                                      Object {
                                                        "alignCenter": "MuiTypography-alignCenter",
                                                        "alignJustify": "MuiTypography-alignJustify",
                                                        "alignLeft": "MuiTypography-alignLeft",
                                                        "alignRight": "MuiTypography-alignRight",
                                                        "body1": "MuiTypography-body1",
                                                        "body2": "MuiTypography-body2",
                                                        "button": "MuiTypography-button",
                                                        "caption": "MuiTypography-caption",
                                                        "colorError": "MuiTypography-colorError",
                                                        "colorInherit": "MuiTypography-colorInherit",
                                                        "colorPrimary": "MuiTypography-colorPrimary",
                                                        "colorSecondary": "MuiTypography-colorSecondary",
                                                        "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                        "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                        "displayBlock": "MuiTypography-displayBlock",
                                                        "displayInline": "MuiTypography-displayInline",
                                                        "gutterBottom": "MuiTypography-gutterBottom",
                                                        "h1": "MuiTypography-h1",
                                                        "h2": "MuiTypography-h2",
                                                        "h3": "MuiTypography-h3",
                                                        "h4": "MuiTypography-h4",
                                                        "h5": "MuiTypography-h5",
                                                        "h6": "MuiTypography-h6",
                                                        "noWrap": "MuiTypography-noWrap",
                                                        "overline": "MuiTypography-overline",
                                                        "paragraph": "MuiTypography-paragraph",
                                                        "root": "MuiTypography-root",
                                                        "srOnly": "MuiTypography-srOnly",
                                                        "subtitle1": "MuiTypography-subtitle1",
                                                        "subtitle2": "MuiTypography-subtitle2",
                                                      }
                                                    }
                                                    variant="subtitle1"
                                                  >
                                                    <h6
                                                      className="MuiTypography-root MuiPickersToolbarText-toolbarTxt MuiTypography-subtitle1"
                                                    >
                                                      2020
                                                    </h6>
                                                  </ForwardRef(Typography)>
                                                </WithStyles(ForwardRef(Typography))>
                                              </ToolbarText>
                                            </span>
                                            <NoSsr>
                                              <WithStyles(memo)
                                                center={false}
                                              >
                                                <ForwardRef(TouchRipple)
                                                  center={false}
                                                  classes={
                                                    Object {
                                                      "child": "MuiTouchRipple-child",
                                                      "childLeaving": "MuiTouchRipple-childLeaving",
                                                      "childPulsate": "MuiTouchRipple-childPulsate",
                                                      "ripple": "MuiTouchRipple-ripple",
                                                      "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                      "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                      "root": "MuiTouchRipple-root",
                                                    }
                                                  }
                                                >
                                                  <span
                                                    className="MuiTouchRipple-root"
                                                  >
                                                    <TransitionGroup
                                                      childFactory={[Function]}
                                                      component={null}
                                                      exit={true}
                                                    />
                                                  </span>
                                                </ForwardRef(TouchRipple)>
                                              </WithStyles(memo)>
                                            </NoSsr>
                                          </button>
                                        </ForwardRef(ButtonBase)>
                                      </WithStyles(ForwardRef(ButtonBase))>
                                    </ForwardRef(Button)>
                                  </WithStyles(ForwardRef(Button))>
                                </ToolbarButton>
                              </WithStyles(ToolbarButton)>
                              <WithStyles(ToolbarButton)
                                align="center"
                                className=""
                                label="Sat, Feb 1"
                                onClick={[Function]}
                                selected={true}
                                variant="h4"
                              >
                                <ToolbarButton
                                  align="center"
                                  className=""
                                  classes={
                                    Object {
                                      "toolbarBtn": "MuiPickersToolbarButton-toolbarBtn",
                                    }
                                  }
                                  label="Sat, Feb 1"
                                  onClick={[Function]}
                                  selected={true}
                                  variant="h4"
                                >
                                  <WithStyles(ForwardRef(Button))
                                    className="MuiPickersToolbarButton-toolbarBtn"
                                    onClick={[Function]}
                                    variant="text"
                                  >
                                    <ForwardRef(Button)
                                      className="MuiPickersToolbarButton-toolbarBtn"
                                      classes={
                                        Object {
                                          "colorInherit": "MuiButton-colorInherit",
                                          "contained": "MuiButton-contained",
                                          "containedPrimary": "MuiButton-containedPrimary",
                                          "containedSecondary": "MuiButton-containedSecondary",
                                          "containedSizeLarge": "MuiButton-containedSizeLarge",
                                          "containedSizeSmall": "MuiButton-containedSizeSmall",
                                          "disableElevation": "MuiButton-disableElevation",
                                          "disabled": "Mui-disabled",
                                          "endIcon": "MuiButton-endIcon",
                                          "focusVisible": "Mui-focusVisible",
                                          "fullWidth": "MuiButton-fullWidth",
                                          "iconSizeLarge": "MuiButton-iconSizeLarge",
                                          "iconSizeMedium": "MuiButton-iconSizeMedium",
                                          "iconSizeSmall": "MuiButton-iconSizeSmall",
                                          "label": "MuiButton-label",
                                          "outlined": "MuiButton-outlined",
                                          "outlinedPrimary": "MuiButton-outlinedPrimary",
                                          "outlinedSecondary": "MuiButton-outlinedSecondary",
                                          "outlinedSizeLarge": "MuiButton-outlinedSizeLarge",
                                          "outlinedSizeSmall": "MuiButton-outlinedSizeSmall",
                                          "root": "MuiButton-root",
                                          "sizeLarge": "MuiButton-sizeLarge",
                                          "sizeSmall": "MuiButton-sizeSmall",
                                          "startIcon": "MuiButton-startIcon",
                                          "text": "MuiButton-text",
                                          "textPrimary": "MuiButton-textPrimary",
                                          "textSecondary": "MuiButton-textSecondary",
                                          "textSizeLarge": "MuiButton-textSizeLarge",
                                          "textSizeSmall": "MuiButton-textSizeSmall",
                                        }
                                      }
                                      onClick={[Function]}
                                      variant="text"
                                    >
                                      <WithStyles(ForwardRef(ButtonBase))
                                        className="MuiButton-root MuiButton-text MuiPickersToolbarButton-toolbarBtn"
                                        component="button"
                                        disabled={false}
                                        focusRipple={true}
                                        focusVisibleClassName="Mui-focusVisible"
                                        onClick={[Function]}
                                        type="button"
                                      >
                                        <ForwardRef(ButtonBase)
                                          className="MuiButton-root MuiButton-text MuiPickersToolbarButton-toolbarBtn"
                                          classes={
                                            Object {
                                              "disabled": "Mui-disabled",
                                              "focusVisible": "Mui-focusVisible",
                                              "root": "MuiButtonBase-root",
                                            }
                                          }
                                          component="button"
                                          disabled={false}
                                          focusRipple={true}
                                          focusVisibleClassName="Mui-focusVisible"
                                          onClick={[Function]}
                                          type="button"
                                        >
                                          <button
                                            className="MuiButtonBase-root MuiButton-root MuiButton-text MuiPickersToolbarButton-toolbarBtn"
                                            disabled={false}
                                            onBlur={[Function]}
                                            onClick={[Function]}
                                            onDragLeave={[Function]}
                                            onFocus={[Function]}
                                            onKeyDown={[Function]}
                                            onKeyUp={[Function]}
                                            onMouseDown={[Function]}
                                            onMouseLeave={[Function]}
                                            onMouseUp={[Function]}
                                            onTouchEnd={[Function]}
                                            onTouchMove={[Function]}
                                            onTouchStart={[Function]}
                                            tabIndex={0}
                                            type="button"
                                          >
                                            <span
                                              className="MuiButton-label"
                                            >
                                              <ToolbarText
                                                align="center"
                                                label="Sat, Feb 1"
                                                selected={true}
                                                variant="h4"
                                              >
                                                <WithStyles(ForwardRef(Typography))
                                                  align="center"
                                                  className="MuiPickersToolbarText-toolbarTxt MuiPickersToolbarText-toolbarBtnSelected"
                                                  variant="h4"
                                                >
                                                  <ForwardRef(Typography)
                                                    align="center"
                                                    className="MuiPickersToolbarText-toolbarTxt MuiPickersToolbarText-toolbarBtnSelected"
                                                    classes={
                                                      Object {
                                                        "alignCenter": "MuiTypography-alignCenter",
                                                        "alignJustify": "MuiTypography-alignJustify",
                                                        "alignLeft": "MuiTypography-alignLeft",
                                                        "alignRight": "MuiTypography-alignRight",
                                                        "body1": "MuiTypography-body1",
                                                        "body2": "MuiTypography-body2",
                                                        "button": "MuiTypography-button",
                                                        "caption": "MuiTypography-caption",
                                                        "colorError": "MuiTypography-colorError",
                                                        "colorInherit": "MuiTypography-colorInherit",
                                                        "colorPrimary": "MuiTypography-colorPrimary",
                                                        "colorSecondary": "MuiTypography-colorSecondary",
                                                        "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                        "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                        "displayBlock": "MuiTypography-displayBlock",
                                                        "displayInline": "MuiTypography-displayInline",
                                                        "gutterBottom": "MuiTypography-gutterBottom",
                                                        "h1": "MuiTypography-h1",
                                                        "h2": "MuiTypography-h2",
                                                        "h3": "MuiTypography-h3",
                                                        "h4": "MuiTypography-h4",
                                                        "h5": "MuiTypography-h5",
                                                        "h6": "MuiTypography-h6",
                                                        "noWrap": "MuiTypography-noWrap",
                                                        "overline": "MuiTypography-overline",
                                                        "paragraph": "MuiTypography-paragraph",
                                                        "root": "MuiTypography-root",
                                                        "srOnly": "MuiTypography-srOnly",
                                                        "subtitle1": "MuiTypography-subtitle1",
                                                        "subtitle2": "MuiTypography-subtitle2",
                                                      }
                                                    }
                                                    variant="h4"
                                                  >
                                                    <h4
                                                      className="MuiTypography-root MuiPickersToolbarText-toolbarTxt MuiPickersToolbarText-toolbarBtnSelected MuiTypography-h4 MuiTypography-alignCenter"
                                                    >
                                                      Sat, Feb 1
                                                    </h4>
                                                  </ForwardRef(Typography)>
                                                </WithStyles(ForwardRef(Typography))>
                                              </ToolbarText>
                                            </span>
                                            <NoSsr>
                                              <WithStyles(memo)
                                                center={false}
                                              >
                                                <ForwardRef(TouchRipple)
                                                  center={false}
                                                  classes={
                                                    Object {
                                                      "child": "MuiTouchRipple-child",
                                                      "childLeaving": "MuiTouchRipple-childLeaving",
                                                      "childPulsate": "MuiTouchRipple-childPulsate",
                                                      "ripple": "MuiTouchRipple-ripple",
                                                      "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                      "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                      "root": "MuiTouchRipple-root",
                                                    }
                                                  }
                                                >
                                                  <span
                                                    className="MuiTouchRipple-root"
                                                  >
                                                    <TransitionGroup
                                                      childFactory={[Function]}
                                                      component={null}
                                                      exit={true}
                                                    />
                                                  </span>
                                                </ForwardRef(TouchRipple)>
                                              </WithStyles(memo)>
                                            </NoSsr>
                                          </button>
                                        </ForwardRef(ButtonBase)>
                                      </WithStyles(ForwardRef(ButtonBase))>
                                    </ForwardRef(Button)>
                                  </WithStyles(ForwardRef(Button))>
                                </ToolbarButton>
                              </WithStyles(ToolbarButton)>
                            </div>
                          </ForwardRef(Toolbar)>
                        </WithStyles(ForwardRef(Toolbar))>
                      </PickerToolbar>
                    </Component>
                    <div
                      className="MuiPickersBasePicker-pickerView"
                    >
                      <WithStyles(WithUtils(Calendar))
                        allowKeyboardControl={true}
                        date={2020-02-01T03:00:00.000Z}
                        invalidDateMessage="Invalid Date Format"
                        maxDate={2100-01-01T00:00:00.000Z}
                        maxDateMessage="Date should not be after maximal date"
                        minDate={1900-01-01T00:00:00.000Z}
                        minDateMessage="Date should not be before minimal date"
                        onChange={[Function]}
                      >
                        <WithUtils(Calendar)
                          allowKeyboardControl={true}
                          classes={
                            Object {
                              "progressContainer": "MuiPickersCalendar-progressContainer",
                              "transitionContainer": "MuiPickersCalendar-transitionContainer",
                              "week": "MuiPickersCalendar-week",
                            }
                          }
                          date={2020-02-01T03:00:00.000Z}
                          invalidDateMessage="Invalid Date Format"
                          maxDate={2100-01-01T00:00:00.000Z}
                          maxDateMessage="Date should not be after maximal date"
                          minDate={1900-01-01T00:00:00.000Z}
                          minDateMessage="Date should not be before minimal date"
                          onChange={[Function]}
                          theme={
                            Object {
                              "breakpoints": Object {
                                "between": [Function],
                                "down": [Function],
                                "keys": Array [
                                  "xs",
                                  "sm",
                                  "md",
                                  "lg",
                                  "xl",
                                ],
                                "only": [Function],
                                "up": [Function],
                                "values": Object {
                                  "lg": 1280,
                                  "md": 960,
                                  "sm": 600,
                                  "xl": 1920,
                                  "xs": 0,
                                },
                                "width": [Function],
                              },
                              "direction": "ltr",
                              "mixins": Object {
                                "gutters": [Function],
                                "toolbar": Object {
                                  "@media (min-width:0px) and (orientation: landscape)": Object {
                                    "minHeight": 48,
                                  },
                                  "@media (min-width:600px)": Object {
                                    "minHeight": 64,
                                  },
                                  "minHeight": 56,
                                },
                              },
                              "overrides": Object {},
                              "palette": Object {
                                "action": Object {
                                  "active": "rgba(0, 0, 0, 0.54)",
                                  "disabled": "rgba(0, 0, 0, 0.26)",
                                  "disabledBackground": "rgba(0, 0, 0, 0.12)",
                                  "hover": "rgba(0, 0, 0, 0.08)",
                                  "hoverOpacity": 0.08,
                                  "selected": "rgba(0, 0, 0, 0.14)",
                                },
                                "augmentColor": [Function],
                                "background": Object {
                                  "default": "#fafafa",
                                  "paper": "#fff",
                                },
                                "common": Object {
                                  "black": "#000",
                                  "white": "#fff",
                                },
                                "contrastThreshold": 3,
                                "divider": "rgba(0, 0, 0, 0.12)",
                                "error": Object {
                                  "contrastText": "#fff",
                                  "dark": "#d32f2f",
                                  "light": "#e57373",
                                  "main": "#f44336",
                                },
                                "getContrastText": [Function],
                                "grey": Object {
                                  "100": "#f5f5f5",
                                  "200": "#eeeeee",
                                  "300": "#e0e0e0",
                                  "400": "#bdbdbd",
                                  "50": "#fafafa",
                                  "500": "#9e9e9e",
                                  "600": "#757575",
                                  "700": "#616161",
                                  "800": "#424242",
                                  "900": "#212121",
                                  "A100": "#d5d5d5",
                                  "A200": "#aaaaaa",
                                  "A400": "#303030",
                                  "A700": "#616161",
                                },
                                "info": Object {
                                  "contrastText": "#fff",
                                  "dark": "#1976d2",
                                  "light": "#64b5f6",
                                  "main": "#2196f3",
                                },
                                "primary": Object {
                                  "contrastText": "#fff",
                                  "dark": "#303f9f",
                                  "light": "#7986cb",
                                  "main": "#3f51b5",
                                },
                                "secondary": Object {
                                  "contrastText": "#fff",
                                  "dark": "#c51162",
                                  "light": "#ff4081",
                                  "main": "#f50057",
                                },
                                "success": Object {
                                  "contrastText": "rgba(0, 0, 0, 0.87)",
                                  "dark": "#388e3c",
                                  "light": "#81c784",
                                  "main": "#4caf50",
                                },
                                "text": Object {
                                  "disabled": "rgba(0, 0, 0, 0.38)",
                                  "hint": "rgba(0, 0, 0, 0.38)",
                                  "primary": "rgba(0, 0, 0, 0.87)",
                                  "secondary": "rgba(0, 0, 0, 0.54)",
                                },
                                "tonalOffset": 0.2,
                                "type": "light",
                                "warning": Object {
                                  "contrastText": "rgba(0, 0, 0, 0.87)",
                                  "dark": "#f57c00",
                                  "light": "#ffb74d",
                                  "main": "#ff9800",
                                },
                              },
                              "props": Object {},
                              "shadows": Array [
                                "none",
                                "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                              ],
                              "shape": Object {
                                "borderRadius": 4,
                              },
                              "spacing": [Function],
                              "transitions": Object {
                                "create": [Function],
                                "duration": Object {
                                  "complex": 375,
                                  "enteringScreen": 225,
                                  "leavingScreen": 195,
                                  "short": 250,
                                  "shorter": 200,
                                  "shortest": 150,
                                  "standard": 300,
                                },
                                "easing": Object {
                                  "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                  "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                  "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                  "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                                },
                                "getAutoHeightDuration": [Function],
                              },
                              "typography": Object {
                                "body1": Object {
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "1rem",
                                  "fontWeight": 400,
                                  "letterSpacing": "0.00938em",
                                  "lineHeight": 1.5,
                                },
                                "body2": Object {
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "0.875rem",
                                  "fontWeight": 400,
                                  "letterSpacing": "0.01071em",
                                  "lineHeight": 1.43,
                                },
                                "button": Object {
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "0.875rem",
                                  "fontWeight": 500,
                                  "letterSpacing": "0.02857em",
                                  "lineHeight": 1.75,
                                  "textTransform": "uppercase",
                                },
                                "caption": Object {
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "0.75rem",
                                  "fontWeight": 400,
                                  "letterSpacing": "0.03333em",
                                  "lineHeight": 1.66,
                                },
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": 14,
                                "fontWeightBold": 700,
                                "fontWeightLight": 300,
                                "fontWeightMedium": 500,
                                "fontWeightRegular": 400,
                                "h1": Object {
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "6rem",
                                  "fontWeight": 300,
                                  "letterSpacing": "-0.01562em",
                                  "lineHeight": 1.167,
                                },
                                "h2": Object {
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "3.75rem",
                                  "fontWeight": 300,
                                  "letterSpacing": "-0.00833em",
                                  "lineHeight": 1.2,
                                },
                                "h3": Object {
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "3rem",
                                  "fontWeight": 400,
                                  "letterSpacing": "0em",
                                  "lineHeight": 1.167,
                                },
                                "h4": Object {
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "2.125rem",
                                  "fontWeight": 400,
                                  "letterSpacing": "0.00735em",
                                  "lineHeight": 1.235,
                                },
                                "h5": Object {
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "1.5rem",
                                  "fontWeight": 400,
                                  "letterSpacing": "0em",
                                  "lineHeight": 1.334,
                                },
                                "h6": Object {
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "1.25rem",
                                  "fontWeight": 500,
                                  "letterSpacing": "0.0075em",
                                  "lineHeight": 1.6,
                                },
                                "htmlFontSize": 16,
                                "overline": Object {
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "0.75rem",
                                  "fontWeight": 400,
                                  "letterSpacing": "0.08333em",
                                  "lineHeight": 2.66,
                                  "textTransform": "uppercase",
                                },
                                "pxToRem": [Function],
                                "round": [Function],
                                "subtitle1": Object {
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "1rem",
                                  "fontWeight": 400,
                                  "letterSpacing": "0.00938em",
                                  "lineHeight": 1.75,
                                },
                                "subtitle2": Object {
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "0.875rem",
                                  "fontWeight": 500,
                                  "letterSpacing": "0.00714em",
                                  "lineHeight": 1.57,
                                },
                              },
                              "zIndex": Object {
                                "appBar": 1100,
                                "drawer": 1200,
                                "mobileStepper": 1000,
                                "modal": 1300,
                                "snackbar": 1400,
                                "speedDial": 1050,
                                "tooltip": 1500,
                              },
                            }
                          }
                        >
                          <Calendar
                            allowKeyboardControl={true}
                            classes={
                              Object {
                                "progressContainer": "MuiPickersCalendar-progressContainer",
                                "transitionContainer": "MuiPickersCalendar-transitionContainer",
                                "week": "MuiPickersCalendar-week",
                              }
                            }
                            date={2020-02-01T03:00:00.000Z}
                            disableFuture={false}
                            disablePast={false}
                            invalidDateMessage="Invalid Date Format"
                            maxDate={2100-01-01T00:00:00.000Z}
                            maxDateMessage="Date should not be after maximal date"
                            minDate={1900-01-01T00:00:00.000Z}
                            minDateMessage="Date should not be before minimal date"
                            onChange={[Function]}
                            theme={
                              Object {
                                "breakpoints": Object {
                                  "between": [Function],
                                  "down": [Function],
                                  "keys": Array [
                                    "xs",
                                    "sm",
                                    "md",
                                    "lg",
                                    "xl",
                                  ],
                                  "only": [Function],
                                  "up": [Function],
                                  "values": Object {
                                    "lg": 1280,
                                    "md": 960,
                                    "sm": 600,
                                    "xl": 1920,
                                    "xs": 0,
                                  },
                                  "width": [Function],
                                },
                                "direction": "ltr",
                                "mixins": Object {
                                  "gutters": [Function],
                                  "toolbar": Object {
                                    "@media (min-width:0px) and (orientation: landscape)": Object {
                                      "minHeight": 48,
                                    },
                                    "@media (min-width:600px)": Object {
                                      "minHeight": 64,
                                    },
                                    "minHeight": 56,
                                  },
                                },
                                "overrides": Object {},
                                "palette": Object {
                                  "action": Object {
                                    "active": "rgba(0, 0, 0, 0.54)",
                                    "disabled": "rgba(0, 0, 0, 0.26)",
                                    "disabledBackground": "rgba(0, 0, 0, 0.12)",
                                    "hover": "rgba(0, 0, 0, 0.08)",
                                    "hoverOpacity": 0.08,
                                    "selected": "rgba(0, 0, 0, 0.14)",
                                  },
                                  "augmentColor": [Function],
                                  "background": Object {
                                    "default": "#fafafa",
                                    "paper": "#fff",
                                  },
                                  "common": Object {
                                    "black": "#000",
                                    "white": "#fff",
                                  },
                                  "contrastThreshold": 3,
                                  "divider": "rgba(0, 0, 0, 0.12)",
                                  "error": Object {
                                    "contrastText": "#fff",
                                    "dark": "#d32f2f",
                                    "light": "#e57373",
                                    "main": "#f44336",
                                  },
                                  "getContrastText": [Function],
                                  "grey": Object {
                                    "100": "#f5f5f5",
                                    "200": "#eeeeee",
                                    "300": "#e0e0e0",
                                    "400": "#bdbdbd",
                                    "50": "#fafafa",
                                    "500": "#9e9e9e",
                                    "600": "#757575",
                                    "700": "#616161",
                                    "800": "#424242",
                                    "900": "#212121",
                                    "A100": "#d5d5d5",
                                    "A200": "#aaaaaa",
                                    "A400": "#303030",
                                    "A700": "#616161",
                                  },
                                  "info": Object {
                                    "contrastText": "#fff",
                                    "dark": "#1976d2",
                                    "light": "#64b5f6",
                                    "main": "#2196f3",
                                  },
                                  "primary": Object {
                                    "contrastText": "#fff",
                                    "dark": "#303f9f",
                                    "light": "#7986cb",
                                    "main": "#3f51b5",
                                  },
                                  "secondary": Object {
                                    "contrastText": "#fff",
                                    "dark": "#c51162",
                                    "light": "#ff4081",
                                    "main": "#f50057",
                                  },
                                  "success": Object {
                                    "contrastText": "rgba(0, 0, 0, 0.87)",
                                    "dark": "#388e3c",
                                    "light": "#81c784",
                                    "main": "#4caf50",
                                  },
                                  "text": Object {
                                    "disabled": "rgba(0, 0, 0, 0.38)",
                                    "hint": "rgba(0, 0, 0, 0.38)",
                                    "primary": "rgba(0, 0, 0, 0.87)",
                                    "secondary": "rgba(0, 0, 0, 0.54)",
                                  },
                                  "tonalOffset": 0.2,
                                  "type": "light",
                                  "warning": Object {
                                    "contrastText": "rgba(0, 0, 0, 0.87)",
                                    "dark": "#f57c00",
                                    "light": "#ffb74d",
                                    "main": "#ff9800",
                                  },
                                },
                                "props": Object {},
                                "shadows": Array [
                                  "none",
                                  "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                  "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                  "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                  "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                  "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                  "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                  "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                  "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                  "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                  "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                  "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                  "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                  "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                  "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                  "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                  "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                  "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                  "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                  "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                  "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                  "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                  "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                  "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                  "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                                ],
                                "shape": Object {
                                  "borderRadius": 4,
                                },
                                "spacing": [Function],
                                "transitions": Object {
                                  "create": [Function],
                                  "duration": Object {
                                    "complex": 375,
                                    "enteringScreen": 225,
                                    "leavingScreen": 195,
                                    "short": 250,
                                    "shorter": 200,
                                    "shortest": 150,
                                    "standard": 300,
                                  },
                                  "easing": Object {
                                    "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                    "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                    "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                    "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                                  },
                                  "getAutoHeightDuration": [Function],
                                },
                                "typography": Object {
                                  "body1": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "1rem",
                                    "fontWeight": 400,
                                    "letterSpacing": "0.00938em",
                                    "lineHeight": 1.5,
                                  },
                                  "body2": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "0.875rem",
                                    "fontWeight": 400,
                                    "letterSpacing": "0.01071em",
                                    "lineHeight": 1.43,
                                  },
                                  "button": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "0.875rem",
                                    "fontWeight": 500,
                                    "letterSpacing": "0.02857em",
                                    "lineHeight": 1.75,
                                    "textTransform": "uppercase",
                                  },
                                  "caption": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "0.75rem",
                                    "fontWeight": 400,
                                    "letterSpacing": "0.03333em",
                                    "lineHeight": 1.66,
                                  },
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": 14,
                                  "fontWeightBold": 700,
                                  "fontWeightLight": 300,
                                  "fontWeightMedium": 500,
                                  "fontWeightRegular": 400,
                                  "h1": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "6rem",
                                    "fontWeight": 300,
                                    "letterSpacing": "-0.01562em",
                                    "lineHeight": 1.167,
                                  },
                                  "h2": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "3.75rem",
                                    "fontWeight": 300,
                                    "letterSpacing": "-0.00833em",
                                    "lineHeight": 1.2,
                                  },
                                  "h3": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "3rem",
                                    "fontWeight": 400,
                                    "letterSpacing": "0em",
                                    "lineHeight": 1.167,
                                  },
                                  "h4": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "2.125rem",
                                    "fontWeight": 400,
                                    "letterSpacing": "0.00735em",
                                    "lineHeight": 1.235,
                                  },
                                  "h5": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "1.5rem",
                                    "fontWeight": 400,
                                    "letterSpacing": "0em",
                                    "lineHeight": 1.334,
                                  },
                                  "h6": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "1.25rem",
                                    "fontWeight": 500,
                                    "letterSpacing": "0.0075em",
                                    "lineHeight": 1.6,
                                  },
                                  "htmlFontSize": 16,
                                  "overline": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "0.75rem",
                                    "fontWeight": 400,
                                    "letterSpacing": "0.08333em",
                                    "lineHeight": 2.66,
                                    "textTransform": "uppercase",
                                  },
                                  "pxToRem": [Function],
                                  "round": [Function],
                                  "subtitle1": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "1rem",
                                    "fontWeight": 400,
                                    "letterSpacing": "0.00938em",
                                    "lineHeight": 1.75,
                                  },
                                  "subtitle2": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "0.875rem",
                                    "fontWeight": 500,
                                    "letterSpacing": "0.00714em",
                                    "lineHeight": 1.57,
                                  },
                                },
                                "zIndex": Object {
                                  "appBar": 1100,
                                  "drawer": 1200,
                                  "mobileStepper": 1000,
                                  "modal": 1300,
                                  "snackbar": 1400,
                                  "speedDial": 1050,
                                  "tooltip": 1500,
                                },
                              }
                            }
                            utils={
                              DateFnsUtils {
                                "dateFormat": "MMMM do",
                                "dateTime12hFormat": "MMMM do hh:mm aaaa",
                                "dateTime24hFormat": "MMMM do HH:mm",
                                "locale": undefined,
                                "time12hFormat": "hh:mm a",
                                "time24hFormat": "HH:mm",
                                "yearFormat": "yyyy",
                                "yearMonthFormat": "MMMM yyyy",
                              }
                            }
                          >
                            <CalendarHeader
                              currentMonth={2020-02-01T03:00:00.000Z}
                              disableNextMonth={false}
                              disablePrevMonth={false}
                              leftArrowIcon={<Unknown />}
                              onMonthChange={[Function]}
                              rightArrowIcon={<Unknown />}
                              slideDirection="left"
                            >
                              <div>
                                <div
                                  className="MuiPickersCalendarHeader-switchHeader"
                                >
                                  <WithStyles(ForwardRef(IconButton))
                                    className="MuiPickersCalendarHeader-iconButton"
                                    disabled={false}
                                    onClick={[Function]}
                                  >
                                    <ForwardRef(IconButton)
                                      className="MuiPickersCalendarHeader-iconButton"
                                      classes={
                                        Object {
                                          "colorInherit": "MuiIconButton-colorInherit",
                                          "colorPrimary": "MuiIconButton-colorPrimary",
                                          "colorSecondary": "MuiIconButton-colorSecondary",
                                          "disabled": "Mui-disabled",
                                          "edgeEnd": "MuiIconButton-edgeEnd",
                                          "edgeStart": "MuiIconButton-edgeStart",
                                          "label": "MuiIconButton-label",
                                          "root": "MuiIconButton-root",
                                          "sizeSmall": "MuiIconButton-sizeSmall",
                                        }
                                      }
                                      disabled={false}
                                      onClick={[Function]}
                                    >
                                      <WithStyles(ForwardRef(ButtonBase))
                                        centerRipple={true}
                                        className="MuiIconButton-root MuiPickersCalendarHeader-iconButton"
                                        disabled={false}
                                        focusRipple={true}
                                        onClick={[Function]}
                                      >
                                        <ForwardRef(ButtonBase)
                                          centerRipple={true}
                                          className="MuiIconButton-root MuiPickersCalendarHeader-iconButton"
                                          classes={
                                            Object {
                                              "disabled": "Mui-disabled",
                                              "focusVisible": "Mui-focusVisible",
                                              "root": "MuiButtonBase-root",
                                            }
                                          }
                                          disabled={false}
                                          focusRipple={true}
                                          onClick={[Function]}
                                        >
                                          <button
                                            className="MuiButtonBase-root MuiIconButton-root MuiPickersCalendarHeader-iconButton"
                                            disabled={false}
                                            onBlur={[Function]}
                                            onClick={[Function]}
                                            onDragLeave={[Function]}
                                            onFocus={[Function]}
                                            onKeyDown={[Function]}
                                            onKeyUp={[Function]}
                                            onMouseDown={[Function]}
                                            onMouseLeave={[Function]}
                                            onMouseUp={[Function]}
                                            onTouchEnd={[Function]}
                                            onTouchMove={[Function]}
                                            onTouchStart={[Function]}
                                            tabIndex={0}
                                            type="button"
                                          >
                                            <span
                                              className="MuiIconButton-label"
                                            >
                                              <Component>
                                                <WithStyles(ForwardRef(SvgIcon))>
                                                  <ForwardRef(SvgIcon)
                                                    classes={
                                                      Object {
                                                        "colorAction": "MuiSvgIcon-colorAction",
                                                        "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                        "colorError": "MuiSvgIcon-colorError",
                                                        "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                        "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                        "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                        "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                        "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                        "root": "MuiSvgIcon-root",
                                                      }
                                                    }
                                                  >
                                                    <svg
                                                      aria-hidden="true"
                                                      className="MuiSvgIcon-root"
                                                      focusable="false"
                                                      role="presentation"
                                                      viewBox="0 0 24 24"
                                                    >
                                                      <path
                                                        d="M15.41 16.59L10.83 12l4.58-4.59L14 6l-6 6 6 6 1.41-1.41z"
                                                      />
                                                      <path
                                                        d="M0 0h24v24H0V0z"
                                                        fill="none"
                                                      />
                                                    </svg>
                                                  </ForwardRef(SvgIcon)>
                                                </WithStyles(ForwardRef(SvgIcon))>
                                              </Component>
                                            </span>
                                            <NoSsr>
                                              <WithStyles(memo)
                                                center={true}
                                              >
                                                <ForwardRef(TouchRipple)
                                                  center={true}
                                                  classes={
                                                    Object {
                                                      "child": "MuiTouchRipple-child",
                                                      "childLeaving": "MuiTouchRipple-childLeaving",
                                                      "childPulsate": "MuiTouchRipple-childPulsate",
                                                      "ripple": "MuiTouchRipple-ripple",
                                                      "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                      "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                      "root": "MuiTouchRipple-root",
                                                    }
                                                  }
                                                >
                                                  <span
                                                    className="MuiTouchRipple-root"
                                                  >
                                                    <TransitionGroup
                                                      childFactory={[Function]}
                                                      component={null}
                                                      exit={true}
                                                    />
                                                  </span>
                                                </ForwardRef(TouchRipple)>
                                              </WithStyles(memo)>
                                            </NoSsr>
                                          </button>
                                        </ForwardRef(ButtonBase)>
                                      </WithStyles(ForwardRef(ButtonBase))>
                                    </ForwardRef(IconButton)>
                                  </WithStyles(ForwardRef(IconButton))>
                                  <SlideTransition
                                    className="MuiPickersCalendarHeader-transitionContainer"
                                    slideDirection="left"
                                    transKey="Sat Feb 01 2020 00:00:00 GMT-0300 (Brasilia Standard Time)"
                                  >
                                    <TransitionGroup
                                      childFactory={[Function]}
                                      className="MuiPickersSlideTransition-transitionContainer MuiPickersCalendarHeader-transitionContainer"
                                      component="div"
                                    >
                                      <div
                                        className="MuiPickersSlideTransition-transitionContainer MuiPickersCalendarHeader-transitionContainer"
                                      >
                                        <CSSTransition
                                          classNames={
                                            Object {
                                              "enter": "MuiPickersSlideTransition-slideEnter-left",
                                              "enterActive": "MuiPickersSlideTransition-slideEnterActive",
                                              "exit": "MuiPickersSlideTransition-slideExit",
                                              "exitActive": "MuiPickersSlideTransition-slideExitActiveLeft-left",
                                            }
                                          }
                                          in={true}
                                          key=".$Sat Feb 01 2020 00=200=200 GMT-0300 (Brasilia Standard Time)left"
                                          mountOnEnter={true}
                                          onExited={[Function]}
                                          timeout={350}
                                          unmountOnExit={true}
                                        >
                                          <Transition
                                            appear={false}
                                            enter={true}
                                            exit={true}
                                            in={true}
                                            mountOnEnter={true}
                                            onEnter={[Function]}
                                            onEntered={[Function]}
                                            onEntering={[Function]}
                                            onExit={[Function]}
                                            onExited={[Function]}
                                            onExiting={[Function]}
                                            timeout={350}
                                            unmountOnExit={true}
                                          >
                                            <WithStyles(ForwardRef(Typography))
                                              align="center"
                                              variant="body1"
                                            >
                                              <ForwardRef(Typography)
                                                align="center"
                                                classes={
                                                  Object {
                                                    "alignCenter": "MuiTypography-alignCenter",
                                                    "alignJustify": "MuiTypography-alignJustify",
                                                    "alignLeft": "MuiTypography-alignLeft",
                                                    "alignRight": "MuiTypography-alignRight",
                                                    "body1": "MuiTypography-body1",
                                                    "body2": "MuiTypography-body2",
                                                    "button": "MuiTypography-button",
                                                    "caption": "MuiTypography-caption",
                                                    "colorError": "MuiTypography-colorError",
                                                    "colorInherit": "MuiTypography-colorInherit",
                                                    "colorPrimary": "MuiTypography-colorPrimary",
                                                    "colorSecondary": "MuiTypography-colorSecondary",
                                                    "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                    "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                    "displayBlock": "MuiTypography-displayBlock",
                                                    "displayInline": "MuiTypography-displayInline",
                                                    "gutterBottom": "MuiTypography-gutterBottom",
                                                    "h1": "MuiTypography-h1",
                                                    "h2": "MuiTypography-h2",
                                                    "h3": "MuiTypography-h3",
                                                    "h4": "MuiTypography-h4",
                                                    "h5": "MuiTypography-h5",
                                                    "h6": "MuiTypography-h6",
                                                    "noWrap": "MuiTypography-noWrap",
                                                    "overline": "MuiTypography-overline",
                                                    "paragraph": "MuiTypography-paragraph",
                                                    "root": "MuiTypography-root",
                                                    "srOnly": "MuiTypography-srOnly",
                                                    "subtitle1": "MuiTypography-subtitle1",
                                                    "subtitle2": "MuiTypography-subtitle2",
                                                  }
                                                }
                                                variant="body1"
                                              >
                                                <p
                                                  className="MuiTypography-root MuiTypography-body1 MuiTypography-alignCenter"
                                                >
                                                  February 2020
                                                </p>
                                              </ForwardRef(Typography)>
                                            </WithStyles(ForwardRef(Typography))>
                                          </Transition>
                                        </CSSTransition>
                                      </div>
                                    </TransitionGroup>
                                  </SlideTransition>
                                  <WithStyles(ForwardRef(IconButton))
                                    className="MuiPickersCalendarHeader-iconButton"
                                    disabled={false}
                                    onClick={[Function]}
                                  >
                                    <ForwardRef(IconButton)
                                      className="MuiPickersCalendarHeader-iconButton"
                                      classes={
                                        Object {
                                          "colorInherit": "MuiIconButton-colorInherit",
                                          "colorPrimary": "MuiIconButton-colorPrimary",
                                          "colorSecondary": "MuiIconButton-colorSecondary",
                                          "disabled": "Mui-disabled",
                                          "edgeEnd": "MuiIconButton-edgeEnd",
                                          "edgeStart": "MuiIconButton-edgeStart",
                                          "label": "MuiIconButton-label",
                                          "root": "MuiIconButton-root",
                                          "sizeSmall": "MuiIconButton-sizeSmall",
                                        }
                                      }
                                      disabled={false}
                                      onClick={[Function]}
                                    >
                                      <WithStyles(ForwardRef(ButtonBase))
                                        centerRipple={true}
                                        className="MuiIconButton-root MuiPickersCalendarHeader-iconButton"
                                        disabled={false}
                                        focusRipple={true}
                                        onClick={[Function]}
                                      >
                                        <ForwardRef(ButtonBase)
                                          centerRipple={true}
                                          className="MuiIconButton-root MuiPickersCalendarHeader-iconButton"
                                          classes={
                                            Object {
                                              "disabled": "Mui-disabled",
                                              "focusVisible": "Mui-focusVisible",
                                              "root": "MuiButtonBase-root",
                                            }
                                          }
                                          disabled={false}
                                          focusRipple={true}
                                          onClick={[Function]}
                                        >
                                          <button
                                            className="MuiButtonBase-root MuiIconButton-root MuiPickersCalendarHeader-iconButton"
                                            disabled={false}
                                            onBlur={[Function]}
                                            onClick={[Function]}
                                            onDragLeave={[Function]}
                                            onFocus={[Function]}
                                            onKeyDown={[Function]}
                                            onKeyUp={[Function]}
                                            onMouseDown={[Function]}
                                            onMouseLeave={[Function]}
                                            onMouseUp={[Function]}
                                            onTouchEnd={[Function]}
                                            onTouchMove={[Function]}
                                            onTouchStart={[Function]}
                                            tabIndex={0}
                                            type="button"
                                          >
                                            <span
                                              className="MuiIconButton-label"
                                            >
                                              <Component>
                                                <WithStyles(ForwardRef(SvgIcon))>
                                                  <ForwardRef(SvgIcon)
                                                    classes={
                                                      Object {
                                                        "colorAction": "MuiSvgIcon-colorAction",
                                                        "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                        "colorError": "MuiSvgIcon-colorError",
                                                        "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                        "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                        "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                        "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                        "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                        "root": "MuiSvgIcon-root",
                                                      }
                                                    }
                                                  >
                                                    <svg
                                                      aria-hidden="true"
                                                      className="MuiSvgIcon-root"
                                                      focusable="false"
                                                      role="presentation"
                                                      viewBox="0 0 24 24"
                                                    >
                                                      <path
                                                        d="M8.59 16.59L13.17 12 8.59 7.41 10 6l6 6-6 6-1.41-1.41z"
                                                      />
                                                      <path
                                                        d="M0 0h24v24H0V0z"
                                                        fill="none"
                                                      />
                                                    </svg>
                                                  </ForwardRef(SvgIcon)>
                                                </WithStyles(ForwardRef(SvgIcon))>
                                              </Component>
                                            </span>
                                            <NoSsr>
                                              <WithStyles(memo)
                                                center={true}
                                              >
                                                <ForwardRef(TouchRipple)
                                                  center={true}
                                                  classes={
                                                    Object {
                                                      "child": "MuiTouchRipple-child",
                                                      "childLeaving": "MuiTouchRipple-childLeaving",
                                                      "childPulsate": "MuiTouchRipple-childPulsate",
                                                      "ripple": "MuiTouchRipple-ripple",
                                                      "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                      "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                      "root": "MuiTouchRipple-root",
                                                    }
                                                  }
                                                >
                                                  <span
                                                    className="MuiTouchRipple-root"
                                                  >
                                                    <TransitionGroup
                                                      childFactory={[Function]}
                                                      component={null}
                                                      exit={true}
                                                    />
                                                  </span>
                                                </ForwardRef(TouchRipple)>
                                              </WithStyles(memo)>
                                            </NoSsr>
                                          </button>
                                        </ForwardRef(ButtonBase)>
                                      </WithStyles(ForwardRef(ButtonBase))>
                                    </ForwardRef(IconButton)>
                                  </WithStyles(ForwardRef(IconButton))>
                                </div>
                                <div
                                  className="MuiPickersCalendarHeader-daysHeader"
                                >
                                  <WithStyles(ForwardRef(Typography))
                                    className="MuiPickersCalendarHeader-dayLabel"
                                    key="0"
                                    variant="caption"
                                  >
                                    <ForwardRef(Typography)
                                      className="MuiPickersCalendarHeader-dayLabel"
                                      classes={
                                        Object {
                                          "alignCenter": "MuiTypography-alignCenter",
                                          "alignJustify": "MuiTypography-alignJustify",
                                          "alignLeft": "MuiTypography-alignLeft",
                                          "alignRight": "MuiTypography-alignRight",
                                          "body1": "MuiTypography-body1",
                                          "body2": "MuiTypography-body2",
                                          "button": "MuiTypography-button",
                                          "caption": "MuiTypography-caption",
                                          "colorError": "MuiTypography-colorError",
                                          "colorInherit": "MuiTypography-colorInherit",
                                          "colorPrimary": "MuiTypography-colorPrimary",
                                          "colorSecondary": "MuiTypography-colorSecondary",
                                          "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                          "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                          "displayBlock": "MuiTypography-displayBlock",
                                          "displayInline": "MuiTypography-displayInline",
                                          "gutterBottom": "MuiTypography-gutterBottom",
                                          "h1": "MuiTypography-h1",
                                          "h2": "MuiTypography-h2",
                                          "h3": "MuiTypography-h3",
                                          "h4": "MuiTypography-h4",
                                          "h5": "MuiTypography-h5",
                                          "h6": "MuiTypography-h6",
                                          "noWrap": "MuiTypography-noWrap",
                                          "overline": "MuiTypography-overline",
                                          "paragraph": "MuiTypography-paragraph",
                                          "root": "MuiTypography-root",
                                          "srOnly": "MuiTypography-srOnly",
                                          "subtitle1": "MuiTypography-subtitle1",
                                          "subtitle2": "MuiTypography-subtitle2",
                                        }
                                      }
                                      variant="caption"
                                    >
                                      <span
                                        className="MuiTypography-root MuiPickersCalendarHeader-dayLabel MuiTypography-caption"
                                      >
                                        Su
                                      </span>
                                    </ForwardRef(Typography)>
                                  </WithStyles(ForwardRef(Typography))>
                                  <WithStyles(ForwardRef(Typography))
                                    className="MuiPickersCalendarHeader-dayLabel"
                                    key="1"
                                    variant="caption"
                                  >
                                    <ForwardRef(Typography)
                                      className="MuiPickersCalendarHeader-dayLabel"
                                      classes={
                                        Object {
                                          "alignCenter": "MuiTypography-alignCenter",
                                          "alignJustify": "MuiTypography-alignJustify",
                                          "alignLeft": "MuiTypography-alignLeft",
                                          "alignRight": "MuiTypography-alignRight",
                                          "body1": "MuiTypography-body1",
                                          "body2": "MuiTypography-body2",
                                          "button": "MuiTypography-button",
                                          "caption": "MuiTypography-caption",
                                          "colorError": "MuiTypography-colorError",
                                          "colorInherit": "MuiTypography-colorInherit",
                                          "colorPrimary": "MuiTypography-colorPrimary",
                                          "colorSecondary": "MuiTypography-colorSecondary",
                                          "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                          "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                          "displayBlock": "MuiTypography-displayBlock",
                                          "displayInline": "MuiTypography-displayInline",
                                          "gutterBottom": "MuiTypography-gutterBottom",
                                          "h1": "MuiTypography-h1",
                                          "h2": "MuiTypography-h2",
                                          "h3": "MuiTypography-h3",
                                          "h4": "MuiTypography-h4",
                                          "h5": "MuiTypography-h5",
                                          "h6": "MuiTypography-h6",
                                          "noWrap": "MuiTypography-noWrap",
                                          "overline": "MuiTypography-overline",
                                          "paragraph": "MuiTypography-paragraph",
                                          "root": "MuiTypography-root",
                                          "srOnly": "MuiTypography-srOnly",
                                          "subtitle1": "MuiTypography-subtitle1",
                                          "subtitle2": "MuiTypography-subtitle2",
                                        }
                                      }
                                      variant="caption"
                                    >
                                      <span
                                        className="MuiTypography-root MuiPickersCalendarHeader-dayLabel MuiTypography-caption"
                                      >
                                        Mo
                                      </span>
                                    </ForwardRef(Typography)>
                                  </WithStyles(ForwardRef(Typography))>
                                  <WithStyles(ForwardRef(Typography))
                                    className="MuiPickersCalendarHeader-dayLabel"
                                    key="2"
                                    variant="caption"
                                  >
                                    <ForwardRef(Typography)
                                      className="MuiPickersCalendarHeader-dayLabel"
                                      classes={
                                        Object {
                                          "alignCenter": "MuiTypography-alignCenter",
                                          "alignJustify": "MuiTypography-alignJustify",
                                          "alignLeft": "MuiTypography-alignLeft",
                                          "alignRight": "MuiTypography-alignRight",
                                          "body1": "MuiTypography-body1",
                                          "body2": "MuiTypography-body2",
                                          "button": "MuiTypography-button",
                                          "caption": "MuiTypography-caption",
                                          "colorError": "MuiTypography-colorError",
                                          "colorInherit": "MuiTypography-colorInherit",
                                          "colorPrimary": "MuiTypography-colorPrimary",
                                          "colorSecondary": "MuiTypography-colorSecondary",
                                          "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                          "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                          "displayBlock": "MuiTypography-displayBlock",
                                          "displayInline": "MuiTypography-displayInline",
                                          "gutterBottom": "MuiTypography-gutterBottom",
                                          "h1": "MuiTypography-h1",
                                          "h2": "MuiTypography-h2",
                                          "h3": "MuiTypography-h3",
                                          "h4": "MuiTypography-h4",
                                          "h5": "MuiTypography-h5",
                                          "h6": "MuiTypography-h6",
                                          "noWrap": "MuiTypography-noWrap",
                                          "overline": "MuiTypography-overline",
                                          "paragraph": "MuiTypography-paragraph",
                                          "root": "MuiTypography-root",
                                          "srOnly": "MuiTypography-srOnly",
                                          "subtitle1": "MuiTypography-subtitle1",
                                          "subtitle2": "MuiTypography-subtitle2",
                                        }
                                      }
                                      variant="caption"
                                    >
                                      <span
                                        className="MuiTypography-root MuiPickersCalendarHeader-dayLabel MuiTypography-caption"
                                      >
                                        Tu
                                      </span>
                                    </ForwardRef(Typography)>
                                  </WithStyles(ForwardRef(Typography))>
                                  <WithStyles(ForwardRef(Typography))
                                    className="MuiPickersCalendarHeader-dayLabel"
                                    key="3"
                                    variant="caption"
                                  >
                                    <ForwardRef(Typography)
                                      className="MuiPickersCalendarHeader-dayLabel"
                                      classes={
                                        Object {
                                          "alignCenter": "MuiTypography-alignCenter",
                                          "alignJustify": "MuiTypography-alignJustify",
                                          "alignLeft": "MuiTypography-alignLeft",
                                          "alignRight": "MuiTypography-alignRight",
                                          "body1": "MuiTypography-body1",
                                          "body2": "MuiTypography-body2",
                                          "button": "MuiTypography-button",
                                          "caption": "MuiTypography-caption",
                                          "colorError": "MuiTypography-colorError",
                                          "colorInherit": "MuiTypography-colorInherit",
                                          "colorPrimary": "MuiTypography-colorPrimary",
                                          "colorSecondary": "MuiTypography-colorSecondary",
                                          "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                          "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                          "displayBlock": "MuiTypography-displayBlock",
                                          "displayInline": "MuiTypography-displayInline",
                                          "gutterBottom": "MuiTypography-gutterBottom",
                                          "h1": "MuiTypography-h1",
                                          "h2": "MuiTypography-h2",
                                          "h3": "MuiTypography-h3",
                                          "h4": "MuiTypography-h4",
                                          "h5": "MuiTypography-h5",
                                          "h6": "MuiTypography-h6",
                                          "noWrap": "MuiTypography-noWrap",
                                          "overline": "MuiTypography-overline",
                                          "paragraph": "MuiTypography-paragraph",
                                          "root": "MuiTypography-root",
                                          "srOnly": "MuiTypography-srOnly",
                                          "subtitle1": "MuiTypography-subtitle1",
                                          "subtitle2": "MuiTypography-subtitle2",
                                        }
                                      }
                                      variant="caption"
                                    >
                                      <span
                                        className="MuiTypography-root MuiPickersCalendarHeader-dayLabel MuiTypography-caption"
                                      >
                                        We
                                      </span>
                                    </ForwardRef(Typography)>
                                  </WithStyles(ForwardRef(Typography))>
                                  <WithStyles(ForwardRef(Typography))
                                    className="MuiPickersCalendarHeader-dayLabel"
                                    key="4"
                                    variant="caption"
                                  >
                                    <ForwardRef(Typography)
                                      className="MuiPickersCalendarHeader-dayLabel"
                                      classes={
                                        Object {
                                          "alignCenter": "MuiTypography-alignCenter",
                                          "alignJustify": "MuiTypography-alignJustify",
                                          "alignLeft": "MuiTypography-alignLeft",
                                          "alignRight": "MuiTypography-alignRight",
                                          "body1": "MuiTypography-body1",
                                          "body2": "MuiTypography-body2",
                                          "button": "MuiTypography-button",
                                          "caption": "MuiTypography-caption",
                                          "colorError": "MuiTypography-colorError",
                                          "colorInherit": "MuiTypography-colorInherit",
                                          "colorPrimary": "MuiTypography-colorPrimary",
                                          "colorSecondary": "MuiTypography-colorSecondary",
                                          "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                          "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                          "displayBlock": "MuiTypography-displayBlock",
                                          "displayInline": "MuiTypography-displayInline",
                                          "gutterBottom": "MuiTypography-gutterBottom",
                                          "h1": "MuiTypography-h1",
                                          "h2": "MuiTypography-h2",
                                          "h3": "MuiTypography-h3",
                                          "h4": "MuiTypography-h4",
                                          "h5": "MuiTypography-h5",
                                          "h6": "MuiTypography-h6",
                                          "noWrap": "MuiTypography-noWrap",
                                          "overline": "MuiTypography-overline",
                                          "paragraph": "MuiTypography-paragraph",
                                          "root": "MuiTypography-root",
                                          "srOnly": "MuiTypography-srOnly",
                                          "subtitle1": "MuiTypography-subtitle1",
                                          "subtitle2": "MuiTypography-subtitle2",
                                        }
                                      }
                                      variant="caption"
                                    >
                                      <span
                                        className="MuiTypography-root MuiPickersCalendarHeader-dayLabel MuiTypography-caption"
                                      >
                                        Th
                                      </span>
                                    </ForwardRef(Typography)>
                                  </WithStyles(ForwardRef(Typography))>
                                  <WithStyles(ForwardRef(Typography))
                                    className="MuiPickersCalendarHeader-dayLabel"
                                    key="5"
                                    variant="caption"
                                  >
                                    <ForwardRef(Typography)
                                      className="MuiPickersCalendarHeader-dayLabel"
                                      classes={
                                        Object {
                                          "alignCenter": "MuiTypography-alignCenter",
                                          "alignJustify": "MuiTypography-alignJustify",
                                          "alignLeft": "MuiTypography-alignLeft",
                                          "alignRight": "MuiTypography-alignRight",
                                          "body1": "MuiTypography-body1",
                                          "body2": "MuiTypography-body2",
                                          "button": "MuiTypography-button",
                                          "caption": "MuiTypography-caption",
                                          "colorError": "MuiTypography-colorError",
                                          "colorInherit": "MuiTypography-colorInherit",
                                          "colorPrimary": "MuiTypography-colorPrimary",
                                          "colorSecondary": "MuiTypography-colorSecondary",
                                          "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                          "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                          "displayBlock": "MuiTypography-displayBlock",
                                          "displayInline": "MuiTypography-displayInline",
                                          "gutterBottom": "MuiTypography-gutterBottom",
                                          "h1": "MuiTypography-h1",
                                          "h2": "MuiTypography-h2",
                                          "h3": "MuiTypography-h3",
                                          "h4": "MuiTypography-h4",
                                          "h5": "MuiTypography-h5",
                                          "h6": "MuiTypography-h6",
                                          "noWrap": "MuiTypography-noWrap",
                                          "overline": "MuiTypography-overline",
                                          "paragraph": "MuiTypography-paragraph",
                                          "root": "MuiTypography-root",
                                          "srOnly": "MuiTypography-srOnly",
                                          "subtitle1": "MuiTypography-subtitle1",
                                          "subtitle2": "MuiTypography-subtitle2",
                                        }
                                      }
                                      variant="caption"
                                    >
                                      <span
                                        className="MuiTypography-root MuiPickersCalendarHeader-dayLabel MuiTypography-caption"
                                      >
                                        Fr
                                      </span>
                                    </ForwardRef(Typography)>
                                  </WithStyles(ForwardRef(Typography))>
                                  <WithStyles(ForwardRef(Typography))
                                    className="MuiPickersCalendarHeader-dayLabel"
                                    key="6"
                                    variant="caption"
                                  >
                                    <ForwardRef(Typography)
                                      className="MuiPickersCalendarHeader-dayLabel"
                                      classes={
                                        Object {
                                          "alignCenter": "MuiTypography-alignCenter",
                                          "alignJustify": "MuiTypography-alignJustify",
                                          "alignLeft": "MuiTypography-alignLeft",
                                          "alignRight": "MuiTypography-alignRight",
                                          "body1": "MuiTypography-body1",
                                          "body2": "MuiTypography-body2",
                                          "button": "MuiTypography-button",
                                          "caption": "MuiTypography-caption",
                                          "colorError": "MuiTypography-colorError",
                                          "colorInherit": "MuiTypography-colorInherit",
                                          "colorPrimary": "MuiTypography-colorPrimary",
                                          "colorSecondary": "MuiTypography-colorSecondary",
                                          "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                          "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                          "displayBlock": "MuiTypography-displayBlock",
                                          "displayInline": "MuiTypography-displayInline",
                                          "gutterBottom": "MuiTypography-gutterBottom",
                                          "h1": "MuiTypography-h1",
                                          "h2": "MuiTypography-h2",
                                          "h3": "MuiTypography-h3",
                                          "h4": "MuiTypography-h4",
                                          "h5": "MuiTypography-h5",
                                          "h6": "MuiTypography-h6",
                                          "noWrap": "MuiTypography-noWrap",
                                          "overline": "MuiTypography-overline",
                                          "paragraph": "MuiTypography-paragraph",
                                          "root": "MuiTypography-root",
                                          "srOnly": "MuiTypography-srOnly",
                                          "subtitle1": "MuiTypography-subtitle1",
                                          "subtitle2": "MuiTypography-subtitle2",
                                        }
                                      }
                                      variant="caption"
                                    >
                                      <span
                                        className="MuiTypography-root MuiPickersCalendarHeader-dayLabel MuiTypography-caption"
                                      >
                                        Sa
                                      </span>
                                    </ForwardRef(Typography)>
                                  </WithStyles(ForwardRef(Typography))>
                                </div>
                              </div>
                            </CalendarHeader>
                            <SlideTransition
                              className="MuiPickersCalendar-transitionContainer"
                              slideDirection="left"
                              transKey="Sat Feb 01 2020 00:00:00 GMT-0300 (Brasilia Standard Time)"
                            >
                              <TransitionGroup
                                childFactory={[Function]}
                                className="MuiPickersSlideTransition-transitionContainer MuiPickersCalendar-transitionContainer"
                                component="div"
                              >
                                <div
                                  className="MuiPickersSlideTransition-transitionContainer MuiPickersCalendar-transitionContainer"
                                >
                                  <CSSTransition
                                    classNames={
                                      Object {
                                        "enter": "MuiPickersSlideTransition-slideEnter-left",
                                        "enterActive": "MuiPickersSlideTransition-slideEnterActive",
                                        "exit": "MuiPickersSlideTransition-slideExit",
                                        "exitActive": "MuiPickersSlideTransition-slideExitActiveLeft-left",
                                      }
                                    }
                                    in={true}
                                    key=".$Sat Feb 01 2020 00=200=200 GMT-0300 (Brasilia Standard Time)left"
                                    mountOnEnter={true}
                                    onExited={[Function]}
                                    timeout={350}
                                    unmountOnExit={true}
                                  >
                                    <Transition
                                      appear={false}
                                      enter={true}
                                      exit={true}
                                      in={true}
                                      mountOnEnter={true}
                                      onEnter={[Function]}
                                      onEntered={[Function]}
                                      onEntering={[Function]}
                                      onExit={[Function]}
                                      onExited={[Function]}
                                      onExiting={[Function]}
                                      timeout={350}
                                      unmountOnExit={true}
                                    >
                                      <div>
                                        <div
                                          className="MuiPickersCalendar-week"
                                          key="week-Sun Jan 26 2020 00:00:00 GMT-0300 (Brasilia Standard Time)"
                                        >
                                          <DayWrapper
                                            dayInCurrentMonth={false}
                                            disabled={false}
                                            key="Sun Jan 26 2020 00:00:00 GMT-0300 (Brasilia Standard Time)"
                                            onSelect={[Function]}
                                            value={2020-01-26T03:00:00.000Z}
                                          >
                                            <div
                                              role="presentation"
                                            >
                                              <Day
                                                current={false}
                                                disabled={false}
                                                hidden={true}
                                                selected={false}
                                              >
                                                <WithStyles(ForwardRef(IconButton))
                                                  className="MuiPickersDay-day MuiPickersDay-hidden"
                                                  tabIndex={-1}
                                                >
                                                  <ForwardRef(IconButton)
                                                    className="MuiPickersDay-day MuiPickersDay-hidden"
                                                    classes={
                                                      Object {
                                                        "colorInherit": "MuiIconButton-colorInherit",
                                                        "colorPrimary": "MuiIconButton-colorPrimary",
                                                        "colorSecondary": "MuiIconButton-colorSecondary",
                                                        "disabled": "Mui-disabled",
                                                        "edgeEnd": "MuiIconButton-edgeEnd",
                                                        "edgeStart": "MuiIconButton-edgeStart",
                                                        "label": "MuiIconButton-label",
                                                        "root": "MuiIconButton-root",
                                                        "sizeSmall": "MuiIconButton-sizeSmall",
                                                      }
                                                    }
                                                    tabIndex={-1}
                                                  >
                                                    <WithStyles(ForwardRef(ButtonBase))
                                                      centerRipple={true}
                                                      className="MuiIconButton-root MuiPickersDay-day MuiPickersDay-hidden"
                                                      disabled={false}
                                                      focusRipple={true}
                                                      tabIndex={-1}
                                                    >
                                                      <ForwardRef(ButtonBase)
                                                        centerRipple={true}
                                                        className="MuiIconButton-root MuiPickersDay-day MuiPickersDay-hidden"
                                                        classes={
                                                          Object {
                                                            "disabled": "Mui-disabled",
                                                            "focusVisible": "Mui-focusVisible",
                                                            "root": "MuiButtonBase-root",
                                                          }
                                                        }
                                                        disabled={false}
                                                        focusRipple={true}
                                                        tabIndex={-1}
                                                      >
                                                        <button
                                                          className="MuiButtonBase-root MuiIconButton-root MuiPickersDay-day MuiPickersDay-hidden"
                                                          disabled={false}
                                                          onBlur={[Function]}
                                                          onDragLeave={[Function]}
                                                          onFocus={[Function]}
                                                          onKeyDown={[Function]}
                                                          onKeyUp={[Function]}
                                                          onMouseDown={[Function]}
                                                          onMouseLeave={[Function]}
                                                          onMouseUp={[Function]}
                                                          onTouchEnd={[Function]}
                                                          onTouchMove={[Function]}
                                                          onTouchStart={[Function]}
                                                          tabIndex={-1}
                                                          type="button"
                                                        >
                                                          <span
                                                            className="MuiIconButton-label"
                                                          >
                                                            <WithStyles(ForwardRef(Typography))
                                                              color="inherit"
                                                              variant="body2"
                                                            >
                                                              <ForwardRef(Typography)
                                                                classes={
                                                                  Object {
                                                                    "alignCenter": "MuiTypography-alignCenter",
                                                                    "alignJustify": "MuiTypography-alignJustify",
                                                                    "alignLeft": "MuiTypography-alignLeft",
                                                                    "alignRight": "MuiTypography-alignRight",
                                                                    "body1": "MuiTypography-body1",
                                                                    "body2": "MuiTypography-body2",
                                                                    "button": "MuiTypography-button",
                                                                    "caption": "MuiTypography-caption",
                                                                    "colorError": "MuiTypography-colorError",
                                                                    "colorInherit": "MuiTypography-colorInherit",
                                                                    "colorPrimary": "MuiTypography-colorPrimary",
                                                                    "colorSecondary": "MuiTypography-colorSecondary",
                                                                    "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                    "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                    "displayBlock": "MuiTypography-displayBlock",
                                                                    "displayInline": "MuiTypography-displayInline",
                                                                    "gutterBottom": "MuiTypography-gutterBottom",
                                                                    "h1": "MuiTypography-h1",
                                                                    "h2": "MuiTypography-h2",
                                                                    "h3": "MuiTypography-h3",
                                                                    "h4": "MuiTypography-h4",
                                                                    "h5": "MuiTypography-h5",
                                                                    "h6": "MuiTypography-h6",
                                                                    "noWrap": "MuiTypography-noWrap",
                                                                    "overline": "MuiTypography-overline",
                                                                    "paragraph": "MuiTypography-paragraph",
                                                                    "root": "MuiTypography-root",
                                                                    "srOnly": "MuiTypography-srOnly",
                                                                    "subtitle1": "MuiTypography-subtitle1",
                                                                    "subtitle2": "MuiTypography-subtitle2",
                                                                  }
                                                                }
                                                                color="inherit"
                                                                variant="body2"
                                                              >
                                                                <p
                                                                  className="MuiTypography-root MuiTypography-body2 MuiTypography-colorInherit"
                                                                >
                                                                  26
                                                                </p>
                                                              </ForwardRef(Typography)>
                                                            </WithStyles(ForwardRef(Typography))>
                                                          </span>
                                                          <NoSsr>
                                                            <WithStyles(memo)
                                                              center={true}
                                                            >
                                                              <ForwardRef(TouchRipple)
                                                                center={true}
                                                                classes={
                                                                  Object {
                                                                    "child": "MuiTouchRipple-child",
                                                                    "childLeaving": "MuiTouchRipple-childLeaving",
                                                                    "childPulsate": "MuiTouchRipple-childPulsate",
                                                                    "ripple": "MuiTouchRipple-ripple",
                                                                    "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                    "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                    "root": "MuiTouchRipple-root",
                                                                  }
                                                                }
                                                              >
                                                                <span
                                                                  className="MuiTouchRipple-root"
                                                                >
                                                                  <TransitionGroup
                                                                    childFactory={[Function]}
                                                                    component={null}
                                                                    exit={true}
                                                                  />
                                                                </span>
                                                              </ForwardRef(TouchRipple)>
                                                            </WithStyles(memo)>
                                                          </NoSsr>
                                                        </button>
                                                      </ForwardRef(ButtonBase)>
                                                    </WithStyles(ForwardRef(ButtonBase))>
                                                  </ForwardRef(IconButton)>
                                                </WithStyles(ForwardRef(IconButton))>
                                              </Day>
                                            </div>
                                          </DayWrapper>
                                          <DayWrapper
                                            dayInCurrentMonth={false}
                                            disabled={false}
                                            key="Mon Jan 27 2020 00:00:00 GMT-0300 (Brasilia Standard Time)"
                                            onSelect={[Function]}
                                            value={2020-01-27T03:00:00.000Z}
                                          >
                                            <div
                                              role="presentation"
                                            >
                                              <Day
                                                current={false}
                                                disabled={false}
                                                hidden={true}
                                                selected={false}
                                              >
                                                <WithStyles(ForwardRef(IconButton))
                                                  className="MuiPickersDay-day MuiPickersDay-hidden"
                                                  tabIndex={-1}
                                                >
                                                  <ForwardRef(IconButton)
                                                    className="MuiPickersDay-day MuiPickersDay-hidden"
                                                    classes={
                                                      Object {
                                                        "colorInherit": "MuiIconButton-colorInherit",
                                                        "colorPrimary": "MuiIconButton-colorPrimary",
                                                        "colorSecondary": "MuiIconButton-colorSecondary",
                                                        "disabled": "Mui-disabled",
                                                        "edgeEnd": "MuiIconButton-edgeEnd",
                                                        "edgeStart": "MuiIconButton-edgeStart",
                                                        "label": "MuiIconButton-label",
                                                        "root": "MuiIconButton-root",
                                                        "sizeSmall": "MuiIconButton-sizeSmall",
                                                      }
                                                    }
                                                    tabIndex={-1}
                                                  >
                                                    <WithStyles(ForwardRef(ButtonBase))
                                                      centerRipple={true}
                                                      className="MuiIconButton-root MuiPickersDay-day MuiPickersDay-hidden"
                                                      disabled={false}
                                                      focusRipple={true}
                                                      tabIndex={-1}
                                                    >
                                                      <ForwardRef(ButtonBase)
                                                        centerRipple={true}
                                                        className="MuiIconButton-root MuiPickersDay-day MuiPickersDay-hidden"
                                                        classes={
                                                          Object {
                                                            "disabled": "Mui-disabled",
                                                            "focusVisible": "Mui-focusVisible",
                                                            "root": "MuiButtonBase-root",
                                                          }
                                                        }
                                                        disabled={false}
                                                        focusRipple={true}
                                                        tabIndex={-1}
                                                      >
                                                        <button
                                                          className="MuiButtonBase-root MuiIconButton-root MuiPickersDay-day MuiPickersDay-hidden"
                                                          disabled={false}
                                                          onBlur={[Function]}
                                                          onDragLeave={[Function]}
                                                          onFocus={[Function]}
                                                          onKeyDown={[Function]}
                                                          onKeyUp={[Function]}
                                                          onMouseDown={[Function]}
                                                          onMouseLeave={[Function]}
                                                          onMouseUp={[Function]}
                                                          onTouchEnd={[Function]}
                                                          onTouchMove={[Function]}
                                                          onTouchStart={[Function]}
                                                          tabIndex={-1}
                                                          type="button"
                                                        >
                                                          <span
                                                            className="MuiIconButton-label"
                                                          >
                                                            <WithStyles(ForwardRef(Typography))
                                                              color="inherit"
                                                              variant="body2"
                                                            >
                                                              <ForwardRef(Typography)
                                                                classes={
                                                                  Object {
                                                                    "alignCenter": "MuiTypography-alignCenter",
                                                                    "alignJustify": "MuiTypography-alignJustify",
                                                                    "alignLeft": "MuiTypography-alignLeft",
                                                                    "alignRight": "MuiTypography-alignRight",
                                                                    "body1": "MuiTypography-body1",
                                                                    "body2": "MuiTypography-body2",
                                                                    "button": "MuiTypography-button",
                                                                    "caption": "MuiTypography-caption",
                                                                    "colorError": "MuiTypography-colorError",
                                                                    "colorInherit": "MuiTypography-colorInherit",
                                                                    "colorPrimary": "MuiTypography-colorPrimary",
                                                                    "colorSecondary": "MuiTypography-colorSecondary",
                                                                    "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                    "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                    "displayBlock": "MuiTypography-displayBlock",
                                                                    "displayInline": "MuiTypography-displayInline",
                                                                    "gutterBottom": "MuiTypography-gutterBottom",
                                                                    "h1": "MuiTypography-h1",
                                                                    "h2": "MuiTypography-h2",
                                                                    "h3": "MuiTypography-h3",
                                                                    "h4": "MuiTypography-h4",
                                                                    "h5": "MuiTypography-h5",
                                                                    "h6": "MuiTypography-h6",
                                                                    "noWrap": "MuiTypography-noWrap",
                                                                    "overline": "MuiTypography-overline",
                                                                    "paragraph": "MuiTypography-paragraph",
                                                                    "root": "MuiTypography-root",
                                                                    "srOnly": "MuiTypography-srOnly",
                                                                    "subtitle1": "MuiTypography-subtitle1",
                                                                    "subtitle2": "MuiTypography-subtitle2",
                                                                  }
                                                                }
                                                                color="inherit"
                                                                variant="body2"
                                                              >
                                                                <p
                                                                  className="MuiTypography-root MuiTypography-body2 MuiTypography-colorInherit"
                                                                >
                                                                  27
                                                                </p>
                                                              </ForwardRef(Typography)>
                                                            </WithStyles(ForwardRef(Typography))>
                                                          </span>
                                                          <NoSsr>
                                                            <WithStyles(memo)
                                                              center={true}
                                                            >
                                                              <ForwardRef(TouchRipple)
                                                                center={true}
                                                                classes={
                                                                  Object {
                                                                    "child": "MuiTouchRipple-child",
                                                                    "childLeaving": "MuiTouchRipple-childLeaving",
                                                                    "childPulsate": "MuiTouchRipple-childPulsate",
                                                                    "ripple": "MuiTouchRipple-ripple",
                                                                    "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                    "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                    "root": "MuiTouchRipple-root",
                                                                  }
                                                                }
                                                              >
                                                                <span
                                                                  className="MuiTouchRipple-root"
                                                                >
                                                                  <TransitionGroup
                                                                    childFactory={[Function]}
                                                                    component={null}
                                                                    exit={true}
                                                                  />
                                                                </span>
                                                              </ForwardRef(TouchRipple)>
                                                            </WithStyles(memo)>
                                                          </NoSsr>
                                                        </button>
                                                      </ForwardRef(ButtonBase)>
                                                    </WithStyles(ForwardRef(ButtonBase))>
                                                  </ForwardRef(IconButton)>
                                                </WithStyles(ForwardRef(IconButton))>
                                              </Day>
                                            </div>
                                          </DayWrapper>
                                          <DayWrapper
                                            dayInCurrentMonth={false}
                                            disabled={false}
                                            key="Tue Jan 28 2020 00:00:00 GMT-0300 (Brasilia Standard Time)"
                                            onSelect={[Function]}
                                            value={2020-01-28T03:00:00.000Z}
                                          >
                                            <div
                                              role="presentation"
                                            >
                                              <Day
                                                current={false}
                                                disabled={false}
                                                hidden={true}
                                                selected={false}
                                              >
                                                <WithStyles(ForwardRef(IconButton))
                                                  className="MuiPickersDay-day MuiPickersDay-hidden"
                                                  tabIndex={-1}
                                                >
                                                  <ForwardRef(IconButton)
                                                    className="MuiPickersDay-day MuiPickersDay-hidden"
                                                    classes={
                                                      Object {
                                                        "colorInherit": "MuiIconButton-colorInherit",
                                                        "colorPrimary": "MuiIconButton-colorPrimary",
                                                        "colorSecondary": "MuiIconButton-colorSecondary",
                                                        "disabled": "Mui-disabled",
                                                        "edgeEnd": "MuiIconButton-edgeEnd",
                                                        "edgeStart": "MuiIconButton-edgeStart",
                                                        "label": "MuiIconButton-label",
                                                        "root": "MuiIconButton-root",
                                                        "sizeSmall": "MuiIconButton-sizeSmall",
                                                      }
                                                    }
                                                    tabIndex={-1}
                                                  >
                                                    <WithStyles(ForwardRef(ButtonBase))
                                                      centerRipple={true}
                                                      className="MuiIconButton-root MuiPickersDay-day MuiPickersDay-hidden"
                                                      disabled={false}
                                                      focusRipple={true}
                                                      tabIndex={-1}
                                                    >
                                                      <ForwardRef(ButtonBase)
                                                        centerRipple={true}
                                                        className="MuiIconButton-root MuiPickersDay-day MuiPickersDay-hidden"
                                                        classes={
                                                          Object {
                                                            "disabled": "Mui-disabled",
                                                            "focusVisible": "Mui-focusVisible",
                                                            "root": "MuiButtonBase-root",
                                                          }
                                                        }
                                                        disabled={false}
                                                        focusRipple={true}
                                                        tabIndex={-1}
                                                      >
                                                        <button
                                                          className="MuiButtonBase-root MuiIconButton-root MuiPickersDay-day MuiPickersDay-hidden"
                                                          disabled={false}
                                                          onBlur={[Function]}
                                                          onDragLeave={[Function]}
                                                          onFocus={[Function]}
                                                          onKeyDown={[Function]}
                                                          onKeyUp={[Function]}
                                                          onMouseDown={[Function]}
                                                          onMouseLeave={[Function]}
                                                          onMouseUp={[Function]}
                                                          onTouchEnd={[Function]}
                                                          onTouchMove={[Function]}
                                                          onTouchStart={[Function]}
                                                          tabIndex={-1}
                                                          type="button"
                                                        >
                                                          <span
                                                            className="MuiIconButton-label"
                                                          >
                                                            <WithStyles(ForwardRef(Typography))
                                                              color="inherit"
                                                              variant="body2"
                                                            >
                                                              <ForwardRef(Typography)
                                                                classes={
                                                                  Object {
                                                                    "alignCenter": "MuiTypography-alignCenter",
                                                                    "alignJustify": "MuiTypography-alignJustify",
                                                                    "alignLeft": "MuiTypography-alignLeft",
                                                                    "alignRight": "MuiTypography-alignRight",
                                                                    "body1": "MuiTypography-body1",
                                                                    "body2": "MuiTypography-body2",
                                                                    "button": "MuiTypography-button",
                                                                    "caption": "MuiTypography-caption",
                                                                    "colorError": "MuiTypography-colorError",
                                                                    "colorInherit": "MuiTypography-colorInherit",
                                                                    "colorPrimary": "MuiTypography-colorPrimary",
                                                                    "colorSecondary": "MuiTypography-colorSecondary",
                                                                    "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                    "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                    "displayBlock": "MuiTypography-displayBlock",
                                                                    "displayInline": "MuiTypography-displayInline",
                                                                    "gutterBottom": "MuiTypography-gutterBottom",
                                                                    "h1": "MuiTypography-h1",
                                                                    "h2": "MuiTypography-h2",
                                                                    "h3": "MuiTypography-h3",
                                                                    "h4": "MuiTypography-h4",
                                                                    "h5": "MuiTypography-h5",
                                                                    "h6": "MuiTypography-h6",
                                                                    "noWrap": "MuiTypography-noWrap",
                                                                    "overline": "MuiTypography-overline",
                                                                    "paragraph": "MuiTypography-paragraph",
                                                                    "root": "MuiTypography-root",
                                                                    "srOnly": "MuiTypography-srOnly",
                                                                    "subtitle1": "MuiTypography-subtitle1",
                                                                    "subtitle2": "MuiTypography-subtitle2",
                                                                  }
                                                                }
                                                                color="inherit"
                                                                variant="body2"
                                                              >
                                                                <p
                                                                  className="MuiTypography-root MuiTypography-body2 MuiTypography-colorInherit"
                                                                >
                                                                  28
                                                                </p>
                                                              </ForwardRef(Typography)>
                                                            </WithStyles(ForwardRef(Typography))>
                                                          </span>
                                                          <NoSsr>
                                                            <WithStyles(memo)
                                                              center={true}
                                                            >
                                                              <ForwardRef(TouchRipple)
                                                                center={true}
                                                                classes={
                                                                  Object {
                                                                    "child": "MuiTouchRipple-child",
                                                                    "childLeaving": "MuiTouchRipple-childLeaving",
                                                                    "childPulsate": "MuiTouchRipple-childPulsate",
                                                                    "ripple": "MuiTouchRipple-ripple",
                                                                    "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                    "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                    "root": "MuiTouchRipple-root",
                                                                  }
                                                                }
                                                              >
                                                                <span
                                                                  className="MuiTouchRipple-root"
                                                                >
                                                                  <TransitionGroup
                                                                    childFactory={[Function]}
                                                                    component={null}
                                                                    exit={true}
                                                                  />
                                                                </span>
                                                              </ForwardRef(TouchRipple)>
                                                            </WithStyles(memo)>
                                                          </NoSsr>
                                                        </button>
                                                      </ForwardRef(ButtonBase)>
                                                    </WithStyles(ForwardRef(ButtonBase))>
                                                  </ForwardRef(IconButton)>
                                                </WithStyles(ForwardRef(IconButton))>
                                              </Day>
                                            </div>
                                          </DayWrapper>
                                          <DayWrapper
                                            dayInCurrentMonth={false}
                                            disabled={false}
                                            key="Wed Jan 29 2020 00:00:00 GMT-0300 (Brasilia Standard Time)"
                                            onSelect={[Function]}
                                            value={2020-01-29T03:00:00.000Z}
                                          >
                                            <div
                                              role="presentation"
                                            >
                                              <Day
                                                current={false}
                                                disabled={false}
                                                hidden={true}
                                                selected={false}
                                              >
                                                <WithStyles(ForwardRef(IconButton))
                                                  className="MuiPickersDay-day MuiPickersDay-hidden"
                                                  tabIndex={-1}
                                                >
                                                  <ForwardRef(IconButton)
                                                    className="MuiPickersDay-day MuiPickersDay-hidden"
                                                    classes={
                                                      Object {
                                                        "colorInherit": "MuiIconButton-colorInherit",
                                                        "colorPrimary": "MuiIconButton-colorPrimary",
                                                        "colorSecondary": "MuiIconButton-colorSecondary",
                                                        "disabled": "Mui-disabled",
                                                        "edgeEnd": "MuiIconButton-edgeEnd",
                                                        "edgeStart": "MuiIconButton-edgeStart",
                                                        "label": "MuiIconButton-label",
                                                        "root": "MuiIconButton-root",
                                                        "sizeSmall": "MuiIconButton-sizeSmall",
                                                      }
                                                    }
                                                    tabIndex={-1}
                                                  >
                                                    <WithStyles(ForwardRef(ButtonBase))
                                                      centerRipple={true}
                                                      className="MuiIconButton-root MuiPickersDay-day MuiPickersDay-hidden"
                                                      disabled={false}
                                                      focusRipple={true}
                                                      tabIndex={-1}
                                                    >
                                                      <ForwardRef(ButtonBase)
                                                        centerRipple={true}
                                                        className="MuiIconButton-root MuiPickersDay-day MuiPickersDay-hidden"
                                                        classes={
                                                          Object {
                                                            "disabled": "Mui-disabled",
                                                            "focusVisible": "Mui-focusVisible",
                                                            "root": "MuiButtonBase-root",
                                                          }
                                                        }
                                                        disabled={false}
                                                        focusRipple={true}
                                                        tabIndex={-1}
                                                      >
                                                        <button
                                                          className="MuiButtonBase-root MuiIconButton-root MuiPickersDay-day MuiPickersDay-hidden"
                                                          disabled={false}
                                                          onBlur={[Function]}
                                                          onDragLeave={[Function]}
                                                          onFocus={[Function]}
                                                          onKeyDown={[Function]}
                                                          onKeyUp={[Function]}
                                                          onMouseDown={[Function]}
                                                          onMouseLeave={[Function]}
                                                          onMouseUp={[Function]}
                                                          onTouchEnd={[Function]}
                                                          onTouchMove={[Function]}
                                                          onTouchStart={[Function]}
                                                          tabIndex={-1}
                                                          type="button"
                                                        >
                                                          <span
                                                            className="MuiIconButton-label"
                                                          >
                                                            <WithStyles(ForwardRef(Typography))
                                                              color="inherit"
                                                              variant="body2"
                                                            >
                                                              <ForwardRef(Typography)
                                                                classes={
                                                                  Object {
                                                                    "alignCenter": "MuiTypography-alignCenter",
                                                                    "alignJustify": "MuiTypography-alignJustify",
                                                                    "alignLeft": "MuiTypography-alignLeft",
                                                                    "alignRight": "MuiTypography-alignRight",
                                                                    "body1": "MuiTypography-body1",
                                                                    "body2": "MuiTypography-body2",
                                                                    "button": "MuiTypography-button",
                                                                    "caption": "MuiTypography-caption",
                                                                    "colorError": "MuiTypography-colorError",
                                                                    "colorInherit": "MuiTypography-colorInherit",
                                                                    "colorPrimary": "MuiTypography-colorPrimary",
                                                                    "colorSecondary": "MuiTypography-colorSecondary",
                                                                    "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                    "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                    "displayBlock": "MuiTypography-displayBlock",
                                                                    "displayInline": "MuiTypography-displayInline",
                                                                    "gutterBottom": "MuiTypography-gutterBottom",
                                                                    "h1": "MuiTypography-h1",
                                                                    "h2": "MuiTypography-h2",
                                                                    "h3": "MuiTypography-h3",
                                                                    "h4": "MuiTypography-h4",
                                                                    "h5": "MuiTypography-h5",
                                                                    "h6": "MuiTypography-h6",
                                                                    "noWrap": "MuiTypography-noWrap",
                                                                    "overline": "MuiTypography-overline",
                                                                    "paragraph": "MuiTypography-paragraph",
                                                                    "root": "MuiTypography-root",
                                                                    "srOnly": "MuiTypography-srOnly",
                                                                    "subtitle1": "MuiTypography-subtitle1",
                                                                    "subtitle2": "MuiTypography-subtitle2",
                                                                  }
                                                                }
                                                                color="inherit"
                                                                variant="body2"
                                                              >
                                                                <p
                                                                  className="MuiTypography-root MuiTypography-body2 MuiTypography-colorInherit"
                                                                >
                                                                  29
                                                                </p>
                                                              </ForwardRef(Typography)>
                                                            </WithStyles(ForwardRef(Typography))>
                                                          </span>
                                                          <NoSsr>
                                                            <WithStyles(memo)
                                                              center={true}
                                                            >
                                                              <ForwardRef(TouchRipple)
                                                                center={true}
                                                                classes={
                                                                  Object {
                                                                    "child": "MuiTouchRipple-child",
                                                                    "childLeaving": "MuiTouchRipple-childLeaving",
                                                                    "childPulsate": "MuiTouchRipple-childPulsate",
                                                                    "ripple": "MuiTouchRipple-ripple",
                                                                    "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                    "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                    "root": "MuiTouchRipple-root",
                                                                  }
                                                                }
                                                              >
                                                                <span
                                                                  className="MuiTouchRipple-root"
                                                                >
                                                                  <TransitionGroup
                                                                    childFactory={[Function]}
                                                                    component={null}
                                                                    exit={true}
                                                                  />
                                                                </span>
                                                              </ForwardRef(TouchRipple)>
                                                            </WithStyles(memo)>
                                                          </NoSsr>
                                                        </button>
                                                      </ForwardRef(ButtonBase)>
                                                    </WithStyles(ForwardRef(ButtonBase))>
                                                  </ForwardRef(IconButton)>
                                                </WithStyles(ForwardRef(IconButton))>
                                              </Day>
                                            </div>
                                          </DayWrapper>
                                          <DayWrapper
                                            dayInCurrentMonth={false}
                                            disabled={false}
                                            key="Thu Jan 30 2020 00:00:00 GMT-0300 (Brasilia Standard Time)"
                                            onSelect={[Function]}
                                            value={2020-01-30T03:00:00.000Z}
                                          >
                                            <div
                                              role="presentation"
                                            >
                                              <Day
                                                current={false}
                                                disabled={false}
                                                hidden={true}
                                                selected={false}
                                              >
                                                <WithStyles(ForwardRef(IconButton))
                                                  className="MuiPickersDay-day MuiPickersDay-hidden"
                                                  tabIndex={-1}
                                                >
                                                  <ForwardRef(IconButton)
                                                    className="MuiPickersDay-day MuiPickersDay-hidden"
                                                    classes={
                                                      Object {
                                                        "colorInherit": "MuiIconButton-colorInherit",
                                                        "colorPrimary": "MuiIconButton-colorPrimary",
                                                        "colorSecondary": "MuiIconButton-colorSecondary",
                                                        "disabled": "Mui-disabled",
                                                        "edgeEnd": "MuiIconButton-edgeEnd",
                                                        "edgeStart": "MuiIconButton-edgeStart",
                                                        "label": "MuiIconButton-label",
                                                        "root": "MuiIconButton-root",
                                                        "sizeSmall": "MuiIconButton-sizeSmall",
                                                      }
                                                    }
                                                    tabIndex={-1}
                                                  >
                                                    <WithStyles(ForwardRef(ButtonBase))
                                                      centerRipple={true}
                                                      className="MuiIconButton-root MuiPickersDay-day MuiPickersDay-hidden"
                                                      disabled={false}
                                                      focusRipple={true}
                                                      tabIndex={-1}
                                                    >
                                                      <ForwardRef(ButtonBase)
                                                        centerRipple={true}
                                                        className="MuiIconButton-root MuiPickersDay-day MuiPickersDay-hidden"
                                                        classes={
                                                          Object {
                                                            "disabled": "Mui-disabled",
                                                            "focusVisible": "Mui-focusVisible",
                                                            "root": "MuiButtonBase-root",
                                                          }
                                                        }
                                                        disabled={false}
                                                        focusRipple={true}
                                                        tabIndex={-1}
                                                      >
                                                        <button
                                                          className="MuiButtonBase-root MuiIconButton-root MuiPickersDay-day MuiPickersDay-hidden"
                                                          disabled={false}
                                                          onBlur={[Function]}
                                                          onDragLeave={[Function]}
                                                          onFocus={[Function]}
                                                          onKeyDown={[Function]}
                                                          onKeyUp={[Function]}
                                                          onMouseDown={[Function]}
                                                          onMouseLeave={[Function]}
                                                          onMouseUp={[Function]}
                                                          onTouchEnd={[Function]}
                                                          onTouchMove={[Function]}
                                                          onTouchStart={[Function]}
                                                          tabIndex={-1}
                                                          type="button"
                                                        >
                                                          <span
                                                            className="MuiIconButton-label"
                                                          >
                                                            <WithStyles(ForwardRef(Typography))
                                                              color="inherit"
                                                              variant="body2"
                                                            >
                                                              <ForwardRef(Typography)
                                                                classes={
                                                                  Object {
                                                                    "alignCenter": "MuiTypography-alignCenter",
                                                                    "alignJustify": "MuiTypography-alignJustify",
                                                                    "alignLeft": "MuiTypography-alignLeft",
                                                                    "alignRight": "MuiTypography-alignRight",
                                                                    "body1": "MuiTypography-body1",
                                                                    "body2": "MuiTypography-body2",
                                                                    "button": "MuiTypography-button",
                                                                    "caption": "MuiTypography-caption",
                                                                    "colorError": "MuiTypography-colorError",
                                                                    "colorInherit": "MuiTypography-colorInherit",
                                                                    "colorPrimary": "MuiTypography-colorPrimary",
                                                                    "colorSecondary": "MuiTypography-colorSecondary",
                                                                    "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                    "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                    "displayBlock": "MuiTypography-displayBlock",
                                                                    "displayInline": "MuiTypography-displayInline",
                                                                    "gutterBottom": "MuiTypography-gutterBottom",
                                                                    "h1": "MuiTypography-h1",
                                                                    "h2": "MuiTypography-h2",
                                                                    "h3": "MuiTypography-h3",
                                                                    "h4": "MuiTypography-h4",
                                                                    "h5": "MuiTypography-h5",
                                                                    "h6": "MuiTypography-h6",
                                                                    "noWrap": "MuiTypography-noWrap",
                                                                    "overline": "MuiTypography-overline",
                                                                    "paragraph": "MuiTypography-paragraph",
                                                                    "root": "MuiTypography-root",
                                                                    "srOnly": "MuiTypography-srOnly",
                                                                    "subtitle1": "MuiTypography-subtitle1",
                                                                    "subtitle2": "MuiTypography-subtitle2",
                                                                  }
                                                                }
                                                                color="inherit"
                                                                variant="body2"
                                                              >
                                                                <p
                                                                  className="MuiTypography-root MuiTypography-body2 MuiTypography-colorInherit"
                                                                >
                                                                  30
                                                                </p>
                                                              </ForwardRef(Typography)>
                                                            </WithStyles(ForwardRef(Typography))>
                                                          </span>
                                                          <NoSsr>
                                                            <WithStyles(memo)
                                                              center={true}
                                                            >
                                                              <ForwardRef(TouchRipple)
                                                                center={true}
                                                                classes={
                                                                  Object {
                                                                    "child": "MuiTouchRipple-child",
                                                                    "childLeaving": "MuiTouchRipple-childLeaving",
                                                                    "childPulsate": "MuiTouchRipple-childPulsate",
                                                                    "ripple": "MuiTouchRipple-ripple",
                                                                    "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                    "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                    "root": "MuiTouchRipple-root",
                                                                  }
                                                                }
                                                              >
                                                                <span
                                                                  className="MuiTouchRipple-root"
                                                                >
                                                                  <TransitionGroup
                                                                    childFactory={[Function]}
                                                                    component={null}
                                                                    exit={true}
                                                                  />
                                                                </span>
                                                              </ForwardRef(TouchRipple)>
                                                            </WithStyles(memo)>
                                                          </NoSsr>
                                                        </button>
                                                      </ForwardRef(ButtonBase)>
                                                    </WithStyles(ForwardRef(ButtonBase))>
                                                  </ForwardRef(IconButton)>
                                                </WithStyles(ForwardRef(IconButton))>
                                              </Day>
                                            </div>
                                          </DayWrapper>
                                          <DayWrapper
                                            dayInCurrentMonth={false}
                                            disabled={false}
                                            key="Fri Jan 31 2020 00:00:00 GMT-0300 (Brasilia Standard Time)"
                                            onSelect={[Function]}
                                            value={2020-01-31T03:00:00.000Z}
                                          >
                                            <div
                                              role="presentation"
                                            >
                                              <Day
                                                current={false}
                                                disabled={false}
                                                hidden={true}
                                                selected={false}
                                              >
                                                <WithStyles(ForwardRef(IconButton))
                                                  className="MuiPickersDay-day MuiPickersDay-hidden"
                                                  tabIndex={-1}
                                                >
                                                  <ForwardRef(IconButton)
                                                    className="MuiPickersDay-day MuiPickersDay-hidden"
                                                    classes={
                                                      Object {
                                                        "colorInherit": "MuiIconButton-colorInherit",
                                                        "colorPrimary": "MuiIconButton-colorPrimary",
                                                        "colorSecondary": "MuiIconButton-colorSecondary",
                                                        "disabled": "Mui-disabled",
                                                        "edgeEnd": "MuiIconButton-edgeEnd",
                                                        "edgeStart": "MuiIconButton-edgeStart",
                                                        "label": "MuiIconButton-label",
                                                        "root": "MuiIconButton-root",
                                                        "sizeSmall": "MuiIconButton-sizeSmall",
                                                      }
                                                    }
                                                    tabIndex={-1}
                                                  >
                                                    <WithStyles(ForwardRef(ButtonBase))
                                                      centerRipple={true}
                                                      className="MuiIconButton-root MuiPickersDay-day MuiPickersDay-hidden"
                                                      disabled={false}
                                                      focusRipple={true}
                                                      tabIndex={-1}
                                                    >
                                                      <ForwardRef(ButtonBase)
                                                        centerRipple={true}
                                                        className="MuiIconButton-root MuiPickersDay-day MuiPickersDay-hidden"
                                                        classes={
                                                          Object {
                                                            "disabled": "Mui-disabled",
                                                            "focusVisible": "Mui-focusVisible",
                                                            "root": "MuiButtonBase-root",
                                                          }
                                                        }
                                                        disabled={false}
                                                        focusRipple={true}
                                                        tabIndex={-1}
                                                      >
                                                        <button
                                                          className="MuiButtonBase-root MuiIconButton-root MuiPickersDay-day MuiPickersDay-hidden"
                                                          disabled={false}
                                                          onBlur={[Function]}
                                                          onDragLeave={[Function]}
                                                          onFocus={[Function]}
                                                          onKeyDown={[Function]}
                                                          onKeyUp={[Function]}
                                                          onMouseDown={[Function]}
                                                          onMouseLeave={[Function]}
                                                          onMouseUp={[Function]}
                                                          onTouchEnd={[Function]}
                                                          onTouchMove={[Function]}
                                                          onTouchStart={[Function]}
                                                          tabIndex={-1}
                                                          type="button"
                                                        >
                                                          <span
                                                            className="MuiIconButton-label"
                                                          >
                                                            <WithStyles(ForwardRef(Typography))
                                                              color="inherit"
                                                              variant="body2"
                                                            >
                                                              <ForwardRef(Typography)
                                                                classes={
                                                                  Object {
                                                                    "alignCenter": "MuiTypography-alignCenter",
                                                                    "alignJustify": "MuiTypography-alignJustify",
                                                                    "alignLeft": "MuiTypography-alignLeft",
                                                                    "alignRight": "MuiTypography-alignRight",
                                                                    "body1": "MuiTypography-body1",
                                                                    "body2": "MuiTypography-body2",
                                                                    "button": "MuiTypography-button",
                                                                    "caption": "MuiTypography-caption",
                                                                    "colorError": "MuiTypography-colorError",
                                                                    "colorInherit": "MuiTypography-colorInherit",
                                                                    "colorPrimary": "MuiTypography-colorPrimary",
                                                                    "colorSecondary": "MuiTypography-colorSecondary",
                                                                    "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                    "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                    "displayBlock": "MuiTypography-displayBlock",
                                                                    "displayInline": "MuiTypography-displayInline",
                                                                    "gutterBottom": "MuiTypography-gutterBottom",
                                                                    "h1": "MuiTypography-h1",
                                                                    "h2": "MuiTypography-h2",
                                                                    "h3": "MuiTypography-h3",
                                                                    "h4": "MuiTypography-h4",
                                                                    "h5": "MuiTypography-h5",
                                                                    "h6": "MuiTypography-h6",
                                                                    "noWrap": "MuiTypography-noWrap",
                                                                    "overline": "MuiTypography-overline",
                                                                    "paragraph": "MuiTypography-paragraph",
                                                                    "root": "MuiTypography-root",
                                                                    "srOnly": "MuiTypography-srOnly",
                                                                    "subtitle1": "MuiTypography-subtitle1",
                                                                    "subtitle2": "MuiTypography-subtitle2",
                                                                  }
                                                                }
                                                                color="inherit"
                                                                variant="body2"
                                                              >
                                                                <p
                                                                  className="MuiTypography-root MuiTypography-body2 MuiTypography-colorInherit"
                                                                >
                                                                  31
                                                                </p>
                                                              </ForwardRef(Typography)>
                                                            </WithStyles(ForwardRef(Typography))>
                                                          </span>
                                                          <NoSsr>
                                                            <WithStyles(memo)
                                                              center={true}
                                                            >
                                                              <ForwardRef(TouchRipple)
                                                                center={true}
                                                                classes={
                                                                  Object {
                                                                    "child": "MuiTouchRipple-child",
                                                                    "childLeaving": "MuiTouchRipple-childLeaving",
                                                                    "childPulsate": "MuiTouchRipple-childPulsate",
                                                                    "ripple": "MuiTouchRipple-ripple",
                                                                    "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                    "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                    "root": "MuiTouchRipple-root",
                                                                  }
                                                                }
                                                              >
                                                                <span
                                                                  className="MuiTouchRipple-root"
                                                                >
                                                                  <TransitionGroup
                                                                    childFactory={[Function]}
                                                                    component={null}
                                                                    exit={true}
                                                                  />
                                                                </span>
                                                              </ForwardRef(TouchRipple)>
                                                            </WithStyles(memo)>
                                                          </NoSsr>
                                                        </button>
                                                      </ForwardRef(ButtonBase)>
                                                    </WithStyles(ForwardRef(ButtonBase))>
                                                  </ForwardRef(IconButton)>
                                                </WithStyles(ForwardRef(IconButton))>
                                              </Day>
                                            </div>
                                          </DayWrapper>
                                          <DayWrapper
                                            dayInCurrentMonth={true}
                                            disabled={false}
                                            key="Sat Feb 01 2020 00:00:00 GMT-0300 (Brasilia Standard Time)"
                                            onSelect={[Function]}
                                            value={2020-02-01T03:00:00.000Z}
                                          >
                                            <div
                                              onClick={[Function]}
                                              onKeyPress={[Function]}
                                              role="presentation"
                                            >
                                              <Day
                                                current={false}
                                                disabled={false}
                                                hidden={false}
                                                selected={true}
                                              >
                                                <WithStyles(ForwardRef(IconButton))
                                                  className="MuiPickersDay-day MuiPickersDay-daySelected"
                                                  tabIndex={0}
                                                >
                                                  <ForwardRef(IconButton)
                                                    className="MuiPickersDay-day MuiPickersDay-daySelected"
                                                    classes={
                                                      Object {
                                                        "colorInherit": "MuiIconButton-colorInherit",
                                                        "colorPrimary": "MuiIconButton-colorPrimary",
                                                        "colorSecondary": "MuiIconButton-colorSecondary",
                                                        "disabled": "Mui-disabled",
                                                        "edgeEnd": "MuiIconButton-edgeEnd",
                                                        "edgeStart": "MuiIconButton-edgeStart",
                                                        "label": "MuiIconButton-label",
                                                        "root": "MuiIconButton-root",
                                                        "sizeSmall": "MuiIconButton-sizeSmall",
                                                      }
                                                    }
                                                    tabIndex={0}
                                                  >
                                                    <WithStyles(ForwardRef(ButtonBase))
                                                      centerRipple={true}
                                                      className="MuiIconButton-root MuiPickersDay-day MuiPickersDay-daySelected"
                                                      disabled={false}
                                                      focusRipple={true}
                                                      tabIndex={0}
                                                    >
                                                      <ForwardRef(ButtonBase)
                                                        centerRipple={true}
                                                        className="MuiIconButton-root MuiPickersDay-day MuiPickersDay-daySelected"
                                                        classes={
                                                          Object {
                                                            "disabled": "Mui-disabled",
                                                            "focusVisible": "Mui-focusVisible",
                                                            "root": "MuiButtonBase-root",
                                                          }
                                                        }
                                                        disabled={false}
                                                        focusRipple={true}
                                                        tabIndex={0}
                                                      >
                                                        <button
                                                          className="MuiButtonBase-root MuiIconButton-root MuiPickersDay-day MuiPickersDay-daySelected"
                                                          disabled={false}
                                                          onBlur={[Function]}
                                                          onDragLeave={[Function]}
                                                          onFocus={[Function]}
                                                          onKeyDown={[Function]}
                                                          onKeyUp={[Function]}
                                                          onMouseDown={[Function]}
                                                          onMouseLeave={[Function]}
                                                          onMouseUp={[Function]}
                                                          onTouchEnd={[Function]}
                                                          onTouchMove={[Function]}
                                                          onTouchStart={[Function]}
                                                          tabIndex={0}
                                                          type="button"
                                                        >
                                                          <span
                                                            className="MuiIconButton-label"
                                                          >
                                                            <WithStyles(ForwardRef(Typography))
                                                              color="inherit"
                                                              variant="body2"
                                                            >
                                                              <ForwardRef(Typography)
                                                                classes={
                                                                  Object {
                                                                    "alignCenter": "MuiTypography-alignCenter",
                                                                    "alignJustify": "MuiTypography-alignJustify",
                                                                    "alignLeft": "MuiTypography-alignLeft",
                                                                    "alignRight": "MuiTypography-alignRight",
                                                                    "body1": "MuiTypography-body1",
                                                                    "body2": "MuiTypography-body2",
                                                                    "button": "MuiTypography-button",
                                                                    "caption": "MuiTypography-caption",
                                                                    "colorError": "MuiTypography-colorError",
                                                                    "colorInherit": "MuiTypography-colorInherit",
                                                                    "colorPrimary": "MuiTypography-colorPrimary",
                                                                    "colorSecondary": "MuiTypography-colorSecondary",
                                                                    "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                    "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                    "displayBlock": "MuiTypography-displayBlock",
                                                                    "displayInline": "MuiTypography-displayInline",
                                                                    "gutterBottom": "MuiTypography-gutterBottom",
                                                                    "h1": "MuiTypography-h1",
                                                                    "h2": "MuiTypography-h2",
                                                                    "h3": "MuiTypography-h3",
                                                                    "h4": "MuiTypography-h4",
                                                                    "h5": "MuiTypography-h5",
                                                                    "h6": "MuiTypography-h6",
                                                                    "noWrap": "MuiTypography-noWrap",
                                                                    "overline": "MuiTypography-overline",
                                                                    "paragraph": "MuiTypography-paragraph",
                                                                    "root": "MuiTypography-root",
                                                                    "srOnly": "MuiTypography-srOnly",
                                                                    "subtitle1": "MuiTypography-subtitle1",
                                                                    "subtitle2": "MuiTypography-subtitle2",
                                                                  }
                                                                }
                                                                color="inherit"
                                                                variant="body2"
                                                              >
                                                                <p
                                                                  className="MuiTypography-root MuiTypography-body2 MuiTypography-colorInherit"
                                                                >
                                                                  1
                                                                </p>
                                                              </ForwardRef(Typography)>
                                                            </WithStyles(ForwardRef(Typography))>
                                                          </span>
                                                          <NoSsr>
                                                            <WithStyles(memo)
                                                              center={true}
                                                            >
                                                              <ForwardRef(TouchRipple)
                                                                center={true}
                                                                classes={
                                                                  Object {
                                                                    "child": "MuiTouchRipple-child",
                                                                    "childLeaving": "MuiTouchRipple-childLeaving",
                                                                    "childPulsate": "MuiTouchRipple-childPulsate",
                                                                    "ripple": "MuiTouchRipple-ripple",
                                                                    "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                    "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                    "root": "MuiTouchRipple-root",
                                                                  }
                                                                }
                                                              >
                                                                <span
                                                                  className="MuiTouchRipple-root"
                                                                >
                                                                  <TransitionGroup
                                                                    childFactory={[Function]}
                                                                    component={null}
                                                                    exit={true}
                                                                  />
                                                                </span>
                                                              </ForwardRef(TouchRipple)>
                                                            </WithStyles(memo)>
                                                          </NoSsr>
                                                        </button>
                                                      </ForwardRef(ButtonBase)>
                                                    </WithStyles(ForwardRef(ButtonBase))>
                                                  </ForwardRef(IconButton)>
                                                </WithStyles(ForwardRef(IconButton))>
                                              </Day>
                                            </div>
                                          </DayWrapper>
                                        </div>
                                        <div
                                          className="MuiPickersCalendar-week"
                                          key="week-Sun Feb 02 2020 00:00:00 GMT-0300 (Brasilia Standard Time)"
                                        >
                                          <DayWrapper
                                            dayInCurrentMonth={true}
                                            disabled={false}
                                            key="Sun Feb 02 2020 00:00:00 GMT-0300 (Brasilia Standard Time)"
                                            onSelect={[Function]}
                                            value={2020-02-02T03:00:00.000Z}
                                          >
                                            <div
                                              onClick={[Function]}
                                              onKeyPress={[Function]}
                                              role="presentation"
                                            >
                                              <Day
                                                current={false}
                                                disabled={false}
                                                hidden={false}
                                                selected={false}
                                              >
                                                <WithStyles(ForwardRef(IconButton))
                                                  className="MuiPickersDay-day"
                                                  tabIndex={0}
                                                >
                                                  <ForwardRef(IconButton)
                                                    className="MuiPickersDay-day"
                                                    classes={
                                                      Object {
                                                        "colorInherit": "MuiIconButton-colorInherit",
                                                        "colorPrimary": "MuiIconButton-colorPrimary",
                                                        "colorSecondary": "MuiIconButton-colorSecondary",
                                                        "disabled": "Mui-disabled",
                                                        "edgeEnd": "MuiIconButton-edgeEnd",
                                                        "edgeStart": "MuiIconButton-edgeStart",
                                                        "label": "MuiIconButton-label",
                                                        "root": "MuiIconButton-root",
                                                        "sizeSmall": "MuiIconButton-sizeSmall",
                                                      }
                                                    }
                                                    tabIndex={0}
                                                  >
                                                    <WithStyles(ForwardRef(ButtonBase))
                                                      centerRipple={true}
                                                      className="MuiIconButton-root MuiPickersDay-day"
                                                      disabled={false}
                                                      focusRipple={true}
                                                      tabIndex={0}
                                                    >
                                                      <ForwardRef(ButtonBase)
                                                        centerRipple={true}
                                                        className="MuiIconButton-root MuiPickersDay-day"
                                                        classes={
                                                          Object {
                                                            "disabled": "Mui-disabled",
                                                            "focusVisible": "Mui-focusVisible",
                                                            "root": "MuiButtonBase-root",
                                                          }
                                                        }
                                                        disabled={false}
                                                        focusRipple={true}
                                                        tabIndex={0}
                                                      >
                                                        <button
                                                          className="MuiButtonBase-root MuiIconButton-root MuiPickersDay-day"
                                                          disabled={false}
                                                          onBlur={[Function]}
                                                          onDragLeave={[Function]}
                                                          onFocus={[Function]}
                                                          onKeyDown={[Function]}
                                                          onKeyUp={[Function]}
                                                          onMouseDown={[Function]}
                                                          onMouseLeave={[Function]}
                                                          onMouseUp={[Function]}
                                                          onTouchEnd={[Function]}
                                                          onTouchMove={[Function]}
                                                          onTouchStart={[Function]}
                                                          tabIndex={0}
                                                          type="button"
                                                        >
                                                          <span
                                                            className="MuiIconButton-label"
                                                          >
                                                            <WithStyles(ForwardRef(Typography))
                                                              color="inherit"
                                                              variant="body2"
                                                            >
                                                              <ForwardRef(Typography)
                                                                classes={
                                                                  Object {
                                                                    "alignCenter": "MuiTypography-alignCenter",
                                                                    "alignJustify": "MuiTypography-alignJustify",
                                                                    "alignLeft": "MuiTypography-alignLeft",
                                                                    "alignRight": "MuiTypography-alignRight",
                                                                    "body1": "MuiTypography-body1",
                                                                    "body2": "MuiTypography-body2",
                                                                    "button": "MuiTypography-button",
                                                                    "caption": "MuiTypography-caption",
                                                                    "colorError": "MuiTypography-colorError",
                                                                    "colorInherit": "MuiTypography-colorInherit",
                                                                    "colorPrimary": "MuiTypography-colorPrimary",
                                                                    "colorSecondary": "MuiTypography-colorSecondary",
                                                                    "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                    "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                    "displayBlock": "MuiTypography-displayBlock",
                                                                    "displayInline": "MuiTypography-displayInline",
                                                                    "gutterBottom": "MuiTypography-gutterBottom",
                                                                    "h1": "MuiTypography-h1",
                                                                    "h2": "MuiTypography-h2",
                                                                    "h3": "MuiTypography-h3",
                                                                    "h4": "MuiTypography-h4",
                                                                    "h5": "MuiTypography-h5",
                                                                    "h6": "MuiTypography-h6",
                                                                    "noWrap": "MuiTypography-noWrap",
                                                                    "overline": "MuiTypography-overline",
                                                                    "paragraph": "MuiTypography-paragraph",
                                                                    "root": "MuiTypography-root",
                                                                    "srOnly": "MuiTypography-srOnly",
                                                                    "subtitle1": "MuiTypography-subtitle1",
                                                                    "subtitle2": "MuiTypography-subtitle2",
                                                                  }
                                                                }
                                                                color="inherit"
                                                                variant="body2"
                                                              >
                                                                <p
                                                                  className="MuiTypography-root MuiTypography-body2 MuiTypography-colorInherit"
                                                                >
                                                                  2
                                                                </p>
                                                              </ForwardRef(Typography)>
                                                            </WithStyles(ForwardRef(Typography))>
                                                          </span>
                                                          <NoSsr>
                                                            <WithStyles(memo)
                                                              center={true}
                                                            >
                                                              <ForwardRef(TouchRipple)
                                                                center={true}
                                                                classes={
                                                                  Object {
                                                                    "child": "MuiTouchRipple-child",
                                                                    "childLeaving": "MuiTouchRipple-childLeaving",
                                                                    "childPulsate": "MuiTouchRipple-childPulsate",
                                                                    "ripple": "MuiTouchRipple-ripple",
                                                                    "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                    "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                    "root": "MuiTouchRipple-root",
                                                                  }
                                                                }
                                                              >
                                                                <span
                                                                  className="MuiTouchRipple-root"
                                                                >
                                                                  <TransitionGroup
                                                                    childFactory={[Function]}
                                                                    component={null}
                                                                    exit={true}
                                                                  />
                                                                </span>
                                                              </ForwardRef(TouchRipple)>
                                                            </WithStyles(memo)>
                                                          </NoSsr>
                                                        </button>
                                                      </ForwardRef(ButtonBase)>
                                                    </WithStyles(ForwardRef(ButtonBase))>
                                                  </ForwardRef(IconButton)>
                                                </WithStyles(ForwardRef(IconButton))>
                                              </Day>
                                            </div>
                                          </DayWrapper>
                                          <DayWrapper
                                            dayInCurrentMonth={true}
                                            disabled={false}
                                            key="Mon Feb 03 2020 00:00:00 GMT-0300 (Brasilia Standard Time)"
                                            onSelect={[Function]}
                                            value={2020-02-03T03:00:00.000Z}
                                          >
                                            <div
                                              onClick={[Function]}
                                              onKeyPress={[Function]}
                                              role="presentation"
                                            >
                                              <Day
                                                current={false}
                                                disabled={false}
                                                hidden={false}
                                                selected={false}
                                              >
                                                <WithStyles(ForwardRef(IconButton))
                                                  className="MuiPickersDay-day"
                                                  tabIndex={0}
                                                >
                                                  <ForwardRef(IconButton)
                                                    className="MuiPickersDay-day"
                                                    classes={
                                                      Object {
                                                        "colorInherit": "MuiIconButton-colorInherit",
                                                        "colorPrimary": "MuiIconButton-colorPrimary",
                                                        "colorSecondary": "MuiIconButton-colorSecondary",
                                                        "disabled": "Mui-disabled",
                                                        "edgeEnd": "MuiIconButton-edgeEnd",
                                                        "edgeStart": "MuiIconButton-edgeStart",
                                                        "label": "MuiIconButton-label",
                                                        "root": "MuiIconButton-root",
                                                        "sizeSmall": "MuiIconButton-sizeSmall",
                                                      }
                                                    }
                                                    tabIndex={0}
                                                  >
                                                    <WithStyles(ForwardRef(ButtonBase))
                                                      centerRipple={true}
                                                      className="MuiIconButton-root MuiPickersDay-day"
                                                      disabled={false}
                                                      focusRipple={true}
                                                      tabIndex={0}
                                                    >
                                                      <ForwardRef(ButtonBase)
                                                        centerRipple={true}
                                                        className="MuiIconButton-root MuiPickersDay-day"
                                                        classes={
                                                          Object {
                                                            "disabled": "Mui-disabled",
                                                            "focusVisible": "Mui-focusVisible",
                                                            "root": "MuiButtonBase-root",
                                                          }
                                                        }
                                                        disabled={false}
                                                        focusRipple={true}
                                                        tabIndex={0}
                                                      >
                                                        <button
                                                          className="MuiButtonBase-root MuiIconButton-root MuiPickersDay-day"
                                                          disabled={false}
                                                          onBlur={[Function]}
                                                          onDragLeave={[Function]}
                                                          onFocus={[Function]}
                                                          onKeyDown={[Function]}
                                                          onKeyUp={[Function]}
                                                          onMouseDown={[Function]}
                                                          onMouseLeave={[Function]}
                                                          onMouseUp={[Function]}
                                                          onTouchEnd={[Function]}
                                                          onTouchMove={[Function]}
                                                          onTouchStart={[Function]}
                                                          tabIndex={0}
                                                          type="button"
                                                        >
                                                          <span
                                                            className="MuiIconButton-label"
                                                          >
                                                            <WithStyles(ForwardRef(Typography))
                                                              color="inherit"
                                                              variant="body2"
                                                            >
                                                              <ForwardRef(Typography)
                                                                classes={
                                                                  Object {
                                                                    "alignCenter": "MuiTypography-alignCenter",
                                                                    "alignJustify": "MuiTypography-alignJustify",
                                                                    "alignLeft": "MuiTypography-alignLeft",
                                                                    "alignRight": "MuiTypography-alignRight",
                                                                    "body1": "MuiTypography-body1",
                                                                    "body2": "MuiTypography-body2",
                                                                    "button": "MuiTypography-button",
                                                                    "caption": "MuiTypography-caption",
                                                                    "colorError": "MuiTypography-colorError",
                                                                    "colorInherit": "MuiTypography-colorInherit",
                                                                    "colorPrimary": "MuiTypography-colorPrimary",
                                                                    "colorSecondary": "MuiTypography-colorSecondary",
                                                                    "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                    "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                    "displayBlock": "MuiTypography-displayBlock",
                                                                    "displayInline": "MuiTypography-displayInline",
                                                                    "gutterBottom": "MuiTypography-gutterBottom",
                                                                    "h1": "MuiTypography-h1",
                                                                    "h2": "MuiTypography-h2",
                                                                    "h3": "MuiTypography-h3",
                                                                    "h4": "MuiTypography-h4",
                                                                    "h5": "MuiTypography-h5",
                                                                    "h6": "MuiTypography-h6",
                                                                    "noWrap": "MuiTypography-noWrap",
                                                                    "overline": "MuiTypography-overline",
                                                                    "paragraph": "MuiTypography-paragraph",
                                                                    "root": "MuiTypography-root",
                                                                    "srOnly": "MuiTypography-srOnly",
                                                                    "subtitle1": "MuiTypography-subtitle1",
                                                                    "subtitle2": "MuiTypography-subtitle2",
                                                                  }
                                                                }
                                                                color="inherit"
                                                                variant="body2"
                                                              >
                                                                <p
                                                                  className="MuiTypography-root MuiTypography-body2 MuiTypography-colorInherit"
                                                                >
                                                                  3
                                                                </p>
                                                              </ForwardRef(Typography)>
                                                            </WithStyles(ForwardRef(Typography))>
                                                          </span>
                                                          <NoSsr>
                                                            <WithStyles(memo)
                                                              center={true}
                                                            >
                                                              <ForwardRef(TouchRipple)
                                                                center={true}
                                                                classes={
                                                                  Object {
                                                                    "child": "MuiTouchRipple-child",
                                                                    "childLeaving": "MuiTouchRipple-childLeaving",
                                                                    "childPulsate": "MuiTouchRipple-childPulsate",
                                                                    "ripple": "MuiTouchRipple-ripple",
                                                                    "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                    "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                    "root": "MuiTouchRipple-root",
                                                                  }
                                                                }
                                                              >
                                                                <span
                                                                  className="MuiTouchRipple-root"
                                                                >
                                                                  <TransitionGroup
                                                                    childFactory={[Function]}
                                                                    component={null}
                                                                    exit={true}
                                                                  />
                                                                </span>
                                                              </ForwardRef(TouchRipple)>
                                                            </WithStyles(memo)>
                                                          </NoSsr>
                                                        </button>
                                                      </ForwardRef(ButtonBase)>
                                                    </WithStyles(ForwardRef(ButtonBase))>
                                                  </ForwardRef(IconButton)>
                                                </WithStyles(ForwardRef(IconButton))>
                                              </Day>
                                            </div>
                                          </DayWrapper>
                                          <DayWrapper
                                            dayInCurrentMonth={true}
                                            disabled={false}
                                            key="Tue Feb 04 2020 00:00:00 GMT-0300 (Brasilia Standard Time)"
                                            onSelect={[Function]}
                                            value={2020-02-04T03:00:00.000Z}
                                          >
                                            <div
                                              onClick={[Function]}
                                              onKeyPress={[Function]}
                                              role="presentation"
                                            >
                                              <Day
                                                current={false}
                                                disabled={false}
                                                hidden={false}
                                                selected={false}
                                              >
                                                <WithStyles(ForwardRef(IconButton))
                                                  className="MuiPickersDay-day"
                                                  tabIndex={0}
                                                >
                                                  <ForwardRef(IconButton)
                                                    className="MuiPickersDay-day"
                                                    classes={
                                                      Object {
                                                        "colorInherit": "MuiIconButton-colorInherit",
                                                        "colorPrimary": "MuiIconButton-colorPrimary",
                                                        "colorSecondary": "MuiIconButton-colorSecondary",
                                                        "disabled": "Mui-disabled",
                                                        "edgeEnd": "MuiIconButton-edgeEnd",
                                                        "edgeStart": "MuiIconButton-edgeStart",
                                                        "label": "MuiIconButton-label",
                                                        "root": "MuiIconButton-root",
                                                        "sizeSmall": "MuiIconButton-sizeSmall",
                                                      }
                                                    }
                                                    tabIndex={0}
                                                  >
                                                    <WithStyles(ForwardRef(ButtonBase))
                                                      centerRipple={true}
                                                      className="MuiIconButton-root MuiPickersDay-day"
                                                      disabled={false}
                                                      focusRipple={true}
                                                      tabIndex={0}
                                                    >
                                                      <ForwardRef(ButtonBase)
                                                        centerRipple={true}
                                                        className="MuiIconButton-root MuiPickersDay-day"
                                                        classes={
                                                          Object {
                                                            "disabled": "Mui-disabled",
                                                            "focusVisible": "Mui-focusVisible",
                                                            "root": "MuiButtonBase-root",
                                                          }
                                                        }
                                                        disabled={false}
                                                        focusRipple={true}
                                                        tabIndex={0}
                                                      >
                                                        <button
                                                          className="MuiButtonBase-root MuiIconButton-root MuiPickersDay-day"
                                                          disabled={false}
                                                          onBlur={[Function]}
                                                          onDragLeave={[Function]}
                                                          onFocus={[Function]}
                                                          onKeyDown={[Function]}
                                                          onKeyUp={[Function]}
                                                          onMouseDown={[Function]}
                                                          onMouseLeave={[Function]}
                                                          onMouseUp={[Function]}
                                                          onTouchEnd={[Function]}
                                                          onTouchMove={[Function]}
                                                          onTouchStart={[Function]}
                                                          tabIndex={0}
                                                          type="button"
                                                        >
                                                          <span
                                                            className="MuiIconButton-label"
                                                          >
                                                            <WithStyles(ForwardRef(Typography))
                                                              color="inherit"
                                                              variant="body2"
                                                            >
                                                              <ForwardRef(Typography)
                                                                classes={
                                                                  Object {
                                                                    "alignCenter": "MuiTypography-alignCenter",
                                                                    "alignJustify": "MuiTypography-alignJustify",
                                                                    "alignLeft": "MuiTypography-alignLeft",
                                                                    "alignRight": "MuiTypography-alignRight",
                                                                    "body1": "MuiTypography-body1",
                                                                    "body2": "MuiTypography-body2",
                                                                    "button": "MuiTypography-button",
                                                                    "caption": "MuiTypography-caption",
                                                                    "colorError": "MuiTypography-colorError",
                                                                    "colorInherit": "MuiTypography-colorInherit",
                                                                    "colorPrimary": "MuiTypography-colorPrimary",
                                                                    "colorSecondary": "MuiTypography-colorSecondary",
                                                                    "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                    "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                    "displayBlock": "MuiTypography-displayBlock",
                                                                    "displayInline": "MuiTypography-displayInline",
                                                                    "gutterBottom": "MuiTypography-gutterBottom",
                                                                    "h1": "MuiTypography-h1",
                                                                    "h2": "MuiTypography-h2",
                                                                    "h3": "MuiTypography-h3",
                                                                    "h4": "MuiTypography-h4",
                                                                    "h5": "MuiTypography-h5",
                                                                    "h6": "MuiTypography-h6",
                                                                    "noWrap": "MuiTypography-noWrap",
                                                                    "overline": "MuiTypography-overline",
                                                                    "paragraph": "MuiTypography-paragraph",
                                                                    "root": "MuiTypography-root",
                                                                    "srOnly": "MuiTypography-srOnly",
                                                                    "subtitle1": "MuiTypography-subtitle1",
                                                                    "subtitle2": "MuiTypography-subtitle2",
                                                                  }
                                                                }
                                                                color="inherit"
                                                                variant="body2"
                                                              >
                                                                <p
                                                                  className="MuiTypography-root MuiTypography-body2 MuiTypography-colorInherit"
                                                                >
                                                                  4
                                                                </p>
                                                              </ForwardRef(Typography)>
                                                            </WithStyles(ForwardRef(Typography))>
                                                          </span>
                                                          <NoSsr>
                                                            <WithStyles(memo)
                                                              center={true}
                                                            >
                                                              <ForwardRef(TouchRipple)
                                                                center={true}
                                                                classes={
                                                                  Object {
                                                                    "child": "MuiTouchRipple-child",
                                                                    "childLeaving": "MuiTouchRipple-childLeaving",
                                                                    "childPulsate": "MuiTouchRipple-childPulsate",
                                                                    "ripple": "MuiTouchRipple-ripple",
                                                                    "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                    "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                    "root": "MuiTouchRipple-root",
                                                                  }
                                                                }
                                                              >
                                                                <span
                                                                  className="MuiTouchRipple-root"
                                                                >
                                                                  <TransitionGroup
                                                                    childFactory={[Function]}
                                                                    component={null}
                                                                    exit={true}
                                                                  />
                                                                </span>
                                                              </ForwardRef(TouchRipple)>
                                                            </WithStyles(memo)>
                                                          </NoSsr>
                                                        </button>
                                                      </ForwardRef(ButtonBase)>
                                                    </WithStyles(ForwardRef(ButtonBase))>
                                                  </ForwardRef(IconButton)>
                                                </WithStyles(ForwardRef(IconButton))>
                                              </Day>
                                            </div>
                                          </DayWrapper>
                                          <DayWrapper
                                            dayInCurrentMonth={true}
                                            disabled={false}
                                            key="Wed Feb 05 2020 00:00:00 GMT-0300 (Brasilia Standard Time)"
                                            onSelect={[Function]}
                                            value={2020-02-05T03:00:00.000Z}
                                          >
                                            <div
                                              onClick={[Function]}
                                              onKeyPress={[Function]}
                                              role="presentation"
                                            >
                                              <Day
                                                current={false}
                                                disabled={false}
                                                hidden={false}
                                                selected={false}
                                              >
                                                <WithStyles(ForwardRef(IconButton))
                                                  className="MuiPickersDay-day"
                                                  tabIndex={0}
                                                >
                                                  <ForwardRef(IconButton)
                                                    className="MuiPickersDay-day"
                                                    classes={
                                                      Object {
                                                        "colorInherit": "MuiIconButton-colorInherit",
                                                        "colorPrimary": "MuiIconButton-colorPrimary",
                                                        "colorSecondary": "MuiIconButton-colorSecondary",
                                                        "disabled": "Mui-disabled",
                                                        "edgeEnd": "MuiIconButton-edgeEnd",
                                                        "edgeStart": "MuiIconButton-edgeStart",
                                                        "label": "MuiIconButton-label",
                                                        "root": "MuiIconButton-root",
                                                        "sizeSmall": "MuiIconButton-sizeSmall",
                                                      }
                                                    }
                                                    tabIndex={0}
                                                  >
                                                    <WithStyles(ForwardRef(ButtonBase))
                                                      centerRipple={true}
                                                      className="MuiIconButton-root MuiPickersDay-day"
                                                      disabled={false}
                                                      focusRipple={true}
                                                      tabIndex={0}
                                                    >
                                                      <ForwardRef(ButtonBase)
                                                        centerRipple={true}
                                                        className="MuiIconButton-root MuiPickersDay-day"
                                                        classes={
                                                          Object {
                                                            "disabled": "Mui-disabled",
                                                            "focusVisible": "Mui-focusVisible",
                                                            "root": "MuiButtonBase-root",
                                                          }
                                                        }
                                                        disabled={false}
                                                        focusRipple={true}
                                                        tabIndex={0}
                                                      >
                                                        <button
                                                          className="MuiButtonBase-root MuiIconButton-root MuiPickersDay-day"
                                                          disabled={false}
                                                          onBlur={[Function]}
                                                          onDragLeave={[Function]}
                                                          onFocus={[Function]}
                                                          onKeyDown={[Function]}
                                                          onKeyUp={[Function]}
                                                          onMouseDown={[Function]}
                                                          onMouseLeave={[Function]}
                                                          onMouseUp={[Function]}
                                                          onTouchEnd={[Function]}
                                                          onTouchMove={[Function]}
                                                          onTouchStart={[Function]}
                                                          tabIndex={0}
                                                          type="button"
                                                        >
                                                          <span
                                                            className="MuiIconButton-label"
                                                          >
                                                            <WithStyles(ForwardRef(Typography))
                                                              color="inherit"
                                                              variant="body2"
                                                            >
                                                              <ForwardRef(Typography)
                                                                classes={
                                                                  Object {
                                                                    "alignCenter": "MuiTypography-alignCenter",
                                                                    "alignJustify": "MuiTypography-alignJustify",
                                                                    "alignLeft": "MuiTypography-alignLeft",
                                                                    "alignRight": "MuiTypography-alignRight",
                                                                    "body1": "MuiTypography-body1",
                                                                    "body2": "MuiTypography-body2",
                                                                    "button": "MuiTypography-button",
                                                                    "caption": "MuiTypography-caption",
                                                                    "colorError": "MuiTypography-colorError",
                                                                    "colorInherit": "MuiTypography-colorInherit",
                                                                    "colorPrimary": "MuiTypography-colorPrimary",
                                                                    "colorSecondary": "MuiTypography-colorSecondary",
                                                                    "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                    "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                    "displayBlock": "MuiTypography-displayBlock",
                                                                    "displayInline": "MuiTypography-displayInline",
                                                                    "gutterBottom": "MuiTypography-gutterBottom",
                                                                    "h1": "MuiTypography-h1",
                                                                    "h2": "MuiTypography-h2",
                                                                    "h3": "MuiTypography-h3",
                                                                    "h4": "MuiTypography-h4",
                                                                    "h5": "MuiTypography-h5",
                                                                    "h6": "MuiTypography-h6",
                                                                    "noWrap": "MuiTypography-noWrap",
                                                                    "overline": "MuiTypography-overline",
                                                                    "paragraph": "MuiTypography-paragraph",
                                                                    "root": "MuiTypography-root",
                                                                    "srOnly": "MuiTypography-srOnly",
                                                                    "subtitle1": "MuiTypography-subtitle1",
                                                                    "subtitle2": "MuiTypography-subtitle2",
                                                                  }
                                                                }
                                                                color="inherit"
                                                                variant="body2"
                                                              >
                                                                <p
                                                                  className="MuiTypography-root MuiTypography-body2 MuiTypography-colorInherit"
                                                                >
                                                                  5
                                                                </p>
                                                              </ForwardRef(Typography)>
                                                            </WithStyles(ForwardRef(Typography))>
                                                          </span>
                                                          <NoSsr>
                                                            <WithStyles(memo)
                                                              center={true}
                                                            >
                                                              <ForwardRef(TouchRipple)
                                                                center={true}
                                                                classes={
                                                                  Object {
                                                                    "child": "MuiTouchRipple-child",
                                                                    "childLeaving": "MuiTouchRipple-childLeaving",
                                                                    "childPulsate": "MuiTouchRipple-childPulsate",
                                                                    "ripple": "MuiTouchRipple-ripple",
                                                                    "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                    "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                    "root": "MuiTouchRipple-root",
                                                                  }
                                                                }
                                                              >
                                                                <span
                                                                  className="MuiTouchRipple-root"
                                                                >
                                                                  <TransitionGroup
                                                                    childFactory={[Function]}
                                                                    component={null}
                                                                    exit={true}
                                                                  />
                                                                </span>
                                                              </ForwardRef(TouchRipple)>
                                                            </WithStyles(memo)>
                                                          </NoSsr>
                                                        </button>
                                                      </ForwardRef(ButtonBase)>
                                                    </WithStyles(ForwardRef(ButtonBase))>
                                                  </ForwardRef(IconButton)>
                                                </WithStyles(ForwardRef(IconButton))>
                                              </Day>
                                            </div>
                                          </DayWrapper>
                                          <DayWrapper
                                            dayInCurrentMonth={true}
                                            disabled={false}
                                            key="Thu Feb 06 2020 00:00:00 GMT-0300 (Brasilia Standard Time)"
                                            onSelect={[Function]}
                                            value={2020-02-06T03:00:00.000Z}
                                          >
                                            <div
                                              onClick={[Function]}
                                              onKeyPress={[Function]}
                                              role="presentation"
                                            >
                                              <Day
                                                current={false}
                                                disabled={false}
                                                hidden={false}
                                                selected={false}
                                              >
                                                <WithStyles(ForwardRef(IconButton))
                                                  className="MuiPickersDay-day"
                                                  tabIndex={0}
                                                >
                                                  <ForwardRef(IconButton)
                                                    className="MuiPickersDay-day"
                                                    classes={
                                                      Object {
                                                        "colorInherit": "MuiIconButton-colorInherit",
                                                        "colorPrimary": "MuiIconButton-colorPrimary",
                                                        "colorSecondary": "MuiIconButton-colorSecondary",
                                                        "disabled": "Mui-disabled",
                                                        "edgeEnd": "MuiIconButton-edgeEnd",
                                                        "edgeStart": "MuiIconButton-edgeStart",
                                                        "label": "MuiIconButton-label",
                                                        "root": "MuiIconButton-root",
                                                        "sizeSmall": "MuiIconButton-sizeSmall",
                                                      }
                                                    }
                                                    tabIndex={0}
                                                  >
                                                    <WithStyles(ForwardRef(ButtonBase))
                                                      centerRipple={true}
                                                      className="MuiIconButton-root MuiPickersDay-day"
                                                      disabled={false}
                                                      focusRipple={true}
                                                      tabIndex={0}
                                                    >
                                                      <ForwardRef(ButtonBase)
                                                        centerRipple={true}
                                                        className="MuiIconButton-root MuiPickersDay-day"
                                                        classes={
                                                          Object {
                                                            "disabled": "Mui-disabled",
                                                            "focusVisible": "Mui-focusVisible",
                                                            "root": "MuiButtonBase-root",
                                                          }
                                                        }
                                                        disabled={false}
                                                        focusRipple={true}
                                                        tabIndex={0}
                                                      >
                                                        <button
                                                          className="MuiButtonBase-root MuiIconButton-root MuiPickersDay-day"
                                                          disabled={false}
                                                          onBlur={[Function]}
                                                          onDragLeave={[Function]}
                                                          onFocus={[Function]}
                                                          onKeyDown={[Function]}
                                                          onKeyUp={[Function]}
                                                          onMouseDown={[Function]}
                                                          onMouseLeave={[Function]}
                                                          onMouseUp={[Function]}
                                                          onTouchEnd={[Function]}
                                                          onTouchMove={[Function]}
                                                          onTouchStart={[Function]}
                                                          tabIndex={0}
                                                          type="button"
                                                        >
                                                          <span
                                                            className="MuiIconButton-label"
                                                          >
                                                            <WithStyles(ForwardRef(Typography))
                                                              color="inherit"
                                                              variant="body2"
                                                            >
                                                              <ForwardRef(Typography)
                                                                classes={
                                                                  Object {
                                                                    "alignCenter": "MuiTypography-alignCenter",
                                                                    "alignJustify": "MuiTypography-alignJustify",
                                                                    "alignLeft": "MuiTypography-alignLeft",
                                                                    "alignRight": "MuiTypography-alignRight",
                                                                    "body1": "MuiTypography-body1",
                                                                    "body2": "MuiTypography-body2",
                                                                    "button": "MuiTypography-button",
                                                                    "caption": "MuiTypography-caption",
                                                                    "colorError": "MuiTypography-colorError",
                                                                    "colorInherit": "MuiTypography-colorInherit",
                                                                    "colorPrimary": "MuiTypography-colorPrimary",
                                                                    "colorSecondary": "MuiTypography-colorSecondary",
                                                                    "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                    "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                    "displayBlock": "MuiTypography-displayBlock",
                                                                    "displayInline": "MuiTypography-displayInline",
                                                                    "gutterBottom": "MuiTypography-gutterBottom",
                                                                    "h1": "MuiTypography-h1",
                                                                    "h2": "MuiTypography-h2",
                                                                    "h3": "MuiTypography-h3",
                                                                    "h4": "MuiTypography-h4",
                                                                    "h5": "MuiTypography-h5",
                                                                    "h6": "MuiTypography-h6",
                                                                    "noWrap": "MuiTypography-noWrap",
                                                                    "overline": "MuiTypography-overline",
                                                                    "paragraph": "MuiTypography-paragraph",
                                                                    "root": "MuiTypography-root",
                                                                    "srOnly": "MuiTypography-srOnly",
                                                                    "subtitle1": "MuiTypography-subtitle1",
                                                                    "subtitle2": "MuiTypography-subtitle2",
                                                                  }
                                                                }
                                                                color="inherit"
                                                                variant="body2"
                                                              >
                                                                <p
                                                                  className="MuiTypography-root MuiTypography-body2 MuiTypography-colorInherit"
                                                                >
                                                                  6
                                                                </p>
                                                              </ForwardRef(Typography)>
                                                            </WithStyles(ForwardRef(Typography))>
                                                          </span>
                                                          <NoSsr>
                                                            <WithStyles(memo)
                                                              center={true}
                                                            >
                                                              <ForwardRef(TouchRipple)
                                                                center={true}
                                                                classes={
                                                                  Object {
                                                                    "child": "MuiTouchRipple-child",
                                                                    "childLeaving": "MuiTouchRipple-childLeaving",
                                                                    "childPulsate": "MuiTouchRipple-childPulsate",
                                                                    "ripple": "MuiTouchRipple-ripple",
                                                                    "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                    "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                    "root": "MuiTouchRipple-root",
                                                                  }
                                                                }
                                                              >
                                                                <span
                                                                  className="MuiTouchRipple-root"
                                                                >
                                                                  <TransitionGroup
                                                                    childFactory={[Function]}
                                                                    component={null}
                                                                    exit={true}
                                                                  />
                                                                </span>
                                                              </ForwardRef(TouchRipple)>
                                                            </WithStyles(memo)>
                                                          </NoSsr>
                                                        </button>
                                                      </ForwardRef(ButtonBase)>
                                                    </WithStyles(ForwardRef(ButtonBase))>
                                                  </ForwardRef(IconButton)>
                                                </WithStyles(ForwardRef(IconButton))>
                                              </Day>
                                            </div>
                                          </DayWrapper>
                                          <DayWrapper
                                            dayInCurrentMonth={true}
                                            disabled={false}
                                            key="Fri Feb 07 2020 00:00:00 GMT-0300 (Brasilia Standard Time)"
                                            onSelect={[Function]}
                                            value={2020-02-07T03:00:00.000Z}
                                          >
                                            <div
                                              onClick={[Function]}
                                              onKeyPress={[Function]}
                                              role="presentation"
                                            >
                                              <Day
                                                current={false}
                                                disabled={false}
                                                hidden={false}
                                                selected={false}
                                              >
                                                <WithStyles(ForwardRef(IconButton))
                                                  className="MuiPickersDay-day"
                                                  tabIndex={0}
                                                >
                                                  <ForwardRef(IconButton)
                                                    className="MuiPickersDay-day"
                                                    classes={
                                                      Object {
                                                        "colorInherit": "MuiIconButton-colorInherit",
                                                        "colorPrimary": "MuiIconButton-colorPrimary",
                                                        "colorSecondary": "MuiIconButton-colorSecondary",
                                                        "disabled": "Mui-disabled",
                                                        "edgeEnd": "MuiIconButton-edgeEnd",
                                                        "edgeStart": "MuiIconButton-edgeStart",
                                                        "label": "MuiIconButton-label",
                                                        "root": "MuiIconButton-root",
                                                        "sizeSmall": "MuiIconButton-sizeSmall",
                                                      }
                                                    }
                                                    tabIndex={0}
                                                  >
                                                    <WithStyles(ForwardRef(ButtonBase))
                                                      centerRipple={true}
                                                      className="MuiIconButton-root MuiPickersDay-day"
                                                      disabled={false}
                                                      focusRipple={true}
                                                      tabIndex={0}
                                                    >
                                                      <ForwardRef(ButtonBase)
                                                        centerRipple={true}
                                                        className="MuiIconButton-root MuiPickersDay-day"
                                                        classes={
                                                          Object {
                                                            "disabled": "Mui-disabled",
                                                            "focusVisible": "Mui-focusVisible",
                                                            "root": "MuiButtonBase-root",
                                                          }
                                                        }
                                                        disabled={false}
                                                        focusRipple={true}
                                                        tabIndex={0}
                                                      >
                                                        <button
                                                          className="MuiButtonBase-root MuiIconButton-root MuiPickersDay-day"
                                                          disabled={false}
                                                          onBlur={[Function]}
                                                          onDragLeave={[Function]}
                                                          onFocus={[Function]}
                                                          onKeyDown={[Function]}
                                                          onKeyUp={[Function]}
                                                          onMouseDown={[Function]}
                                                          onMouseLeave={[Function]}
                                                          onMouseUp={[Function]}
                                                          onTouchEnd={[Function]}
                                                          onTouchMove={[Function]}
                                                          onTouchStart={[Function]}
                                                          tabIndex={0}
                                                          type="button"
                                                        >
                                                          <span
                                                            className="MuiIconButton-label"
                                                          >
                                                            <WithStyles(ForwardRef(Typography))
                                                              color="inherit"
                                                              variant="body2"
                                                            >
                                                              <ForwardRef(Typography)
                                                                classes={
                                                                  Object {
                                                                    "alignCenter": "MuiTypography-alignCenter",
                                                                    "alignJustify": "MuiTypography-alignJustify",
                                                                    "alignLeft": "MuiTypography-alignLeft",
                                                                    "alignRight": "MuiTypography-alignRight",
                                                                    "body1": "MuiTypography-body1",
                                                                    "body2": "MuiTypography-body2",
                                                                    "button": "MuiTypography-button",
                                                                    "caption": "MuiTypography-caption",
                                                                    "colorError": "MuiTypography-colorError",
                                                                    "colorInherit": "MuiTypography-colorInherit",
                                                                    "colorPrimary": "MuiTypography-colorPrimary",
                                                                    "colorSecondary": "MuiTypography-colorSecondary",
                                                                    "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                    "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                    "displayBlock": "MuiTypography-displayBlock",
                                                                    "displayInline": "MuiTypography-displayInline",
                                                                    "gutterBottom": "MuiTypography-gutterBottom",
                                                                    "h1": "MuiTypography-h1",
                                                                    "h2": "MuiTypography-h2",
                                                                    "h3": "MuiTypography-h3",
                                                                    "h4": "MuiTypography-h4",
                                                                    "h5": "MuiTypography-h5",
                                                                    "h6": "MuiTypography-h6",
                                                                    "noWrap": "MuiTypography-noWrap",
                                                                    "overline": "MuiTypography-overline",
                                                                    "paragraph": "MuiTypography-paragraph",
                                                                    "root": "MuiTypography-root",
                                                                    "srOnly": "MuiTypography-srOnly",
                                                                    "subtitle1": "MuiTypography-subtitle1",
                                                                    "subtitle2": "MuiTypography-subtitle2",
                                                                  }
                                                                }
                                                                color="inherit"
                                                                variant="body2"
                                                              >
                                                                <p
                                                                  className="MuiTypography-root MuiTypography-body2 MuiTypography-colorInherit"
                                                                >
                                                                  7
                                                                </p>
                                                              </ForwardRef(Typography)>
                                                            </WithStyles(ForwardRef(Typography))>
                                                          </span>
                                                          <NoSsr>
                                                            <WithStyles(memo)
                                                              center={true}
                                                            >
                                                              <ForwardRef(TouchRipple)
                                                                center={true}
                                                                classes={
                                                                  Object {
                                                                    "child": "MuiTouchRipple-child",
                                                                    "childLeaving": "MuiTouchRipple-childLeaving",
                                                                    "childPulsate": "MuiTouchRipple-childPulsate",
                                                                    "ripple": "MuiTouchRipple-ripple",
                                                                    "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                    "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                    "root": "MuiTouchRipple-root",
                                                                  }
                                                                }
                                                              >
                                                                <span
                                                                  className="MuiTouchRipple-root"
                                                                >
                                                                  <TransitionGroup
                                                                    childFactory={[Function]}
                                                                    component={null}
                                                                    exit={true}
                                                                  />
                                                                </span>
                                                              </ForwardRef(TouchRipple)>
                                                            </WithStyles(memo)>
                                                          </NoSsr>
                                                        </button>
                                                      </ForwardRef(ButtonBase)>
                                                    </WithStyles(ForwardRef(ButtonBase))>
                                                  </ForwardRef(IconButton)>
                                                </WithStyles(ForwardRef(IconButton))>
                                              </Day>
                                            </div>
                                          </DayWrapper>
                                          <DayWrapper
                                            dayInCurrentMonth={true}
                                            disabled={false}
                                            key="Sat Feb 08 2020 00:00:00 GMT-0300 (Brasilia Standard Time)"
                                            onSelect={[Function]}
                                            value={2020-02-08T03:00:00.000Z}
                                          >
                                            <div
                                              onClick={[Function]}
                                              onKeyPress={[Function]}
                                              role="presentation"
                                            >
                                              <Day
                                                current={false}
                                                disabled={false}
                                                hidden={false}
                                                selected={false}
                                              >
                                                <WithStyles(ForwardRef(IconButton))
                                                  className="MuiPickersDay-day"
                                                  tabIndex={0}
                                                >
                                                  <ForwardRef(IconButton)
                                                    className="MuiPickersDay-day"
                                                    classes={
                                                      Object {
                                                        "colorInherit": "MuiIconButton-colorInherit",
                                                        "colorPrimary": "MuiIconButton-colorPrimary",
                                                        "colorSecondary": "MuiIconButton-colorSecondary",
                                                        "disabled": "Mui-disabled",
                                                        "edgeEnd": "MuiIconButton-edgeEnd",
                                                        "edgeStart": "MuiIconButton-edgeStart",
                                                        "label": "MuiIconButton-label",
                                                        "root": "MuiIconButton-root",
                                                        "sizeSmall": "MuiIconButton-sizeSmall",
                                                      }
                                                    }
                                                    tabIndex={0}
                                                  >
                                                    <WithStyles(ForwardRef(ButtonBase))
                                                      centerRipple={true}
                                                      className="MuiIconButton-root MuiPickersDay-day"
                                                      disabled={false}
                                                      focusRipple={true}
                                                      tabIndex={0}
                                                    >
                                                      <ForwardRef(ButtonBase)
                                                        centerRipple={true}
                                                        className="MuiIconButton-root MuiPickersDay-day"
                                                        classes={
                                                          Object {
                                                            "disabled": "Mui-disabled",
                                                            "focusVisible": "Mui-focusVisible",
                                                            "root": "MuiButtonBase-root",
                                                          }
                                                        }
                                                        disabled={false}
                                                        focusRipple={true}
                                                        tabIndex={0}
                                                      >
                                                        <button
                                                          className="MuiButtonBase-root MuiIconButton-root MuiPickersDay-day"
                                                          disabled={false}
                                                          onBlur={[Function]}
                                                          onDragLeave={[Function]}
                                                          onFocus={[Function]}
                                                          onKeyDown={[Function]}
                                                          onKeyUp={[Function]}
                                                          onMouseDown={[Function]}
                                                          onMouseLeave={[Function]}
                                                          onMouseUp={[Function]}
                                                          onTouchEnd={[Function]}
                                                          onTouchMove={[Function]}
                                                          onTouchStart={[Function]}
                                                          tabIndex={0}
                                                          type="button"
                                                        >
                                                          <span
                                                            className="MuiIconButton-label"
                                                          >
                                                            <WithStyles(ForwardRef(Typography))
                                                              color="inherit"
                                                              variant="body2"
                                                            >
                                                              <ForwardRef(Typography)
                                                                classes={
                                                                  Object {
                                                                    "alignCenter": "MuiTypography-alignCenter",
                                                                    "alignJustify": "MuiTypography-alignJustify",
                                                                    "alignLeft": "MuiTypography-alignLeft",
                                                                    "alignRight": "MuiTypography-alignRight",
                                                                    "body1": "MuiTypography-body1",
                                                                    "body2": "MuiTypography-body2",
                                                                    "button": "MuiTypography-button",
                                                                    "caption": "MuiTypography-caption",
                                                                    "colorError": "MuiTypography-colorError",
                                                                    "colorInherit": "MuiTypography-colorInherit",
                                                                    "colorPrimary": "MuiTypography-colorPrimary",
                                                                    "colorSecondary": "MuiTypography-colorSecondary",
                                                                    "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                    "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                    "displayBlock": "MuiTypography-displayBlock",
                                                                    "displayInline": "MuiTypography-displayInline",
                                                                    "gutterBottom": "MuiTypography-gutterBottom",
                                                                    "h1": "MuiTypography-h1",
                                                                    "h2": "MuiTypography-h2",
                                                                    "h3": "MuiTypography-h3",
                                                                    "h4": "MuiTypography-h4",
                                                                    "h5": "MuiTypography-h5",
                                                                    "h6": "MuiTypography-h6",
                                                                    "noWrap": "MuiTypography-noWrap",
                                                                    "overline": "MuiTypography-overline",
                                                                    "paragraph": "MuiTypography-paragraph",
                                                                    "root": "MuiTypography-root",
                                                                    "srOnly": "MuiTypography-srOnly",
                                                                    "subtitle1": "MuiTypography-subtitle1",
                                                                    "subtitle2": "MuiTypography-subtitle2",
                                                                  }
                                                                }
                                                                color="inherit"
                                                                variant="body2"
                                                              >
                                                                <p
                                                                  className="MuiTypography-root MuiTypography-body2 MuiTypography-colorInherit"
                                                                >
                                                                  8
                                                                </p>
                                                              </ForwardRef(Typography)>
                                                            </WithStyles(ForwardRef(Typography))>
                                                          </span>
                                                          <NoSsr>
                                                            <WithStyles(memo)
                                                              center={true}
                                                            >
                                                              <ForwardRef(TouchRipple)
                                                                center={true}
                                                                classes={
                                                                  Object {
                                                                    "child": "MuiTouchRipple-child",
                                                                    "childLeaving": "MuiTouchRipple-childLeaving",
                                                                    "childPulsate": "MuiTouchRipple-childPulsate",
                                                                    "ripple": "MuiTouchRipple-ripple",
                                                                    "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                    "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                    "root": "MuiTouchRipple-root",
                                                                  }
                                                                }
                                                              >
                                                                <span
                                                                  className="MuiTouchRipple-root"
                                                                >
                                                                  <TransitionGroup
                                                                    childFactory={[Function]}
                                                                    component={null}
                                                                    exit={true}
                                                                  />
                                                                </span>
                                                              </ForwardRef(TouchRipple)>
                                                            </WithStyles(memo)>
                                                          </NoSsr>
                                                        </button>
                                                      </ForwardRef(ButtonBase)>
                                                    </WithStyles(ForwardRef(ButtonBase))>
                                                  </ForwardRef(IconButton)>
                                                </WithStyles(ForwardRef(IconButton))>
                                              </Day>
                                            </div>
                                          </DayWrapper>
                                        </div>
                                        <div
                                          className="MuiPickersCalendar-week"
                                          key="week-Sun Feb 09 2020 00:00:00 GMT-0300 (Brasilia Standard Time)"
                                        >
                                          <DayWrapper
                                            dayInCurrentMonth={true}
                                            disabled={false}
                                            key="Sun Feb 09 2020 00:00:00 GMT-0300 (Brasilia Standard Time)"
                                            onSelect={[Function]}
                                            value={2020-02-09T03:00:00.000Z}
                                          >
                                            <div
                                              onClick={[Function]}
                                              onKeyPress={[Function]}
                                              role="presentation"
                                            >
                                              <Day
                                                current={false}
                                                disabled={false}
                                                hidden={false}
                                                selected={false}
                                              >
                                                <WithStyles(ForwardRef(IconButton))
                                                  className="MuiPickersDay-day"
                                                  tabIndex={0}
                                                >
                                                  <ForwardRef(IconButton)
                                                    className="MuiPickersDay-day"
                                                    classes={
                                                      Object {
                                                        "colorInherit": "MuiIconButton-colorInherit",
                                                        "colorPrimary": "MuiIconButton-colorPrimary",
                                                        "colorSecondary": "MuiIconButton-colorSecondary",
                                                        "disabled": "Mui-disabled",
                                                        "edgeEnd": "MuiIconButton-edgeEnd",
                                                        "edgeStart": "MuiIconButton-edgeStart",
                                                        "label": "MuiIconButton-label",
                                                        "root": "MuiIconButton-root",
                                                        "sizeSmall": "MuiIconButton-sizeSmall",
                                                      }
                                                    }
                                                    tabIndex={0}
                                                  >
                                                    <WithStyles(ForwardRef(ButtonBase))
                                                      centerRipple={true}
                                                      className="MuiIconButton-root MuiPickersDay-day"
                                                      disabled={false}
                                                      focusRipple={true}
                                                      tabIndex={0}
                                                    >
                                                      <ForwardRef(ButtonBase)
                                                        centerRipple={true}
                                                        className="MuiIconButton-root MuiPickersDay-day"
                                                        classes={
                                                          Object {
                                                            "disabled": "Mui-disabled",
                                                            "focusVisible": "Mui-focusVisible",
                                                            "root": "MuiButtonBase-root",
                                                          }
                                                        }
                                                        disabled={false}
                                                        focusRipple={true}
                                                        tabIndex={0}
                                                      >
                                                        <button
                                                          className="MuiButtonBase-root MuiIconButton-root MuiPickersDay-day"
                                                          disabled={false}
                                                          onBlur={[Function]}
                                                          onDragLeave={[Function]}
                                                          onFocus={[Function]}
                                                          onKeyDown={[Function]}
                                                          onKeyUp={[Function]}
                                                          onMouseDown={[Function]}
                                                          onMouseLeave={[Function]}
                                                          onMouseUp={[Function]}
                                                          onTouchEnd={[Function]}
                                                          onTouchMove={[Function]}
                                                          onTouchStart={[Function]}
                                                          tabIndex={0}
                                                          type="button"
                                                        >
                                                          <span
                                                            className="MuiIconButton-label"
                                                          >
                                                            <WithStyles(ForwardRef(Typography))
                                                              color="inherit"
                                                              variant="body2"
                                                            >
                                                              <ForwardRef(Typography)
                                                                classes={
                                                                  Object {
                                                                    "alignCenter": "MuiTypography-alignCenter",
                                                                    "alignJustify": "MuiTypography-alignJustify",
                                                                    "alignLeft": "MuiTypography-alignLeft",
                                                                    "alignRight": "MuiTypography-alignRight",
                                                                    "body1": "MuiTypography-body1",
                                                                    "body2": "MuiTypography-body2",
                                                                    "button": "MuiTypography-button",
                                                                    "caption": "MuiTypography-caption",
                                                                    "colorError": "MuiTypography-colorError",
                                                                    "colorInherit": "MuiTypography-colorInherit",
                                                                    "colorPrimary": "MuiTypography-colorPrimary",
                                                                    "colorSecondary": "MuiTypography-colorSecondary",
                                                                    "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                    "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                    "displayBlock": "MuiTypography-displayBlock",
                                                                    "displayInline": "MuiTypography-displayInline",
                                                                    "gutterBottom": "MuiTypography-gutterBottom",
                                                                    "h1": "MuiTypography-h1",
                                                                    "h2": "MuiTypography-h2",
                                                                    "h3": "MuiTypography-h3",
                                                                    "h4": "MuiTypography-h4",
                                                                    "h5": "MuiTypography-h5",
                                                                    "h6": "MuiTypography-h6",
                                                                    "noWrap": "MuiTypography-noWrap",
                                                                    "overline": "MuiTypography-overline",
                                                                    "paragraph": "MuiTypography-paragraph",
                                                                    "root": "MuiTypography-root",
                                                                    "srOnly": "MuiTypography-srOnly",
                                                                    "subtitle1": "MuiTypography-subtitle1",
                                                                    "subtitle2": "MuiTypography-subtitle2",
                                                                  }
                                                                }
                                                                color="inherit"
                                                                variant="body2"
                                                              >
                                                                <p
                                                                  className="MuiTypography-root MuiTypography-body2 MuiTypography-colorInherit"
                                                                >
                                                                  9
                                                                </p>
                                                              </ForwardRef(Typography)>
                                                            </WithStyles(ForwardRef(Typography))>
                                                          </span>
                                                          <NoSsr>
                                                            <WithStyles(memo)
                                                              center={true}
                                                            >
                                                              <ForwardRef(TouchRipple)
                                                                center={true}
                                                                classes={
                                                                  Object {
                                                                    "child": "MuiTouchRipple-child",
                                                                    "childLeaving": "MuiTouchRipple-childLeaving",
                                                                    "childPulsate": "MuiTouchRipple-childPulsate",
                                                                    "ripple": "MuiTouchRipple-ripple",
                                                                    "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                    "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                    "root": "MuiTouchRipple-root",
                                                                  }
                                                                }
                                                              >
                                                                <span
                                                                  className="MuiTouchRipple-root"
                                                                >
                                                                  <TransitionGroup
                                                                    childFactory={[Function]}
                                                                    component={null}
                                                                    exit={true}
                                                                  />
                                                                </span>
                                                              </ForwardRef(TouchRipple)>
                                                            </WithStyles(memo)>
                                                          </NoSsr>
                                                        </button>
                                                      </ForwardRef(ButtonBase)>
                                                    </WithStyles(ForwardRef(ButtonBase))>
                                                  </ForwardRef(IconButton)>
                                                </WithStyles(ForwardRef(IconButton))>
                                              </Day>
                                            </div>
                                          </DayWrapper>
                                          <DayWrapper
                                            dayInCurrentMonth={true}
                                            disabled={false}
                                            key="Mon Feb 10 2020 00:00:00 GMT-0300 (Brasilia Standard Time)"
                                            onSelect={[Function]}
                                            value={2020-02-10T03:00:00.000Z}
                                          >
                                            <div
                                              onClick={[Function]}
                                              onKeyPress={[Function]}
                                              role="presentation"
                                            >
                                              <Day
                                                current={false}
                                                disabled={false}
                                                hidden={false}
                                                selected={false}
                                              >
                                                <WithStyles(ForwardRef(IconButton))
                                                  className="MuiPickersDay-day"
                                                  tabIndex={0}
                                                >
                                                  <ForwardRef(IconButton)
                                                    className="MuiPickersDay-day"
                                                    classes={
                                                      Object {
                                                        "colorInherit": "MuiIconButton-colorInherit",
                                                        "colorPrimary": "MuiIconButton-colorPrimary",
                                                        "colorSecondary": "MuiIconButton-colorSecondary",
                                                        "disabled": "Mui-disabled",
                                                        "edgeEnd": "MuiIconButton-edgeEnd",
                                                        "edgeStart": "MuiIconButton-edgeStart",
                                                        "label": "MuiIconButton-label",
                                                        "root": "MuiIconButton-root",
                                                        "sizeSmall": "MuiIconButton-sizeSmall",
                                                      }
                                                    }
                                                    tabIndex={0}
                                                  >
                                                    <WithStyles(ForwardRef(ButtonBase))
                                                      centerRipple={true}
                                                      className="MuiIconButton-root MuiPickersDay-day"
                                                      disabled={false}
                                                      focusRipple={true}
                                                      tabIndex={0}
                                                    >
                                                      <ForwardRef(ButtonBase)
                                                        centerRipple={true}
                                                        className="MuiIconButton-root MuiPickersDay-day"
                                                        classes={
                                                          Object {
                                                            "disabled": "Mui-disabled",
                                                            "focusVisible": "Mui-focusVisible",
                                                            "root": "MuiButtonBase-root",
                                                          }
                                                        }
                                                        disabled={false}
                                                        focusRipple={true}
                                                        tabIndex={0}
                                                      >
                                                        <button
                                                          className="MuiButtonBase-root MuiIconButton-root MuiPickersDay-day"
                                                          disabled={false}
                                                          onBlur={[Function]}
                                                          onDragLeave={[Function]}
                                                          onFocus={[Function]}
                                                          onKeyDown={[Function]}
                                                          onKeyUp={[Function]}
                                                          onMouseDown={[Function]}
                                                          onMouseLeave={[Function]}
                                                          onMouseUp={[Function]}
                                                          onTouchEnd={[Function]}
                                                          onTouchMove={[Function]}
                                                          onTouchStart={[Function]}
                                                          tabIndex={0}
                                                          type="button"
                                                        >
                                                          <span
                                                            className="MuiIconButton-label"
                                                          >
                                                            <WithStyles(ForwardRef(Typography))
                                                              color="inherit"
                                                              variant="body2"
                                                            >
                                                              <ForwardRef(Typography)
                                                                classes={
                                                                  Object {
                                                                    "alignCenter": "MuiTypography-alignCenter",
                                                                    "alignJustify": "MuiTypography-alignJustify",
                                                                    "alignLeft": "MuiTypography-alignLeft",
                                                                    "alignRight": "MuiTypography-alignRight",
                                                                    "body1": "MuiTypography-body1",
                                                                    "body2": "MuiTypography-body2",
                                                                    "button": "MuiTypography-button",
                                                                    "caption": "MuiTypography-caption",
                                                                    "colorError": "MuiTypography-colorError",
                                                                    "colorInherit": "MuiTypography-colorInherit",
                                                                    "colorPrimary": "MuiTypography-colorPrimary",
                                                                    "colorSecondary": "MuiTypography-colorSecondary",
                                                                    "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                    "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                    "displayBlock": "MuiTypography-displayBlock",
                                                                    "displayInline": "MuiTypography-displayInline",
                                                                    "gutterBottom": "MuiTypography-gutterBottom",
                                                                    "h1": "MuiTypography-h1",
                                                                    "h2": "MuiTypography-h2",
                                                                    "h3": "MuiTypography-h3",
                                                                    "h4": "MuiTypography-h4",
                                                                    "h5": "MuiTypography-h5",
                                                                    "h6": "MuiTypography-h6",
                                                                    "noWrap": "MuiTypography-noWrap",
                                                                    "overline": "MuiTypography-overline",
                                                                    "paragraph": "MuiTypography-paragraph",
                                                                    "root": "MuiTypography-root",
                                                                    "srOnly": "MuiTypography-srOnly",
                                                                    "subtitle1": "MuiTypography-subtitle1",
                                                                    "subtitle2": "MuiTypography-subtitle2",
                                                                  }
                                                                }
                                                                color="inherit"
                                                                variant="body2"
                                                              >
                                                                <p
                                                                  className="MuiTypography-root MuiTypography-body2 MuiTypography-colorInherit"
                                                                >
                                                                  10
                                                                </p>
                                                              </ForwardRef(Typography)>
                                                            </WithStyles(ForwardRef(Typography))>
                                                          </span>
                                                          <NoSsr>
                                                            <WithStyles(memo)
                                                              center={true}
                                                            >
                                                              <ForwardRef(TouchRipple)
                                                                center={true}
                                                                classes={
                                                                  Object {
                                                                    "child": "MuiTouchRipple-child",
                                                                    "childLeaving": "MuiTouchRipple-childLeaving",
                                                                    "childPulsate": "MuiTouchRipple-childPulsate",
                                                                    "ripple": "MuiTouchRipple-ripple",
                                                                    "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                    "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                    "root": "MuiTouchRipple-root",
                                                                  }
                                                                }
                                                              >
                                                                <span
                                                                  className="MuiTouchRipple-root"
                                                                >
                                                                  <TransitionGroup
                                                                    childFactory={[Function]}
                                                                    component={null}
                                                                    exit={true}
                                                                  />
                                                                </span>
                                                              </ForwardRef(TouchRipple)>
                                                            </WithStyles(memo)>
                                                          </NoSsr>
                                                        </button>
                                                      </ForwardRef(ButtonBase)>
                                                    </WithStyles(ForwardRef(ButtonBase))>
                                                  </ForwardRef(IconButton)>
                                                </WithStyles(ForwardRef(IconButton))>
                                              </Day>
                                            </div>
                                          </DayWrapper>
                                          <DayWrapper
                                            dayInCurrentMonth={true}
                                            disabled={false}
                                            key="Tue Feb 11 2020 00:00:00 GMT-0300 (Brasilia Standard Time)"
                                            onSelect={[Function]}
                                            value={2020-02-11T03:00:00.000Z}
                                          >
                                            <div
                                              onClick={[Function]}
                                              onKeyPress={[Function]}
                                              role="presentation"
                                            >
                                              <Day
                                                current={false}
                                                disabled={false}
                                                hidden={false}
                                                selected={false}
                                              >
                                                <WithStyles(ForwardRef(IconButton))
                                                  className="MuiPickersDay-day"
                                                  tabIndex={0}
                                                >
                                                  <ForwardRef(IconButton)
                                                    className="MuiPickersDay-day"
                                                    classes={
                                                      Object {
                                                        "colorInherit": "MuiIconButton-colorInherit",
                                                        "colorPrimary": "MuiIconButton-colorPrimary",
                                                        "colorSecondary": "MuiIconButton-colorSecondary",
                                                        "disabled": "Mui-disabled",
                                                        "edgeEnd": "MuiIconButton-edgeEnd",
                                                        "edgeStart": "MuiIconButton-edgeStart",
                                                        "label": "MuiIconButton-label",
                                                        "root": "MuiIconButton-root",
                                                        "sizeSmall": "MuiIconButton-sizeSmall",
                                                      }
                                                    }
                                                    tabIndex={0}
                                                  >
                                                    <WithStyles(ForwardRef(ButtonBase))
                                                      centerRipple={true}
                                                      className="MuiIconButton-root MuiPickersDay-day"
                                                      disabled={false}
                                                      focusRipple={true}
                                                      tabIndex={0}
                                                    >
                                                      <ForwardRef(ButtonBase)
                                                        centerRipple={true}
                                                        className="MuiIconButton-root MuiPickersDay-day"
                                                        classes={
                                                          Object {
                                                            "disabled": "Mui-disabled",
                                                            "focusVisible": "Mui-focusVisible",
                                                            "root": "MuiButtonBase-root",
                                                          }
                                                        }
                                                        disabled={false}
                                                        focusRipple={true}
                                                        tabIndex={0}
                                                      >
                                                        <button
                                                          className="MuiButtonBase-root MuiIconButton-root MuiPickersDay-day"
                                                          disabled={false}
                                                          onBlur={[Function]}
                                                          onDragLeave={[Function]}
                                                          onFocus={[Function]}
                                                          onKeyDown={[Function]}
                                                          onKeyUp={[Function]}
                                                          onMouseDown={[Function]}
                                                          onMouseLeave={[Function]}
                                                          onMouseUp={[Function]}
                                                          onTouchEnd={[Function]}
                                                          onTouchMove={[Function]}
                                                          onTouchStart={[Function]}
                                                          tabIndex={0}
                                                          type="button"
                                                        >
                                                          <span
                                                            className="MuiIconButton-label"
                                                          >
                                                            <WithStyles(ForwardRef(Typography))
                                                              color="inherit"
                                                              variant="body2"
                                                            >
                                                              <ForwardRef(Typography)
                                                                classes={
                                                                  Object {
                                                                    "alignCenter": "MuiTypography-alignCenter",
                                                                    "alignJustify": "MuiTypography-alignJustify",
                                                                    "alignLeft": "MuiTypography-alignLeft",
                                                                    "alignRight": "MuiTypography-alignRight",
                                                                    "body1": "MuiTypography-body1",
                                                                    "body2": "MuiTypography-body2",
                                                                    "button": "MuiTypography-button",
                                                                    "caption": "MuiTypography-caption",
                                                                    "colorError": "MuiTypography-colorError",
                                                                    "colorInherit": "MuiTypography-colorInherit",
                                                                    "colorPrimary": "MuiTypography-colorPrimary",
                                                                    "colorSecondary": "MuiTypography-colorSecondary",
                                                                    "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                    "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                    "displayBlock": "MuiTypography-displayBlock",
                                                                    "displayInline": "MuiTypography-displayInline",
                                                                    "gutterBottom": "MuiTypography-gutterBottom",
                                                                    "h1": "MuiTypography-h1",
                                                                    "h2": "MuiTypography-h2",
                                                                    "h3": "MuiTypography-h3",
                                                                    "h4": "MuiTypography-h4",
                                                                    "h5": "MuiTypography-h5",
                                                                    "h6": "MuiTypography-h6",
                                                                    "noWrap": "MuiTypography-noWrap",
                                                                    "overline": "MuiTypography-overline",
                                                                    "paragraph": "MuiTypography-paragraph",
                                                                    "root": "MuiTypography-root",
                                                                    "srOnly": "MuiTypography-srOnly",
                                                                    "subtitle1": "MuiTypography-subtitle1",
                                                                    "subtitle2": "MuiTypography-subtitle2",
                                                                  }
                                                                }
                                                                color="inherit"
                                                                variant="body2"
                                                              >
                                                                <p
                                                                  className="MuiTypography-root MuiTypography-body2 MuiTypography-colorInherit"
                                                                >
                                                                  11
                                                                </p>
                                                              </ForwardRef(Typography)>
                                                            </WithStyles(ForwardRef(Typography))>
                                                          </span>
                                                          <NoSsr>
                                                            <WithStyles(memo)
                                                              center={true}
                                                            >
                                                              <ForwardRef(TouchRipple)
                                                                center={true}
                                                                classes={
                                                                  Object {
                                                                    "child": "MuiTouchRipple-child",
                                                                    "childLeaving": "MuiTouchRipple-childLeaving",
                                                                    "childPulsate": "MuiTouchRipple-childPulsate",
                                                                    "ripple": "MuiTouchRipple-ripple",
                                                                    "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                    "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                    "root": "MuiTouchRipple-root",
                                                                  }
                                                                }
                                                              >
                                                                <span
                                                                  className="MuiTouchRipple-root"
                                                                >
                                                                  <TransitionGroup
                                                                    childFactory={[Function]}
                                                                    component={null}
                                                                    exit={true}
                                                                  />
                                                                </span>
                                                              </ForwardRef(TouchRipple)>
                                                            </WithStyles(memo)>
                                                          </NoSsr>
                                                        </button>
                                                      </ForwardRef(ButtonBase)>
                                                    </WithStyles(ForwardRef(ButtonBase))>
                                                  </ForwardRef(IconButton)>
                                                </WithStyles(ForwardRef(IconButton))>
                                              </Day>
                                            </div>
                                          </DayWrapper>
                                          <DayWrapper
                                            dayInCurrentMonth={true}
                                            disabled={false}
                                            key="Wed Feb 12 2020 00:00:00 GMT-0300 (Brasilia Standard Time)"
                                            onSelect={[Function]}
                                            value={2020-02-12T03:00:00.000Z}
                                          >
                                            <div
                                              onClick={[Function]}
                                              onKeyPress={[Function]}
                                              role="presentation"
                                            >
                                              <Day
                                                current={false}
                                                disabled={false}
                                                hidden={false}
                                                selected={false}
                                              >
                                                <WithStyles(ForwardRef(IconButton))
                                                  className="MuiPickersDay-day"
                                                  tabIndex={0}
                                                >
                                                  <ForwardRef(IconButton)
                                                    className="MuiPickersDay-day"
                                                    classes={
                                                      Object {
                                                        "colorInherit": "MuiIconButton-colorInherit",
                                                        "colorPrimary": "MuiIconButton-colorPrimary",
                                                        "colorSecondary": "MuiIconButton-colorSecondary",
                                                        "disabled": "Mui-disabled",
                                                        "edgeEnd": "MuiIconButton-edgeEnd",
                                                        "edgeStart": "MuiIconButton-edgeStart",
                                                        "label": "MuiIconButton-label",
                                                        "root": "MuiIconButton-root",
                                                        "sizeSmall": "MuiIconButton-sizeSmall",
                                                      }
                                                    }
                                                    tabIndex={0}
                                                  >
                                                    <WithStyles(ForwardRef(ButtonBase))
                                                      centerRipple={true}
                                                      className="MuiIconButton-root MuiPickersDay-day"
                                                      disabled={false}
                                                      focusRipple={true}
                                                      tabIndex={0}
                                                    >
                                                      <ForwardRef(ButtonBase)
                                                        centerRipple={true}
                                                        className="MuiIconButton-root MuiPickersDay-day"
                                                        classes={
                                                          Object {
                                                            "disabled": "Mui-disabled",
                                                            "focusVisible": "Mui-focusVisible",
                                                            "root": "MuiButtonBase-root",
                                                          }
                                                        }
                                                        disabled={false}
                                                        focusRipple={true}
                                                        tabIndex={0}
                                                      >
                                                        <button
                                                          className="MuiButtonBase-root MuiIconButton-root MuiPickersDay-day"
                                                          disabled={false}
                                                          onBlur={[Function]}
                                                          onDragLeave={[Function]}
                                                          onFocus={[Function]}
                                                          onKeyDown={[Function]}
                                                          onKeyUp={[Function]}
                                                          onMouseDown={[Function]}
                                                          onMouseLeave={[Function]}
                                                          onMouseUp={[Function]}
                                                          onTouchEnd={[Function]}
                                                          onTouchMove={[Function]}
                                                          onTouchStart={[Function]}
                                                          tabIndex={0}
                                                          type="button"
                                                        >
                                                          <span
                                                            className="MuiIconButton-label"
                                                          >
                                                            <WithStyles(ForwardRef(Typography))
                                                              color="inherit"
                                                              variant="body2"
                                                            >
                                                              <ForwardRef(Typography)
                                                                classes={
                                                                  Object {
                                                                    "alignCenter": "MuiTypography-alignCenter",
                                                                    "alignJustify": "MuiTypography-alignJustify",
                                                                    "alignLeft": "MuiTypography-alignLeft",
                                                                    "alignRight": "MuiTypography-alignRight",
                                                                    "body1": "MuiTypography-body1",
                                                                    "body2": "MuiTypography-body2",
                                                                    "button": "MuiTypography-button",
                                                                    "caption": "MuiTypography-caption",
                                                                    "colorError": "MuiTypography-colorError",
                                                                    "colorInherit": "MuiTypography-colorInherit",
                                                                    "colorPrimary": "MuiTypography-colorPrimary",
                                                                    "colorSecondary": "MuiTypography-colorSecondary",
                                                                    "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                    "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                    "displayBlock": "MuiTypography-displayBlock",
                                                                    "displayInline": "MuiTypography-displayInline",
                                                                    "gutterBottom": "MuiTypography-gutterBottom",
                                                                    "h1": "MuiTypography-h1",
                                                                    "h2": "MuiTypography-h2",
                                                                    "h3": "MuiTypography-h3",
                                                                    "h4": "MuiTypography-h4",
                                                                    "h5": "MuiTypography-h5",
                                                                    "h6": "MuiTypography-h6",
                                                                    "noWrap": "MuiTypography-noWrap",
                                                                    "overline": "MuiTypography-overline",
                                                                    "paragraph": "MuiTypography-paragraph",
                                                                    "root": "MuiTypography-root",
                                                                    "srOnly": "MuiTypography-srOnly",
                                                                    "subtitle1": "MuiTypography-subtitle1",
                                                                    "subtitle2": "MuiTypography-subtitle2",
                                                                  }
                                                                }
                                                                color="inherit"
                                                                variant="body2"
                                                              >
                                                                <p
                                                                  className="MuiTypography-root MuiTypography-body2 MuiTypography-colorInherit"
                                                                >
                                                                  12
                                                                </p>
                                                              </ForwardRef(Typography)>
                                                            </WithStyles(ForwardRef(Typography))>
                                                          </span>
                                                          <NoSsr>
                                                            <WithStyles(memo)
                                                              center={true}
                                                            >
                                                              <ForwardRef(TouchRipple)
                                                                center={true}
                                                                classes={
                                                                  Object {
                                                                    "child": "MuiTouchRipple-child",
                                                                    "childLeaving": "MuiTouchRipple-childLeaving",
                                                                    "childPulsate": "MuiTouchRipple-childPulsate",
                                                                    "ripple": "MuiTouchRipple-ripple",
                                                                    "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                    "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                    "root": "MuiTouchRipple-root",
                                                                  }
                                                                }
                                                              >
                                                                <span
                                                                  className="MuiTouchRipple-root"
                                                                >
                                                                  <TransitionGroup
                                                                    childFactory={[Function]}
                                                                    component={null}
                                                                    exit={true}
                                                                  />
                                                                </span>
                                                              </ForwardRef(TouchRipple)>
                                                            </WithStyles(memo)>
                                                          </NoSsr>
                                                        </button>
                                                      </ForwardRef(ButtonBase)>
                                                    </WithStyles(ForwardRef(ButtonBase))>
                                                  </ForwardRef(IconButton)>
                                                </WithStyles(ForwardRef(IconButton))>
                                              </Day>
                                            </div>
                                          </DayWrapper>
                                          <DayWrapper
                                            dayInCurrentMonth={true}
                                            disabled={false}
                                            key="Thu Feb 13 2020 00:00:00 GMT-0300 (Brasilia Standard Time)"
                                            onSelect={[Function]}
                                            value={2020-02-13T03:00:00.000Z}
                                          >
                                            <div
                                              onClick={[Function]}
                                              onKeyPress={[Function]}
                                              role="presentation"
                                            >
                                              <Day
                                                current={false}
                                                disabled={false}
                                                hidden={false}
                                                selected={false}
                                              >
                                                <WithStyles(ForwardRef(IconButton))
                                                  className="MuiPickersDay-day"
                                                  tabIndex={0}
                                                >
                                                  <ForwardRef(IconButton)
                                                    className="MuiPickersDay-day"
                                                    classes={
                                                      Object {
                                                        "colorInherit": "MuiIconButton-colorInherit",
                                                        "colorPrimary": "MuiIconButton-colorPrimary",
                                                        "colorSecondary": "MuiIconButton-colorSecondary",
                                                        "disabled": "Mui-disabled",
                                                        "edgeEnd": "MuiIconButton-edgeEnd",
                                                        "edgeStart": "MuiIconButton-edgeStart",
                                                        "label": "MuiIconButton-label",
                                                        "root": "MuiIconButton-root",
                                                        "sizeSmall": "MuiIconButton-sizeSmall",
                                                      }
                                                    }
                                                    tabIndex={0}
                                                  >
                                                    <WithStyles(ForwardRef(ButtonBase))
                                                      centerRipple={true}
                                                      className="MuiIconButton-root MuiPickersDay-day"
                                                      disabled={false}
                                                      focusRipple={true}
                                                      tabIndex={0}
                                                    >
                                                      <ForwardRef(ButtonBase)
                                                        centerRipple={true}
                                                        className="MuiIconButton-root MuiPickersDay-day"
                                                        classes={
                                                          Object {
                                                            "disabled": "Mui-disabled",
                                                            "focusVisible": "Mui-focusVisible",
                                                            "root": "MuiButtonBase-root",
                                                          }
                                                        }
                                                        disabled={false}
                                                        focusRipple={true}
                                                        tabIndex={0}
                                                      >
                                                        <button
                                                          className="MuiButtonBase-root MuiIconButton-root MuiPickersDay-day"
                                                          disabled={false}
                                                          onBlur={[Function]}
                                                          onDragLeave={[Function]}
                                                          onFocus={[Function]}
                                                          onKeyDown={[Function]}
                                                          onKeyUp={[Function]}
                                                          onMouseDown={[Function]}
                                                          onMouseLeave={[Function]}
                                                          onMouseUp={[Function]}
                                                          onTouchEnd={[Function]}
                                                          onTouchMove={[Function]}
                                                          onTouchStart={[Function]}
                                                          tabIndex={0}
                                                          type="button"
                                                        >
                                                          <span
                                                            className="MuiIconButton-label"
                                                          >
                                                            <WithStyles(ForwardRef(Typography))
                                                              color="inherit"
                                                              variant="body2"
                                                            >
                                                              <ForwardRef(Typography)
                                                                classes={
                                                                  Object {
                                                                    "alignCenter": "MuiTypography-alignCenter",
                                                                    "alignJustify": "MuiTypography-alignJustify",
                                                                    "alignLeft": "MuiTypography-alignLeft",
                                                                    "alignRight": "MuiTypography-alignRight",
                                                                    "body1": "MuiTypography-body1",
                                                                    "body2": "MuiTypography-body2",
                                                                    "button": "MuiTypography-button",
                                                                    "caption": "MuiTypography-caption",
                                                                    "colorError": "MuiTypography-colorError",
                                                                    "colorInherit": "MuiTypography-colorInherit",
                                                                    "colorPrimary": "MuiTypography-colorPrimary",
                                                                    "colorSecondary": "MuiTypography-colorSecondary",
                                                                    "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                    "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                    "displayBlock": "MuiTypography-displayBlock",
                                                                    "displayInline": "MuiTypography-displayInline",
                                                                    "gutterBottom": "MuiTypography-gutterBottom",
                                                                    "h1": "MuiTypography-h1",
                                                                    "h2": "MuiTypography-h2",
                                                                    "h3": "MuiTypography-h3",
                                                                    "h4": "MuiTypography-h4",
                                                                    "h5": "MuiTypography-h5",
                                                                    "h6": "MuiTypography-h6",
                                                                    "noWrap": "MuiTypography-noWrap",
                                                                    "overline": "MuiTypography-overline",
                                                                    "paragraph": "MuiTypography-paragraph",
                                                                    "root": "MuiTypography-root",
                                                                    "srOnly": "MuiTypography-srOnly",
                                                                    "subtitle1": "MuiTypography-subtitle1",
                                                                    "subtitle2": "MuiTypography-subtitle2",
                                                                  }
                                                                }
                                                                color="inherit"
                                                                variant="body2"
                                                              >
                                                                <p
                                                                  className="MuiTypography-root MuiTypography-body2 MuiTypography-colorInherit"
                                                                >
                                                                  13
                                                                </p>
                                                              </ForwardRef(Typography)>
                                                            </WithStyles(ForwardRef(Typography))>
                                                          </span>
                                                          <NoSsr>
                                                            <WithStyles(memo)
                                                              center={true}
                                                            >
                                                              <ForwardRef(TouchRipple)
                                                                center={true}
                                                                classes={
                                                                  Object {
                                                                    "child": "MuiTouchRipple-child",
                                                                    "childLeaving": "MuiTouchRipple-childLeaving",
                                                                    "childPulsate": "MuiTouchRipple-childPulsate",
                                                                    "ripple": "MuiTouchRipple-ripple",
                                                                    "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                    "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                    "root": "MuiTouchRipple-root",
                                                                  }
                                                                }
                                                              >
                                                                <span
                                                                  className="MuiTouchRipple-root"
                                                                >
                                                                  <TransitionGroup
                                                                    childFactory={[Function]}
                                                                    component={null}
                                                                    exit={true}
                                                                  />
                                                                </span>
                                                              </ForwardRef(TouchRipple)>
                                                            </WithStyles(memo)>
                                                          </NoSsr>
                                                        </button>
                                                      </ForwardRef(ButtonBase)>
                                                    </WithStyles(ForwardRef(ButtonBase))>
                                                  </ForwardRef(IconButton)>
                                                </WithStyles(ForwardRef(IconButton))>
                                              </Day>
                                            </div>
                                          </DayWrapper>
                                          <DayWrapper
                                            dayInCurrentMonth={true}
                                            disabled={false}
                                            key="Fri Feb 14 2020 00:00:00 GMT-0300 (Brasilia Standard Time)"
                                            onSelect={[Function]}
                                            value={2020-02-14T03:00:00.000Z}
                                          >
                                            <div
                                              onClick={[Function]}
                                              onKeyPress={[Function]}
                                              role="presentation"
                                            >
                                              <Day
                                                current={false}
                                                disabled={false}
                                                hidden={false}
                                                selected={false}
                                              >
                                                <WithStyles(ForwardRef(IconButton))
                                                  className="MuiPickersDay-day"
                                                  tabIndex={0}
                                                >
                                                  <ForwardRef(IconButton)
                                                    className="MuiPickersDay-day"
                                                    classes={
                                                      Object {
                                                        "colorInherit": "MuiIconButton-colorInherit",
                                                        "colorPrimary": "MuiIconButton-colorPrimary",
                                                        "colorSecondary": "MuiIconButton-colorSecondary",
                                                        "disabled": "Mui-disabled",
                                                        "edgeEnd": "MuiIconButton-edgeEnd",
                                                        "edgeStart": "MuiIconButton-edgeStart",
                                                        "label": "MuiIconButton-label",
                                                        "root": "MuiIconButton-root",
                                                        "sizeSmall": "MuiIconButton-sizeSmall",
                                                      }
                                                    }
                                                    tabIndex={0}
                                                  >
                                                    <WithStyles(ForwardRef(ButtonBase))
                                                      centerRipple={true}
                                                      className="MuiIconButton-root MuiPickersDay-day"
                                                      disabled={false}
                                                      focusRipple={true}
                                                      tabIndex={0}
                                                    >
                                                      <ForwardRef(ButtonBase)
                                                        centerRipple={true}
                                                        className="MuiIconButton-root MuiPickersDay-day"
                                                        classes={
                                                          Object {
                                                            "disabled": "Mui-disabled",
                                                            "focusVisible": "Mui-focusVisible",
                                                            "root": "MuiButtonBase-root",
                                                          }
                                                        }
                                                        disabled={false}
                                                        focusRipple={true}
                                                        tabIndex={0}
                                                      >
                                                        <button
                                                          className="MuiButtonBase-root MuiIconButton-root MuiPickersDay-day"
                                                          disabled={false}
                                                          onBlur={[Function]}
                                                          onDragLeave={[Function]}
                                                          onFocus={[Function]}
                                                          onKeyDown={[Function]}
                                                          onKeyUp={[Function]}
                                                          onMouseDown={[Function]}
                                                          onMouseLeave={[Function]}
                                                          onMouseUp={[Function]}
                                                          onTouchEnd={[Function]}
                                                          onTouchMove={[Function]}
                                                          onTouchStart={[Function]}
                                                          tabIndex={0}
                                                          type="button"
                                                        >
                                                          <span
                                                            className="MuiIconButton-label"
                                                          >
                                                            <WithStyles(ForwardRef(Typography))
                                                              color="inherit"
                                                              variant="body2"
                                                            >
                                                              <ForwardRef(Typography)
                                                                classes={
                                                                  Object {
                                                                    "alignCenter": "MuiTypography-alignCenter",
                                                                    "alignJustify": "MuiTypography-alignJustify",
                                                                    "alignLeft": "MuiTypography-alignLeft",
                                                                    "alignRight": "MuiTypography-alignRight",
                                                                    "body1": "MuiTypography-body1",
                                                                    "body2": "MuiTypography-body2",
                                                                    "button": "MuiTypography-button",
                                                                    "caption": "MuiTypography-caption",
                                                                    "colorError": "MuiTypography-colorError",
                                                                    "colorInherit": "MuiTypography-colorInherit",
                                                                    "colorPrimary": "MuiTypography-colorPrimary",
                                                                    "colorSecondary": "MuiTypography-colorSecondary",
                                                                    "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                    "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                    "displayBlock": "MuiTypography-displayBlock",
                                                                    "displayInline": "MuiTypography-displayInline",
                                                                    "gutterBottom": "MuiTypography-gutterBottom",
                                                                    "h1": "MuiTypography-h1",
                                                                    "h2": "MuiTypography-h2",
                                                                    "h3": "MuiTypography-h3",
                                                                    "h4": "MuiTypography-h4",
                                                                    "h5": "MuiTypography-h5",
                                                                    "h6": "MuiTypography-h6",
                                                                    "noWrap": "MuiTypography-noWrap",
                                                                    "overline": "MuiTypography-overline",
                                                                    "paragraph": "MuiTypography-paragraph",
                                                                    "root": "MuiTypography-root",
                                                                    "srOnly": "MuiTypography-srOnly",
                                                                    "subtitle1": "MuiTypography-subtitle1",
                                                                    "subtitle2": "MuiTypography-subtitle2",
                                                                  }
                                                                }
                                                                color="inherit"
                                                                variant="body2"
                                                              >
                                                                <p
                                                                  className="MuiTypography-root MuiTypography-body2 MuiTypography-colorInherit"
                                                                >
                                                                  14
                                                                </p>
                                                              </ForwardRef(Typography)>
                                                            </WithStyles(ForwardRef(Typography))>
                                                          </span>
                                                          <NoSsr>
                                                            <WithStyles(memo)
                                                              center={true}
                                                            >
                                                              <ForwardRef(TouchRipple)
                                                                center={true}
                                                                classes={
                                                                  Object {
                                                                    "child": "MuiTouchRipple-child",
                                                                    "childLeaving": "MuiTouchRipple-childLeaving",
                                                                    "childPulsate": "MuiTouchRipple-childPulsate",
                                                                    "ripple": "MuiTouchRipple-ripple",
                                                                    "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                    "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                    "root": "MuiTouchRipple-root",
                                                                  }
                                                                }
                                                              >
                                                                <span
                                                                  className="MuiTouchRipple-root"
                                                                >
                                                                  <TransitionGroup
                                                                    childFactory={[Function]}
                                                                    component={null}
                                                                    exit={true}
                                                                  />
                                                                </span>
                                                              </ForwardRef(TouchRipple)>
                                                            </WithStyles(memo)>
                                                          </NoSsr>
                                                        </button>
                                                      </ForwardRef(ButtonBase)>
                                                    </WithStyles(ForwardRef(ButtonBase))>
                                                  </ForwardRef(IconButton)>
                                                </WithStyles(ForwardRef(IconButton))>
                                              </Day>
                                            </div>
                                          </DayWrapper>
                                          <DayWrapper
                                            dayInCurrentMonth={true}
                                            disabled={false}
                                            key="Sat Feb 15 2020 00:00:00 GMT-0300 (Brasilia Standard Time)"
                                            onSelect={[Function]}
                                            value={2020-02-15T03:00:00.000Z}
                                          >
                                            <div
                                              onClick={[Function]}
                                              onKeyPress={[Function]}
                                              role="presentation"
                                            >
                                              <Day
                                                current={false}
                                                disabled={false}
                                                hidden={false}
                                                selected={false}
                                              >
                                                <WithStyles(ForwardRef(IconButton))
                                                  className="MuiPickersDay-day"
                                                  tabIndex={0}
                                                >
                                                  <ForwardRef(IconButton)
                                                    className="MuiPickersDay-day"
                                                    classes={
                                                      Object {
                                                        "colorInherit": "MuiIconButton-colorInherit",
                                                        "colorPrimary": "MuiIconButton-colorPrimary",
                                                        "colorSecondary": "MuiIconButton-colorSecondary",
                                                        "disabled": "Mui-disabled",
                                                        "edgeEnd": "MuiIconButton-edgeEnd",
                                                        "edgeStart": "MuiIconButton-edgeStart",
                                                        "label": "MuiIconButton-label",
                                                        "root": "MuiIconButton-root",
                                                        "sizeSmall": "MuiIconButton-sizeSmall",
                                                      }
                                                    }
                                                    tabIndex={0}
                                                  >
                                                    <WithStyles(ForwardRef(ButtonBase))
                                                      centerRipple={true}
                                                      className="MuiIconButton-root MuiPickersDay-day"
                                                      disabled={false}
                                                      focusRipple={true}
                                                      tabIndex={0}
                                                    >
                                                      <ForwardRef(ButtonBase)
                                                        centerRipple={true}
                                                        className="MuiIconButton-root MuiPickersDay-day"
                                                        classes={
                                                          Object {
                                                            "disabled": "Mui-disabled",
                                                            "focusVisible": "Mui-focusVisible",
                                                            "root": "MuiButtonBase-root",
                                                          }
                                                        }
                                                        disabled={false}
                                                        focusRipple={true}
                                                        tabIndex={0}
                                                      >
                                                        <button
                                                          className="MuiButtonBase-root MuiIconButton-root MuiPickersDay-day"
                                                          disabled={false}
                                                          onBlur={[Function]}
                                                          onDragLeave={[Function]}
                                                          onFocus={[Function]}
                                                          onKeyDown={[Function]}
                                                          onKeyUp={[Function]}
                                                          onMouseDown={[Function]}
                                                          onMouseLeave={[Function]}
                                                          onMouseUp={[Function]}
                                                          onTouchEnd={[Function]}
                                                          onTouchMove={[Function]}
                                                          onTouchStart={[Function]}
                                                          tabIndex={0}
                                                          type="button"
                                                        >
                                                          <span
                                                            className="MuiIconButton-label"
                                                          >
                                                            <WithStyles(ForwardRef(Typography))
                                                              color="inherit"
                                                              variant="body2"
                                                            >
                                                              <ForwardRef(Typography)
                                                                classes={
                                                                  Object {
                                                                    "alignCenter": "MuiTypography-alignCenter",
                                                                    "alignJustify": "MuiTypography-alignJustify",
                                                                    "alignLeft": "MuiTypography-alignLeft",
                                                                    "alignRight": "MuiTypography-alignRight",
                                                                    "body1": "MuiTypography-body1",
                                                                    "body2": "MuiTypography-body2",
                                                                    "button": "MuiTypography-button",
                                                                    "caption": "MuiTypography-caption",
                                                                    "colorError": "MuiTypography-colorError",
                                                                    "colorInherit": "MuiTypography-colorInherit",
                                                                    "colorPrimary": "MuiTypography-colorPrimary",
                                                                    "colorSecondary": "MuiTypography-colorSecondary",
                                                                    "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                    "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                    "displayBlock": "MuiTypography-displayBlock",
                                                                    "displayInline": "MuiTypography-displayInline",
                                                                    "gutterBottom": "MuiTypography-gutterBottom",
                                                                    "h1": "MuiTypography-h1",
                                                                    "h2": "MuiTypography-h2",
                                                                    "h3": "MuiTypography-h3",
                                                                    "h4": "MuiTypography-h4",
                                                                    "h5": "MuiTypography-h5",
                                                                    "h6": "MuiTypography-h6",
                                                                    "noWrap": "MuiTypography-noWrap",
                                                                    "overline": "MuiTypography-overline",
                                                                    "paragraph": "MuiTypography-paragraph",
                                                                    "root": "MuiTypography-root",
                                                                    "srOnly": "MuiTypography-srOnly",
                                                                    "subtitle1": "MuiTypography-subtitle1",
                                                                    "subtitle2": "MuiTypography-subtitle2",
                                                                  }
                                                                }
                                                                color="inherit"
                                                                variant="body2"
                                                              >
                                                                <p
                                                                  className="MuiTypography-root MuiTypography-body2 MuiTypography-colorInherit"
                                                                >
                                                                  15
                                                                </p>
                                                              </ForwardRef(Typography)>
                                                            </WithStyles(ForwardRef(Typography))>
                                                          </span>
                                                          <NoSsr>
                                                            <WithStyles(memo)
                                                              center={true}
                                                            >
                                                              <ForwardRef(TouchRipple)
                                                                center={true}
                                                                classes={
                                                                  Object {
                                                                    "child": "MuiTouchRipple-child",
                                                                    "childLeaving": "MuiTouchRipple-childLeaving",
                                                                    "childPulsate": "MuiTouchRipple-childPulsate",
                                                                    "ripple": "MuiTouchRipple-ripple",
                                                                    "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                    "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                    "root": "MuiTouchRipple-root",
                                                                  }
                                                                }
                                                              >
                                                                <span
                                                                  className="MuiTouchRipple-root"
                                                                >
                                                                  <TransitionGroup
                                                                    childFactory={[Function]}
                                                                    component={null}
                                                                    exit={true}
                                                                  />
                                                                </span>
                                                              </ForwardRef(TouchRipple)>
                                                            </WithStyles(memo)>
                                                          </NoSsr>
                                                        </button>
                                                      </ForwardRef(ButtonBase)>
                                                    </WithStyles(ForwardRef(ButtonBase))>
                                                  </ForwardRef(IconButton)>
                                                </WithStyles(ForwardRef(IconButton))>
                                              </Day>
                                            </div>
                                          </DayWrapper>
                                        </div>
                                        <div
                                          className="MuiPickersCalendar-week"
                                          key="week-Sun Feb 16 2020 00:00:00 GMT-0300 (Brasilia Standard Time)"
                                        >
                                          <DayWrapper
                                            dayInCurrentMonth={true}
                                            disabled={false}
                                            key="Sun Feb 16 2020 00:00:00 GMT-0300 (Brasilia Standard Time)"
                                            onSelect={[Function]}
                                            value={2020-02-16T03:00:00.000Z}
                                          >
                                            <div
                                              onClick={[Function]}
                                              onKeyPress={[Function]}
                                              role="presentation"
                                            >
                                              <Day
                                                current={false}
                                                disabled={false}
                                                hidden={false}
                                                selected={false}
                                              >
                                                <WithStyles(ForwardRef(IconButton))
                                                  className="MuiPickersDay-day"
                                                  tabIndex={0}
                                                >
                                                  <ForwardRef(IconButton)
                                                    className="MuiPickersDay-day"
                                                    classes={
                                                      Object {
                                                        "colorInherit": "MuiIconButton-colorInherit",
                                                        "colorPrimary": "MuiIconButton-colorPrimary",
                                                        "colorSecondary": "MuiIconButton-colorSecondary",
                                                        "disabled": "Mui-disabled",
                                                        "edgeEnd": "MuiIconButton-edgeEnd",
                                                        "edgeStart": "MuiIconButton-edgeStart",
                                                        "label": "MuiIconButton-label",
                                                        "root": "MuiIconButton-root",
                                                        "sizeSmall": "MuiIconButton-sizeSmall",
                                                      }
                                                    }
                                                    tabIndex={0}
                                                  >
                                                    <WithStyles(ForwardRef(ButtonBase))
                                                      centerRipple={true}
                                                      className="MuiIconButton-root MuiPickersDay-day"
                                                      disabled={false}
                                                      focusRipple={true}
                                                      tabIndex={0}
                                                    >
                                                      <ForwardRef(ButtonBase)
                                                        centerRipple={true}
                                                        className="MuiIconButton-root MuiPickersDay-day"
                                                        classes={
                                                          Object {
                                                            "disabled": "Mui-disabled",
                                                            "focusVisible": "Mui-focusVisible",
                                                            "root": "MuiButtonBase-root",
                                                          }
                                                        }
                                                        disabled={false}
                                                        focusRipple={true}
                                                        tabIndex={0}
                                                      >
                                                        <button
                                                          className="MuiButtonBase-root MuiIconButton-root MuiPickersDay-day"
                                                          disabled={false}
                                                          onBlur={[Function]}
                                                          onDragLeave={[Function]}
                                                          onFocus={[Function]}
                                                          onKeyDown={[Function]}
                                                          onKeyUp={[Function]}
                                                          onMouseDown={[Function]}
                                                          onMouseLeave={[Function]}
                                                          onMouseUp={[Function]}
                                                          onTouchEnd={[Function]}
                                                          onTouchMove={[Function]}
                                                          onTouchStart={[Function]}
                                                          tabIndex={0}
                                                          type="button"
                                                        >
                                                          <span
                                                            className="MuiIconButton-label"
                                                          >
                                                            <WithStyles(ForwardRef(Typography))
                                                              color="inherit"
                                                              variant="body2"
                                                            >
                                                              <ForwardRef(Typography)
                                                                classes={
                                                                  Object {
                                                                    "alignCenter": "MuiTypography-alignCenter",
                                                                    "alignJustify": "MuiTypography-alignJustify",
                                                                    "alignLeft": "MuiTypography-alignLeft",
                                                                    "alignRight": "MuiTypography-alignRight",
                                                                    "body1": "MuiTypography-body1",
                                                                    "body2": "MuiTypography-body2",
                                                                    "button": "MuiTypography-button",
                                                                    "caption": "MuiTypography-caption",
                                                                    "colorError": "MuiTypography-colorError",
                                                                    "colorInherit": "MuiTypography-colorInherit",
                                                                    "colorPrimary": "MuiTypography-colorPrimary",
                                                                    "colorSecondary": "MuiTypography-colorSecondary",
                                                                    "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                    "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                    "displayBlock": "MuiTypography-displayBlock",
                                                                    "displayInline": "MuiTypography-displayInline",
                                                                    "gutterBottom": "MuiTypography-gutterBottom",
                                                                    "h1": "MuiTypography-h1",
                                                                    "h2": "MuiTypography-h2",
                                                                    "h3": "MuiTypography-h3",
                                                                    "h4": "MuiTypography-h4",
                                                                    "h5": "MuiTypography-h5",
                                                                    "h6": "MuiTypography-h6",
                                                                    "noWrap": "MuiTypography-noWrap",
                                                                    "overline": "MuiTypography-overline",
                                                                    "paragraph": "MuiTypography-paragraph",
                                                                    "root": "MuiTypography-root",
                                                                    "srOnly": "MuiTypography-srOnly",
                                                                    "subtitle1": "MuiTypography-subtitle1",
                                                                    "subtitle2": "MuiTypography-subtitle2",
                                                                  }
                                                                }
                                                                color="inherit"
                                                                variant="body2"
                                                              >
                                                                <p
                                                                  className="MuiTypography-root MuiTypography-body2 MuiTypography-colorInherit"
                                                                >
                                                                  16
                                                                </p>
                                                              </ForwardRef(Typography)>
                                                            </WithStyles(ForwardRef(Typography))>
                                                          </span>
                                                          <NoSsr>
                                                            <WithStyles(memo)
                                                              center={true}
                                                            >
                                                              <ForwardRef(TouchRipple)
                                                                center={true}
                                                                classes={
                                                                  Object {
                                                                    "child": "MuiTouchRipple-child",
                                                                    "childLeaving": "MuiTouchRipple-childLeaving",
                                                                    "childPulsate": "MuiTouchRipple-childPulsate",
                                                                    "ripple": "MuiTouchRipple-ripple",
                                                                    "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                    "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                    "root": "MuiTouchRipple-root",
                                                                  }
                                                                }
                                                              >
                                                                <span
                                                                  className="MuiTouchRipple-root"
                                                                >
                                                                  <TransitionGroup
                                                                    childFactory={[Function]}
                                                                    component={null}
                                                                    exit={true}
                                                                  />
                                                                </span>
                                                              </ForwardRef(TouchRipple)>
                                                            </WithStyles(memo)>
                                                          </NoSsr>
                                                        </button>
                                                      </ForwardRef(ButtonBase)>
                                                    </WithStyles(ForwardRef(ButtonBase))>
                                                  </ForwardRef(IconButton)>
                                                </WithStyles(ForwardRef(IconButton))>
                                              </Day>
                                            </div>
                                          </DayWrapper>
                                          <DayWrapper
                                            dayInCurrentMonth={true}
                                            disabled={false}
                                            key="Mon Feb 17 2020 00:00:00 GMT-0300 (Brasilia Standard Time)"
                                            onSelect={[Function]}
                                            value={2020-02-17T03:00:00.000Z}
                                          >
                                            <div
                                              onClick={[Function]}
                                              onKeyPress={[Function]}
                                              role="presentation"
                                            >
                                              <Day
                                                current={false}
                                                disabled={false}
                                                hidden={false}
                                                selected={false}
                                              >
                                                <WithStyles(ForwardRef(IconButton))
                                                  className="MuiPickersDay-day"
                                                  tabIndex={0}
                                                >
                                                  <ForwardRef(IconButton)
                                                    className="MuiPickersDay-day"
                                                    classes={
                                                      Object {
                                                        "colorInherit": "MuiIconButton-colorInherit",
                                                        "colorPrimary": "MuiIconButton-colorPrimary",
                                                        "colorSecondary": "MuiIconButton-colorSecondary",
                                                        "disabled": "Mui-disabled",
                                                        "edgeEnd": "MuiIconButton-edgeEnd",
                                                        "edgeStart": "MuiIconButton-edgeStart",
                                                        "label": "MuiIconButton-label",
                                                        "root": "MuiIconButton-root",
                                                        "sizeSmall": "MuiIconButton-sizeSmall",
                                                      }
                                                    }
                                                    tabIndex={0}
                                                  >
                                                    <WithStyles(ForwardRef(ButtonBase))
                                                      centerRipple={true}
                                                      className="MuiIconButton-root MuiPickersDay-day"
                                                      disabled={false}
                                                      focusRipple={true}
                                                      tabIndex={0}
                                                    >
                                                      <ForwardRef(ButtonBase)
                                                        centerRipple={true}
                                                        className="MuiIconButton-root MuiPickersDay-day"
                                                        classes={
                                                          Object {
                                                            "disabled": "Mui-disabled",
                                                            "focusVisible": "Mui-focusVisible",
                                                            "root": "MuiButtonBase-root",
                                                          }
                                                        }
                                                        disabled={false}
                                                        focusRipple={true}
                                                        tabIndex={0}
                                                      >
                                                        <button
                                                          className="MuiButtonBase-root MuiIconButton-root MuiPickersDay-day"
                                                          disabled={false}
                                                          onBlur={[Function]}
                                                          onDragLeave={[Function]}
                                                          onFocus={[Function]}
                                                          onKeyDown={[Function]}
                                                          onKeyUp={[Function]}
                                                          onMouseDown={[Function]}
                                                          onMouseLeave={[Function]}
                                                          onMouseUp={[Function]}
                                                          onTouchEnd={[Function]}
                                                          onTouchMove={[Function]}
                                                          onTouchStart={[Function]}
                                                          tabIndex={0}
                                                          type="button"
                                                        >
                                                          <span
                                                            className="MuiIconButton-label"
                                                          >
                                                            <WithStyles(ForwardRef(Typography))
                                                              color="inherit"
                                                              variant="body2"
                                                            >
                                                              <ForwardRef(Typography)
                                                                classes={
                                                                  Object {
                                                                    "alignCenter": "MuiTypography-alignCenter",
                                                                    "alignJustify": "MuiTypography-alignJustify",
                                                                    "alignLeft": "MuiTypography-alignLeft",
                                                                    "alignRight": "MuiTypography-alignRight",
                                                                    "body1": "MuiTypography-body1",
                                                                    "body2": "MuiTypography-body2",
                                                                    "button": "MuiTypography-button",
                                                                    "caption": "MuiTypography-caption",
                                                                    "colorError": "MuiTypography-colorError",
                                                                    "colorInherit": "MuiTypography-colorInherit",
                                                                    "colorPrimary": "MuiTypography-colorPrimary",
                                                                    "colorSecondary": "MuiTypography-colorSecondary",
                                                                    "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                    "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                    "displayBlock": "MuiTypography-displayBlock",
                                                                    "displayInline": "MuiTypography-displayInline",
                                                                    "gutterBottom": "MuiTypography-gutterBottom",
                                                                    "h1": "MuiTypography-h1",
                                                                    "h2": "MuiTypography-h2",
                                                                    "h3": "MuiTypography-h3",
                                                                    "h4": "MuiTypography-h4",
                                                                    "h5": "MuiTypography-h5",
                                                                    "h6": "MuiTypography-h6",
                                                                    "noWrap": "MuiTypography-noWrap",
                                                                    "overline": "MuiTypography-overline",
                                                                    "paragraph": "MuiTypography-paragraph",
                                                                    "root": "MuiTypography-root",
                                                                    "srOnly": "MuiTypography-srOnly",
                                                                    "subtitle1": "MuiTypography-subtitle1",
                                                                    "subtitle2": "MuiTypography-subtitle2",
                                                                  }
                                                                }
                                                                color="inherit"
                                                                variant="body2"
                                                              >
                                                                <p
                                                                  className="MuiTypography-root MuiTypography-body2 MuiTypography-colorInherit"
                                                                >
                                                                  17
                                                                </p>
                                                              </ForwardRef(Typography)>
                                                            </WithStyles(ForwardRef(Typography))>
                                                          </span>
                                                          <NoSsr>
                                                            <WithStyles(memo)
                                                              center={true}
                                                            >
                                                              <ForwardRef(TouchRipple)
                                                                center={true}
                                                                classes={
                                                                  Object {
                                                                    "child": "MuiTouchRipple-child",
                                                                    "childLeaving": "MuiTouchRipple-childLeaving",
                                                                    "childPulsate": "MuiTouchRipple-childPulsate",
                                                                    "ripple": "MuiTouchRipple-ripple",
                                                                    "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                    "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                    "root": "MuiTouchRipple-root",
                                                                  }
                                                                }
                                                              >
                                                                <span
                                                                  className="MuiTouchRipple-root"
                                                                >
                                                                  <TransitionGroup
                                                                    childFactory={[Function]}
                                                                    component={null}
                                                                    exit={true}
                                                                  />
                                                                </span>
                                                              </ForwardRef(TouchRipple)>
                                                            </WithStyles(memo)>
                                                          </NoSsr>
                                                        </button>
                                                      </ForwardRef(ButtonBase)>
                                                    </WithStyles(ForwardRef(ButtonBase))>
                                                  </ForwardRef(IconButton)>
                                                </WithStyles(ForwardRef(IconButton))>
                                              </Day>
                                            </div>
                                          </DayWrapper>
                                          <DayWrapper
                                            dayInCurrentMonth={true}
                                            disabled={false}
                                            key="Tue Feb 18 2020 00:00:00 GMT-0300 (Brasilia Standard Time)"
                                            onSelect={[Function]}
                                            value={2020-02-18T03:00:00.000Z}
                                          >
                                            <div
                                              onClick={[Function]}
                                              onKeyPress={[Function]}
                                              role="presentation"
                                            >
                                              <Day
                                                current={false}
                                                disabled={false}
                                                hidden={false}
                                                selected={false}
                                              >
                                                <WithStyles(ForwardRef(IconButton))
                                                  className="MuiPickersDay-day"
                                                  tabIndex={0}
                                                >
                                                  <ForwardRef(IconButton)
                                                    className="MuiPickersDay-day"
                                                    classes={
                                                      Object {
                                                        "colorInherit": "MuiIconButton-colorInherit",
                                                        "colorPrimary": "MuiIconButton-colorPrimary",
                                                        "colorSecondary": "MuiIconButton-colorSecondary",
                                                        "disabled": "Mui-disabled",
                                                        "edgeEnd": "MuiIconButton-edgeEnd",
                                                        "edgeStart": "MuiIconButton-edgeStart",
                                                        "label": "MuiIconButton-label",
                                                        "root": "MuiIconButton-root",
                                                        "sizeSmall": "MuiIconButton-sizeSmall",
                                                      }
                                                    }
                                                    tabIndex={0}
                                                  >
                                                    <WithStyles(ForwardRef(ButtonBase))
                                                      centerRipple={true}
                                                      className="MuiIconButton-root MuiPickersDay-day"
                                                      disabled={false}
                                                      focusRipple={true}
                                                      tabIndex={0}
                                                    >
                                                      <ForwardRef(ButtonBase)
                                                        centerRipple={true}
                                                        className="MuiIconButton-root MuiPickersDay-day"
                                                        classes={
                                                          Object {
                                                            "disabled": "Mui-disabled",
                                                            "focusVisible": "Mui-focusVisible",
                                                            "root": "MuiButtonBase-root",
                                                          }
                                                        }
                                                        disabled={false}
                                                        focusRipple={true}
                                                        tabIndex={0}
                                                      >
                                                        <button
                                                          className="MuiButtonBase-root MuiIconButton-root MuiPickersDay-day"
                                                          disabled={false}
                                                          onBlur={[Function]}
                                                          onDragLeave={[Function]}
                                                          onFocus={[Function]}
                                                          onKeyDown={[Function]}
                                                          onKeyUp={[Function]}
                                                          onMouseDown={[Function]}
                                                          onMouseLeave={[Function]}
                                                          onMouseUp={[Function]}
                                                          onTouchEnd={[Function]}
                                                          onTouchMove={[Function]}
                                                          onTouchStart={[Function]}
                                                          tabIndex={0}
                                                          type="button"
                                                        >
                                                          <span
                                                            className="MuiIconButton-label"
                                                          >
                                                            <WithStyles(ForwardRef(Typography))
                                                              color="inherit"
                                                              variant="body2"
                                                            >
                                                              <ForwardRef(Typography)
                                                                classes={
                                                                  Object {
                                                                    "alignCenter": "MuiTypography-alignCenter",
                                                                    "alignJustify": "MuiTypography-alignJustify",
                                                                    "alignLeft": "MuiTypography-alignLeft",
                                                                    "alignRight": "MuiTypography-alignRight",
                                                                    "body1": "MuiTypography-body1",
                                                                    "body2": "MuiTypography-body2",
                                                                    "button": "MuiTypography-button",
                                                                    "caption": "MuiTypography-caption",
                                                                    "colorError": "MuiTypography-colorError",
                                                                    "colorInherit": "MuiTypography-colorInherit",
                                                                    "colorPrimary": "MuiTypography-colorPrimary",
                                                                    "colorSecondary": "MuiTypography-colorSecondary",
                                                                    "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                    "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                    "displayBlock": "MuiTypography-displayBlock",
                                                                    "displayInline": "MuiTypography-displayInline",
                                                                    "gutterBottom": "MuiTypography-gutterBottom",
                                                                    "h1": "MuiTypography-h1",
                                                                    "h2": "MuiTypography-h2",
                                                                    "h3": "MuiTypography-h3",
                                                                    "h4": "MuiTypography-h4",
                                                                    "h5": "MuiTypography-h5",
                                                                    "h6": "MuiTypography-h6",
                                                                    "noWrap": "MuiTypography-noWrap",
                                                                    "overline": "MuiTypography-overline",
                                                                    "paragraph": "MuiTypography-paragraph",
                                                                    "root": "MuiTypography-root",
                                                                    "srOnly": "MuiTypography-srOnly",
                                                                    "subtitle1": "MuiTypography-subtitle1",
                                                                    "subtitle2": "MuiTypography-subtitle2",
                                                                  }
                                                                }
                                                                color="inherit"
                                                                variant="body2"
                                                              >
                                                                <p
                                                                  className="MuiTypography-root MuiTypography-body2 MuiTypography-colorInherit"
                                                                >
                                                                  18
                                                                </p>
                                                              </ForwardRef(Typography)>
                                                            </WithStyles(ForwardRef(Typography))>
                                                          </span>
                                                          <NoSsr>
                                                            <WithStyles(memo)
                                                              center={true}
                                                            >
                                                              <ForwardRef(TouchRipple)
                                                                center={true}
                                                                classes={
                                                                  Object {
                                                                    "child": "MuiTouchRipple-child",
                                                                    "childLeaving": "MuiTouchRipple-childLeaving",
                                                                    "childPulsate": "MuiTouchRipple-childPulsate",
                                                                    "ripple": "MuiTouchRipple-ripple",
                                                                    "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                    "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                    "root": "MuiTouchRipple-root",
                                                                  }
                                                                }
                                                              >
                                                                <span
                                                                  className="MuiTouchRipple-root"
                                                                >
                                                                  <TransitionGroup
                                                                    childFactory={[Function]}
                                                                    component={null}
                                                                    exit={true}
                                                                  />
                                                                </span>
                                                              </ForwardRef(TouchRipple)>
                                                            </WithStyles(memo)>
                                                          </NoSsr>
                                                        </button>
                                                      </ForwardRef(ButtonBase)>
                                                    </WithStyles(ForwardRef(ButtonBase))>
                                                  </ForwardRef(IconButton)>
                                                </WithStyles(ForwardRef(IconButton))>
                                              </Day>
                                            </div>
                                          </DayWrapper>
                                          <DayWrapper
                                            dayInCurrentMonth={true}
                                            disabled={false}
                                            key="Wed Feb 19 2020 00:00:00 GMT-0300 (Brasilia Standard Time)"
                                            onSelect={[Function]}
                                            value={2020-02-19T03:00:00.000Z}
                                          >
                                            <div
                                              onClick={[Function]}
                                              onKeyPress={[Function]}
                                              role="presentation"
                                            >
                                              <Day
                                                current={false}
                                                disabled={false}
                                                hidden={false}
                                                selected={false}
                                              >
                                                <WithStyles(ForwardRef(IconButton))
                                                  className="MuiPickersDay-day"
                                                  tabIndex={0}
                                                >
                                                  <ForwardRef(IconButton)
                                                    className="MuiPickersDay-day"
                                                    classes={
                                                      Object {
                                                        "colorInherit": "MuiIconButton-colorInherit",
                                                        "colorPrimary": "MuiIconButton-colorPrimary",
                                                        "colorSecondary": "MuiIconButton-colorSecondary",
                                                        "disabled": "Mui-disabled",
                                                        "edgeEnd": "MuiIconButton-edgeEnd",
                                                        "edgeStart": "MuiIconButton-edgeStart",
                                                        "label": "MuiIconButton-label",
                                                        "root": "MuiIconButton-root",
                                                        "sizeSmall": "MuiIconButton-sizeSmall",
                                                      }
                                                    }
                                                    tabIndex={0}
                                                  >
                                                    <WithStyles(ForwardRef(ButtonBase))
                                                      centerRipple={true}
                                                      className="MuiIconButton-root MuiPickersDay-day"
                                                      disabled={false}
                                                      focusRipple={true}
                                                      tabIndex={0}
                                                    >
                                                      <ForwardRef(ButtonBase)
                                                        centerRipple={true}
                                                        className="MuiIconButton-root MuiPickersDay-day"
                                                        classes={
                                                          Object {
                                                            "disabled": "Mui-disabled",
                                                            "focusVisible": "Mui-focusVisible",
                                                            "root": "MuiButtonBase-root",
                                                          }
                                                        }
                                                        disabled={false}
                                                        focusRipple={true}
                                                        tabIndex={0}
                                                      >
                                                        <button
                                                          className="MuiButtonBase-root MuiIconButton-root MuiPickersDay-day"
                                                          disabled={false}
                                                          onBlur={[Function]}
                                                          onDragLeave={[Function]}
                                                          onFocus={[Function]}
                                                          onKeyDown={[Function]}
                                                          onKeyUp={[Function]}
                                                          onMouseDown={[Function]}
                                                          onMouseLeave={[Function]}
                                                          onMouseUp={[Function]}
                                                          onTouchEnd={[Function]}
                                                          onTouchMove={[Function]}
                                                          onTouchStart={[Function]}
                                                          tabIndex={0}
                                                          type="button"
                                                        >
                                                          <span
                                                            className="MuiIconButton-label"
                                                          >
                                                            <WithStyles(ForwardRef(Typography))
                                                              color="inherit"
                                                              variant="body2"
                                                            >
                                                              <ForwardRef(Typography)
                                                                classes={
                                                                  Object {
                                                                    "alignCenter": "MuiTypography-alignCenter",
                                                                    "alignJustify": "MuiTypography-alignJustify",
                                                                    "alignLeft": "MuiTypography-alignLeft",
                                                                    "alignRight": "MuiTypography-alignRight",
                                                                    "body1": "MuiTypography-body1",
                                                                    "body2": "MuiTypography-body2",
                                                                    "button": "MuiTypography-button",
                                                                    "caption": "MuiTypography-caption",
                                                                    "colorError": "MuiTypography-colorError",
                                                                    "colorInherit": "MuiTypography-colorInherit",
                                                                    "colorPrimary": "MuiTypography-colorPrimary",
                                                                    "colorSecondary": "MuiTypography-colorSecondary",
                                                                    "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                    "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                    "displayBlock": "MuiTypography-displayBlock",
                                                                    "displayInline": "MuiTypography-displayInline",
                                                                    "gutterBottom": "MuiTypography-gutterBottom",
                                                                    "h1": "MuiTypography-h1",
                                                                    "h2": "MuiTypography-h2",
                                                                    "h3": "MuiTypography-h3",
                                                                    "h4": "MuiTypography-h4",
                                                                    "h5": "MuiTypography-h5",
                                                                    "h6": "MuiTypography-h6",
                                                                    "noWrap": "MuiTypography-noWrap",
                                                                    "overline": "MuiTypography-overline",
                                                                    "paragraph": "MuiTypography-paragraph",
                                                                    "root": "MuiTypography-root",
                                                                    "srOnly": "MuiTypography-srOnly",
                                                                    "subtitle1": "MuiTypography-subtitle1",
                                                                    "subtitle2": "MuiTypography-subtitle2",
                                                                  }
                                                                }
                                                                color="inherit"
                                                                variant="body2"
                                                              >
                                                                <p
                                                                  className="MuiTypography-root MuiTypography-body2 MuiTypography-colorInherit"
                                                                >
                                                                  19
                                                                </p>
                                                              </ForwardRef(Typography)>
                                                            </WithStyles(ForwardRef(Typography))>
                                                          </span>
                                                          <NoSsr>
                                                            <WithStyles(memo)
                                                              center={true}
                                                            >
                                                              <ForwardRef(TouchRipple)
                                                                center={true}
                                                                classes={
                                                                  Object {
                                                                    "child": "MuiTouchRipple-child",
                                                                    "childLeaving": "MuiTouchRipple-childLeaving",
                                                                    "childPulsate": "MuiTouchRipple-childPulsate",
                                                                    "ripple": "MuiTouchRipple-ripple",
                                                                    "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                    "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                    "root": "MuiTouchRipple-root",
                                                                  }
                                                                }
                                                              >
                                                                <span
                                                                  className="MuiTouchRipple-root"
                                                                >
                                                                  <TransitionGroup
                                                                    childFactory={[Function]}
                                                                    component={null}
                                                                    exit={true}
                                                                  />
                                                                </span>
                                                              </ForwardRef(TouchRipple)>
                                                            </WithStyles(memo)>
                                                          </NoSsr>
                                                        </button>
                                                      </ForwardRef(ButtonBase)>
                                                    </WithStyles(ForwardRef(ButtonBase))>
                                                  </ForwardRef(IconButton)>
                                                </WithStyles(ForwardRef(IconButton))>
                                              </Day>
                                            </div>
                                          </DayWrapper>
                                          <DayWrapper
                                            dayInCurrentMonth={true}
                                            disabled={false}
                                            key="Thu Feb 20 2020 00:00:00 GMT-0300 (Brasilia Standard Time)"
                                            onSelect={[Function]}
                                            value={2020-02-20T03:00:00.000Z}
                                          >
                                            <div
                                              onClick={[Function]}
                                              onKeyPress={[Function]}
                                              role="presentation"
                                            >
                                              <Day
                                                current={false}
                                                disabled={false}
                                                hidden={false}
                                                selected={false}
                                              >
                                                <WithStyles(ForwardRef(IconButton))
                                                  className="MuiPickersDay-day"
                                                  tabIndex={0}
                                                >
                                                  <ForwardRef(IconButton)
                                                    className="MuiPickersDay-day"
                                                    classes={
                                                      Object {
                                                        "colorInherit": "MuiIconButton-colorInherit",
                                                        "colorPrimary": "MuiIconButton-colorPrimary",
                                                        "colorSecondary": "MuiIconButton-colorSecondary",
                                                        "disabled": "Mui-disabled",
                                                        "edgeEnd": "MuiIconButton-edgeEnd",
                                                        "edgeStart": "MuiIconButton-edgeStart",
                                                        "label": "MuiIconButton-label",
                                                        "root": "MuiIconButton-root",
                                                        "sizeSmall": "MuiIconButton-sizeSmall",
                                                      }
                                                    }
                                                    tabIndex={0}
                                                  >
                                                    <WithStyles(ForwardRef(ButtonBase))
                                                      centerRipple={true}
                                                      className="MuiIconButton-root MuiPickersDay-day"
                                                      disabled={false}
                                                      focusRipple={true}
                                                      tabIndex={0}
                                                    >
                                                      <ForwardRef(ButtonBase)
                                                        centerRipple={true}
                                                        className="MuiIconButton-root MuiPickersDay-day"
                                                        classes={
                                                          Object {
                                                            "disabled": "Mui-disabled",
                                                            "focusVisible": "Mui-focusVisible",
                                                            "root": "MuiButtonBase-root",
                                                          }
                                                        }
                                                        disabled={false}
                                                        focusRipple={true}
                                                        tabIndex={0}
                                                      >
                                                        <button
                                                          className="MuiButtonBase-root MuiIconButton-root MuiPickersDay-day"
                                                          disabled={false}
                                                          onBlur={[Function]}
                                                          onDragLeave={[Function]}
                                                          onFocus={[Function]}
                                                          onKeyDown={[Function]}
                                                          onKeyUp={[Function]}
                                                          onMouseDown={[Function]}
                                                          onMouseLeave={[Function]}
                                                          onMouseUp={[Function]}
                                                          onTouchEnd={[Function]}
                                                          onTouchMove={[Function]}
                                                          onTouchStart={[Function]}
                                                          tabIndex={0}
                                                          type="button"
                                                        >
                                                          <span
                                                            className="MuiIconButton-label"
                                                          >
                                                            <WithStyles(ForwardRef(Typography))
                                                              color="inherit"
                                                              variant="body2"
                                                            >
                                                              <ForwardRef(Typography)
                                                                classes={
                                                                  Object {
                                                                    "alignCenter": "MuiTypography-alignCenter",
                                                                    "alignJustify": "MuiTypography-alignJustify",
                                                                    "alignLeft": "MuiTypography-alignLeft",
                                                                    "alignRight": "MuiTypography-alignRight",
                                                                    "body1": "MuiTypography-body1",
                                                                    "body2": "MuiTypography-body2",
                                                                    "button": "MuiTypography-button",
                                                                    "caption": "MuiTypography-caption",
                                                                    "colorError": "MuiTypography-colorError",
                                                                    "colorInherit": "MuiTypography-colorInherit",
                                                                    "colorPrimary": "MuiTypography-colorPrimary",
                                                                    "colorSecondary": "MuiTypography-colorSecondary",
                                                                    "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                    "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                    "displayBlock": "MuiTypography-displayBlock",
                                                                    "displayInline": "MuiTypography-displayInline",
                                                                    "gutterBottom": "MuiTypography-gutterBottom",
                                                                    "h1": "MuiTypography-h1",
                                                                    "h2": "MuiTypography-h2",
                                                                    "h3": "MuiTypography-h3",
                                                                    "h4": "MuiTypography-h4",
                                                                    "h5": "MuiTypography-h5",
                                                                    "h6": "MuiTypography-h6",
                                                                    "noWrap": "MuiTypography-noWrap",
                                                                    "overline": "MuiTypography-overline",
                                                                    "paragraph": "MuiTypography-paragraph",
                                                                    "root": "MuiTypography-root",
                                                                    "srOnly": "MuiTypography-srOnly",
                                                                    "subtitle1": "MuiTypography-subtitle1",
                                                                    "subtitle2": "MuiTypography-subtitle2",
                                                                  }
                                                                }
                                                                color="inherit"
                                                                variant="body2"
                                                              >
                                                                <p
                                                                  className="MuiTypography-root MuiTypography-body2 MuiTypography-colorInherit"
                                                                >
                                                                  20
                                                                </p>
                                                              </ForwardRef(Typography)>
                                                            </WithStyles(ForwardRef(Typography))>
                                                          </span>
                                                          <NoSsr>
                                                            <WithStyles(memo)
                                                              center={true}
                                                            >
                                                              <ForwardRef(TouchRipple)
                                                                center={true}
                                                                classes={
                                                                  Object {
                                                                    "child": "MuiTouchRipple-child",
                                                                    "childLeaving": "MuiTouchRipple-childLeaving",
                                                                    "childPulsate": "MuiTouchRipple-childPulsate",
                                                                    "ripple": "MuiTouchRipple-ripple",
                                                                    "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                    "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                    "root": "MuiTouchRipple-root",
                                                                  }
                                                                }
                                                              >
                                                                <span
                                                                  className="MuiTouchRipple-root"
                                                                >
                                                                  <TransitionGroup
                                                                    childFactory={[Function]}
                                                                    component={null}
                                                                    exit={true}
                                                                  />
                                                                </span>
                                                              </ForwardRef(TouchRipple)>
                                                            </WithStyles(memo)>
                                                          </NoSsr>
                                                        </button>
                                                      </ForwardRef(ButtonBase)>
                                                    </WithStyles(ForwardRef(ButtonBase))>
                                                  </ForwardRef(IconButton)>
                                                </WithStyles(ForwardRef(IconButton))>
                                              </Day>
                                            </div>
                                          </DayWrapper>
                                          <DayWrapper
                                            dayInCurrentMonth={true}
                                            disabled={false}
                                            key="Fri Feb 21 2020 00:00:00 GMT-0300 (Brasilia Standard Time)"
                                            onSelect={[Function]}
                                            value={2020-02-21T03:00:00.000Z}
                                          >
                                            <div
                                              onClick={[Function]}
                                              onKeyPress={[Function]}
                                              role="presentation"
                                            >
                                              <Day
                                                current={false}
                                                disabled={false}
                                                hidden={false}
                                                selected={false}
                                              >
                                                <WithStyles(ForwardRef(IconButton))
                                                  className="MuiPickersDay-day"
                                                  tabIndex={0}
                                                >
                                                  <ForwardRef(IconButton)
                                                    className="MuiPickersDay-day"
                                                    classes={
                                                      Object {
                                                        "colorInherit": "MuiIconButton-colorInherit",
                                                        "colorPrimary": "MuiIconButton-colorPrimary",
                                                        "colorSecondary": "MuiIconButton-colorSecondary",
                                                        "disabled": "Mui-disabled",
                                                        "edgeEnd": "MuiIconButton-edgeEnd",
                                                        "edgeStart": "MuiIconButton-edgeStart",
                                                        "label": "MuiIconButton-label",
                                                        "root": "MuiIconButton-root",
                                                        "sizeSmall": "MuiIconButton-sizeSmall",
                                                      }
                                                    }
                                                    tabIndex={0}
                                                  >
                                                    <WithStyles(ForwardRef(ButtonBase))
                                                      centerRipple={true}
                                                      className="MuiIconButton-root MuiPickersDay-day"
                                                      disabled={false}
                                                      focusRipple={true}
                                                      tabIndex={0}
                                                    >
                                                      <ForwardRef(ButtonBase)
                                                        centerRipple={true}
                                                        className="MuiIconButton-root MuiPickersDay-day"
                                                        classes={
                                                          Object {
                                                            "disabled": "Mui-disabled",
                                                            "focusVisible": "Mui-focusVisible",
                                                            "root": "MuiButtonBase-root",
                                                          }
                                                        }
                                                        disabled={false}
                                                        focusRipple={true}
                                                        tabIndex={0}
                                                      >
                                                        <button
                                                          className="MuiButtonBase-root MuiIconButton-root MuiPickersDay-day"
                                                          disabled={false}
                                                          onBlur={[Function]}
                                                          onDragLeave={[Function]}
                                                          onFocus={[Function]}
                                                          onKeyDown={[Function]}
                                                          onKeyUp={[Function]}
                                                          onMouseDown={[Function]}
                                                          onMouseLeave={[Function]}
                                                          onMouseUp={[Function]}
                                                          onTouchEnd={[Function]}
                                                          onTouchMove={[Function]}
                                                          onTouchStart={[Function]}
                                                          tabIndex={0}
                                                          type="button"
                                                        >
                                                          <span
                                                            className="MuiIconButton-label"
                                                          >
                                                            <WithStyles(ForwardRef(Typography))
                                                              color="inherit"
                                                              variant="body2"
                                                            >
                                                              <ForwardRef(Typography)
                                                                classes={
                                                                  Object {
                                                                    "alignCenter": "MuiTypography-alignCenter",
                                                                    "alignJustify": "MuiTypography-alignJustify",
                                                                    "alignLeft": "MuiTypography-alignLeft",
                                                                    "alignRight": "MuiTypography-alignRight",
                                                                    "body1": "MuiTypography-body1",
                                                                    "body2": "MuiTypography-body2",
                                                                    "button": "MuiTypography-button",
                                                                    "caption": "MuiTypography-caption",
                                                                    "colorError": "MuiTypography-colorError",
                                                                    "colorInherit": "MuiTypography-colorInherit",
                                                                    "colorPrimary": "MuiTypography-colorPrimary",
                                                                    "colorSecondary": "MuiTypography-colorSecondary",
                                                                    "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                    "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                    "displayBlock": "MuiTypography-displayBlock",
                                                                    "displayInline": "MuiTypography-displayInline",
                                                                    "gutterBottom": "MuiTypography-gutterBottom",
                                                                    "h1": "MuiTypography-h1",
                                                                    "h2": "MuiTypography-h2",
                                                                    "h3": "MuiTypography-h3",
                                                                    "h4": "MuiTypography-h4",
                                                                    "h5": "MuiTypography-h5",
                                                                    "h6": "MuiTypography-h6",
                                                                    "noWrap": "MuiTypography-noWrap",
                                                                    "overline": "MuiTypography-overline",
                                                                    "paragraph": "MuiTypography-paragraph",
                                                                    "root": "MuiTypography-root",
                                                                    "srOnly": "MuiTypography-srOnly",
                                                                    "subtitle1": "MuiTypography-subtitle1",
                                                                    "subtitle2": "MuiTypography-subtitle2",
                                                                  }
                                                                }
                                                                color="inherit"
                                                                variant="body2"
                                                              >
                                                                <p
                                                                  className="MuiTypography-root MuiTypography-body2 MuiTypography-colorInherit"
                                                                >
                                                                  21
                                                                </p>
                                                              </ForwardRef(Typography)>
                                                            </WithStyles(ForwardRef(Typography))>
                                                          </span>
                                                          <NoSsr>
                                                            <WithStyles(memo)
                                                              center={true}
                                                            >
                                                              <ForwardRef(TouchRipple)
                                                                center={true}
                                                                classes={
                                                                  Object {
                                                                    "child": "MuiTouchRipple-child",
                                                                    "childLeaving": "MuiTouchRipple-childLeaving",
                                                                    "childPulsate": "MuiTouchRipple-childPulsate",
                                                                    "ripple": "MuiTouchRipple-ripple",
                                                                    "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                    "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                    "root": "MuiTouchRipple-root",
                                                                  }
                                                                }
                                                              >
                                                                <span
                                                                  className="MuiTouchRipple-root"
                                                                >
                                                                  <TransitionGroup
                                                                    childFactory={[Function]}
                                                                    component={null}
                                                                    exit={true}
                                                                  />
                                                                </span>
                                                              </ForwardRef(TouchRipple)>
                                                            </WithStyles(memo)>
                                                          </NoSsr>
                                                        </button>
                                                      </ForwardRef(ButtonBase)>
                                                    </WithStyles(ForwardRef(ButtonBase))>
                                                  </ForwardRef(IconButton)>
                                                </WithStyles(ForwardRef(IconButton))>
                                              </Day>
                                            </div>
                                          </DayWrapper>
                                          <DayWrapper
                                            dayInCurrentMonth={true}
                                            disabled={false}
                                            key="Sat Feb 22 2020 00:00:00 GMT-0300 (Brasilia Standard Time)"
                                            onSelect={[Function]}
                                            value={2020-02-22T03:00:00.000Z}
                                          >
                                            <div
                                              onClick={[Function]}
                                              onKeyPress={[Function]}
                                              role="presentation"
                                            >
                                              <Day
                                                current={false}
                                                disabled={false}
                                                hidden={false}
                                                selected={false}
                                              >
                                                <WithStyles(ForwardRef(IconButton))
                                                  className="MuiPickersDay-day"
                                                  tabIndex={0}
                                                >
                                                  <ForwardRef(IconButton)
                                                    className="MuiPickersDay-day"
                                                    classes={
                                                      Object {
                                                        "colorInherit": "MuiIconButton-colorInherit",
                                                        "colorPrimary": "MuiIconButton-colorPrimary",
                                                        "colorSecondary": "MuiIconButton-colorSecondary",
                                                        "disabled": "Mui-disabled",
                                                        "edgeEnd": "MuiIconButton-edgeEnd",
                                                        "edgeStart": "MuiIconButton-edgeStart",
                                                        "label": "MuiIconButton-label",
                                                        "root": "MuiIconButton-root",
                                                        "sizeSmall": "MuiIconButton-sizeSmall",
                                                      }
                                                    }
                                                    tabIndex={0}
                                                  >
                                                    <WithStyles(ForwardRef(ButtonBase))
                                                      centerRipple={true}
                                                      className="MuiIconButton-root MuiPickersDay-day"
                                                      disabled={false}
                                                      focusRipple={true}
                                                      tabIndex={0}
                                                    >
                                                      <ForwardRef(ButtonBase)
                                                        centerRipple={true}
                                                        className="MuiIconButton-root MuiPickersDay-day"
                                                        classes={
                                                          Object {
                                                            "disabled": "Mui-disabled",
                                                            "focusVisible": "Mui-focusVisible",
                                                            "root": "MuiButtonBase-root",
                                                          }
                                                        }
                                                        disabled={false}
                                                        focusRipple={true}
                                                        tabIndex={0}
                                                      >
                                                        <button
                                                          className="MuiButtonBase-root MuiIconButton-root MuiPickersDay-day"
                                                          disabled={false}
                                                          onBlur={[Function]}
                                                          onDragLeave={[Function]}
                                                          onFocus={[Function]}
                                                          onKeyDown={[Function]}
                                                          onKeyUp={[Function]}
                                                          onMouseDown={[Function]}
                                                          onMouseLeave={[Function]}
                                                          onMouseUp={[Function]}
                                                          onTouchEnd={[Function]}
                                                          onTouchMove={[Function]}
                                                          onTouchStart={[Function]}
                                                          tabIndex={0}
                                                          type="button"
                                                        >
                                                          <span
                                                            className="MuiIconButton-label"
                                                          >
                                                            <WithStyles(ForwardRef(Typography))
                                                              color="inherit"
                                                              variant="body2"
                                                            >
                                                              <ForwardRef(Typography)
                                                                classes={
                                                                  Object {
                                                                    "alignCenter": "MuiTypography-alignCenter",
                                                                    "alignJustify": "MuiTypography-alignJustify",
                                                                    "alignLeft": "MuiTypography-alignLeft",
                                                                    "alignRight": "MuiTypography-alignRight",
                                                                    "body1": "MuiTypography-body1",
                                                                    "body2": "MuiTypography-body2",
                                                                    "button": "MuiTypography-button",
                                                                    "caption": "MuiTypography-caption",
                                                                    "colorError": "MuiTypography-colorError",
                                                                    "colorInherit": "MuiTypography-colorInherit",
                                                                    "colorPrimary": "MuiTypography-colorPrimary",
                                                                    "colorSecondary": "MuiTypography-colorSecondary",
                                                                    "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                    "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                    "displayBlock": "MuiTypography-displayBlock",
                                                                    "displayInline": "MuiTypography-displayInline",
                                                                    "gutterBottom": "MuiTypography-gutterBottom",
                                                                    "h1": "MuiTypography-h1",
                                                                    "h2": "MuiTypography-h2",
                                                                    "h3": "MuiTypography-h3",
                                                                    "h4": "MuiTypography-h4",
                                                                    "h5": "MuiTypography-h5",
                                                                    "h6": "MuiTypography-h6",
                                                                    "noWrap": "MuiTypography-noWrap",
                                                                    "overline": "MuiTypography-overline",
                                                                    "paragraph": "MuiTypography-paragraph",
                                                                    "root": "MuiTypography-root",
                                                                    "srOnly": "MuiTypography-srOnly",
                                                                    "subtitle1": "MuiTypography-subtitle1",
                                                                    "subtitle2": "MuiTypography-subtitle2",
                                                                  }
                                                                }
                                                                color="inherit"
                                                                variant="body2"
                                                              >
                                                                <p
                                                                  className="MuiTypography-root MuiTypography-body2 MuiTypography-colorInherit"
                                                                >
                                                                  22
                                                                </p>
                                                              </ForwardRef(Typography)>
                                                            </WithStyles(ForwardRef(Typography))>
                                                          </span>
                                                          <NoSsr>
                                                            <WithStyles(memo)
                                                              center={true}
                                                            >
                                                              <ForwardRef(TouchRipple)
                                                                center={true}
                                                                classes={
                                                                  Object {
                                                                    "child": "MuiTouchRipple-child",
                                                                    "childLeaving": "MuiTouchRipple-childLeaving",
                                                                    "childPulsate": "MuiTouchRipple-childPulsate",
                                                                    "ripple": "MuiTouchRipple-ripple",
                                                                    "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                    "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                    "root": "MuiTouchRipple-root",
                                                                  }
                                                                }
                                                              >
                                                                <span
                                                                  className="MuiTouchRipple-root"
                                                                >
                                                                  <TransitionGroup
                                                                    childFactory={[Function]}
                                                                    component={null}
                                                                    exit={true}
                                                                  />
                                                                </span>
                                                              </ForwardRef(TouchRipple)>
                                                            </WithStyles(memo)>
                                                          </NoSsr>
                                                        </button>
                                                      </ForwardRef(ButtonBase)>
                                                    </WithStyles(ForwardRef(ButtonBase))>
                                                  </ForwardRef(IconButton)>
                                                </WithStyles(ForwardRef(IconButton))>
                                              </Day>
                                            </div>
                                          </DayWrapper>
                                        </div>
                                        <div
                                          className="MuiPickersCalendar-week"
                                          key="week-Sun Feb 23 2020 00:00:00 GMT-0300 (Brasilia Standard Time)"
                                        >
                                          <DayWrapper
                                            dayInCurrentMonth={true}
                                            disabled={false}
                                            key="Sun Feb 23 2020 00:00:00 GMT-0300 (Brasilia Standard Time)"
                                            onSelect={[Function]}
                                            value={2020-02-23T03:00:00.000Z}
                                          >
                                            <div
                                              onClick={[Function]}
                                              onKeyPress={[Function]}
                                              role="presentation"
                                            >
                                              <Day
                                                current={false}
                                                disabled={false}
                                                hidden={false}
                                                selected={false}
                                              >
                                                <WithStyles(ForwardRef(IconButton))
                                                  className="MuiPickersDay-day"
                                                  tabIndex={0}
                                                >
                                                  <ForwardRef(IconButton)
                                                    className="MuiPickersDay-day"
                                                    classes={
                                                      Object {
                                                        "colorInherit": "MuiIconButton-colorInherit",
                                                        "colorPrimary": "MuiIconButton-colorPrimary",
                                                        "colorSecondary": "MuiIconButton-colorSecondary",
                                                        "disabled": "Mui-disabled",
                                                        "edgeEnd": "MuiIconButton-edgeEnd",
                                                        "edgeStart": "MuiIconButton-edgeStart",
                                                        "label": "MuiIconButton-label",
                                                        "root": "MuiIconButton-root",
                                                        "sizeSmall": "MuiIconButton-sizeSmall",
                                                      }
                                                    }
                                                    tabIndex={0}
                                                  >
                                                    <WithStyles(ForwardRef(ButtonBase))
                                                      centerRipple={true}
                                                      className="MuiIconButton-root MuiPickersDay-day"
                                                      disabled={false}
                                                      focusRipple={true}
                                                      tabIndex={0}
                                                    >
                                                      <ForwardRef(ButtonBase)
                                                        centerRipple={true}
                                                        className="MuiIconButton-root MuiPickersDay-day"
                                                        classes={
                                                          Object {
                                                            "disabled": "Mui-disabled",
                                                            "focusVisible": "Mui-focusVisible",
                                                            "root": "MuiButtonBase-root",
                                                          }
                                                        }
                                                        disabled={false}
                                                        focusRipple={true}
                                                        tabIndex={0}
                                                      >
                                                        <button
                                                          className="MuiButtonBase-root MuiIconButton-root MuiPickersDay-day"
                                                          disabled={false}
                                                          onBlur={[Function]}
                                                          onDragLeave={[Function]}
                                                          onFocus={[Function]}
                                                          onKeyDown={[Function]}
                                                          onKeyUp={[Function]}
                                                          onMouseDown={[Function]}
                                                          onMouseLeave={[Function]}
                                                          onMouseUp={[Function]}
                                                          onTouchEnd={[Function]}
                                                          onTouchMove={[Function]}
                                                          onTouchStart={[Function]}
                                                          tabIndex={0}
                                                          type="button"
                                                        >
                                                          <span
                                                            className="MuiIconButton-label"
                                                          >
                                                            <WithStyles(ForwardRef(Typography))
                                                              color="inherit"
                                                              variant="body2"
                                                            >
                                                              <ForwardRef(Typography)
                                                                classes={
                                                                  Object {
                                                                    "alignCenter": "MuiTypography-alignCenter",
                                                                    "alignJustify": "MuiTypography-alignJustify",
                                                                    "alignLeft": "MuiTypography-alignLeft",
                                                                    "alignRight": "MuiTypography-alignRight",
                                                                    "body1": "MuiTypography-body1",
                                                                    "body2": "MuiTypography-body2",
                                                                    "button": "MuiTypography-button",
                                                                    "caption": "MuiTypography-caption",
                                                                    "colorError": "MuiTypography-colorError",
                                                                    "colorInherit": "MuiTypography-colorInherit",
                                                                    "colorPrimary": "MuiTypography-colorPrimary",
                                                                    "colorSecondary": "MuiTypography-colorSecondary",
                                                                    "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                    "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                    "displayBlock": "MuiTypography-displayBlock",
                                                                    "displayInline": "MuiTypography-displayInline",
                                                                    "gutterBottom": "MuiTypography-gutterBottom",
                                                                    "h1": "MuiTypography-h1",
                                                                    "h2": "MuiTypography-h2",
                                                                    "h3": "MuiTypography-h3",
                                                                    "h4": "MuiTypography-h4",
                                                                    "h5": "MuiTypography-h5",
                                                                    "h6": "MuiTypography-h6",
                                                                    "noWrap": "MuiTypography-noWrap",
                                                                    "overline": "MuiTypography-overline",
                                                                    "paragraph": "MuiTypography-paragraph",
                                                                    "root": "MuiTypography-root",
                                                                    "srOnly": "MuiTypography-srOnly",
                                                                    "subtitle1": "MuiTypography-subtitle1",
                                                                    "subtitle2": "MuiTypography-subtitle2",
                                                                  }
                                                                }
                                                                color="inherit"
                                                                variant="body2"
                                                              >
                                                                <p
                                                                  className="MuiTypography-root MuiTypography-body2 MuiTypography-colorInherit"
                                                                >
                                                                  23
                                                                </p>
                                                              </ForwardRef(Typography)>
                                                            </WithStyles(ForwardRef(Typography))>
                                                          </span>
                                                          <NoSsr>
                                                            <WithStyles(memo)
                                                              center={true}
                                                            >
                                                              <ForwardRef(TouchRipple)
                                                                center={true}
                                                                classes={
                                                                  Object {
                                                                    "child": "MuiTouchRipple-child",
                                                                    "childLeaving": "MuiTouchRipple-childLeaving",
                                                                    "childPulsate": "MuiTouchRipple-childPulsate",
                                                                    "ripple": "MuiTouchRipple-ripple",
                                                                    "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                    "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                    "root": "MuiTouchRipple-root",
                                                                  }
                                                                }
                                                              >
                                                                <span
                                                                  className="MuiTouchRipple-root"
                                                                >
                                                                  <TransitionGroup
                                                                    childFactory={[Function]}
                                                                    component={null}
                                                                    exit={true}
                                                                  />
                                                                </span>
                                                              </ForwardRef(TouchRipple)>
                                                            </WithStyles(memo)>
                                                          </NoSsr>
                                                        </button>
                                                      </ForwardRef(ButtonBase)>
                                                    </WithStyles(ForwardRef(ButtonBase))>
                                                  </ForwardRef(IconButton)>
                                                </WithStyles(ForwardRef(IconButton))>
                                              </Day>
                                            </div>
                                          </DayWrapper>
                                          <DayWrapper
                                            dayInCurrentMonth={true}
                                            disabled={false}
                                            key="Mon Feb 24 2020 00:00:00 GMT-0300 (Brasilia Standard Time)"
                                            onSelect={[Function]}
                                            value={2020-02-24T03:00:00.000Z}
                                          >
                                            <div
                                              onClick={[Function]}
                                              onKeyPress={[Function]}
                                              role="presentation"
                                            >
                                              <Day
                                                current={false}
                                                disabled={false}
                                                hidden={false}
                                                selected={false}
                                              >
                                                <WithStyles(ForwardRef(IconButton))
                                                  className="MuiPickersDay-day"
                                                  tabIndex={0}
                                                >
                                                  <ForwardRef(IconButton)
                                                    className="MuiPickersDay-day"
                                                    classes={
                                                      Object {
                                                        "colorInherit": "MuiIconButton-colorInherit",
                                                        "colorPrimary": "MuiIconButton-colorPrimary",
                                                        "colorSecondary": "MuiIconButton-colorSecondary",
                                                        "disabled": "Mui-disabled",
                                                        "edgeEnd": "MuiIconButton-edgeEnd",
                                                        "edgeStart": "MuiIconButton-edgeStart",
                                                        "label": "MuiIconButton-label",
                                                        "root": "MuiIconButton-root",
                                                        "sizeSmall": "MuiIconButton-sizeSmall",
                                                      }
                                                    }
                                                    tabIndex={0}
                                                  >
                                                    <WithStyles(ForwardRef(ButtonBase))
                                                      centerRipple={true}
                                                      className="MuiIconButton-root MuiPickersDay-day"
                                                      disabled={false}
                                                      focusRipple={true}
                                                      tabIndex={0}
                                                    >
                                                      <ForwardRef(ButtonBase)
                                                        centerRipple={true}
                                                        className="MuiIconButton-root MuiPickersDay-day"
                                                        classes={
                                                          Object {
                                                            "disabled": "Mui-disabled",
                                                            "focusVisible": "Mui-focusVisible",
                                                            "root": "MuiButtonBase-root",
                                                          }
                                                        }
                                                        disabled={false}
                                                        focusRipple={true}
                                                        tabIndex={0}
                                                      >
                                                        <button
                                                          className="MuiButtonBase-root MuiIconButton-root MuiPickersDay-day"
                                                          disabled={false}
                                                          onBlur={[Function]}
                                                          onDragLeave={[Function]}
                                                          onFocus={[Function]}
                                                          onKeyDown={[Function]}
                                                          onKeyUp={[Function]}
                                                          onMouseDown={[Function]}
                                                          onMouseLeave={[Function]}
                                                          onMouseUp={[Function]}
                                                          onTouchEnd={[Function]}
                                                          onTouchMove={[Function]}
                                                          onTouchStart={[Function]}
                                                          tabIndex={0}
                                                          type="button"
                                                        >
                                                          <span
                                                            className="MuiIconButton-label"
                                                          >
                                                            <WithStyles(ForwardRef(Typography))
                                                              color="inherit"
                                                              variant="body2"
                                                            >
                                                              <ForwardRef(Typography)
                                                                classes={
                                                                  Object {
                                                                    "alignCenter": "MuiTypography-alignCenter",
                                                                    "alignJustify": "MuiTypography-alignJustify",
                                                                    "alignLeft": "MuiTypography-alignLeft",
                                                                    "alignRight": "MuiTypography-alignRight",
                                                                    "body1": "MuiTypography-body1",
                                                                    "body2": "MuiTypography-body2",
                                                                    "button": "MuiTypography-button",
                                                                    "caption": "MuiTypography-caption",
                                                                    "colorError": "MuiTypography-colorError",
                                                                    "colorInherit": "MuiTypography-colorInherit",
                                                                    "colorPrimary": "MuiTypography-colorPrimary",
                                                                    "colorSecondary": "MuiTypography-colorSecondary",
                                                                    "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                    "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                    "displayBlock": "MuiTypography-displayBlock",
                                                                    "displayInline": "MuiTypography-displayInline",
                                                                    "gutterBottom": "MuiTypography-gutterBottom",
                                                                    "h1": "MuiTypography-h1",
                                                                    "h2": "MuiTypography-h2",
                                                                    "h3": "MuiTypography-h3",
                                                                    "h4": "MuiTypography-h4",
                                                                    "h5": "MuiTypography-h5",
                                                                    "h6": "MuiTypography-h6",
                                                                    "noWrap": "MuiTypography-noWrap",
                                                                    "overline": "MuiTypography-overline",
                                                                    "paragraph": "MuiTypography-paragraph",
                                                                    "root": "MuiTypography-root",
                                                                    "srOnly": "MuiTypography-srOnly",
                                                                    "subtitle1": "MuiTypography-subtitle1",
                                                                    "subtitle2": "MuiTypography-subtitle2",
                                                                  }
                                                                }
                                                                color="inherit"
                                                                variant="body2"
                                                              >
                                                                <p
                                                                  className="MuiTypography-root MuiTypography-body2 MuiTypography-colorInherit"
                                                                >
                                                                  24
                                                                </p>
                                                              </ForwardRef(Typography)>
                                                            </WithStyles(ForwardRef(Typography))>
                                                          </span>
                                                          <NoSsr>
                                                            <WithStyles(memo)
                                                              center={true}
                                                            >
                                                              <ForwardRef(TouchRipple)
                                                                center={true}
                                                                classes={
                                                                  Object {
                                                                    "child": "MuiTouchRipple-child",
                                                                    "childLeaving": "MuiTouchRipple-childLeaving",
                                                                    "childPulsate": "MuiTouchRipple-childPulsate",
                                                                    "ripple": "MuiTouchRipple-ripple",
                                                                    "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                    "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                    "root": "MuiTouchRipple-root",
                                                                  }
                                                                }
                                                              >
                                                                <span
                                                                  className="MuiTouchRipple-root"
                                                                >
                                                                  <TransitionGroup
                                                                    childFactory={[Function]}
                                                                    component={null}
                                                                    exit={true}
                                                                  />
                                                                </span>
                                                              </ForwardRef(TouchRipple)>
                                                            </WithStyles(memo)>
                                                          </NoSsr>
                                                        </button>
                                                      </ForwardRef(ButtonBase)>
                                                    </WithStyles(ForwardRef(ButtonBase))>
                                                  </ForwardRef(IconButton)>
                                                </WithStyles(ForwardRef(IconButton))>
                                              </Day>
                                            </div>
                                          </DayWrapper>
                                          <DayWrapper
                                            dayInCurrentMonth={true}
                                            disabled={false}
                                            key="Tue Feb 25 2020 00:00:00 GMT-0300 (Brasilia Standard Time)"
                                            onSelect={[Function]}
                                            value={2020-02-25T03:00:00.000Z}
                                          >
                                            <div
                                              onClick={[Function]}
                                              onKeyPress={[Function]}
                                              role="presentation"
                                            >
                                              <Day
                                                current={false}
                                                disabled={false}
                                                hidden={false}
                                                selected={false}
                                              >
                                                <WithStyles(ForwardRef(IconButton))
                                                  className="MuiPickersDay-day"
                                                  tabIndex={0}
                                                >
                                                  <ForwardRef(IconButton)
                                                    className="MuiPickersDay-day"
                                                    classes={
                                                      Object {
                                                        "colorInherit": "MuiIconButton-colorInherit",
                                                        "colorPrimary": "MuiIconButton-colorPrimary",
                                                        "colorSecondary": "MuiIconButton-colorSecondary",
                                                        "disabled": "Mui-disabled",
                                                        "edgeEnd": "MuiIconButton-edgeEnd",
                                                        "edgeStart": "MuiIconButton-edgeStart",
                                                        "label": "MuiIconButton-label",
                                                        "root": "MuiIconButton-root",
                                                        "sizeSmall": "MuiIconButton-sizeSmall",
                                                      }
                                                    }
                                                    tabIndex={0}
                                                  >
                                                    <WithStyles(ForwardRef(ButtonBase))
                                                      centerRipple={true}
                                                      className="MuiIconButton-root MuiPickersDay-day"
                                                      disabled={false}
                                                      focusRipple={true}
                                                      tabIndex={0}
                                                    >
                                                      <ForwardRef(ButtonBase)
                                                        centerRipple={true}
                                                        className="MuiIconButton-root MuiPickersDay-day"
                                                        classes={
                                                          Object {
                                                            "disabled": "Mui-disabled",
                                                            "focusVisible": "Mui-focusVisible",
                                                            "root": "MuiButtonBase-root",
                                                          }
                                                        }
                                                        disabled={false}
                                                        focusRipple={true}
                                                        tabIndex={0}
                                                      >
                                                        <button
                                                          className="MuiButtonBase-root MuiIconButton-root MuiPickersDay-day"
                                                          disabled={false}
                                                          onBlur={[Function]}
                                                          onDragLeave={[Function]}
                                                          onFocus={[Function]}
                                                          onKeyDown={[Function]}
                                                          onKeyUp={[Function]}
                                                          onMouseDown={[Function]}
                                                          onMouseLeave={[Function]}
                                                          onMouseUp={[Function]}
                                                          onTouchEnd={[Function]}
                                                          onTouchMove={[Function]}
                                                          onTouchStart={[Function]}
                                                          tabIndex={0}
                                                          type="button"
                                                        >
                                                          <span
                                                            className="MuiIconButton-label"
                                                          >
                                                            <WithStyles(ForwardRef(Typography))
                                                              color="inherit"
                                                              variant="body2"
                                                            >
                                                              <ForwardRef(Typography)
                                                                classes={
                                                                  Object {
                                                                    "alignCenter": "MuiTypography-alignCenter",
                                                                    "alignJustify": "MuiTypography-alignJustify",
                                                                    "alignLeft": "MuiTypography-alignLeft",
                                                                    "alignRight": "MuiTypography-alignRight",
                                                                    "body1": "MuiTypography-body1",
                                                                    "body2": "MuiTypography-body2",
                                                                    "button": "MuiTypography-button",
                                                                    "caption": "MuiTypography-caption",
                                                                    "colorError": "MuiTypography-colorError",
                                                                    "colorInherit": "MuiTypography-colorInherit",
                                                                    "colorPrimary": "MuiTypography-colorPrimary",
                                                                    "colorSecondary": "MuiTypography-colorSecondary",
                                                                    "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                    "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                    "displayBlock": "MuiTypography-displayBlock",
                                                                    "displayInline": "MuiTypography-displayInline",
                                                                    "gutterBottom": "MuiTypography-gutterBottom",
                                                                    "h1": "MuiTypography-h1",
                                                                    "h2": "MuiTypography-h2",
                                                                    "h3": "MuiTypography-h3",
                                                                    "h4": "MuiTypography-h4",
                                                                    "h5": "MuiTypography-h5",
                                                                    "h6": "MuiTypography-h6",
                                                                    "noWrap": "MuiTypography-noWrap",
                                                                    "overline": "MuiTypography-overline",
                                                                    "paragraph": "MuiTypography-paragraph",
                                                                    "root": "MuiTypography-root",
                                                                    "srOnly": "MuiTypography-srOnly",
                                                                    "subtitle1": "MuiTypography-subtitle1",
                                                                    "subtitle2": "MuiTypography-subtitle2",
                                                                  }
                                                                }
                                                                color="inherit"
                                                                variant="body2"
                                                              >
                                                                <p
                                                                  className="MuiTypography-root MuiTypography-body2 MuiTypography-colorInherit"
                                                                >
                                                                  25
                                                                </p>
                                                              </ForwardRef(Typography)>
                                                            </WithStyles(ForwardRef(Typography))>
                                                          </span>
                                                          <NoSsr>
                                                            <WithStyles(memo)
                                                              center={true}
                                                            >
                                                              <ForwardRef(TouchRipple)
                                                                center={true}
                                                                classes={
                                                                  Object {
                                                                    "child": "MuiTouchRipple-child",
                                                                    "childLeaving": "MuiTouchRipple-childLeaving",
                                                                    "childPulsate": "MuiTouchRipple-childPulsate",
                                                                    "ripple": "MuiTouchRipple-ripple",
                                                                    "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                    "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                    "root": "MuiTouchRipple-root",
                                                                  }
                                                                }
                                                              >
                                                                <span
                                                                  className="MuiTouchRipple-root"
                                                                >
                                                                  <TransitionGroup
                                                                    childFactory={[Function]}
                                                                    component={null}
                                                                    exit={true}
                                                                  />
                                                                </span>
                                                              </ForwardRef(TouchRipple)>
                                                            </WithStyles(memo)>
                                                          </NoSsr>
                                                        </button>
                                                      </ForwardRef(ButtonBase)>
                                                    </WithStyles(ForwardRef(ButtonBase))>
                                                  </ForwardRef(IconButton)>
                                                </WithStyles(ForwardRef(IconButton))>
                                              </Day>
                                            </div>
                                          </DayWrapper>
                                          <DayWrapper
                                            dayInCurrentMonth={true}
                                            disabled={false}
                                            key="Wed Feb 26 2020 00:00:00 GMT-0300 (Brasilia Standard Time)"
                                            onSelect={[Function]}
                                            value={2020-02-26T03:00:00.000Z}
                                          >
                                            <div
                                              onClick={[Function]}
                                              onKeyPress={[Function]}
                                              role="presentation"
                                            >
                                              <Day
                                                current={false}
                                                disabled={false}
                                                hidden={false}
                                                selected={false}
                                              >
                                                <WithStyles(ForwardRef(IconButton))
                                                  className="MuiPickersDay-day"
                                                  tabIndex={0}
                                                >
                                                  <ForwardRef(IconButton)
                                                    className="MuiPickersDay-day"
                                                    classes={
                                                      Object {
                                                        "colorInherit": "MuiIconButton-colorInherit",
                                                        "colorPrimary": "MuiIconButton-colorPrimary",
                                                        "colorSecondary": "MuiIconButton-colorSecondary",
                                                        "disabled": "Mui-disabled",
                                                        "edgeEnd": "MuiIconButton-edgeEnd",
                                                        "edgeStart": "MuiIconButton-edgeStart",
                                                        "label": "MuiIconButton-label",
                                                        "root": "MuiIconButton-root",
                                                        "sizeSmall": "MuiIconButton-sizeSmall",
                                                      }
                                                    }
                                                    tabIndex={0}
                                                  >
                                                    <WithStyles(ForwardRef(ButtonBase))
                                                      centerRipple={true}
                                                      className="MuiIconButton-root MuiPickersDay-day"
                                                      disabled={false}
                                                      focusRipple={true}
                                                      tabIndex={0}
                                                    >
                                                      <ForwardRef(ButtonBase)
                                                        centerRipple={true}
                                                        className="MuiIconButton-root MuiPickersDay-day"
                                                        classes={
                                                          Object {
                                                            "disabled": "Mui-disabled",
                                                            "focusVisible": "Mui-focusVisible",
                                                            "root": "MuiButtonBase-root",
                                                          }
                                                        }
                                                        disabled={false}
                                                        focusRipple={true}
                                                        tabIndex={0}
                                                      >
                                                        <button
                                                          className="MuiButtonBase-root MuiIconButton-root MuiPickersDay-day"
                                                          disabled={false}
                                                          onBlur={[Function]}
                                                          onDragLeave={[Function]}
                                                          onFocus={[Function]}
                                                          onKeyDown={[Function]}
                                                          onKeyUp={[Function]}
                                                          onMouseDown={[Function]}
                                                          onMouseLeave={[Function]}
                                                          onMouseUp={[Function]}
                                                          onTouchEnd={[Function]}
                                                          onTouchMove={[Function]}
                                                          onTouchStart={[Function]}
                                                          tabIndex={0}
                                                          type="button"
                                                        >
                                                          <span
                                                            className="MuiIconButton-label"
                                                          >
                                                            <WithStyles(ForwardRef(Typography))
                                                              color="inherit"
                                                              variant="body2"
                                                            >
                                                              <ForwardRef(Typography)
                                                                classes={
                                                                  Object {
                                                                    "alignCenter": "MuiTypography-alignCenter",
                                                                    "alignJustify": "MuiTypography-alignJustify",
                                                                    "alignLeft": "MuiTypography-alignLeft",
                                                                    "alignRight": "MuiTypography-alignRight",
                                                                    "body1": "MuiTypography-body1",
                                                                    "body2": "MuiTypography-body2",
                                                                    "button": "MuiTypography-button",
                                                                    "caption": "MuiTypography-caption",
                                                                    "colorError": "MuiTypography-colorError",
                                                                    "colorInherit": "MuiTypography-colorInherit",
                                                                    "colorPrimary": "MuiTypography-colorPrimary",
                                                                    "colorSecondary": "MuiTypography-colorSecondary",
                                                                    "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                    "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                    "displayBlock": "MuiTypography-displayBlock",
                                                                    "displayInline": "MuiTypography-displayInline",
                                                                    "gutterBottom": "MuiTypography-gutterBottom",
                                                                    "h1": "MuiTypography-h1",
                                                                    "h2": "MuiTypography-h2",
                                                                    "h3": "MuiTypography-h3",
                                                                    "h4": "MuiTypography-h4",
                                                                    "h5": "MuiTypography-h5",
                                                                    "h6": "MuiTypography-h6",
                                                                    "noWrap": "MuiTypography-noWrap",
                                                                    "overline": "MuiTypography-overline",
                                                                    "paragraph": "MuiTypography-paragraph",
                                                                    "root": "MuiTypography-root",
                                                                    "srOnly": "MuiTypography-srOnly",
                                                                    "subtitle1": "MuiTypography-subtitle1",
                                                                    "subtitle2": "MuiTypography-subtitle2",
                                                                  }
                                                                }
                                                                color="inherit"
                                                                variant="body2"
                                                              >
                                                                <p
                                                                  className="MuiTypography-root MuiTypography-body2 MuiTypography-colorInherit"
                                                                >
                                                                  26
                                                                </p>
                                                              </ForwardRef(Typography)>
                                                            </WithStyles(ForwardRef(Typography))>
                                                          </span>
                                                          <NoSsr>
                                                            <WithStyles(memo)
                                                              center={true}
                                                            >
                                                              <ForwardRef(TouchRipple)
                                                                center={true}
                                                                classes={
                                                                  Object {
                                                                    "child": "MuiTouchRipple-child",
                                                                    "childLeaving": "MuiTouchRipple-childLeaving",
                                                                    "childPulsate": "MuiTouchRipple-childPulsate",
                                                                    "ripple": "MuiTouchRipple-ripple",
                                                                    "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                    "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                    "root": "MuiTouchRipple-root",
                                                                  }
                                                                }
                                                              >
                                                                <span
                                                                  className="MuiTouchRipple-root"
                                                                >
                                                                  <TransitionGroup
                                                                    childFactory={[Function]}
                                                                    component={null}
                                                                    exit={true}
                                                                  />
                                                                </span>
                                                              </ForwardRef(TouchRipple)>
                                                            </WithStyles(memo)>
                                                          </NoSsr>
                                                        </button>
                                                      </ForwardRef(ButtonBase)>
                                                    </WithStyles(ForwardRef(ButtonBase))>
                                                  </ForwardRef(IconButton)>
                                                </WithStyles(ForwardRef(IconButton))>
                                              </Day>
                                            </div>
                                          </DayWrapper>
                                          <DayWrapper
                                            dayInCurrentMonth={true}
                                            disabled={false}
                                            key="Thu Feb 27 2020 00:00:00 GMT-0300 (Brasilia Standard Time)"
                                            onSelect={[Function]}
                                            value={2020-02-27T03:00:00.000Z}
                                          >
                                            <div
                                              onClick={[Function]}
                                              onKeyPress={[Function]}
                                              role="presentation"
                                            >
                                              <Day
                                                current={false}
                                                disabled={false}
                                                hidden={false}
                                                selected={false}
                                              >
                                                <WithStyles(ForwardRef(IconButton))
                                                  className="MuiPickersDay-day"
                                                  tabIndex={0}
                                                >
                                                  <ForwardRef(IconButton)
                                                    className="MuiPickersDay-day"
                                                    classes={
                                                      Object {
                                                        "colorInherit": "MuiIconButton-colorInherit",
                                                        "colorPrimary": "MuiIconButton-colorPrimary",
                                                        "colorSecondary": "MuiIconButton-colorSecondary",
                                                        "disabled": "Mui-disabled",
                                                        "edgeEnd": "MuiIconButton-edgeEnd",
                                                        "edgeStart": "MuiIconButton-edgeStart",
                                                        "label": "MuiIconButton-label",
                                                        "root": "MuiIconButton-root",
                                                        "sizeSmall": "MuiIconButton-sizeSmall",
                                                      }
                                                    }
                                                    tabIndex={0}
                                                  >
                                                    <WithStyles(ForwardRef(ButtonBase))
                                                      centerRipple={true}
                                                      className="MuiIconButton-root MuiPickersDay-day"
                                                      disabled={false}
                                                      focusRipple={true}
                                                      tabIndex={0}
                                                    >
                                                      <ForwardRef(ButtonBase)
                                                        centerRipple={true}
                                                        className="MuiIconButton-root MuiPickersDay-day"
                                                        classes={
                                                          Object {
                                                            "disabled": "Mui-disabled",
                                                            "focusVisible": "Mui-focusVisible",
                                                            "root": "MuiButtonBase-root",
                                                          }
                                                        }
                                                        disabled={false}
                                                        focusRipple={true}
                                                        tabIndex={0}
                                                      >
                                                        <button
                                                          className="MuiButtonBase-root MuiIconButton-root MuiPickersDay-day"
                                                          disabled={false}
                                                          onBlur={[Function]}
                                                          onDragLeave={[Function]}
                                                          onFocus={[Function]}
                                                          onKeyDown={[Function]}
                                                          onKeyUp={[Function]}
                                                          onMouseDown={[Function]}
                                                          onMouseLeave={[Function]}
                                                          onMouseUp={[Function]}
                                                          onTouchEnd={[Function]}
                                                          onTouchMove={[Function]}
                                                          onTouchStart={[Function]}
                                                          tabIndex={0}
                                                          type="button"
                                                        >
                                                          <span
                                                            className="MuiIconButton-label"
                                                          >
                                                            <WithStyles(ForwardRef(Typography))
                                                              color="inherit"
                                                              variant="body2"
                                                            >
                                                              <ForwardRef(Typography)
                                                                classes={
                                                                  Object {
                                                                    "alignCenter": "MuiTypography-alignCenter",
                                                                    "alignJustify": "MuiTypography-alignJustify",
                                                                    "alignLeft": "MuiTypography-alignLeft",
                                                                    "alignRight": "MuiTypography-alignRight",
                                                                    "body1": "MuiTypography-body1",
                                                                    "body2": "MuiTypography-body2",
                                                                    "button": "MuiTypography-button",
                                                                    "caption": "MuiTypography-caption",
                                                                    "colorError": "MuiTypography-colorError",
                                                                    "colorInherit": "MuiTypography-colorInherit",
                                                                    "colorPrimary": "MuiTypography-colorPrimary",
                                                                    "colorSecondary": "MuiTypography-colorSecondary",
                                                                    "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                    "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                    "displayBlock": "MuiTypography-displayBlock",
                                                                    "displayInline": "MuiTypography-displayInline",
                                                                    "gutterBottom": "MuiTypography-gutterBottom",
                                                                    "h1": "MuiTypography-h1",
                                                                    "h2": "MuiTypography-h2",
                                                                    "h3": "MuiTypography-h3",
                                                                    "h4": "MuiTypography-h4",
                                                                    "h5": "MuiTypography-h5",
                                                                    "h6": "MuiTypography-h6",
                                                                    "noWrap": "MuiTypography-noWrap",
                                                                    "overline": "MuiTypography-overline",
                                                                    "paragraph": "MuiTypography-paragraph",
                                                                    "root": "MuiTypography-root",
                                                                    "srOnly": "MuiTypography-srOnly",
                                                                    "subtitle1": "MuiTypography-subtitle1",
                                                                    "subtitle2": "MuiTypography-subtitle2",
                                                                  }
                                                                }
                                                                color="inherit"
                                                                variant="body2"
                                                              >
                                                                <p
                                                                  className="MuiTypography-root MuiTypography-body2 MuiTypography-colorInherit"
                                                                >
                                                                  27
                                                                </p>
                                                              </ForwardRef(Typography)>
                                                            </WithStyles(ForwardRef(Typography))>
                                                          </span>
                                                          <NoSsr>
                                                            <WithStyles(memo)
                                                              center={true}
                                                            >
                                                              <ForwardRef(TouchRipple)
                                                                center={true}
                                                                classes={
                                                                  Object {
                                                                    "child": "MuiTouchRipple-child",
                                                                    "childLeaving": "MuiTouchRipple-childLeaving",
                                                                    "childPulsate": "MuiTouchRipple-childPulsate",
                                                                    "ripple": "MuiTouchRipple-ripple",
                                                                    "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                    "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                    "root": "MuiTouchRipple-root",
                                                                  }
                                                                }
                                                              >
                                                                <span
                                                                  className="MuiTouchRipple-root"
                                                                >
                                                                  <TransitionGroup
                                                                    childFactory={[Function]}
                                                                    component={null}
                                                                    exit={true}
                                                                  />
                                                                </span>
                                                              </ForwardRef(TouchRipple)>
                                                            </WithStyles(memo)>
                                                          </NoSsr>
                                                        </button>
                                                      </ForwardRef(ButtonBase)>
                                                    </WithStyles(ForwardRef(ButtonBase))>
                                                  </ForwardRef(IconButton)>
                                                </WithStyles(ForwardRef(IconButton))>
                                              </Day>
                                            </div>
                                          </DayWrapper>
                                          <DayWrapper
                                            dayInCurrentMonth={true}
                                            disabled={false}
                                            key="Fri Feb 28 2020 00:00:00 GMT-0300 (Brasilia Standard Time)"
                                            onSelect={[Function]}
                                            value={2020-02-28T03:00:00.000Z}
                                          >
                                            <div
                                              onClick={[Function]}
                                              onKeyPress={[Function]}
                                              role="presentation"
                                            >
                                              <Day
                                                current={false}
                                                disabled={false}
                                                hidden={false}
                                                selected={false}
                                              >
                                                <WithStyles(ForwardRef(IconButton))
                                                  className="MuiPickersDay-day"
                                                  tabIndex={0}
                                                >
                                                  <ForwardRef(IconButton)
                                                    className="MuiPickersDay-day"
                                                    classes={
                                                      Object {
                                                        "colorInherit": "MuiIconButton-colorInherit",
                                                        "colorPrimary": "MuiIconButton-colorPrimary",
                                                        "colorSecondary": "MuiIconButton-colorSecondary",
                                                        "disabled": "Mui-disabled",
                                                        "edgeEnd": "MuiIconButton-edgeEnd",
                                                        "edgeStart": "MuiIconButton-edgeStart",
                                                        "label": "MuiIconButton-label",
                                                        "root": "MuiIconButton-root",
                                                        "sizeSmall": "MuiIconButton-sizeSmall",
                                                      }
                                                    }
                                                    tabIndex={0}
                                                  >
                                                    <WithStyles(ForwardRef(ButtonBase))
                                                      centerRipple={true}
                                                      className="MuiIconButton-root MuiPickersDay-day"
                                                      disabled={false}
                                                      focusRipple={true}
                                                      tabIndex={0}
                                                    >
                                                      <ForwardRef(ButtonBase)
                                                        centerRipple={true}
                                                        className="MuiIconButton-root MuiPickersDay-day"
                                                        classes={
                                                          Object {
                                                            "disabled": "Mui-disabled",
                                                            "focusVisible": "Mui-focusVisible",
                                                            "root": "MuiButtonBase-root",
                                                          }
                                                        }
                                                        disabled={false}
                                                        focusRipple={true}
                                                        tabIndex={0}
                                                      >
                                                        <button
                                                          className="MuiButtonBase-root MuiIconButton-root MuiPickersDay-day"
                                                          disabled={false}
                                                          onBlur={[Function]}
                                                          onDragLeave={[Function]}
                                                          onFocus={[Function]}
                                                          onKeyDown={[Function]}
                                                          onKeyUp={[Function]}
                                                          onMouseDown={[Function]}
                                                          onMouseLeave={[Function]}
                                                          onMouseUp={[Function]}
                                                          onTouchEnd={[Function]}
                                                          onTouchMove={[Function]}
                                                          onTouchStart={[Function]}
                                                          tabIndex={0}
                                                          type="button"
                                                        >
                                                          <span
                                                            className="MuiIconButton-label"
                                                          >
                                                            <WithStyles(ForwardRef(Typography))
                                                              color="inherit"
                                                              variant="body2"
                                                            >
                                                              <ForwardRef(Typography)
                                                                classes={
                                                                  Object {
                                                                    "alignCenter": "MuiTypography-alignCenter",
                                                                    "alignJustify": "MuiTypography-alignJustify",
                                                                    "alignLeft": "MuiTypography-alignLeft",
                                                                    "alignRight": "MuiTypography-alignRight",
                                                                    "body1": "MuiTypography-body1",
                                                                    "body2": "MuiTypography-body2",
                                                                    "button": "MuiTypography-button",
                                                                    "caption": "MuiTypography-caption",
                                                                    "colorError": "MuiTypography-colorError",
                                                                    "colorInherit": "MuiTypography-colorInherit",
                                                                    "colorPrimary": "MuiTypography-colorPrimary",
                                                                    "colorSecondary": "MuiTypography-colorSecondary",
                                                                    "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                    "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                    "displayBlock": "MuiTypography-displayBlock",
                                                                    "displayInline": "MuiTypography-displayInline",
                                                                    "gutterBottom": "MuiTypography-gutterBottom",
                                                                    "h1": "MuiTypography-h1",
                                                                    "h2": "MuiTypography-h2",
                                                                    "h3": "MuiTypography-h3",
                                                                    "h4": "MuiTypography-h4",
                                                                    "h5": "MuiTypography-h5",
                                                                    "h6": "MuiTypography-h6",
                                                                    "noWrap": "MuiTypography-noWrap",
                                                                    "overline": "MuiTypography-overline",
                                                                    "paragraph": "MuiTypography-paragraph",
                                                                    "root": "MuiTypography-root",
                                                                    "srOnly": "MuiTypography-srOnly",
                                                                    "subtitle1": "MuiTypography-subtitle1",
                                                                    "subtitle2": "MuiTypography-subtitle2",
                                                                  }
                                                                }
                                                                color="inherit"
                                                                variant="body2"
                                                              >
                                                                <p
                                                                  className="MuiTypography-root MuiTypography-body2 MuiTypography-colorInherit"
                                                                >
                                                                  28
                                                                </p>
                                                              </ForwardRef(Typography)>
                                                            </WithStyles(ForwardRef(Typography))>
                                                          </span>
                                                          <NoSsr>
                                                            <WithStyles(memo)
                                                              center={true}
                                                            >
                                                              <ForwardRef(TouchRipple)
                                                                center={true}
                                                                classes={
                                                                  Object {
                                                                    "child": "MuiTouchRipple-child",
                                                                    "childLeaving": "MuiTouchRipple-childLeaving",
                                                                    "childPulsate": "MuiTouchRipple-childPulsate",
                                                                    "ripple": "MuiTouchRipple-ripple",
                                                                    "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                    "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                    "root": "MuiTouchRipple-root",
                                                                  }
                                                                }
                                                              >
                                                                <span
                                                                  className="MuiTouchRipple-root"
                                                                >
                                                                  <TransitionGroup
                                                                    childFactory={[Function]}
                                                                    component={null}
                                                                    exit={true}
                                                                  />
                                                                </span>
                                                              </ForwardRef(TouchRipple)>
                                                            </WithStyles(memo)>
                                                          </NoSsr>
                                                        </button>
                                                      </ForwardRef(ButtonBase)>
                                                    </WithStyles(ForwardRef(ButtonBase))>
                                                  </ForwardRef(IconButton)>
                                                </WithStyles(ForwardRef(IconButton))>
                                              </Day>
                                            </div>
                                          </DayWrapper>
                                          <DayWrapper
                                            dayInCurrentMonth={true}
                                            disabled={false}
                                            key="Sat Feb 29 2020 00:00:00 GMT-0300 (Brasilia Standard Time)"
                                            onSelect={[Function]}
                                            value={2020-02-29T03:00:00.000Z}
                                          >
                                            <div
                                              onClick={[Function]}
                                              onKeyPress={[Function]}
                                              role="presentation"
                                            >
                                              <Day
                                                current={false}
                                                disabled={false}
                                                hidden={false}
                                                selected={false}
                                              >
                                                <WithStyles(ForwardRef(IconButton))
                                                  className="MuiPickersDay-day"
                                                  tabIndex={0}
                                                >
                                                  <ForwardRef(IconButton)
                                                    className="MuiPickersDay-day"
                                                    classes={
                                                      Object {
                                                        "colorInherit": "MuiIconButton-colorInherit",
                                                        "colorPrimary": "MuiIconButton-colorPrimary",
                                                        "colorSecondary": "MuiIconButton-colorSecondary",
                                                        "disabled": "Mui-disabled",
                                                        "edgeEnd": "MuiIconButton-edgeEnd",
                                                        "edgeStart": "MuiIconButton-edgeStart",
                                                        "label": "MuiIconButton-label",
                                                        "root": "MuiIconButton-root",
                                                        "sizeSmall": "MuiIconButton-sizeSmall",
                                                      }
                                                    }
                                                    tabIndex={0}
                                                  >
                                                    <WithStyles(ForwardRef(ButtonBase))
                                                      centerRipple={true}
                                                      className="MuiIconButton-root MuiPickersDay-day"
                                                      disabled={false}
                                                      focusRipple={true}
                                                      tabIndex={0}
                                                    >
                                                      <ForwardRef(ButtonBase)
                                                        centerRipple={true}
                                                        className="MuiIconButton-root MuiPickersDay-day"
                                                        classes={
                                                          Object {
                                                            "disabled": "Mui-disabled",
                                                            "focusVisible": "Mui-focusVisible",
                                                            "root": "MuiButtonBase-root",
                                                          }
                                                        }
                                                        disabled={false}
                                                        focusRipple={true}
                                                        tabIndex={0}
                                                      >
                                                        <button
                                                          className="MuiButtonBase-root MuiIconButton-root MuiPickersDay-day"
                                                          disabled={false}
                                                          onBlur={[Function]}
                                                          onDragLeave={[Function]}
                                                          onFocus={[Function]}
                                                          onKeyDown={[Function]}
                                                          onKeyUp={[Function]}
                                                          onMouseDown={[Function]}
                                                          onMouseLeave={[Function]}
                                                          onMouseUp={[Function]}
                                                          onTouchEnd={[Function]}
                                                          onTouchMove={[Function]}
                                                          onTouchStart={[Function]}
                                                          tabIndex={0}
                                                          type="button"
                                                        >
                                                          <span
                                                            className="MuiIconButton-label"
                                                          >
                                                            <WithStyles(ForwardRef(Typography))
                                                              color="inherit"
                                                              variant="body2"
                                                            >
                                                              <ForwardRef(Typography)
                                                                classes={
                                                                  Object {
                                                                    "alignCenter": "MuiTypography-alignCenter",
                                                                    "alignJustify": "MuiTypography-alignJustify",
                                                                    "alignLeft": "MuiTypography-alignLeft",
                                                                    "alignRight": "MuiTypography-alignRight",
                                                                    "body1": "MuiTypography-body1",
                                                                    "body2": "MuiTypography-body2",
                                                                    "button": "MuiTypography-button",
                                                                    "caption": "MuiTypography-caption",
                                                                    "colorError": "MuiTypography-colorError",
                                                                    "colorInherit": "MuiTypography-colorInherit",
                                                                    "colorPrimary": "MuiTypography-colorPrimary",
                                                                    "colorSecondary": "MuiTypography-colorSecondary",
                                                                    "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                    "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                    "displayBlock": "MuiTypography-displayBlock",
                                                                    "displayInline": "MuiTypography-displayInline",
                                                                    "gutterBottom": "MuiTypography-gutterBottom",
                                                                    "h1": "MuiTypography-h1",
                                                                    "h2": "MuiTypography-h2",
                                                                    "h3": "MuiTypography-h3",
                                                                    "h4": "MuiTypography-h4",
                                                                    "h5": "MuiTypography-h5",
                                                                    "h6": "MuiTypography-h6",
                                                                    "noWrap": "MuiTypography-noWrap",
                                                                    "overline": "MuiTypography-overline",
                                                                    "paragraph": "MuiTypography-paragraph",
                                                                    "root": "MuiTypography-root",
                                                                    "srOnly": "MuiTypography-srOnly",
                                                                    "subtitle1": "MuiTypography-subtitle1",
                                                                    "subtitle2": "MuiTypography-subtitle2",
                                                                  }
                                                                }
                                                                color="inherit"
                                                                variant="body2"
                                                              >
                                                                <p
                                                                  className="MuiTypography-root MuiTypography-body2 MuiTypography-colorInherit"
                                                                >
                                                                  29
                                                                </p>
                                                              </ForwardRef(Typography)>
                                                            </WithStyles(ForwardRef(Typography))>
                                                          </span>
                                                          <NoSsr>
                                                            <WithStyles(memo)
                                                              center={true}
                                                            >
                                                              <ForwardRef(TouchRipple)
                                                                center={true}
                                                                classes={
                                                                  Object {
                                                                    "child": "MuiTouchRipple-child",
                                                                    "childLeaving": "MuiTouchRipple-childLeaving",
                                                                    "childPulsate": "MuiTouchRipple-childPulsate",
                                                                    "ripple": "MuiTouchRipple-ripple",
                                                                    "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                    "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                    "root": "MuiTouchRipple-root",
                                                                  }
                                                                }
                                                              >
                                                                <span
                                                                  className="MuiTouchRipple-root"
                                                                >
                                                                  <TransitionGroup
                                                                    childFactory={[Function]}
                                                                    component={null}
                                                                    exit={true}
                                                                  />
                                                                </span>
                                                              </ForwardRef(TouchRipple)>
                                                            </WithStyles(memo)>
                                                          </NoSsr>
                                                        </button>
                                                      </ForwardRef(ButtonBase)>
                                                    </WithStyles(ForwardRef(ButtonBase))>
                                                  </ForwardRef(IconButton)>
                                                </WithStyles(ForwardRef(IconButton))>
                                              </Day>
                                            </div>
                                          </DayWrapper>
                                        </div>
                                      </div>
                                    </Transition>
                                  </CSSTransition>
                                </div>
                              </TransitionGroup>
                            </SlideTransition>
                          </Calendar>
                        </WithUtils(Calendar)>
                      </WithStyles(WithUtils(Calendar))>
                    </div>
                  </div>
                </Component>
              </div>
            </Component>
          </Component>
        </PickerWithState>
      </ForwardRef>
    </WithTheme(ForwardRef)>
  </Component>
</Component>
`;

exports[`KeyboardDatePicker components should match to snapshot - Success state: KeyboardDatePicker success state snapshot 1`] = `
<Component
  onChange={[Function]}
  state="success"
  theme={
    Object {
      "avatarSizes": Object {
        "huge": Object {
          "fontSize": "1.5rem",
          "size": 80,
        },
        "large": Object {
          "fontSize": "1rem",
          "size": 48,
        },
        "small": Object {
          "fontSize": ".875rem",
          "size": 32,
        },
        "standard": Object {
          "fontSize": "1rem",
          "size": 40,
        },
        "tiny": Object {
          "fontSize": ".625rem",
          "size": 24,
        },
      },
      "buttonSizes": Object {
        "large": Object {
          "minHeight": 48,
          "paddingBottom": 16,
          "paddingLeft": 16,
          "paddingRight": 16,
          "paddingTop": 16,
        },
        "medium": Object {
          "minHeight": 40,
          "paddingBottom": 12,
          "paddingLeft": 16,
          "paddingRight": 16,
          "paddingTop": 12,
        },
        "small": Object {
          "minHeight": 32,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
        },
      },
      "iconSizes": Object {
        "huge": 144,
        "hugex": 192,
        "hugexx": 256,
        "large": 72,
        "largex": 96,
        "largexx": 128,
        "medium": 64,
        "micro": 16,
        "small": 32,
        "standard": 48,
        "tiny": 24,
      },
      "overrides": Object {
        "MuiAvatar": Object {
          "colorDefault": Object {
            "color": "#333333",
          },
        },
        "MuiBadge": Object {
          "badge": Object {
            "padding": "0 4px",
          },
        },
        "MuiButton": Object {
          "outlinedPrimary": Object {
            "color": "#333333",
          },
          "outlinedSecondary": Object {
            "color": "#333333",
          },
          "root": Object {
            "fontSize": "0.875rem",
            "minHeight": "40px",
            "padding": "8px 16px",
          },
          "sizeLarge": Object {
            "fontSize": "0.875rem",
            "minHeight": "48px",
          },
          "sizeSmall": Object {
            "fontSize": "0.875rem",
            "minHeight": "32px",
          },
          "textPrimary": Object {
            "color": "#333333",
          },
        },
        "MuiChip": Object {
          "clickableColorPrimary": Object {
            "&:hover": Object {
              "backgroundColor": "#EF8426",
            },
          },
          "clickableColorSecondary": Object {
            "&:hover": Object {
              "backgroundColor": "#EF8426",
            },
          },
          "deleteIcon": Object {
            "&:hover": Object {
              "color": "#000000",
            },
            "color": "rgba(0, 0, 0, 0.8)",
            "fontSize": "24px",
            "height": "24px",
            "width": "24px",
          },
          "deleteIconColorPrimary": Object {
            "&:hover": Object {
              "color": "#FFFFFF",
            },
            "color": "rgba(255, 255, 255, 0.8)",
          },
          "deleteIconColorSecondary": Object {
            "&:hover": Object {
              "color": "#FFFFFF",
            },
            "color": "rgba(255, 255, 255, 0.8)",
          },
          "deleteIconSmall": Object {
            "fontSize": "16px",
            "height": "16px",
            "width": "16px",
          },
          "icon": Object {
            "fontSize": "24px",
          },
          "iconSmall": Object {
            "fontSize": "16px",
            "height": "16px",
            "marginTop": "1px",
            "width": "16px",
          },
          "outlined": Object {
            "borderColor": "rgba(0, 0, 0, 0.12)",
            "color": "#000000",
          },
          "outlinedPrimary": Object {
            "color": "#000000",
          },
          "outlinedSecondary": Object {
            "color": "#000000",
          },
          "root": Object {
            "& $avatar": Object {
              "backgroundColor": "rgba(0, 0, 0, 0.24)",
              "color": "#333333",
            },
            "&$disabled": Object {
              "opacity": 0.4,
            },
            "backgroundColor": "rgba(0, 0, 0, 0.12)",
            "color": "#333333",
            "fontSize": "0.875rem",
          },
        },
        "MuiExpansionPanel": Object {
          "root": Object {
            "&$disabled": Object {
              "backgroundColor": "#FFFFFF",
              "opacity": 0.32,
            },
            "&$expanded": Object {
              "borderColor": "#F4AB34",
            },
            "border": "transparent 1px solid",
          },
        },
        "MuiExpansionPanelSummary": Object {
          "root": Object {
            "&$disabled": Object {
              "opacity": 1,
            },
            "alignItems": "flex-start",
            "marginTop": "8px",
          },
        },
        "MuiFormLabel": Object {
          "formControl": Object {
            "marginTop": "-4px",
            "transform": "none",
          },
          "root": Object {
            "&.Mui-focused": Object {
              "color": "#777777",
              "fontSize": "0.875rem",
            },
            "fontSize": "0.875rem",
          },
        },
        "MuiIconButton": Object {
          "root": Object {
            "color": "#333333",
            "padding": "8px",
          },
          "sizeSmall": Object {
            "padding": "4px",
          },
        },
        "MuiInputAdornment": Object {
          "root": Object {
            "position": "absolute",
            "right": "0",
          },
        },
        "MuiInputBase": Object {
          "input": Object {
            "&.Mui-disabled": Object {
              "&:hover": Object {
                "boxShadow": "#333333 0 0 0 1px",
              },
              "opacity": 0.24,
            },
            "&:focus": Object {
              "boxShadow": "#F4AB34 0 0 0 2px",
            },
            "&:focus:not(:read-only)": Object {
              "boxShadow": "#F4AB34 0 0 0 2px",
            },
            "&:hover": Object {
              "boxShadow": "#777777 0 0 0 1px",
            },
            "&:hover:not(:placeholder-shown)": Object {
              "boxShadow": "#777777 0 0 0 1px",
            },
            "&:hover:not(:read-only):not(:disabled):not(:focus)": Object {
              "boxShadow": "#777777 0 0 0 1px",
            },
            "&:not(:placeholder-shown)": Object {
              "boxShadow": "#333333 0 0 0 1px",
            },
            "&:placeholder-shown": Object {
              "boxShadow": "#BBBBBB 0 0 0 1px",
            },
            "borderRadius": "4px",
            "boxShadow": "#BBBBBB 0 0 0 1px",
            "color": "#333333",
            "minHeight": "24px",
            "padding": "16px 35px 16px 16px",
          },
          "root": Object {
            "&.MuiInput-underline.Mui-disabled:before": Object {
              "borderBottom": "none",
            },
            "&.MuiInput-underline:after": Object {
              "borderBottom": "none",
            },
            "&.MuiInput-underline:before": Object {
              "borderBottom": "none",
            },
            "&.MuiInput-underline:hover:not(.Mui-disabled):before": Object {
              "borderBottom": "none",
            },
            "color": "#333333",
          },
        },
        "MuiInputLabel": Object {
          "formControl": Object {
            "marginTop": "-4px",
            "transform": "none",
          },
          "shrink": Object {
            "marginTop": "-4px",
            "transform": "none",
          },
        },
        "MuiListItem": Object {
          "button": Object {
            "&:hover": Object {
              "backgroundColor": "rgba(0, 0, 0, 0.04)",
            },
          },
          "root": Object {
            "&$selected": Object {
              "&:hover": Object {
                "backgroundColor": "rgba(0, 0, 0, 0.04)",
              },
              "backgroundColor": "rgba(255, 107, 11, 0.16)",
            },
            "&.Mui-disabled": Object {
              "opacity": 0.32,
            },
          },
        },
        "MuiTab": Object {
          "root": Object {
            "&$disabled": Object {
              "opacity": 0.24,
            },
          },
          "textColorInherit": Object {
            "&$disabled": Object {
              "opacity": 0.24,
            },
          },
          "wrapper": Object {
            "& > *:first-child": Object {
              "marginBottom": "2px !important",
            },
          },
        },
        "MuiTextField": Object {
          "& .MuiInputLabel": Object {
            "marginTop": "20px",
          },
        },
        "MuiToolbar": Object {
          "dense": Object {
            "@media (min-width: 600px)": Object {
              "minHeight": "56px",
            },
            "minHeight": "56px",
          },
          "gutters": Object {
            "@media (min-width: 600px)": Object {
              "padding": "0 16px",
            },
            "padding": "0 16px",
          },
          "regular": Object {
            "@media (min-width: 600px)": Object {
              "minHeight": "56px",
            },
            "minHeight": "56px",
          },
          "root": Object {
            "@media (min-width: 600px)": Object {
              "padding": "0 16px",
            },
            "padding": "0 16px",
          },
        },
      },
      "palette": Object {
        "action": Object {
          "disabled": "rgba(51, 51, 51, 0.24)",
        },
        "background": Object {
          "default": "#FAFAFA",
          "defaultContrastText": "#333333",
          "paper": "#FFFFFF",
          "paperContrastText": "#333333",
        },
        "complementary": Object {
          "highlight": "#000000",
          "link": "#227BBD",
          "linkContrastText": "#FFFFFF",
          "warning": "#FCC433",
          "warningContrastText": "#333333",
        },
        "error": Object {
          "contrastText": "#FFFFFF",
          "main": "#E74627",
        },
        "primary": Object {
          "contrastText": "#333333",
          "dark": "#EF8426",
          "light": "#FEFDE8",
          "main": "#F4AB34",
        },
        "secondary": Object {
          "contrastText": "#000000",
          "dark": "#FF5808",
          "light": "#FFF8E1",
          "main": "#FF6B0B",
        },
        "success": Object {
          "contrastText": "#FFFFFF",
          "main": "#569A32",
        },
        "text": Object {
          "disabled": "#BBBBBB",
          "hint": "#BBBBBB",
          "primary": "#333333",
          "secondary": "#777777",
        },
      },
      "shadows": Object {
        "0": "none",
        "1": "0 1px 1px 0 rgba(0, 0, 0, 0.14)",
        "12": "0 12px 17px 0 rgba(0, 0, 0, 0.14)",
        "16": "0 16px 24px 0 rgba(0, 0, 0, 0.14)",
        "2": "0 2px 2px 0 rgba(0, 0, 0, 0.14)",
        "24": "0 24px 38px 0 rgba(0, 0, 0, 0.14)",
        "3": "0 3px 4px 0 rgba(0, 0, 0, 0.14)",
        "4": "0 4px 5px 0 rgba(0, 0, 0, 0.14)",
        "6": "0 6px 10px 0 rgba(0, 0, 0, 0.14)",
        "8": "0 8px 10px 0 rgba(0, 0, 0, 0.14)",
        "9": "0 9px 12px 0 rgba(0, 0, 0, 0.14)",
      },
      "shape": Object {
        "badgeBorderRadius": 100,
        "borderRadius": 4,
      },
      "sizes": Object {
        "huge": 96,
        "hugex": 128,
        "hugexx": 144,
        "hugexxx": 192,
        "large": 64,
        "largex": 72,
        "largexx": 80,
        "largexxx": 88,
        "medium": 48,
        "mediumx": 56,
        "micro": 4,
        "none": 0,
        "semi": 32,
        "semix": 40,
        "small": 16,
        "standard": 24,
        "tiny": 8,
        "veryhuge": 256,
      },
      "spacing": 8,
      "typography": Object {
        "body1": Object {
          "fontSize": "1rem",
          "fontWeight": 400,
        },
        "body2": Object {
          "fontSize": "0.875rem",
          "fontWeight": 400,
        },
        "button": Object {
          "fontSize": "0.875rem",
          "fontWeight": 600,
        },
        "caption": Object {
          "fontSize": "0.75rem",
          "fontWeight": 400,
        },
        "fontFamily": "\\"Roboto\\", sans-serif",
        "fontFamilyBrand1": "\\"Helvetica Now Display\\"",
        "fontFamilyBrand2": "\\"Helvetica Now Text\\"",
        "fontFamilyBrand3": undefined,
        "fontWeightBold": 700,
        "fontWeightLight": 300,
        "fontWeightMedium": 500,
        "fontWeightRegular": 400,
        "h1": Object {
          "fontSize": "6rem",
          "fontWeight": 300,
        },
        "h2": Object {
          "fontSize": "3.75rem",
          "fontWeight": 300,
        },
        "h3": Object {
          "fontSize": "3rem",
          "fontWeight": 400,
        },
        "h4": Object {
          "fontSize": "2.125rem",
          "fontWeight": 400,
        },
        "h5": Object {
          "fontSize": "1.5rem",
          "fontWeight": 400,
        },
        "h6": Object {
          "fontSize": "1.25rem",
          "fontWeight": 600,
        },
        "overline": Object {
          "fontSize": "0.75rem",
          "fontWeight": 400,
        },
        "subtitle1": Object {
          "fontSize": "1rem",
          "fontWeight": 400,
        },
        "subtitle2": Object {
          "fontSize": "0.875rem",
          "fontWeight": 500,
        },
      },
    }
  }
  value={2020-02-01T03:00:00.000Z}
>
  <Component
    utils={[Function]}
  >
    <WithTheme(ForwardRef)
      label="Only calendar"
      onChange={[Function]}
      state="success"
      theme={
        Object {
          "avatarSizes": Object {
            "huge": Object {
              "fontSize": "1.5rem",
              "size": 80,
            },
            "large": Object {
              "fontSize": "1rem",
              "size": 48,
            },
            "small": Object {
              "fontSize": ".875rem",
              "size": 32,
            },
            "standard": Object {
              "fontSize": "1rem",
              "size": 40,
            },
            "tiny": Object {
              "fontSize": ".625rem",
              "size": 24,
            },
          },
          "buttonSizes": Object {
            "large": Object {
              "minHeight": 48,
              "paddingBottom": 16,
              "paddingLeft": 16,
              "paddingRight": 16,
              "paddingTop": 16,
            },
            "medium": Object {
              "minHeight": 40,
              "paddingBottom": 12,
              "paddingLeft": 16,
              "paddingRight": 16,
              "paddingTop": 12,
            },
            "small": Object {
              "minHeight": 32,
              "paddingBottom": 8,
              "paddingLeft": 8,
              "paddingRight": 8,
              "paddingTop": 8,
            },
          },
          "iconSizes": Object {
            "huge": 144,
            "hugex": 192,
            "hugexx": 256,
            "large": 72,
            "largex": 96,
            "largexx": 128,
            "medium": 64,
            "micro": 16,
            "small": 32,
            "standard": 48,
            "tiny": 24,
          },
          "overrides": Object {
            "MuiAvatar": Object {
              "colorDefault": Object {
                "color": "#333333",
              },
            },
            "MuiBadge": Object {
              "badge": Object {
                "padding": "0 4px",
              },
            },
            "MuiButton": Object {
              "outlinedPrimary": Object {
                "color": "#333333",
              },
              "outlinedSecondary": Object {
                "color": "#333333",
              },
              "root": Object {
                "fontSize": "0.875rem",
                "minHeight": "40px",
                "padding": "8px 16px",
              },
              "sizeLarge": Object {
                "fontSize": "0.875rem",
                "minHeight": "48px",
              },
              "sizeSmall": Object {
                "fontSize": "0.875rem",
                "minHeight": "32px",
              },
              "textPrimary": Object {
                "color": "#333333",
              },
            },
            "MuiChip": Object {
              "clickableColorPrimary": Object {
                "&:hover": Object {
                  "backgroundColor": "#EF8426",
                },
              },
              "clickableColorSecondary": Object {
                "&:hover": Object {
                  "backgroundColor": "#EF8426",
                },
              },
              "deleteIcon": Object {
                "&:hover": Object {
                  "color": "#000000",
                },
                "color": "rgba(0, 0, 0, 0.8)",
                "fontSize": "24px",
                "height": "24px",
                "width": "24px",
              },
              "deleteIconColorPrimary": Object {
                "&:hover": Object {
                  "color": "#FFFFFF",
                },
                "color": "rgba(255, 255, 255, 0.8)",
              },
              "deleteIconColorSecondary": Object {
                "&:hover": Object {
                  "color": "#FFFFFF",
                },
                "color": "rgba(255, 255, 255, 0.8)",
              },
              "deleteIconSmall": Object {
                "fontSize": "16px",
                "height": "16px",
                "width": "16px",
              },
              "icon": Object {
                "fontSize": "24px",
              },
              "iconSmall": Object {
                "fontSize": "16px",
                "height": "16px",
                "marginTop": "1px",
                "width": "16px",
              },
              "outlined": Object {
                "borderColor": "rgba(0, 0, 0, 0.12)",
                "color": "#000000",
              },
              "outlinedPrimary": Object {
                "color": "#000000",
              },
              "outlinedSecondary": Object {
                "color": "#000000",
              },
              "root": Object {
                "& $avatar": Object {
                  "backgroundColor": "rgba(0, 0, 0, 0.24)",
                  "color": "#333333",
                },
                "&$disabled": Object {
                  "opacity": 0.4,
                },
                "backgroundColor": "rgba(0, 0, 0, 0.12)",
                "color": "#333333",
                "fontSize": "0.875rem",
              },
            },
            "MuiExpansionPanel": Object {
              "root": Object {
                "&$disabled": Object {
                  "backgroundColor": "#FFFFFF",
                  "opacity": 0.32,
                },
                "&$expanded": Object {
                  "borderColor": "#F4AB34",
                },
                "border": "transparent 1px solid",
              },
            },
            "MuiExpansionPanelSummary": Object {
              "root": Object {
                "&$disabled": Object {
                  "opacity": 1,
                },
                "alignItems": "flex-start",
                "marginTop": "8px",
              },
            },
            "MuiFormLabel": Object {
              "formControl": Object {
                "marginTop": "-4px",
                "transform": "none",
              },
              "root": Object {
                "&.Mui-focused": Object {
                  "color": "#777777",
                  "fontSize": "0.875rem",
                },
                "fontSize": "0.875rem",
              },
            },
            "MuiIconButton": Object {
              "root": Object {
                "color": "#333333",
                "padding": "8px",
              },
              "sizeSmall": Object {
                "padding": "4px",
              },
            },
            "MuiInputAdornment": Object {
              "root": Object {
                "position": "absolute",
                "right": "0",
              },
            },
            "MuiInputBase": Object {
              "input": Object {
                "&.Mui-disabled": Object {
                  "&:hover": Object {
                    "boxShadow": "#333333 0 0 0 1px",
                  },
                  "opacity": 0.24,
                },
                "&:focus": Object {
                  "boxShadow": "#F4AB34 0 0 0 2px",
                },
                "&:focus:not(:read-only)": Object {
                  "boxShadow": "#F4AB34 0 0 0 2px",
                },
                "&:hover": Object {
                  "boxShadow": "#777777 0 0 0 1px",
                },
                "&:hover:not(:placeholder-shown)": Object {
                  "boxShadow": "#777777 0 0 0 1px",
                },
                "&:hover:not(:read-only):not(:disabled):not(:focus)": Object {
                  "boxShadow": "#777777 0 0 0 1px",
                },
                "&:not(:placeholder-shown)": Object {
                  "boxShadow": "#333333 0 0 0 1px",
                },
                "&:placeholder-shown": Object {
                  "boxShadow": "#BBBBBB 0 0 0 1px",
                },
                "borderRadius": "4px",
                "boxShadow": "#BBBBBB 0 0 0 1px",
                "color": "#333333",
                "minHeight": "24px",
                "padding": "16px 35px 16px 16px",
              },
              "root": Object {
                "&.MuiInput-underline.Mui-disabled:before": Object {
                  "borderBottom": "none",
                },
                "&.MuiInput-underline:after": Object {
                  "borderBottom": "none",
                },
                "&.MuiInput-underline:before": Object {
                  "borderBottom": "none",
                },
                "&.MuiInput-underline:hover:not(.Mui-disabled):before": Object {
                  "borderBottom": "none",
                },
                "color": "#333333",
              },
            },
            "MuiInputLabel": Object {
              "formControl": Object {
                "marginTop": "-4px",
                "transform": "none",
              },
              "shrink": Object {
                "marginTop": "-4px",
                "transform": "none",
              },
            },
            "MuiListItem": Object {
              "button": Object {
                "&:hover": Object {
                  "backgroundColor": "rgba(0, 0, 0, 0.04)",
                },
              },
              "root": Object {
                "&$selected": Object {
                  "&:hover": Object {
                    "backgroundColor": "rgba(0, 0, 0, 0.04)",
                  },
                  "backgroundColor": "rgba(255, 107, 11, 0.16)",
                },
                "&.Mui-disabled": Object {
                  "opacity": 0.32,
                },
              },
            },
            "MuiTab": Object {
              "root": Object {
                "&$disabled": Object {
                  "opacity": 0.24,
                },
              },
              "textColorInherit": Object {
                "&$disabled": Object {
                  "opacity": 0.24,
                },
              },
              "wrapper": Object {
                "& > *:first-child": Object {
                  "marginBottom": "2px !important",
                },
              },
            },
            "MuiTextField": Object {
              "& .MuiInputLabel": Object {
                "marginTop": "20px",
              },
            },
            "MuiToolbar": Object {
              "dense": Object {
                "@media (min-width: 600px)": Object {
                  "minHeight": "56px",
                },
                "minHeight": "56px",
              },
              "gutters": Object {
                "@media (min-width: 600px)": Object {
                  "padding": "0 16px",
                },
                "padding": "0 16px",
              },
              "regular": Object {
                "@media (min-width: 600px)": Object {
                  "minHeight": "56px",
                },
                "minHeight": "56px",
              },
              "root": Object {
                "@media (min-width: 600px)": Object {
                  "padding": "0 16px",
                },
                "padding": "0 16px",
              },
            },
          },
          "palette": Object {
            "action": Object {
              "disabled": "rgba(51, 51, 51, 0.24)",
            },
            "background": Object {
              "default": "#FAFAFA",
              "defaultContrastText": "#333333",
              "paper": "#FFFFFF",
              "paperContrastText": "#333333",
            },
            "complementary": Object {
              "highlight": "#000000",
              "link": "#227BBD",
              "linkContrastText": "#FFFFFF",
              "warning": "#FCC433",
              "warningContrastText": "#333333",
            },
            "error": Object {
              "contrastText": "#FFFFFF",
              "main": "#E74627",
            },
            "primary": Object {
              "contrastText": "#333333",
              "dark": "#EF8426",
              "light": "#FEFDE8",
              "main": "#F4AB34",
            },
            "secondary": Object {
              "contrastText": "#000000",
              "dark": "#FF5808",
              "light": "#FFF8E1",
              "main": "#FF6B0B",
            },
            "success": Object {
              "contrastText": "#FFFFFF",
              "main": "#569A32",
            },
            "text": Object {
              "disabled": "#BBBBBB",
              "hint": "#BBBBBB",
              "primary": "#333333",
              "secondary": "#777777",
            },
          },
          "shadows": Object {
            "0": "none",
            "1": "0 1px 1px 0 rgba(0, 0, 0, 0.14)",
            "12": "0 12px 17px 0 rgba(0, 0, 0, 0.14)",
            "16": "0 16px 24px 0 rgba(0, 0, 0, 0.14)",
            "2": "0 2px 2px 0 rgba(0, 0, 0, 0.14)",
            "24": "0 24px 38px 0 rgba(0, 0, 0, 0.14)",
            "3": "0 3px 4px 0 rgba(0, 0, 0, 0.14)",
            "4": "0 4px 5px 0 rgba(0, 0, 0, 0.14)",
            "6": "0 6px 10px 0 rgba(0, 0, 0, 0.14)",
            "8": "0 8px 10px 0 rgba(0, 0, 0, 0.14)",
            "9": "0 9px 12px 0 rgba(0, 0, 0, 0.14)",
          },
          "shape": Object {
            "badgeBorderRadius": 100,
            "borderRadius": 4,
          },
          "sizes": Object {
            "huge": 96,
            "hugex": 128,
            "hugexx": 144,
            "hugexxx": 192,
            "large": 64,
            "largex": 72,
            "largexx": 80,
            "largexxx": 88,
            "medium": 48,
            "mediumx": 56,
            "micro": 4,
            "none": 0,
            "semi": 32,
            "semix": 40,
            "small": 16,
            "standard": 24,
            "tiny": 8,
            "veryhuge": 256,
          },
          "spacing": 8,
          "typography": Object {
            "body1": Object {
              "fontSize": "1rem",
              "fontWeight": 400,
            },
            "body2": Object {
              "fontSize": "0.875rem",
              "fontWeight": 400,
            },
            "button": Object {
              "fontSize": "0.875rem",
              "fontWeight": 600,
            },
            "caption": Object {
              "fontSize": "0.75rem",
              "fontWeight": 400,
            },
            "fontFamily": "\\"Roboto\\", sans-serif",
            "fontFamilyBrand1": "\\"Helvetica Now Display\\"",
            "fontFamilyBrand2": "\\"Helvetica Now Text\\"",
            "fontFamilyBrand3": undefined,
            "fontWeightBold": 700,
            "fontWeightLight": 300,
            "fontWeightMedium": 500,
            "fontWeightRegular": 400,
            "h1": Object {
              "fontSize": "6rem",
              "fontWeight": 300,
            },
            "h2": Object {
              "fontSize": "3.75rem",
              "fontWeight": 300,
            },
            "h3": Object {
              "fontSize": "3rem",
              "fontWeight": 400,
            },
            "h4": Object {
              "fontSize": "2.125rem",
              "fontWeight": 400,
            },
            "h5": Object {
              "fontSize": "1.5rem",
              "fontWeight": 400,
            },
            "h6": Object {
              "fontSize": "1.25rem",
              "fontWeight": 600,
            },
            "overline": Object {
              "fontSize": "0.75rem",
              "fontWeight": 400,
            },
            "subtitle1": Object {
              "fontSize": "1rem",
              "fontWeight": 400,
            },
            "subtitle2": Object {
              "fontSize": "0.875rem",
              "fontWeight": 500,
            },
          },
        }
      }
      value={2020-02-01T03:00:00.000Z}
      variant="dialog"
    >
      <ForwardRef
        label="Only calendar"
        onChange={[Function]}
        state="success"
        theme={
          Object {
            "avatarSizes": Object {
              "huge": Object {
                "fontSize": "1.5rem",
                "size": 80,
              },
              "large": Object {
                "fontSize": "1rem",
                "size": 48,
              },
              "small": Object {
                "fontSize": ".875rem",
                "size": 32,
              },
              "standard": Object {
                "fontSize": "1rem",
                "size": 40,
              },
              "tiny": Object {
                "fontSize": ".625rem",
                "size": 24,
              },
            },
            "buttonSizes": Object {
              "large": Object {
                "minHeight": 48,
                "paddingBottom": 16,
                "paddingLeft": 16,
                "paddingRight": 16,
                "paddingTop": 16,
              },
              "medium": Object {
                "minHeight": 40,
                "paddingBottom": 12,
                "paddingLeft": 16,
                "paddingRight": 16,
                "paddingTop": 12,
              },
              "small": Object {
                "minHeight": 32,
                "paddingBottom": 8,
                "paddingLeft": 8,
                "paddingRight": 8,
                "paddingTop": 8,
              },
            },
            "iconSizes": Object {
              "huge": 144,
              "hugex": 192,
              "hugexx": 256,
              "large": 72,
              "largex": 96,
              "largexx": 128,
              "medium": 64,
              "micro": 16,
              "small": 32,
              "standard": 48,
              "tiny": 24,
            },
            "overrides": Object {
              "MuiAvatar": Object {
                "colorDefault": Object {
                  "color": "#333333",
                },
              },
              "MuiBadge": Object {
                "badge": Object {
                  "padding": "0 4px",
                },
              },
              "MuiButton": Object {
                "outlinedPrimary": Object {
                  "color": "#333333",
                },
                "outlinedSecondary": Object {
                  "color": "#333333",
                },
                "root": Object {
                  "fontSize": "0.875rem",
                  "minHeight": "40px",
                  "padding": "8px 16px",
                },
                "sizeLarge": Object {
                  "fontSize": "0.875rem",
                  "minHeight": "48px",
                },
                "sizeSmall": Object {
                  "fontSize": "0.875rem",
                  "minHeight": "32px",
                },
                "textPrimary": Object {
                  "color": "#333333",
                },
              },
              "MuiChip": Object {
                "clickableColorPrimary": Object {
                  "&:hover": Object {
                    "backgroundColor": "#EF8426",
                  },
                },
                "clickableColorSecondary": Object {
                  "&:hover": Object {
                    "backgroundColor": "#EF8426",
                  },
                },
                "deleteIcon": Object {
                  "&:hover": Object {
                    "color": "#000000",
                  },
                  "color": "rgba(0, 0, 0, 0.8)",
                  "fontSize": "24px",
                  "height": "24px",
                  "width": "24px",
                },
                "deleteIconColorPrimary": Object {
                  "&:hover": Object {
                    "color": "#FFFFFF",
                  },
                  "color": "rgba(255, 255, 255, 0.8)",
                },
                "deleteIconColorSecondary": Object {
                  "&:hover": Object {
                    "color": "#FFFFFF",
                  },
                  "color": "rgba(255, 255, 255, 0.8)",
                },
                "deleteIconSmall": Object {
                  "fontSize": "16px",
                  "height": "16px",
                  "width": "16px",
                },
                "icon": Object {
                  "fontSize": "24px",
                },
                "iconSmall": Object {
                  "fontSize": "16px",
                  "height": "16px",
                  "marginTop": "1px",
                  "width": "16px",
                },
                "outlined": Object {
                  "borderColor": "rgba(0, 0, 0, 0.12)",
                  "color": "#000000",
                },
                "outlinedPrimary": Object {
                  "color": "#000000",
                },
                "outlinedSecondary": Object {
                  "color": "#000000",
                },
                "root": Object {
                  "& $avatar": Object {
                    "backgroundColor": "rgba(0, 0, 0, 0.24)",
                    "color": "#333333",
                  },
                  "&$disabled": Object {
                    "opacity": 0.4,
                  },
                  "backgroundColor": "rgba(0, 0, 0, 0.12)",
                  "color": "#333333",
                  "fontSize": "0.875rem",
                },
              },
              "MuiExpansionPanel": Object {
                "root": Object {
                  "&$disabled": Object {
                    "backgroundColor": "#FFFFFF",
                    "opacity": 0.32,
                  },
                  "&$expanded": Object {
                    "borderColor": "#F4AB34",
                  },
                  "border": "transparent 1px solid",
                },
              },
              "MuiExpansionPanelSummary": Object {
                "root": Object {
                  "&$disabled": Object {
                    "opacity": 1,
                  },
                  "alignItems": "flex-start",
                  "marginTop": "8px",
                },
              },
              "MuiFormLabel": Object {
                "formControl": Object {
                  "marginTop": "-4px",
                  "transform": "none",
                },
                "root": Object {
                  "&.Mui-focused": Object {
                    "color": "#777777",
                    "fontSize": "0.875rem",
                  },
                  "fontSize": "0.875rem",
                },
              },
              "MuiIconButton": Object {
                "root": Object {
                  "color": "#333333",
                  "padding": "8px",
                },
                "sizeSmall": Object {
                  "padding": "4px",
                },
              },
              "MuiInputAdornment": Object {
                "root": Object {
                  "position": "absolute",
                  "right": "0",
                },
              },
              "MuiInputBase": Object {
                "input": Object {
                  "&.Mui-disabled": Object {
                    "&:hover": Object {
                      "boxShadow": "#333333 0 0 0 1px",
                    },
                    "opacity": 0.24,
                  },
                  "&:focus": Object {
                    "boxShadow": "#F4AB34 0 0 0 2px",
                  },
                  "&:focus:not(:read-only)": Object {
                    "boxShadow": "#F4AB34 0 0 0 2px",
                  },
                  "&:hover": Object {
                    "boxShadow": "#777777 0 0 0 1px",
                  },
                  "&:hover:not(:placeholder-shown)": Object {
                    "boxShadow": "#777777 0 0 0 1px",
                  },
                  "&:hover:not(:read-only):not(:disabled):not(:focus)": Object {
                    "boxShadow": "#777777 0 0 0 1px",
                  },
                  "&:not(:placeholder-shown)": Object {
                    "boxShadow": "#333333 0 0 0 1px",
                  },
                  "&:placeholder-shown": Object {
                    "boxShadow": "#BBBBBB 0 0 0 1px",
                  },
                  "borderRadius": "4px",
                  "boxShadow": "#BBBBBB 0 0 0 1px",
                  "color": "#333333",
                  "minHeight": "24px",
                  "padding": "16px 35px 16px 16px",
                },
                "root": Object {
                  "&.MuiInput-underline.Mui-disabled:before": Object {
                    "borderBottom": "none",
                  },
                  "&.MuiInput-underline:after": Object {
                    "borderBottom": "none",
                  },
                  "&.MuiInput-underline:before": Object {
                    "borderBottom": "none",
                  },
                  "&.MuiInput-underline:hover:not(.Mui-disabled):before": Object {
                    "borderBottom": "none",
                  },
                  "color": "#333333",
                },
              },
              "MuiInputLabel": Object {
                "formControl": Object {
                  "marginTop": "-4px",
                  "transform": "none",
                },
                "shrink": Object {
                  "marginTop": "-4px",
                  "transform": "none",
                },
              },
              "MuiListItem": Object {
                "button": Object {
                  "&:hover": Object {
                    "backgroundColor": "rgba(0, 0, 0, 0.04)",
                  },
                },
                "root": Object {
                  "&$selected": Object {
                    "&:hover": Object {
                      "backgroundColor": "rgba(0, 0, 0, 0.04)",
                    },
                    "backgroundColor": "rgba(255, 107, 11, 0.16)",
                  },
                  "&.Mui-disabled": Object {
                    "opacity": 0.32,
                  },
                },
              },
              "MuiTab": Object {
                "root": Object {
                  "&$disabled": Object {
                    "opacity": 0.24,
                  },
                },
                "textColorInherit": Object {
                  "&$disabled": Object {
                    "opacity": 0.24,
                  },
                },
                "wrapper": Object {
                  "& > *:first-child": Object {
                    "marginBottom": "2px !important",
                  },
                },
              },
              "MuiTextField": Object {
                "& .MuiInputLabel": Object {
                  "marginTop": "20px",
                },
              },
              "MuiToolbar": Object {
                "dense": Object {
                  "@media (min-width: 600px)": Object {
                    "minHeight": "56px",
                  },
                  "minHeight": "56px",
                },
                "gutters": Object {
                  "@media (min-width: 600px)": Object {
                    "padding": "0 16px",
                  },
                  "padding": "0 16px",
                },
                "regular": Object {
                  "@media (min-width: 600px)": Object {
                    "minHeight": "56px",
                  },
                  "minHeight": "56px",
                },
                "root": Object {
                  "@media (min-width: 600px)": Object {
                    "padding": "0 16px",
                  },
                  "padding": "0 16px",
                },
              },
            },
            "palette": Object {
              "action": Object {
                "disabled": "rgba(51, 51, 51, 0.24)",
              },
              "background": Object {
                "default": "#FAFAFA",
                "defaultContrastText": "#333333",
                "paper": "#FFFFFF",
                "paperContrastText": "#333333",
              },
              "complementary": Object {
                "highlight": "#000000",
                "link": "#227BBD",
                "linkContrastText": "#FFFFFF",
                "warning": "#FCC433",
                "warningContrastText": "#333333",
              },
              "error": Object {
                "contrastText": "#FFFFFF",
                "main": "#E74627",
              },
              "primary": Object {
                "contrastText": "#333333",
                "dark": "#EF8426",
                "light": "#FEFDE8",
                "main": "#F4AB34",
              },
              "secondary": Object {
                "contrastText": "#000000",
                "dark": "#FF5808",
                "light": "#FFF8E1",
                "main": "#FF6B0B",
              },
              "success": Object {
                "contrastText": "#FFFFFF",
                "main": "#569A32",
              },
              "text": Object {
                "disabled": "#BBBBBB",
                "hint": "#BBBBBB",
                "primary": "#333333",
                "secondary": "#777777",
              },
            },
            "shadows": Object {
              "0": "none",
              "1": "0 1px 1px 0 rgba(0, 0, 0, 0.14)",
              "12": "0 12px 17px 0 rgba(0, 0, 0, 0.14)",
              "16": "0 16px 24px 0 rgba(0, 0, 0, 0.14)",
              "2": "0 2px 2px 0 rgba(0, 0, 0, 0.14)",
              "24": "0 24px 38px 0 rgba(0, 0, 0, 0.14)",
              "3": "0 3px 4px 0 rgba(0, 0, 0, 0.14)",
              "4": "0 4px 5px 0 rgba(0, 0, 0, 0.14)",
              "6": "0 6px 10px 0 rgba(0, 0, 0, 0.14)",
              "8": "0 8px 10px 0 rgba(0, 0, 0, 0.14)",
              "9": "0 9px 12px 0 rgba(0, 0, 0, 0.14)",
            },
            "shape": Object {
              "badgeBorderRadius": 100,
              "borderRadius": 4,
            },
            "sizes": Object {
              "huge": 96,
              "hugex": 128,
              "hugexx": 144,
              "hugexxx": 192,
              "large": 64,
              "largex": 72,
              "largexx": 80,
              "largexxx": 88,
              "medium": 48,
              "mediumx": 56,
              "micro": 4,
              "none": 0,
              "semi": 32,
              "semix": 40,
              "small": 16,
              "standard": 24,
              "tiny": 8,
              "veryhuge": 256,
            },
            "spacing": 8,
            "typography": Object {
              "body1": Object {
                "fontSize": "1rem",
                "fontWeight": 400,
              },
              "body2": Object {
                "fontSize": "0.875rem",
                "fontWeight": 400,
              },
              "button": Object {
                "fontSize": "0.875rem",
                "fontWeight": 600,
              },
              "caption": Object {
                "fontSize": "0.75rem",
                "fontWeight": 400,
              },
              "fontFamily": "\\"Roboto\\", sans-serif",
              "fontFamilyBrand1": "\\"Helvetica Now Display\\"",
              "fontFamilyBrand2": "\\"Helvetica Now Text\\"",
              "fontFamilyBrand3": undefined,
              "fontWeightBold": 700,
              "fontWeightLight": 300,
              "fontWeightMedium": 500,
              "fontWeightRegular": 400,
              "h1": Object {
                "fontSize": "6rem",
                "fontWeight": 300,
              },
              "h2": Object {
                "fontSize": "3.75rem",
                "fontWeight": 300,
              },
              "h3": Object {
                "fontSize": "3rem",
                "fontWeight": 400,
              },
              "h4": Object {
                "fontSize": "2.125rem",
                "fontWeight": 400,
              },
              "h5": Object {
                "fontSize": "1.5rem",
                "fontWeight": 400,
              },
              "h6": Object {
                "fontSize": "1.25rem",
                "fontWeight": 600,
              },
              "overline": Object {
                "fontSize": "0.75rem",
                "fontWeight": 400,
              },
              "subtitle1": Object {
                "fontSize": "1rem",
                "fontWeight": 400,
              },
              "subtitle2": Object {
                "fontSize": "0.875rem",
                "fontWeight": 500,
              },
            },
          }
        }
        value={2020-02-01T03:00:00.000Z}
        variant="dialog"
      >
        <Component
          label="Only calendar"
          onChange={[Function]}
          state="success"
          theme={
            Object {
              "avatarSizes": Object {
                "huge": Object {
                  "fontSize": "1.5rem",
                  "size": 80,
                },
                "large": Object {
                  "fontSize": "1rem",
                  "size": 48,
                },
                "small": Object {
                  "fontSize": ".875rem",
                  "size": 32,
                },
                "standard": Object {
                  "fontSize": "1rem",
                  "size": 40,
                },
                "tiny": Object {
                  "fontSize": ".625rem",
                  "size": 24,
                },
              },
              "buttonSizes": Object {
                "large": Object {
                  "minHeight": 48,
                  "paddingBottom": 16,
                  "paddingLeft": 16,
                  "paddingRight": 16,
                  "paddingTop": 16,
                },
                "medium": Object {
                  "minHeight": 40,
                  "paddingBottom": 12,
                  "paddingLeft": 16,
                  "paddingRight": 16,
                  "paddingTop": 12,
                },
                "small": Object {
                  "minHeight": 32,
                  "paddingBottom": 8,
                  "paddingLeft": 8,
                  "paddingRight": 8,
                  "paddingTop": 8,
                },
              },
              "iconSizes": Object {
                "huge": 144,
                "hugex": 192,
                "hugexx": 256,
                "large": 72,
                "largex": 96,
                "largexx": 128,
                "medium": 64,
                "micro": 16,
                "small": 32,
                "standard": 48,
                "tiny": 24,
              },
              "overrides": Object {
                "MuiAvatar": Object {
                  "colorDefault": Object {
                    "color": "#333333",
                  },
                },
                "MuiBadge": Object {
                  "badge": Object {
                    "padding": "0 4px",
                  },
                },
                "MuiButton": Object {
                  "outlinedPrimary": Object {
                    "color": "#333333",
                  },
                  "outlinedSecondary": Object {
                    "color": "#333333",
                  },
                  "root": Object {
                    "fontSize": "0.875rem",
                    "minHeight": "40px",
                    "padding": "8px 16px",
                  },
                  "sizeLarge": Object {
                    "fontSize": "0.875rem",
                    "minHeight": "48px",
                  },
                  "sizeSmall": Object {
                    "fontSize": "0.875rem",
                    "minHeight": "32px",
                  },
                  "textPrimary": Object {
                    "color": "#333333",
                  },
                },
                "MuiChip": Object {
                  "clickableColorPrimary": Object {
                    "&:hover": Object {
                      "backgroundColor": "#EF8426",
                    },
                  },
                  "clickableColorSecondary": Object {
                    "&:hover": Object {
                      "backgroundColor": "#EF8426",
                    },
                  },
                  "deleteIcon": Object {
                    "&:hover": Object {
                      "color": "#000000",
                    },
                    "color": "rgba(0, 0, 0, 0.8)",
                    "fontSize": "24px",
                    "height": "24px",
                    "width": "24px",
                  },
                  "deleteIconColorPrimary": Object {
                    "&:hover": Object {
                      "color": "#FFFFFF",
                    },
                    "color": "rgba(255, 255, 255, 0.8)",
                  },
                  "deleteIconColorSecondary": Object {
                    "&:hover": Object {
                      "color": "#FFFFFF",
                    },
                    "color": "rgba(255, 255, 255, 0.8)",
                  },
                  "deleteIconSmall": Object {
                    "fontSize": "16px",
                    "height": "16px",
                    "width": "16px",
                  },
                  "icon": Object {
                    "fontSize": "24px",
                  },
                  "iconSmall": Object {
                    "fontSize": "16px",
                    "height": "16px",
                    "marginTop": "1px",
                    "width": "16px",
                  },
                  "outlined": Object {
                    "borderColor": "rgba(0, 0, 0, 0.12)",
                    "color": "#000000",
                  },
                  "outlinedPrimary": Object {
                    "color": "#000000",
                  },
                  "outlinedSecondary": Object {
                    "color": "#000000",
                  },
                  "root": Object {
                    "& $avatar": Object {
                      "backgroundColor": "rgba(0, 0, 0, 0.24)",
                      "color": "#333333",
                    },
                    "&$disabled": Object {
                      "opacity": 0.4,
                    },
                    "backgroundColor": "rgba(0, 0, 0, 0.12)",
                    "color": "#333333",
                    "fontSize": "0.875rem",
                  },
                },
                "MuiExpansionPanel": Object {
                  "root": Object {
                    "&$disabled": Object {
                      "backgroundColor": "#FFFFFF",
                      "opacity": 0.32,
                    },
                    "&$expanded": Object {
                      "borderColor": "#F4AB34",
                    },
                    "border": "transparent 1px solid",
                  },
                },
                "MuiExpansionPanelSummary": Object {
                  "root": Object {
                    "&$disabled": Object {
                      "opacity": 1,
                    },
                    "alignItems": "flex-start",
                    "marginTop": "8px",
                  },
                },
                "MuiFormLabel": Object {
                  "formControl": Object {
                    "marginTop": "-4px",
                    "transform": "none",
                  },
                  "root": Object {
                    "&.Mui-focused": Object {
                      "color": "#777777",
                      "fontSize": "0.875rem",
                    },
                    "fontSize": "0.875rem",
                  },
                },
                "MuiIconButton": Object {
                  "root": Object {
                    "color": "#333333",
                    "padding": "8px",
                  },
                  "sizeSmall": Object {
                    "padding": "4px",
                  },
                },
                "MuiInputAdornment": Object {
                  "root": Object {
                    "position": "absolute",
                    "right": "0",
                  },
                },
                "MuiInputBase": Object {
                  "input": Object {
                    "&.Mui-disabled": Object {
                      "&:hover": Object {
                        "boxShadow": "#333333 0 0 0 1px",
                      },
                      "opacity": 0.24,
                    },
                    "&:focus": Object {
                      "boxShadow": "#F4AB34 0 0 0 2px",
                    },
                    "&:focus:not(:read-only)": Object {
                      "boxShadow": "#F4AB34 0 0 0 2px",
                    },
                    "&:hover": Object {
                      "boxShadow": "#777777 0 0 0 1px",
                    },
                    "&:hover:not(:placeholder-shown)": Object {
                      "boxShadow": "#777777 0 0 0 1px",
                    },
                    "&:hover:not(:read-only):not(:disabled):not(:focus)": Object {
                      "boxShadow": "#777777 0 0 0 1px",
                    },
                    "&:not(:placeholder-shown)": Object {
                      "boxShadow": "#333333 0 0 0 1px",
                    },
                    "&:placeholder-shown": Object {
                      "boxShadow": "#BBBBBB 0 0 0 1px",
                    },
                    "borderRadius": "4px",
                    "boxShadow": "#BBBBBB 0 0 0 1px",
                    "color": "#333333",
                    "minHeight": "24px",
                    "padding": "16px 35px 16px 16px",
                  },
                  "root": Object {
                    "&.MuiInput-underline.Mui-disabled:before": Object {
                      "borderBottom": "none",
                    },
                    "&.MuiInput-underline:after": Object {
                      "borderBottom": "none",
                    },
                    "&.MuiInput-underline:before": Object {
                      "borderBottom": "none",
                    },
                    "&.MuiInput-underline:hover:not(.Mui-disabled):before": Object {
                      "borderBottom": "none",
                    },
                    "color": "#333333",
                  },
                },
                "MuiInputLabel": Object {
                  "formControl": Object {
                    "marginTop": "-4px",
                    "transform": "none",
                  },
                  "shrink": Object {
                    "marginTop": "-4px",
                    "transform": "none",
                  },
                },
                "MuiListItem": Object {
                  "button": Object {
                    "&:hover": Object {
                      "backgroundColor": "rgba(0, 0, 0, 0.04)",
                    },
                  },
                  "root": Object {
                    "&$selected": Object {
                      "&:hover": Object {
                        "backgroundColor": "rgba(0, 0, 0, 0.04)",
                      },
                      "backgroundColor": "rgba(255, 107, 11, 0.16)",
                    },
                    "&.Mui-disabled": Object {
                      "opacity": 0.32,
                    },
                  },
                },
                "MuiTab": Object {
                  "root": Object {
                    "&$disabled": Object {
                      "opacity": 0.24,
                    },
                  },
                  "textColorInherit": Object {
                    "&$disabled": Object {
                      "opacity": 0.24,
                    },
                  },
                  "wrapper": Object {
                    "& > *:first-child": Object {
                      "marginBottom": "2px !important",
                    },
                  },
                },
                "MuiTextField": Object {
                  "& .MuiInputLabel": Object {
                    "marginTop": "20px",
                  },
                },
                "MuiToolbar": Object {
                  "dense": Object {
                    "@media (min-width: 600px)": Object {
                      "minHeight": "56px",
                    },
                    "minHeight": "56px",
                  },
                  "gutters": Object {
                    "@media (min-width: 600px)": Object {
                      "padding": "0 16px",
                    },
                    "padding": "0 16px",
                  },
                  "regular": Object {
                    "@media (min-width: 600px)": Object {
                      "minHeight": "56px",
                    },
                    "minHeight": "56px",
                  },
                  "root": Object {
                    "@media (min-width: 600px)": Object {
                      "padding": "0 16px",
                    },
                    "padding": "0 16px",
                  },
                },
              },
              "palette": Object {
                "action": Object {
                  "disabled": "rgba(51, 51, 51, 0.24)",
                },
                "background": Object {
                  "default": "#FAFAFA",
                  "defaultContrastText": "#333333",
                  "paper": "#FFFFFF",
                  "paperContrastText": "#333333",
                },
                "complementary": Object {
                  "highlight": "#000000",
                  "link": "#227BBD",
                  "linkContrastText": "#FFFFFF",
                  "warning": "#FCC433",
                  "warningContrastText": "#333333",
                },
                "error": Object {
                  "contrastText": "#FFFFFF",
                  "main": "#E74627",
                },
                "primary": Object {
                  "contrastText": "#333333",
                  "dark": "#EF8426",
                  "light": "#FEFDE8",
                  "main": "#F4AB34",
                },
                "secondary": Object {
                  "contrastText": "#000000",
                  "dark": "#FF5808",
                  "light": "#FFF8E1",
                  "main": "#FF6B0B",
                },
                "success": Object {
                  "contrastText": "#FFFFFF",
                  "main": "#569A32",
                },
                "text": Object {
                  "disabled": "#BBBBBB",
                  "hint": "#BBBBBB",
                  "primary": "#333333",
                  "secondary": "#777777",
                },
              },
              "shadows": Object {
                "0": "none",
                "1": "0 1px 1px 0 rgba(0, 0, 0, 0.14)",
                "12": "0 12px 17px 0 rgba(0, 0, 0, 0.14)",
                "16": "0 16px 24px 0 rgba(0, 0, 0, 0.14)",
                "2": "0 2px 2px 0 rgba(0, 0, 0, 0.14)",
                "24": "0 24px 38px 0 rgba(0, 0, 0, 0.14)",
                "3": "0 3px 4px 0 rgba(0, 0, 0, 0.14)",
                "4": "0 4px 5px 0 rgba(0, 0, 0, 0.14)",
                "6": "0 6px 10px 0 rgba(0, 0, 0, 0.14)",
                "8": "0 8px 10px 0 rgba(0, 0, 0, 0.14)",
                "9": "0 9px 12px 0 rgba(0, 0, 0, 0.14)",
              },
              "shape": Object {
                "badgeBorderRadius": 100,
                "borderRadius": 4,
              },
              "sizes": Object {
                "huge": 96,
                "hugex": 128,
                "hugexx": 144,
                "hugexxx": 192,
                "large": 64,
                "largex": 72,
                "largexx": 80,
                "largexxx": 88,
                "medium": 48,
                "mediumx": 56,
                "micro": 4,
                "none": 0,
                "semi": 32,
                "semix": 40,
                "small": 16,
                "standard": 24,
                "tiny": 8,
                "veryhuge": 256,
              },
              "spacing": 8,
              "typography": Object {
                "body1": Object {
                  "fontSize": "1rem",
                  "fontWeight": 400,
                },
                "body2": Object {
                  "fontSize": "0.875rem",
                  "fontWeight": 400,
                },
                "button": Object {
                  "fontSize": "0.875rem",
                  "fontWeight": 600,
                },
                "caption": Object {
                  "fontSize": "0.75rem",
                  "fontWeight": 400,
                },
                "fontFamily": "\\"Roboto\\", sans-serif",
                "fontFamilyBrand1": "\\"Helvetica Now Display\\"",
                "fontFamilyBrand2": "\\"Helvetica Now Text\\"",
                "fontFamilyBrand3": undefined,
                "fontWeightBold": 700,
                "fontWeightLight": 300,
                "fontWeightMedium": 500,
                "fontWeightRegular": 400,
                "h1": Object {
                  "fontSize": "6rem",
                  "fontWeight": 300,
                },
                "h2": Object {
                  "fontSize": "3.75rem",
                  "fontWeight": 300,
                },
                "h3": Object {
                  "fontSize": "3rem",
                  "fontWeight": 400,
                },
                "h4": Object {
                  "fontSize": "2.125rem",
                  "fontWeight": 400,
                },
                "h5": Object {
                  "fontSize": "1.5rem",
                  "fontWeight": 400,
                },
                "h6": Object {
                  "fontSize": "1.25rem",
                  "fontWeight": 600,
                },
                "overline": Object {
                  "fontSize": "0.75rem",
                  "fontWeight": 400,
                },
                "subtitle1": Object {
                  "fontSize": "1rem",
                  "fontWeight": 400,
                },
                "subtitle2": Object {
                  "fontSize": "0.875rem",
                  "fontWeight": 500,
                },
              },
            }
          }
          value={2020-02-01T03:00:00.000Z}
          variant="dialog"
        >
          <styled.div
            theme={
              Object {
                "avatarSizes": Object {
                  "huge": Object {
                    "fontSize": "1.5rem",
                    "size": 80,
                  },
                  "large": Object {
                    "fontSize": "1rem",
                    "size": 48,
                  },
                  "small": Object {
                    "fontSize": ".875rem",
                    "size": 32,
                  },
                  "standard": Object {
                    "fontSize": "1rem",
                    "size": 40,
                  },
                  "tiny": Object {
                    "fontSize": ".625rem",
                    "size": 24,
                  },
                },
                "buttonSizes": Object {
                  "large": Object {
                    "minHeight": 48,
                    "paddingBottom": 16,
                    "paddingLeft": 16,
                    "paddingRight": 16,
                    "paddingTop": 16,
                  },
                  "medium": Object {
                    "minHeight": 40,
                    "paddingBottom": 12,
                    "paddingLeft": 16,
                    "paddingRight": 16,
                    "paddingTop": 12,
                  },
                  "small": Object {
                    "minHeight": 32,
                    "paddingBottom": 8,
                    "paddingLeft": 8,
                    "paddingRight": 8,
                    "paddingTop": 8,
                  },
                },
                "iconSizes": Object {
                  "huge": 144,
                  "hugex": 192,
                  "hugexx": 256,
                  "large": 72,
                  "largex": 96,
                  "largexx": 128,
                  "medium": 64,
                  "micro": 16,
                  "small": 32,
                  "standard": 48,
                  "tiny": 24,
                },
                "overrides": Object {
                  "MuiAvatar": Object {
                    "colorDefault": Object {
                      "color": "#333333",
                    },
                  },
                  "MuiBadge": Object {
                    "badge": Object {
                      "padding": "0 4px",
                    },
                  },
                  "MuiButton": Object {
                    "outlinedPrimary": Object {
                      "color": "#333333",
                    },
                    "outlinedSecondary": Object {
                      "color": "#333333",
                    },
                    "root": Object {
                      "fontSize": "0.875rem",
                      "minHeight": "40px",
                      "padding": "8px 16px",
                    },
                    "sizeLarge": Object {
                      "fontSize": "0.875rem",
                      "minHeight": "48px",
                    },
                    "sizeSmall": Object {
                      "fontSize": "0.875rem",
                      "minHeight": "32px",
                    },
                    "textPrimary": Object {
                      "color": "#333333",
                    },
                  },
                  "MuiChip": Object {
                    "clickableColorPrimary": Object {
                      "&:hover": Object {
                        "backgroundColor": "#EF8426",
                      },
                    },
                    "clickableColorSecondary": Object {
                      "&:hover": Object {
                        "backgroundColor": "#EF8426",
                      },
                    },
                    "deleteIcon": Object {
                      "&:hover": Object {
                        "color": "#000000",
                      },
                      "color": "rgba(0, 0, 0, 0.8)",
                      "fontSize": "24px",
                      "height": "24px",
                      "width": "24px",
                    },
                    "deleteIconColorPrimary": Object {
                      "&:hover": Object {
                        "color": "#FFFFFF",
                      },
                      "color": "rgba(255, 255, 255, 0.8)",
                    },
                    "deleteIconColorSecondary": Object {
                      "&:hover": Object {
                        "color": "#FFFFFF",
                      },
                      "color": "rgba(255, 255, 255, 0.8)",
                    },
                    "deleteIconSmall": Object {
                      "fontSize": "16px",
                      "height": "16px",
                      "width": "16px",
                    },
                    "icon": Object {
                      "fontSize": "24px",
                    },
                    "iconSmall": Object {
                      "fontSize": "16px",
                      "height": "16px",
                      "marginTop": "1px",
                      "width": "16px",
                    },
                    "outlined": Object {
                      "borderColor": "rgba(0, 0, 0, 0.12)",
                      "color": "#000000",
                    },
                    "outlinedPrimary": Object {
                      "color": "#000000",
                    },
                    "outlinedSecondary": Object {
                      "color": "#000000",
                    },
                    "root": Object {
                      "& $avatar": Object {
                        "backgroundColor": "rgba(0, 0, 0, 0.24)",
                        "color": "#333333",
                      },
                      "&$disabled": Object {
                        "opacity": 0.4,
                      },
                      "backgroundColor": "rgba(0, 0, 0, 0.12)",
                      "color": "#333333",
                      "fontSize": "0.875rem",
                    },
                  },
                  "MuiExpansionPanel": Object {
                    "root": Object {
                      "&$disabled": Object {
                        "backgroundColor": "#FFFFFF",
                        "opacity": 0.32,
                      },
                      "&$expanded": Object {
                        "borderColor": "#F4AB34",
                      },
                      "border": "transparent 1px solid",
                    },
                  },
                  "MuiExpansionPanelSummary": Object {
                    "root": Object {
                      "&$disabled": Object {
                        "opacity": 1,
                      },
                      "alignItems": "flex-start",
                      "marginTop": "8px",
                    },
                  },
                  "MuiFormLabel": Object {
                    "formControl": Object {
                      "marginTop": "-4px",
                      "transform": "none",
                    },
                    "root": Object {
                      "&.Mui-focused": Object {
                        "color": "#777777",
                        "fontSize": "0.875rem",
                      },
                      "fontSize": "0.875rem",
                    },
                  },
                  "MuiIconButton": Object {
                    "root": Object {
                      "color": "#333333",
                      "padding": "8px",
                    },
                    "sizeSmall": Object {
                      "padding": "4px",
                    },
                  },
                  "MuiInputAdornment": Object {
                    "root": Object {
                      "position": "absolute",
                      "right": "0",
                    },
                  },
                  "MuiInputBase": Object {
                    "input": Object {
                      "&.Mui-disabled": Object {
                        "&:hover": Object {
                          "boxShadow": "#333333 0 0 0 1px",
                        },
                        "opacity": 0.24,
                      },
                      "&:focus": Object {
                        "boxShadow": "#F4AB34 0 0 0 2px",
                      },
                      "&:focus:not(:read-only)": Object {
                        "boxShadow": "#F4AB34 0 0 0 2px",
                      },
                      "&:hover": Object {
                        "boxShadow": "#777777 0 0 0 1px",
                      },
                      "&:hover:not(:placeholder-shown)": Object {
                        "boxShadow": "#777777 0 0 0 1px",
                      },
                      "&:hover:not(:read-only):not(:disabled):not(:focus)": Object {
                        "boxShadow": "#777777 0 0 0 1px",
                      },
                      "&:not(:placeholder-shown)": Object {
                        "boxShadow": "#333333 0 0 0 1px",
                      },
                      "&:placeholder-shown": Object {
                        "boxShadow": "#BBBBBB 0 0 0 1px",
                      },
                      "borderRadius": "4px",
                      "boxShadow": "#BBBBBB 0 0 0 1px",
                      "color": "#333333",
                      "minHeight": "24px",
                      "padding": "16px 35px 16px 16px",
                    },
                    "root": Object {
                      "&.MuiInput-underline.Mui-disabled:before": Object {
                        "borderBottom": "none",
                      },
                      "&.MuiInput-underline:after": Object {
                        "borderBottom": "none",
                      },
                      "&.MuiInput-underline:before": Object {
                        "borderBottom": "none",
                      },
                      "&.MuiInput-underline:hover:not(.Mui-disabled):before": Object {
                        "borderBottom": "none",
                      },
                      "color": "#333333",
                    },
                  },
                  "MuiInputLabel": Object {
                    "formControl": Object {
                      "marginTop": "-4px",
                      "transform": "none",
                    },
                    "shrink": Object {
                      "marginTop": "-4px",
                      "transform": "none",
                    },
                  },
                  "MuiListItem": Object {
                    "button": Object {
                      "&:hover": Object {
                        "backgroundColor": "rgba(0, 0, 0, 0.04)",
                      },
                    },
                    "root": Object {
                      "&$selected": Object {
                        "&:hover": Object {
                          "backgroundColor": "rgba(0, 0, 0, 0.04)",
                        },
                        "backgroundColor": "rgba(255, 107, 11, 0.16)",
                      },
                      "&.Mui-disabled": Object {
                        "opacity": 0.32,
                      },
                    },
                  },
                  "MuiTab": Object {
                    "root": Object {
                      "&$disabled": Object {
                        "opacity": 0.24,
                      },
                    },
                    "textColorInherit": Object {
                      "&$disabled": Object {
                        "opacity": 0.24,
                      },
                    },
                    "wrapper": Object {
                      "& > *:first-child": Object {
                        "marginBottom": "2px !important",
                      },
                    },
                  },
                  "MuiTextField": Object {
                    "& .MuiInputLabel": Object {
                      "marginTop": "20px",
                    },
                  },
                  "MuiToolbar": Object {
                    "dense": Object {
                      "@media (min-width: 600px)": Object {
                        "minHeight": "56px",
                      },
                      "minHeight": "56px",
                    },
                    "gutters": Object {
                      "@media (min-width: 600px)": Object {
                        "padding": "0 16px",
                      },
                      "padding": "0 16px",
                    },
                    "regular": Object {
                      "@media (min-width: 600px)": Object {
                        "minHeight": "56px",
                      },
                      "minHeight": "56px",
                    },
                    "root": Object {
                      "@media (min-width: 600px)": Object {
                        "padding": "0 16px",
                      },
                      "padding": "0 16px",
                    },
                  },
                },
                "palette": Object {
                  "action": Object {
                    "disabled": "rgba(51, 51, 51, 0.24)",
                  },
                  "background": Object {
                    "default": "#FAFAFA",
                    "defaultContrastText": "#333333",
                    "paper": "#FFFFFF",
                    "paperContrastText": "#333333",
                  },
                  "complementary": Object {
                    "highlight": "#000000",
                    "link": "#227BBD",
                    "linkContrastText": "#FFFFFF",
                    "warning": "#FCC433",
                    "warningContrastText": "#333333",
                  },
                  "error": Object {
                    "contrastText": "#FFFFFF",
                    "main": "#E74627",
                  },
                  "primary": Object {
                    "contrastText": "#333333",
                    "dark": "#EF8426",
                    "light": "#FEFDE8",
                    "main": "#F4AB34",
                  },
                  "secondary": Object {
                    "contrastText": "#000000",
                    "dark": "#FF5808",
                    "light": "#FFF8E1",
                    "main": "#FF6B0B",
                  },
                  "success": Object {
                    "contrastText": "#FFFFFF",
                    "main": "#569A32",
                  },
                  "text": Object {
                    "disabled": "#BBBBBB",
                    "hint": "#BBBBBB",
                    "primary": "#333333",
                    "secondary": "#777777",
                  },
                },
                "shadows": Object {
                  "0": "none",
                  "1": "0 1px 1px 0 rgba(0, 0, 0, 0.14)",
                  "12": "0 12px 17px 0 rgba(0, 0, 0, 0.14)",
                  "16": "0 16px 24px 0 rgba(0, 0, 0, 0.14)",
                  "2": "0 2px 2px 0 rgba(0, 0, 0, 0.14)",
                  "24": "0 24px 38px 0 rgba(0, 0, 0, 0.14)",
                  "3": "0 3px 4px 0 rgba(0, 0, 0, 0.14)",
                  "4": "0 4px 5px 0 rgba(0, 0, 0, 0.14)",
                  "6": "0 6px 10px 0 rgba(0, 0, 0, 0.14)",
                  "8": "0 8px 10px 0 rgba(0, 0, 0, 0.14)",
                  "9": "0 9px 12px 0 rgba(0, 0, 0, 0.14)",
                },
                "shape": Object {
                  "badgeBorderRadius": 100,
                  "borderRadius": 4,
                },
                "sizes": Object {
                  "huge": 96,
                  "hugex": 128,
                  "hugexx": 144,
                  "hugexxx": 192,
                  "large": 64,
                  "largex": 72,
                  "largexx": 80,
                  "largexxx": 88,
                  "medium": 48,
                  "mediumx": 56,
                  "micro": 4,
                  "none": 0,
                  "semi": 32,
                  "semix": 40,
                  "small": 16,
                  "standard": 24,
                  "tiny": 8,
                  "veryhuge": 256,
                },
                "spacing": 8,
                "typography": Object {
                  "body1": Object {
                    "fontSize": "1rem",
                    "fontWeight": 400,
                  },
                  "body2": Object {
                    "fontSize": "0.875rem",
                    "fontWeight": 400,
                  },
                  "button": Object {
                    "fontSize": "0.875rem",
                    "fontWeight": 600,
                  },
                  "caption": Object {
                    "fontSize": "0.75rem",
                    "fontWeight": 400,
                  },
                  "fontFamily": "\\"Roboto\\", sans-serif",
                  "fontFamilyBrand1": "\\"Helvetica Now Display\\"",
                  "fontFamilyBrand2": "\\"Helvetica Now Text\\"",
                  "fontFamilyBrand3": undefined,
                  "fontWeightBold": 700,
                  "fontWeightLight": 300,
                  "fontWeightMedium": 500,
                  "fontWeightRegular": 400,
                  "h1": Object {
                    "fontSize": "6rem",
                    "fontWeight": 300,
                  },
                  "h2": Object {
                    "fontSize": "3.75rem",
                    "fontWeight": 300,
                  },
                  "h3": Object {
                    "fontSize": "3rem",
                    "fontWeight": 400,
                  },
                  "h4": Object {
                    "fontSize": "2.125rem",
                    "fontWeight": 400,
                  },
                  "h5": Object {
                    "fontSize": "1.5rem",
                    "fontWeight": 400,
                  },
                  "h6": Object {
                    "fontSize": "1.25rem",
                    "fontWeight": 600,
                  },
                  "overline": Object {
                    "fontSize": "0.75rem",
                    "fontWeight": 400,
                  },
                  "subtitle1": Object {
                    "fontSize": "1rem",
                    "fontWeight": 400,
                  },
                  "subtitle2": Object {
                    "fontSize": "0.875rem",
                    "fontWeight": 500,
                  },
                },
              }
            }
          >
            <StyledComponent
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-gqjmRU",
                    "isStatic": false,
                    "lastClassName": "hYFWIQ",
                    "rules": Array [
                      "
  display: flex;
  flex-flow: column nowrap;
  font-family: ",
                      [Function],
                      ";
",
                    ],
                  },
                  "displayName": "styled.div",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "sc-gqjmRU",
                  "target": "div",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
              theme={
                Object {
                  "avatarSizes": Object {
                    "huge": Object {
                      "fontSize": "1.5rem",
                      "size": 80,
                    },
                    "large": Object {
                      "fontSize": "1rem",
                      "size": 48,
                    },
                    "small": Object {
                      "fontSize": ".875rem",
                      "size": 32,
                    },
                    "standard": Object {
                      "fontSize": "1rem",
                      "size": 40,
                    },
                    "tiny": Object {
                      "fontSize": ".625rem",
                      "size": 24,
                    },
                  },
                  "buttonSizes": Object {
                    "large": Object {
                      "minHeight": 48,
                      "paddingBottom": 16,
                      "paddingLeft": 16,
                      "paddingRight": 16,
                      "paddingTop": 16,
                    },
                    "medium": Object {
                      "minHeight": 40,
                      "paddingBottom": 12,
                      "paddingLeft": 16,
                      "paddingRight": 16,
                      "paddingTop": 12,
                    },
                    "small": Object {
                      "minHeight": 32,
                      "paddingBottom": 8,
                      "paddingLeft": 8,
                      "paddingRight": 8,
                      "paddingTop": 8,
                    },
                  },
                  "iconSizes": Object {
                    "huge": 144,
                    "hugex": 192,
                    "hugexx": 256,
                    "large": 72,
                    "largex": 96,
                    "largexx": 128,
                    "medium": 64,
                    "micro": 16,
                    "small": 32,
                    "standard": 48,
                    "tiny": 24,
                  },
                  "overrides": Object {
                    "MuiAvatar": Object {
                      "colorDefault": Object {
                        "color": "#333333",
                      },
                    },
                    "MuiBadge": Object {
                      "badge": Object {
                        "padding": "0 4px",
                      },
                    },
                    "MuiButton": Object {
                      "outlinedPrimary": Object {
                        "color": "#333333",
                      },
                      "outlinedSecondary": Object {
                        "color": "#333333",
                      },
                      "root": Object {
                        "fontSize": "0.875rem",
                        "minHeight": "40px",
                        "padding": "8px 16px",
                      },
                      "sizeLarge": Object {
                        "fontSize": "0.875rem",
                        "minHeight": "48px",
                      },
                      "sizeSmall": Object {
                        "fontSize": "0.875rem",
                        "minHeight": "32px",
                      },
                      "textPrimary": Object {
                        "color": "#333333",
                      },
                    },
                    "MuiChip": Object {
                      "clickableColorPrimary": Object {
                        "&:hover": Object {
                          "backgroundColor": "#EF8426",
                        },
                      },
                      "clickableColorSecondary": Object {
                        "&:hover": Object {
                          "backgroundColor": "#EF8426",
                        },
                      },
                      "deleteIcon": Object {
                        "&:hover": Object {
                          "color": "#000000",
                        },
                        "color": "rgba(0, 0, 0, 0.8)",
                        "fontSize": "24px",
                        "height": "24px",
                        "width": "24px",
                      },
                      "deleteIconColorPrimary": Object {
                        "&:hover": Object {
                          "color": "#FFFFFF",
                        },
                        "color": "rgba(255, 255, 255, 0.8)",
                      },
                      "deleteIconColorSecondary": Object {
                        "&:hover": Object {
                          "color": "#FFFFFF",
                        },
                        "color": "rgba(255, 255, 255, 0.8)",
                      },
                      "deleteIconSmall": Object {
                        "fontSize": "16px",
                        "height": "16px",
                        "width": "16px",
                      },
                      "icon": Object {
                        "fontSize": "24px",
                      },
                      "iconSmall": Object {
                        "fontSize": "16px",
                        "height": "16px",
                        "marginTop": "1px",
                        "width": "16px",
                      },
                      "outlined": Object {
                        "borderColor": "rgba(0, 0, 0, 0.12)",
                        "color": "#000000",
                      },
                      "outlinedPrimary": Object {
                        "color": "#000000",
                      },
                      "outlinedSecondary": Object {
                        "color": "#000000",
                      },
                      "root": Object {
                        "& $avatar": Object {
                          "backgroundColor": "rgba(0, 0, 0, 0.24)",
                          "color": "#333333",
                        },
                        "&$disabled": Object {
                          "opacity": 0.4,
                        },
                        "backgroundColor": "rgba(0, 0, 0, 0.12)",
                        "color": "#333333",
                        "fontSize": "0.875rem",
                      },
                    },
                    "MuiExpansionPanel": Object {
                      "root": Object {
                        "&$disabled": Object {
                          "backgroundColor": "#FFFFFF",
                          "opacity": 0.32,
                        },
                        "&$expanded": Object {
                          "borderColor": "#F4AB34",
                        },
                        "border": "transparent 1px solid",
                      },
                    },
                    "MuiExpansionPanelSummary": Object {
                      "root": Object {
                        "&$disabled": Object {
                          "opacity": 1,
                        },
                        "alignItems": "flex-start",
                        "marginTop": "8px",
                      },
                    },
                    "MuiFormLabel": Object {
                      "formControl": Object {
                        "marginTop": "-4px",
                        "transform": "none",
                      },
                      "root": Object {
                        "&.Mui-focused": Object {
                          "color": "#777777",
                          "fontSize": "0.875rem",
                        },
                        "fontSize": "0.875rem",
                      },
                    },
                    "MuiIconButton": Object {
                      "root": Object {
                        "color": "#333333",
                        "padding": "8px",
                      },
                      "sizeSmall": Object {
                        "padding": "4px",
                      },
                    },
                    "MuiInputAdornment": Object {
                      "root": Object {
                        "position": "absolute",
                        "right": "0",
                      },
                    },
                    "MuiInputBase": Object {
                      "input": Object {
                        "&.Mui-disabled": Object {
                          "&:hover": Object {
                            "boxShadow": "#333333 0 0 0 1px",
                          },
                          "opacity": 0.24,
                        },
                        "&:focus": Object {
                          "boxShadow": "#F4AB34 0 0 0 2px",
                        },
                        "&:focus:not(:read-only)": Object {
                          "boxShadow": "#F4AB34 0 0 0 2px",
                        },
                        "&:hover": Object {
                          "boxShadow": "#777777 0 0 0 1px",
                        },
                        "&:hover:not(:placeholder-shown)": Object {
                          "boxShadow": "#777777 0 0 0 1px",
                        },
                        "&:hover:not(:read-only):not(:disabled):not(:focus)": Object {
                          "boxShadow": "#777777 0 0 0 1px",
                        },
                        "&:not(:placeholder-shown)": Object {
                          "boxShadow": "#333333 0 0 0 1px",
                        },
                        "&:placeholder-shown": Object {
                          "boxShadow": "#BBBBBB 0 0 0 1px",
                        },
                        "borderRadius": "4px",
                        "boxShadow": "#BBBBBB 0 0 0 1px",
                        "color": "#333333",
                        "minHeight": "24px",
                        "padding": "16px 35px 16px 16px",
                      },
                      "root": Object {
                        "&.MuiInput-underline.Mui-disabled:before": Object {
                          "borderBottom": "none",
                        },
                        "&.MuiInput-underline:after": Object {
                          "borderBottom": "none",
                        },
                        "&.MuiInput-underline:before": Object {
                          "borderBottom": "none",
                        },
                        "&.MuiInput-underline:hover:not(.Mui-disabled):before": Object {
                          "borderBottom": "none",
                        },
                        "color": "#333333",
                      },
                    },
                    "MuiInputLabel": Object {
                      "formControl": Object {
                        "marginTop": "-4px",
                        "transform": "none",
                      },
                      "shrink": Object {
                        "marginTop": "-4px",
                        "transform": "none",
                      },
                    },
                    "MuiListItem": Object {
                      "button": Object {
                        "&:hover": Object {
                          "backgroundColor": "rgba(0, 0, 0, 0.04)",
                        },
                      },
                      "root": Object {
                        "&$selected": Object {
                          "&:hover": Object {
                            "backgroundColor": "rgba(0, 0, 0, 0.04)",
                          },
                          "backgroundColor": "rgba(255, 107, 11, 0.16)",
                        },
                        "&.Mui-disabled": Object {
                          "opacity": 0.32,
                        },
                      },
                    },
                    "MuiTab": Object {
                      "root": Object {
                        "&$disabled": Object {
                          "opacity": 0.24,
                        },
                      },
                      "textColorInherit": Object {
                        "&$disabled": Object {
                          "opacity": 0.24,
                        },
                      },
                      "wrapper": Object {
                        "& > *:first-child": Object {
                          "marginBottom": "2px !important",
                        },
                      },
                    },
                    "MuiTextField": Object {
                      "& .MuiInputLabel": Object {
                        "marginTop": "20px",
                      },
                    },
                    "MuiToolbar": Object {
                      "dense": Object {
                        "@media (min-width: 600px)": Object {
                          "minHeight": "56px",
                        },
                        "minHeight": "56px",
                      },
                      "gutters": Object {
                        "@media (min-width: 600px)": Object {
                          "padding": "0 16px",
                        },
                        "padding": "0 16px",
                      },
                      "regular": Object {
                        "@media (min-width: 600px)": Object {
                          "minHeight": "56px",
                        },
                        "minHeight": "56px",
                      },
                      "root": Object {
                        "@media (min-width: 600px)": Object {
                          "padding": "0 16px",
                        },
                        "padding": "0 16px",
                      },
                    },
                  },
                  "palette": Object {
                    "action": Object {
                      "disabled": "rgba(51, 51, 51, 0.24)",
                    },
                    "background": Object {
                      "default": "#FAFAFA",
                      "defaultContrastText": "#333333",
                      "paper": "#FFFFFF",
                      "paperContrastText": "#333333",
                    },
                    "complementary": Object {
                      "highlight": "#000000",
                      "link": "#227BBD",
                      "linkContrastText": "#FFFFFF",
                      "warning": "#FCC433",
                      "warningContrastText": "#333333",
                    },
                    "error": Object {
                      "contrastText": "#FFFFFF",
                      "main": "#E74627",
                    },
                    "primary": Object {
                      "contrastText": "#333333",
                      "dark": "#EF8426",
                      "light": "#FEFDE8",
                      "main": "#F4AB34",
                    },
                    "secondary": Object {
                      "contrastText": "#000000",
                      "dark": "#FF5808",
                      "light": "#FFF8E1",
                      "main": "#FF6B0B",
                    },
                    "success": Object {
                      "contrastText": "#FFFFFF",
                      "main": "#569A32",
                    },
                    "text": Object {
                      "disabled": "#BBBBBB",
                      "hint": "#BBBBBB",
                      "primary": "#333333",
                      "secondary": "#777777",
                    },
                  },
                  "shadows": Object {
                    "0": "none",
                    "1": "0 1px 1px 0 rgba(0, 0, 0, 0.14)",
                    "12": "0 12px 17px 0 rgba(0, 0, 0, 0.14)",
                    "16": "0 16px 24px 0 rgba(0, 0, 0, 0.14)",
                    "2": "0 2px 2px 0 rgba(0, 0, 0, 0.14)",
                    "24": "0 24px 38px 0 rgba(0, 0, 0, 0.14)",
                    "3": "0 3px 4px 0 rgba(0, 0, 0, 0.14)",
                    "4": "0 4px 5px 0 rgba(0, 0, 0, 0.14)",
                    "6": "0 6px 10px 0 rgba(0, 0, 0, 0.14)",
                    "8": "0 8px 10px 0 rgba(0, 0, 0, 0.14)",
                    "9": "0 9px 12px 0 rgba(0, 0, 0, 0.14)",
                  },
                  "shape": Object {
                    "badgeBorderRadius": 100,
                    "borderRadius": 4,
                  },
                  "sizes": Object {
                    "huge": 96,
                    "hugex": 128,
                    "hugexx": 144,
                    "hugexxx": 192,
                    "large": 64,
                    "largex": 72,
                    "largexx": 80,
                    "largexxx": 88,
                    "medium": 48,
                    "mediumx": 56,
                    "micro": 4,
                    "none": 0,
                    "semi": 32,
                    "semix": 40,
                    "small": 16,
                    "standard": 24,
                    "tiny": 8,
                    "veryhuge": 256,
                  },
                  "spacing": 8,
                  "typography": Object {
                    "body1": Object {
                      "fontSize": "1rem",
                      "fontWeight": 400,
                    },
                    "body2": Object {
                      "fontSize": "0.875rem",
                      "fontWeight": 400,
                    },
                    "button": Object {
                      "fontSize": "0.875rem",
                      "fontWeight": 600,
                    },
                    "caption": Object {
                      "fontSize": "0.75rem",
                      "fontWeight": 400,
                    },
                    "fontFamily": "\\"Roboto\\", sans-serif",
                    "fontFamilyBrand1": "\\"Helvetica Now Display\\"",
                    "fontFamilyBrand2": "\\"Helvetica Now Text\\"",
                    "fontFamilyBrand3": undefined,
                    "fontWeightBold": 700,
                    "fontWeightLight": 300,
                    "fontWeightMedium": 500,
                    "fontWeightRegular": 400,
                    "h1": Object {
                      "fontSize": "6rem",
                      "fontWeight": 300,
                    },
                    "h2": Object {
                      "fontSize": "3.75rem",
                      "fontWeight": 300,
                    },
                    "h3": Object {
                      "fontSize": "3rem",
                      "fontWeight": 400,
                    },
                    "h4": Object {
                      "fontSize": "2.125rem",
                      "fontWeight": 400,
                    },
                    "h5": Object {
                      "fontSize": "1.5rem",
                      "fontWeight": 400,
                    },
                    "h6": Object {
                      "fontSize": "1.25rem",
                      "fontWeight": 600,
                    },
                    "overline": Object {
                      "fontSize": "0.75rem",
                      "fontWeight": 400,
                    },
                    "subtitle1": Object {
                      "fontSize": "1rem",
                      "fontWeight": 400,
                    },
                    "subtitle2": Object {
                      "fontSize": "0.875rem",
                      "fontWeight": 500,
                    },
                  },
                }
              }
            >
              <div
                className="sc-gqjmRU hYFWIQ"
              >
                <styled.label
                  disabled={false}
                  state="success"
                  theme={
                    Object {
                      "avatarSizes": Object {
                        "huge": Object {
                          "fontSize": "1.5rem",
                          "size": 80,
                        },
                        "large": Object {
                          "fontSize": "1rem",
                          "size": 48,
                        },
                        "small": Object {
                          "fontSize": ".875rem",
                          "size": 32,
                        },
                        "standard": Object {
                          "fontSize": "1rem",
                          "size": 40,
                        },
                        "tiny": Object {
                          "fontSize": ".625rem",
                          "size": 24,
                        },
                      },
                      "buttonSizes": Object {
                        "large": Object {
                          "minHeight": 48,
                          "paddingBottom": 16,
                          "paddingLeft": 16,
                          "paddingRight": 16,
                          "paddingTop": 16,
                        },
                        "medium": Object {
                          "minHeight": 40,
                          "paddingBottom": 12,
                          "paddingLeft": 16,
                          "paddingRight": 16,
                          "paddingTop": 12,
                        },
                        "small": Object {
                          "minHeight": 32,
                          "paddingBottom": 8,
                          "paddingLeft": 8,
                          "paddingRight": 8,
                          "paddingTop": 8,
                        },
                      },
                      "iconSizes": Object {
                        "huge": 144,
                        "hugex": 192,
                        "hugexx": 256,
                        "large": 72,
                        "largex": 96,
                        "largexx": 128,
                        "medium": 64,
                        "micro": 16,
                        "small": 32,
                        "standard": 48,
                        "tiny": 24,
                      },
                      "overrides": Object {
                        "MuiAvatar": Object {
                          "colorDefault": Object {
                            "color": "#333333",
                          },
                        },
                        "MuiBadge": Object {
                          "badge": Object {
                            "padding": "0 4px",
                          },
                        },
                        "MuiButton": Object {
                          "outlinedPrimary": Object {
                            "color": "#333333",
                          },
                          "outlinedSecondary": Object {
                            "color": "#333333",
                          },
                          "root": Object {
                            "fontSize": "0.875rem",
                            "minHeight": "40px",
                            "padding": "8px 16px",
                          },
                          "sizeLarge": Object {
                            "fontSize": "0.875rem",
                            "minHeight": "48px",
                          },
                          "sizeSmall": Object {
                            "fontSize": "0.875rem",
                            "minHeight": "32px",
                          },
                          "textPrimary": Object {
                            "color": "#333333",
                          },
                        },
                        "MuiChip": Object {
                          "clickableColorPrimary": Object {
                            "&:hover": Object {
                              "backgroundColor": "#EF8426",
                            },
                          },
                          "clickableColorSecondary": Object {
                            "&:hover": Object {
                              "backgroundColor": "#EF8426",
                            },
                          },
                          "deleteIcon": Object {
                            "&:hover": Object {
                              "color": "#000000",
                            },
                            "color": "rgba(0, 0, 0, 0.8)",
                            "fontSize": "24px",
                            "height": "24px",
                            "width": "24px",
                          },
                          "deleteIconColorPrimary": Object {
                            "&:hover": Object {
                              "color": "#FFFFFF",
                            },
                            "color": "rgba(255, 255, 255, 0.8)",
                          },
                          "deleteIconColorSecondary": Object {
                            "&:hover": Object {
                              "color": "#FFFFFF",
                            },
                            "color": "rgba(255, 255, 255, 0.8)",
                          },
                          "deleteIconSmall": Object {
                            "fontSize": "16px",
                            "height": "16px",
                            "width": "16px",
                          },
                          "icon": Object {
                            "fontSize": "24px",
                          },
                          "iconSmall": Object {
                            "fontSize": "16px",
                            "height": "16px",
                            "marginTop": "1px",
                            "width": "16px",
                          },
                          "outlined": Object {
                            "borderColor": "rgba(0, 0, 0, 0.12)",
                            "color": "#000000",
                          },
                          "outlinedPrimary": Object {
                            "color": "#000000",
                          },
                          "outlinedSecondary": Object {
                            "color": "#000000",
                          },
                          "root": Object {
                            "& $avatar": Object {
                              "backgroundColor": "rgba(0, 0, 0, 0.24)",
                              "color": "#333333",
                            },
                            "&$disabled": Object {
                              "opacity": 0.4,
                            },
                            "backgroundColor": "rgba(0, 0, 0, 0.12)",
                            "color": "#333333",
                            "fontSize": "0.875rem",
                          },
                        },
                        "MuiExpansionPanel": Object {
                          "root": Object {
                            "&$disabled": Object {
                              "backgroundColor": "#FFFFFF",
                              "opacity": 0.32,
                            },
                            "&$expanded": Object {
                              "borderColor": "#F4AB34",
                            },
                            "border": "transparent 1px solid",
                          },
                        },
                        "MuiExpansionPanelSummary": Object {
                          "root": Object {
                            "&$disabled": Object {
                              "opacity": 1,
                            },
                            "alignItems": "flex-start",
                            "marginTop": "8px",
                          },
                        },
                        "MuiFormLabel": Object {
                          "formControl": Object {
                            "marginTop": "-4px",
                            "transform": "none",
                          },
                          "root": Object {
                            "&.Mui-focused": Object {
                              "color": "#777777",
                              "fontSize": "0.875rem",
                            },
                            "fontSize": "0.875rem",
                          },
                        },
                        "MuiIconButton": Object {
                          "root": Object {
                            "color": "#333333",
                            "padding": "8px",
                          },
                          "sizeSmall": Object {
                            "padding": "4px",
                          },
                        },
                        "MuiInputAdornment": Object {
                          "root": Object {
                            "position": "absolute",
                            "right": "0",
                          },
                        },
                        "MuiInputBase": Object {
                          "input": Object {
                            "&.Mui-disabled": Object {
                              "&:hover": Object {
                                "boxShadow": "#333333 0 0 0 1px",
                              },
                              "opacity": 0.24,
                            },
                            "&:focus": Object {
                              "boxShadow": "#F4AB34 0 0 0 2px",
                            },
                            "&:focus:not(:read-only)": Object {
                              "boxShadow": "#F4AB34 0 0 0 2px",
                            },
                            "&:hover": Object {
                              "boxShadow": "#777777 0 0 0 1px",
                            },
                            "&:hover:not(:placeholder-shown)": Object {
                              "boxShadow": "#777777 0 0 0 1px",
                            },
                            "&:hover:not(:read-only):not(:disabled):not(:focus)": Object {
                              "boxShadow": "#777777 0 0 0 1px",
                            },
                            "&:not(:placeholder-shown)": Object {
                              "boxShadow": "#333333 0 0 0 1px",
                            },
                            "&:placeholder-shown": Object {
                              "boxShadow": "#BBBBBB 0 0 0 1px",
                            },
                            "borderRadius": "4px",
                            "boxShadow": "#BBBBBB 0 0 0 1px",
                            "color": "#333333",
                            "minHeight": "24px",
                            "padding": "16px 35px 16px 16px",
                          },
                          "root": Object {
                            "&.MuiInput-underline.Mui-disabled:before": Object {
                              "borderBottom": "none",
                            },
                            "&.MuiInput-underline:after": Object {
                              "borderBottom": "none",
                            },
                            "&.MuiInput-underline:before": Object {
                              "borderBottom": "none",
                            },
                            "&.MuiInput-underline:hover:not(.Mui-disabled):before": Object {
                              "borderBottom": "none",
                            },
                            "color": "#333333",
                          },
                        },
                        "MuiInputLabel": Object {
                          "formControl": Object {
                            "marginTop": "-4px",
                            "transform": "none",
                          },
                          "shrink": Object {
                            "marginTop": "-4px",
                            "transform": "none",
                          },
                        },
                        "MuiListItem": Object {
                          "button": Object {
                            "&:hover": Object {
                              "backgroundColor": "rgba(0, 0, 0, 0.04)",
                            },
                          },
                          "root": Object {
                            "&$selected": Object {
                              "&:hover": Object {
                                "backgroundColor": "rgba(0, 0, 0, 0.04)",
                              },
                              "backgroundColor": "rgba(255, 107, 11, 0.16)",
                            },
                            "&.Mui-disabled": Object {
                              "opacity": 0.32,
                            },
                          },
                        },
                        "MuiTab": Object {
                          "root": Object {
                            "&$disabled": Object {
                              "opacity": 0.24,
                            },
                          },
                          "textColorInherit": Object {
                            "&$disabled": Object {
                              "opacity": 0.24,
                            },
                          },
                          "wrapper": Object {
                            "& > *:first-child": Object {
                              "marginBottom": "2px !important",
                            },
                          },
                        },
                        "MuiTextField": Object {
                          "& .MuiInputLabel": Object {
                            "marginTop": "20px",
                          },
                        },
                        "MuiToolbar": Object {
                          "dense": Object {
                            "@media (min-width: 600px)": Object {
                              "minHeight": "56px",
                            },
                            "minHeight": "56px",
                          },
                          "gutters": Object {
                            "@media (min-width: 600px)": Object {
                              "padding": "0 16px",
                            },
                            "padding": "0 16px",
                          },
                          "regular": Object {
                            "@media (min-width: 600px)": Object {
                              "minHeight": "56px",
                            },
                            "minHeight": "56px",
                          },
                          "root": Object {
                            "@media (min-width: 600px)": Object {
                              "padding": "0 16px",
                            },
                            "padding": "0 16px",
                          },
                        },
                      },
                      "palette": Object {
                        "action": Object {
                          "disabled": "rgba(51, 51, 51, 0.24)",
                        },
                        "background": Object {
                          "default": "#FAFAFA",
                          "defaultContrastText": "#333333",
                          "paper": "#FFFFFF",
                          "paperContrastText": "#333333",
                        },
                        "complementary": Object {
                          "highlight": "#000000",
                          "link": "#227BBD",
                          "linkContrastText": "#FFFFFF",
                          "warning": "#FCC433",
                          "warningContrastText": "#333333",
                        },
                        "error": Object {
                          "contrastText": "#FFFFFF",
                          "main": "#E74627",
                        },
                        "primary": Object {
                          "contrastText": "#333333",
                          "dark": "#EF8426",
                          "light": "#FEFDE8",
                          "main": "#F4AB34",
                        },
                        "secondary": Object {
                          "contrastText": "#000000",
                          "dark": "#FF5808",
                          "light": "#FFF8E1",
                          "main": "#FF6B0B",
                        },
                        "success": Object {
                          "contrastText": "#FFFFFF",
                          "main": "#569A32",
                        },
                        "text": Object {
                          "disabled": "#BBBBBB",
                          "hint": "#BBBBBB",
                          "primary": "#333333",
                          "secondary": "#777777",
                        },
                      },
                      "shadows": Object {
                        "0": "none",
                        "1": "0 1px 1px 0 rgba(0, 0, 0, 0.14)",
                        "12": "0 12px 17px 0 rgba(0, 0, 0, 0.14)",
                        "16": "0 16px 24px 0 rgba(0, 0, 0, 0.14)",
                        "2": "0 2px 2px 0 rgba(0, 0, 0, 0.14)",
                        "24": "0 24px 38px 0 rgba(0, 0, 0, 0.14)",
                        "3": "0 3px 4px 0 rgba(0, 0, 0, 0.14)",
                        "4": "0 4px 5px 0 rgba(0, 0, 0, 0.14)",
                        "6": "0 6px 10px 0 rgba(0, 0, 0, 0.14)",
                        "8": "0 8px 10px 0 rgba(0, 0, 0, 0.14)",
                        "9": "0 9px 12px 0 rgba(0, 0, 0, 0.14)",
                      },
                      "shape": Object {
                        "badgeBorderRadius": 100,
                        "borderRadius": 4,
                      },
                      "sizes": Object {
                        "huge": 96,
                        "hugex": 128,
                        "hugexx": 144,
                        "hugexxx": 192,
                        "large": 64,
                        "largex": 72,
                        "largexx": 80,
                        "largexxx": 88,
                        "medium": 48,
                        "mediumx": 56,
                        "micro": 4,
                        "none": 0,
                        "semi": 32,
                        "semix": 40,
                        "small": 16,
                        "standard": 24,
                        "tiny": 8,
                        "veryhuge": 256,
                      },
                      "spacing": 8,
                      "typography": Object {
                        "body1": Object {
                          "fontSize": "1rem",
                          "fontWeight": 400,
                        },
                        "body2": Object {
                          "fontSize": "0.875rem",
                          "fontWeight": 400,
                        },
                        "button": Object {
                          "fontSize": "0.875rem",
                          "fontWeight": 600,
                        },
                        "caption": Object {
                          "fontSize": "0.75rem",
                          "fontWeight": 400,
                        },
                        "fontFamily": "\\"Roboto\\", sans-serif",
                        "fontFamilyBrand1": "\\"Helvetica Now Display\\"",
                        "fontFamilyBrand2": "\\"Helvetica Now Text\\"",
                        "fontFamilyBrand3": undefined,
                        "fontWeightBold": 700,
                        "fontWeightLight": 300,
                        "fontWeightMedium": 500,
                        "fontWeightRegular": 400,
                        "h1": Object {
                          "fontSize": "6rem",
                          "fontWeight": 300,
                        },
                        "h2": Object {
                          "fontSize": "3.75rem",
                          "fontWeight": 300,
                        },
                        "h3": Object {
                          "fontSize": "3rem",
                          "fontWeight": 400,
                        },
                        "h4": Object {
                          "fontSize": "2.125rem",
                          "fontWeight": 400,
                        },
                        "h5": Object {
                          "fontSize": "1.5rem",
                          "fontWeight": 400,
                        },
                        "h6": Object {
                          "fontSize": "1.25rem",
                          "fontWeight": 600,
                        },
                        "overline": Object {
                          "fontSize": "0.75rem",
                          "fontWeight": 400,
                        },
                        "subtitle1": Object {
                          "fontSize": "1rem",
                          "fontWeight": 400,
                        },
                        "subtitle2": Object {
                          "fontSize": "0.875rem",
                          "fontWeight": 500,
                        },
                      },
                    }
                  }
                >
                  <StyledComponent
                    disabled={false}
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "sc-VigVT",
                          "isStatic": false,
                          "lastClassName": "gLavkU",
                          "rules": Array [
                            "
  font-size: ",
                            [Function],
                            ";
  font-weight: ",
                            [Function],
                            ";
  color: ",
                            [Function],
                            ";
  line-height: 1.2;
  padding: 0 0 ",
                            "4",
                            "px;
  font-family: ",
                            [Function],
                            ";
",
                          ],
                        },
                        "displayName": "styled.label",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "sc-VigVT",
                        "target": "label",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                    state="success"
                    theme={
                      Object {
                        "avatarSizes": Object {
                          "huge": Object {
                            "fontSize": "1.5rem",
                            "size": 80,
                          },
                          "large": Object {
                            "fontSize": "1rem",
                            "size": 48,
                          },
                          "small": Object {
                            "fontSize": ".875rem",
                            "size": 32,
                          },
                          "standard": Object {
                            "fontSize": "1rem",
                            "size": 40,
                          },
                          "tiny": Object {
                            "fontSize": ".625rem",
                            "size": 24,
                          },
                        },
                        "buttonSizes": Object {
                          "large": Object {
                            "minHeight": 48,
                            "paddingBottom": 16,
                            "paddingLeft": 16,
                            "paddingRight": 16,
                            "paddingTop": 16,
                          },
                          "medium": Object {
                            "minHeight": 40,
                            "paddingBottom": 12,
                            "paddingLeft": 16,
                            "paddingRight": 16,
                            "paddingTop": 12,
                          },
                          "small": Object {
                            "minHeight": 32,
                            "paddingBottom": 8,
                            "paddingLeft": 8,
                            "paddingRight": 8,
                            "paddingTop": 8,
                          },
                        },
                        "iconSizes": Object {
                          "huge": 144,
                          "hugex": 192,
                          "hugexx": 256,
                          "large": 72,
                          "largex": 96,
                          "largexx": 128,
                          "medium": 64,
                          "micro": 16,
                          "small": 32,
                          "standard": 48,
                          "tiny": 24,
                        },
                        "overrides": Object {
                          "MuiAvatar": Object {
                            "colorDefault": Object {
                              "color": "#333333",
                            },
                          },
                          "MuiBadge": Object {
                            "badge": Object {
                              "padding": "0 4px",
                            },
                          },
                          "MuiButton": Object {
                            "outlinedPrimary": Object {
                              "color": "#333333",
                            },
                            "outlinedSecondary": Object {
                              "color": "#333333",
                            },
                            "root": Object {
                              "fontSize": "0.875rem",
                              "minHeight": "40px",
                              "padding": "8px 16px",
                            },
                            "sizeLarge": Object {
                              "fontSize": "0.875rem",
                              "minHeight": "48px",
                            },
                            "sizeSmall": Object {
                              "fontSize": "0.875rem",
                              "minHeight": "32px",
                            },
                            "textPrimary": Object {
                              "color": "#333333",
                            },
                          },
                          "MuiChip": Object {
                            "clickableColorPrimary": Object {
                              "&:hover": Object {
                                "backgroundColor": "#EF8426",
                              },
                            },
                            "clickableColorSecondary": Object {
                              "&:hover": Object {
                                "backgroundColor": "#EF8426",
                              },
                            },
                            "deleteIcon": Object {
                              "&:hover": Object {
                                "color": "#000000",
                              },
                              "color": "rgba(0, 0, 0, 0.8)",
                              "fontSize": "24px",
                              "height": "24px",
                              "width": "24px",
                            },
                            "deleteIconColorPrimary": Object {
                              "&:hover": Object {
                                "color": "#FFFFFF",
                              },
                              "color": "rgba(255, 255, 255, 0.8)",
                            },
                            "deleteIconColorSecondary": Object {
                              "&:hover": Object {
                                "color": "#FFFFFF",
                              },
                              "color": "rgba(255, 255, 255, 0.8)",
                            },
                            "deleteIconSmall": Object {
                              "fontSize": "16px",
                              "height": "16px",
                              "width": "16px",
                            },
                            "icon": Object {
                              "fontSize": "24px",
                            },
                            "iconSmall": Object {
                              "fontSize": "16px",
                              "height": "16px",
                              "marginTop": "1px",
                              "width": "16px",
                            },
                            "outlined": Object {
                              "borderColor": "rgba(0, 0, 0, 0.12)",
                              "color": "#000000",
                            },
                            "outlinedPrimary": Object {
                              "color": "#000000",
                            },
                            "outlinedSecondary": Object {
                              "color": "#000000",
                            },
                            "root": Object {
                              "& $avatar": Object {
                                "backgroundColor": "rgba(0, 0, 0, 0.24)",
                                "color": "#333333",
                              },
                              "&$disabled": Object {
                                "opacity": 0.4,
                              },
                              "backgroundColor": "rgba(0, 0, 0, 0.12)",
                              "color": "#333333",
                              "fontSize": "0.875rem",
                            },
                          },
                          "MuiExpansionPanel": Object {
                            "root": Object {
                              "&$disabled": Object {
                                "backgroundColor": "#FFFFFF",
                                "opacity": 0.32,
                              },
                              "&$expanded": Object {
                                "borderColor": "#F4AB34",
                              },
                              "border": "transparent 1px solid",
                            },
                          },
                          "MuiExpansionPanelSummary": Object {
                            "root": Object {
                              "&$disabled": Object {
                                "opacity": 1,
                              },
                              "alignItems": "flex-start",
                              "marginTop": "8px",
                            },
                          },
                          "MuiFormLabel": Object {
                            "formControl": Object {
                              "marginTop": "-4px",
                              "transform": "none",
                            },
                            "root": Object {
                              "&.Mui-focused": Object {
                                "color": "#777777",
                                "fontSize": "0.875rem",
                              },
                              "fontSize": "0.875rem",
                            },
                          },
                          "MuiIconButton": Object {
                            "root": Object {
                              "color": "#333333",
                              "padding": "8px",
                            },
                            "sizeSmall": Object {
                              "padding": "4px",
                            },
                          },
                          "MuiInputAdornment": Object {
                            "root": Object {
                              "position": "absolute",
                              "right": "0",
                            },
                          },
                          "MuiInputBase": Object {
                            "input": Object {
                              "&.Mui-disabled": Object {
                                "&:hover": Object {
                                  "boxShadow": "#333333 0 0 0 1px",
                                },
                                "opacity": 0.24,
                              },
                              "&:focus": Object {
                                "boxShadow": "#F4AB34 0 0 0 2px",
                              },
                              "&:focus:not(:read-only)": Object {
                                "boxShadow": "#F4AB34 0 0 0 2px",
                              },
                              "&:hover": Object {
                                "boxShadow": "#777777 0 0 0 1px",
                              },
                              "&:hover:not(:placeholder-shown)": Object {
                                "boxShadow": "#777777 0 0 0 1px",
                              },
                              "&:hover:not(:read-only):not(:disabled):not(:focus)": Object {
                                "boxShadow": "#777777 0 0 0 1px",
                              },
                              "&:not(:placeholder-shown)": Object {
                                "boxShadow": "#333333 0 0 0 1px",
                              },
                              "&:placeholder-shown": Object {
                                "boxShadow": "#BBBBBB 0 0 0 1px",
                              },
                              "borderRadius": "4px",
                              "boxShadow": "#BBBBBB 0 0 0 1px",
                              "color": "#333333",
                              "minHeight": "24px",
                              "padding": "16px 35px 16px 16px",
                            },
                            "root": Object {
                              "&.MuiInput-underline.Mui-disabled:before": Object {
                                "borderBottom": "none",
                              },
                              "&.MuiInput-underline:after": Object {
                                "borderBottom": "none",
                              },
                              "&.MuiInput-underline:before": Object {
                                "borderBottom": "none",
                              },
                              "&.MuiInput-underline:hover:not(.Mui-disabled):before": Object {
                                "borderBottom": "none",
                              },
                              "color": "#333333",
                            },
                          },
                          "MuiInputLabel": Object {
                            "formControl": Object {
                              "marginTop": "-4px",
                              "transform": "none",
                            },
                            "shrink": Object {
                              "marginTop": "-4px",
                              "transform": "none",
                            },
                          },
                          "MuiListItem": Object {
                            "button": Object {
                              "&:hover": Object {
                                "backgroundColor": "rgba(0, 0, 0, 0.04)",
                              },
                            },
                            "root": Object {
                              "&$selected": Object {
                                "&:hover": Object {
                                  "backgroundColor": "rgba(0, 0, 0, 0.04)",
                                },
                                "backgroundColor": "rgba(255, 107, 11, 0.16)",
                              },
                              "&.Mui-disabled": Object {
                                "opacity": 0.32,
                              },
                            },
                          },
                          "MuiTab": Object {
                            "root": Object {
                              "&$disabled": Object {
                                "opacity": 0.24,
                              },
                            },
                            "textColorInherit": Object {
                              "&$disabled": Object {
                                "opacity": 0.24,
                              },
                            },
                            "wrapper": Object {
                              "& > *:first-child": Object {
                                "marginBottom": "2px !important",
                              },
                            },
                          },
                          "MuiTextField": Object {
                            "& .MuiInputLabel": Object {
                              "marginTop": "20px",
                            },
                          },
                          "MuiToolbar": Object {
                            "dense": Object {
                              "@media (min-width: 600px)": Object {
                                "minHeight": "56px",
                              },
                              "minHeight": "56px",
                            },
                            "gutters": Object {
                              "@media (min-width: 600px)": Object {
                                "padding": "0 16px",
                              },
                              "padding": "0 16px",
                            },
                            "regular": Object {
                              "@media (min-width: 600px)": Object {
                                "minHeight": "56px",
                              },
                              "minHeight": "56px",
                            },
                            "root": Object {
                              "@media (min-width: 600px)": Object {
                                "padding": "0 16px",
                              },
                              "padding": "0 16px",
                            },
                          },
                        },
                        "palette": Object {
                          "action": Object {
                            "disabled": "rgba(51, 51, 51, 0.24)",
                          },
                          "background": Object {
                            "default": "#FAFAFA",
                            "defaultContrastText": "#333333",
                            "paper": "#FFFFFF",
                            "paperContrastText": "#333333",
                          },
                          "complementary": Object {
                            "highlight": "#000000",
                            "link": "#227BBD",
                            "linkContrastText": "#FFFFFF",
                            "warning": "#FCC433",
                            "warningContrastText": "#333333",
                          },
                          "error": Object {
                            "contrastText": "#FFFFFF",
                            "main": "#E74627",
                          },
                          "primary": Object {
                            "contrastText": "#333333",
                            "dark": "#EF8426",
                            "light": "#FEFDE8",
                            "main": "#F4AB34",
                          },
                          "secondary": Object {
                            "contrastText": "#000000",
                            "dark": "#FF5808",
                            "light": "#FFF8E1",
                            "main": "#FF6B0B",
                          },
                          "success": Object {
                            "contrastText": "#FFFFFF",
                            "main": "#569A32",
                          },
                          "text": Object {
                            "disabled": "#BBBBBB",
                            "hint": "#BBBBBB",
                            "primary": "#333333",
                            "secondary": "#777777",
                          },
                        },
                        "shadows": Object {
                          "0": "none",
                          "1": "0 1px 1px 0 rgba(0, 0, 0, 0.14)",
                          "12": "0 12px 17px 0 rgba(0, 0, 0, 0.14)",
                          "16": "0 16px 24px 0 rgba(0, 0, 0, 0.14)",
                          "2": "0 2px 2px 0 rgba(0, 0, 0, 0.14)",
                          "24": "0 24px 38px 0 rgba(0, 0, 0, 0.14)",
                          "3": "0 3px 4px 0 rgba(0, 0, 0, 0.14)",
                          "4": "0 4px 5px 0 rgba(0, 0, 0, 0.14)",
                          "6": "0 6px 10px 0 rgba(0, 0, 0, 0.14)",
                          "8": "0 8px 10px 0 rgba(0, 0, 0, 0.14)",
                          "9": "0 9px 12px 0 rgba(0, 0, 0, 0.14)",
                        },
                        "shape": Object {
                          "badgeBorderRadius": 100,
                          "borderRadius": 4,
                        },
                        "sizes": Object {
                          "huge": 96,
                          "hugex": 128,
                          "hugexx": 144,
                          "hugexxx": 192,
                          "large": 64,
                          "largex": 72,
                          "largexx": 80,
                          "largexxx": 88,
                          "medium": 48,
                          "mediumx": 56,
                          "micro": 4,
                          "none": 0,
                          "semi": 32,
                          "semix": 40,
                          "small": 16,
                          "standard": 24,
                          "tiny": 8,
                          "veryhuge": 256,
                        },
                        "spacing": 8,
                        "typography": Object {
                          "body1": Object {
                            "fontSize": "1rem",
                            "fontWeight": 400,
                          },
                          "body2": Object {
                            "fontSize": "0.875rem",
                            "fontWeight": 400,
                          },
                          "button": Object {
                            "fontSize": "0.875rem",
                            "fontWeight": 600,
                          },
                          "caption": Object {
                            "fontSize": "0.75rem",
                            "fontWeight": 400,
                          },
                          "fontFamily": "\\"Roboto\\", sans-serif",
                          "fontFamilyBrand1": "\\"Helvetica Now Display\\"",
                          "fontFamilyBrand2": "\\"Helvetica Now Text\\"",
                          "fontFamilyBrand3": undefined,
                          "fontWeightBold": 700,
                          "fontWeightLight": 300,
                          "fontWeightMedium": 500,
                          "fontWeightRegular": 400,
                          "h1": Object {
                            "fontSize": "6rem",
                            "fontWeight": 300,
                          },
                          "h2": Object {
                            "fontSize": "3.75rem",
                            "fontWeight": 300,
                          },
                          "h3": Object {
                            "fontSize": "3rem",
                            "fontWeight": 400,
                          },
                          "h4": Object {
                            "fontSize": "2.125rem",
                            "fontWeight": 400,
                          },
                          "h5": Object {
                            "fontSize": "1.5rem",
                            "fontWeight": 400,
                          },
                          "h6": Object {
                            "fontSize": "1.25rem",
                            "fontWeight": 600,
                          },
                          "overline": Object {
                            "fontSize": "0.75rem",
                            "fontWeight": 400,
                          },
                          "subtitle1": Object {
                            "fontSize": "1rem",
                            "fontWeight": 400,
                          },
                          "subtitle2": Object {
                            "fontSize": "0.875rem",
                            "fontWeight": 500,
                          },
                        },
                      }
                    }
                  >
                    <label
                      className="sc-VigVT gLavkU"
                      disabled={false}
                    >
                      Only calendar
                    </label>
                  </StyledComponent>
                </styled.label>
                <PickerWithState
                  allowKeyboardControl={true}
                  helperText=""
                  inputProps={
                    Object {
                      "style": Object {
                        "boxShadow": "#569A32 0 0 0 1px",
                      },
                    }
                  }
                  invalidDateMessage="Invalid Date Format"
                  keyboardIcon={
                    <ForwardRef(WithTheme)
                      name="outlined-action-calendar"
                      size="tiny"
                    />
                  }
                  label=""
                  maxDate={2100-01-01T00:00:00.000Z}
                  maxDateMessage="Date should not be after maximal date"
                  minDate={1900-01-01T00:00:00.000Z}
                  minDateMessage="Date should not be before minimal date"
                  onChange={[Function]}
                  openTo="date"
                  required={false}
                  theme={
                    Object {
                      "avatarSizes": Object {
                        "huge": Object {
                          "fontSize": "1.5rem",
                          "size": 80,
                        },
                        "large": Object {
                          "fontSize": "1rem",
                          "size": 48,
                        },
                        "small": Object {
                          "fontSize": ".875rem",
                          "size": 32,
                        },
                        "standard": Object {
                          "fontSize": "1rem",
                          "size": 40,
                        },
                        "tiny": Object {
                          "fontSize": ".625rem",
                          "size": 24,
                        },
                      },
                      "buttonSizes": Object {
                        "large": Object {
                          "minHeight": 48,
                          "paddingBottom": 16,
                          "paddingLeft": 16,
                          "paddingRight": 16,
                          "paddingTop": 16,
                        },
                        "medium": Object {
                          "minHeight": 40,
                          "paddingBottom": 12,
                          "paddingLeft": 16,
                          "paddingRight": 16,
                          "paddingTop": 12,
                        },
                        "small": Object {
                          "minHeight": 32,
                          "paddingBottom": 8,
                          "paddingLeft": 8,
                          "paddingRight": 8,
                          "paddingTop": 8,
                        },
                      },
                      "iconSizes": Object {
                        "huge": 144,
                        "hugex": 192,
                        "hugexx": 256,
                        "large": 72,
                        "largex": 96,
                        "largexx": 128,
                        "medium": 64,
                        "micro": 16,
                        "small": 32,
                        "standard": 48,
                        "tiny": 24,
                      },
                      "overrides": Object {
                        "MuiAvatar": Object {
                          "colorDefault": Object {
                            "color": "#333333",
                          },
                        },
                        "MuiBadge": Object {
                          "badge": Object {
                            "padding": "0 4px",
                          },
                        },
                        "MuiButton": Object {
                          "outlinedPrimary": Object {
                            "color": "#333333",
                          },
                          "outlinedSecondary": Object {
                            "color": "#333333",
                          },
                          "root": Object {
                            "fontSize": "0.875rem",
                            "minHeight": "40px",
                            "padding": "8px 16px",
                          },
                          "sizeLarge": Object {
                            "fontSize": "0.875rem",
                            "minHeight": "48px",
                          },
                          "sizeSmall": Object {
                            "fontSize": "0.875rem",
                            "minHeight": "32px",
                          },
                          "textPrimary": Object {
                            "color": "#333333",
                          },
                        },
                        "MuiChip": Object {
                          "clickableColorPrimary": Object {
                            "&:hover": Object {
                              "backgroundColor": "#EF8426",
                            },
                          },
                          "clickableColorSecondary": Object {
                            "&:hover": Object {
                              "backgroundColor": "#EF8426",
                            },
                          },
                          "deleteIcon": Object {
                            "&:hover": Object {
                              "color": "#000000",
                            },
                            "color": "rgba(0, 0, 0, 0.8)",
                            "fontSize": "24px",
                            "height": "24px",
                            "width": "24px",
                          },
                          "deleteIconColorPrimary": Object {
                            "&:hover": Object {
                              "color": "#FFFFFF",
                            },
                            "color": "rgba(255, 255, 255, 0.8)",
                          },
                          "deleteIconColorSecondary": Object {
                            "&:hover": Object {
                              "color": "#FFFFFF",
                            },
                            "color": "rgba(255, 255, 255, 0.8)",
                          },
                          "deleteIconSmall": Object {
                            "fontSize": "16px",
                            "height": "16px",
                            "width": "16px",
                          },
                          "icon": Object {
                            "fontSize": "24px",
                          },
                          "iconSmall": Object {
                            "fontSize": "16px",
                            "height": "16px",
                            "marginTop": "1px",
                            "width": "16px",
                          },
                          "outlined": Object {
                            "borderColor": "rgba(0, 0, 0, 0.12)",
                            "color": "#000000",
                          },
                          "outlinedPrimary": Object {
                            "color": "#000000",
                          },
                          "outlinedSecondary": Object {
                            "color": "#000000",
                          },
                          "root": Object {
                            "& $avatar": Object {
                              "backgroundColor": "rgba(0, 0, 0, 0.24)",
                              "color": "#333333",
                            },
                            "&$disabled": Object {
                              "opacity": 0.4,
                            },
                            "backgroundColor": "rgba(0, 0, 0, 0.12)",
                            "color": "#333333",
                            "fontSize": "0.875rem",
                          },
                        },
                        "MuiExpansionPanel": Object {
                          "root": Object {
                            "&$disabled": Object {
                              "backgroundColor": "#FFFFFF",
                              "opacity": 0.32,
                            },
                            "&$expanded": Object {
                              "borderColor": "#F4AB34",
                            },
                            "border": "transparent 1px solid",
                          },
                        },
                        "MuiExpansionPanelSummary": Object {
                          "root": Object {
                            "&$disabled": Object {
                              "opacity": 1,
                            },
                            "alignItems": "flex-start",
                            "marginTop": "8px",
                          },
                        },
                        "MuiFormLabel": Object {
                          "formControl": Object {
                            "marginTop": "-4px",
                            "transform": "none",
                          },
                          "root": Object {
                            "&.Mui-focused": Object {
                              "color": "#777777",
                              "fontSize": "0.875rem",
                            },
                            "fontSize": "0.875rem",
                          },
                        },
                        "MuiIconButton": Object {
                          "root": Object {
                            "color": "#333333",
                            "padding": "8px",
                          },
                          "sizeSmall": Object {
                            "padding": "4px",
                          },
                        },
                        "MuiInputAdornment": Object {
                          "root": Object {
                            "position": "absolute",
                            "right": "0",
                          },
                        },
                        "MuiInputBase": Object {
                          "input": Object {
                            "&.Mui-disabled": Object {
                              "&:hover": Object {
                                "boxShadow": "#333333 0 0 0 1px",
                              },
                              "opacity": 0.24,
                            },
                            "&:focus": Object {
                              "boxShadow": "#F4AB34 0 0 0 2px",
                            },
                            "&:focus:not(:read-only)": Object {
                              "boxShadow": "#F4AB34 0 0 0 2px",
                            },
                            "&:hover": Object {
                              "boxShadow": "#777777 0 0 0 1px",
                            },
                            "&:hover:not(:placeholder-shown)": Object {
                              "boxShadow": "#777777 0 0 0 1px",
                            },
                            "&:hover:not(:read-only):not(:disabled):not(:focus)": Object {
                              "boxShadow": "#777777 0 0 0 1px",
                            },
                            "&:not(:placeholder-shown)": Object {
                              "boxShadow": "#333333 0 0 0 1px",
                            },
                            "&:placeholder-shown": Object {
                              "boxShadow": "#BBBBBB 0 0 0 1px",
                            },
                            "borderRadius": "4px",
                            "boxShadow": "#BBBBBB 0 0 0 1px",
                            "color": "#333333",
                            "minHeight": "24px",
                            "padding": "16px 35px 16px 16px",
                          },
                          "root": Object {
                            "&.MuiInput-underline.Mui-disabled:before": Object {
                              "borderBottom": "none",
                            },
                            "&.MuiInput-underline:after": Object {
                              "borderBottom": "none",
                            },
                            "&.MuiInput-underline:before": Object {
                              "borderBottom": "none",
                            },
                            "&.MuiInput-underline:hover:not(.Mui-disabled):before": Object {
                              "borderBottom": "none",
                            },
                            "color": "#333333",
                          },
                        },
                        "MuiInputLabel": Object {
                          "formControl": Object {
                            "marginTop": "-4px",
                            "transform": "none",
                          },
                          "shrink": Object {
                            "marginTop": "-4px",
                            "transform": "none",
                          },
                        },
                        "MuiListItem": Object {
                          "button": Object {
                            "&:hover": Object {
                              "backgroundColor": "rgba(0, 0, 0, 0.04)",
                            },
                          },
                          "root": Object {
                            "&$selected": Object {
                              "&:hover": Object {
                                "backgroundColor": "rgba(0, 0, 0, 0.04)",
                              },
                              "backgroundColor": "rgba(255, 107, 11, 0.16)",
                            },
                            "&.Mui-disabled": Object {
                              "opacity": 0.32,
                            },
                          },
                        },
                        "MuiTab": Object {
                          "root": Object {
                            "&$disabled": Object {
                              "opacity": 0.24,
                            },
                          },
                          "textColorInherit": Object {
                            "&$disabled": Object {
                              "opacity": 0.24,
                            },
                          },
                          "wrapper": Object {
                            "& > *:first-child": Object {
                              "marginBottom": "2px !important",
                            },
                          },
                        },
                        "MuiTextField": Object {
                          "& .MuiInputLabel": Object {
                            "marginTop": "20px",
                          },
                        },
                        "MuiToolbar": Object {
                          "dense": Object {
                            "@media (min-width: 600px)": Object {
                              "minHeight": "56px",
                            },
                            "minHeight": "56px",
                          },
                          "gutters": Object {
                            "@media (min-width: 600px)": Object {
                              "padding": "0 16px",
                            },
                            "padding": "0 16px",
                          },
                          "regular": Object {
                            "@media (min-width: 600px)": Object {
                              "minHeight": "56px",
                            },
                            "minHeight": "56px",
                          },
                          "root": Object {
                            "@media (min-width: 600px)": Object {
                              "padding": "0 16px",
                            },
                            "padding": "0 16px",
                          },
                        },
                      },
                      "palette": Object {
                        "action": Object {
                          "disabled": "rgba(51, 51, 51, 0.24)",
                        },
                        "background": Object {
                          "default": "#FAFAFA",
                          "defaultContrastText": "#333333",
                          "paper": "#FFFFFF",
                          "paperContrastText": "#333333",
                        },
                        "complementary": Object {
                          "highlight": "#000000",
                          "link": "#227BBD",
                          "linkContrastText": "#FFFFFF",
                          "warning": "#FCC433",
                          "warningContrastText": "#333333",
                        },
                        "error": Object {
                          "contrastText": "#FFFFFF",
                          "main": "#E74627",
                        },
                        "primary": Object {
                          "contrastText": "#333333",
                          "dark": "#EF8426",
                          "light": "#FEFDE8",
                          "main": "#F4AB34",
                        },
                        "secondary": Object {
                          "contrastText": "#000000",
                          "dark": "#FF5808",
                          "light": "#FFF8E1",
                          "main": "#FF6B0B",
                        },
                        "success": Object {
                          "contrastText": "#FFFFFF",
                          "main": "#569A32",
                        },
                        "text": Object {
                          "disabled": "#BBBBBB",
                          "hint": "#BBBBBB",
                          "primary": "#333333",
                          "secondary": "#777777",
                        },
                      },
                      "shadows": Object {
                        "0": "none",
                        "1": "0 1px 1px 0 rgba(0, 0, 0, 0.14)",
                        "12": "0 12px 17px 0 rgba(0, 0, 0, 0.14)",
                        "16": "0 16px 24px 0 rgba(0, 0, 0, 0.14)",
                        "2": "0 2px 2px 0 rgba(0, 0, 0, 0.14)",
                        "24": "0 24px 38px 0 rgba(0, 0, 0, 0.14)",
                        "3": "0 3px 4px 0 rgba(0, 0, 0, 0.14)",
                        "4": "0 4px 5px 0 rgba(0, 0, 0, 0.14)",
                        "6": "0 6px 10px 0 rgba(0, 0, 0, 0.14)",
                        "8": "0 8px 10px 0 rgba(0, 0, 0, 0.14)",
                        "9": "0 9px 12px 0 rgba(0, 0, 0, 0.14)",
                      },
                      "shape": Object {
                        "badgeBorderRadius": 100,
                        "borderRadius": 4,
                      },
                      "sizes": Object {
                        "huge": 96,
                        "hugex": 128,
                        "hugexx": 144,
                        "hugexxx": 192,
                        "large": 64,
                        "largex": 72,
                        "largexx": 80,
                        "largexxx": 88,
                        "medium": 48,
                        "mediumx": 56,
                        "micro": 4,
                        "none": 0,
                        "semi": 32,
                        "semix": 40,
                        "small": 16,
                        "standard": 24,
                        "tiny": 8,
                        "veryhuge": 256,
                      },
                      "spacing": 8,
                      "typography": Object {
                        "body1": Object {
                          "fontSize": "1rem",
                          "fontWeight": 400,
                        },
                        "body2": Object {
                          "fontSize": "0.875rem",
                          "fontWeight": 400,
                        },
                        "button": Object {
                          "fontSize": "0.875rem",
                          "fontWeight": 600,
                        },
                        "caption": Object {
                          "fontSize": "0.75rem",
                          "fontWeight": 400,
                        },
                        "fontFamily": "\\"Roboto\\", sans-serif",
                        "fontFamilyBrand1": "\\"Helvetica Now Display\\"",
                        "fontFamilyBrand2": "\\"Helvetica Now Text\\"",
                        "fontFamilyBrand3": undefined,
                        "fontWeightBold": 700,
                        "fontWeightLight": 300,
                        "fontWeightMedium": 500,
                        "fontWeightRegular": 400,
                        "h1": Object {
                          "fontSize": "6rem",
                          "fontWeight": 300,
                        },
                        "h2": Object {
                          "fontSize": "3.75rem",
                          "fontWeight": 300,
                        },
                        "h3": Object {
                          "fontSize": "3rem",
                          "fontWeight": 400,
                        },
                        "h4": Object {
                          "fontSize": "2.125rem",
                          "fontWeight": 400,
                        },
                        "h5": Object {
                          "fontSize": "1.5rem",
                          "fontWeight": 400,
                        },
                        "h6": Object {
                          "fontSize": "1.25rem",
                          "fontWeight": 600,
                        },
                        "overline": Object {
                          "fontSize": "0.75rem",
                          "fontWeight": 400,
                        },
                        "subtitle1": Object {
                          "fontSize": "1rem",
                          "fontWeight": 400,
                        },
                        "subtitle2": Object {
                          "fontSize": "0.875rem",
                          "fontWeight": 500,
                        },
                      },
                    }
                  }
                  value={2020-02-01T03:00:00.000Z}
                  variant="dialog"
                  views={
                    Array [
                      "year",
                      "date",
                    ]
                  }
                >
                  <Component
                    DateInputProps={
                      Object {
                        "format": "MMMM do",
                        "inputValue": "February 1st",
                        "onChange": [Function],
                        "openPicker": [Function],
                        "validationError": "",
                      }
                    }
                    InputComponent={[Function]}
                    format="MMMM do"
                    helperText=""
                    inputProps={
                      Object {
                        "style": Object {
                          "boxShadow": "#569A32 0 0 0 1px",
                        },
                      }
                    }
                    keyboardIcon={
                      <ForwardRef(WithTheme)
                        name="outlined-action-calendar"
                        size="tiny"
                      />
                    }
                    label=""
                    onAccept={[Function]}
                    onClear={[Function]}
                    onDismiss={[Function]}
                    onSetToday={[Function]}
                    open={false}
                    required={false}
                    theme={
                      Object {
                        "avatarSizes": Object {
                          "huge": Object {
                            "fontSize": "1.5rem",
                            "size": 80,
                          },
                          "large": Object {
                            "fontSize": "1rem",
                            "size": 48,
                          },
                          "small": Object {
                            "fontSize": ".875rem",
                            "size": 32,
                          },
                          "standard": Object {
                            "fontSize": "1rem",
                            "size": 40,
                          },
                          "tiny": Object {
                            "fontSize": ".625rem",
                            "size": 24,
                          },
                        },
                        "buttonSizes": Object {
                          "large": Object {
                            "minHeight": 48,
                            "paddingBottom": 16,
                            "paddingLeft": 16,
                            "paddingRight": 16,
                            "paddingTop": 16,
                          },
                          "medium": Object {
                            "minHeight": 40,
                            "paddingBottom": 12,
                            "paddingLeft": 16,
                            "paddingRight": 16,
                            "paddingTop": 12,
                          },
                          "small": Object {
                            "minHeight": 32,
                            "paddingBottom": 8,
                            "paddingLeft": 8,
                            "paddingRight": 8,
                            "paddingTop": 8,
                          },
                        },
                        "iconSizes": Object {
                          "huge": 144,
                          "hugex": 192,
                          "hugexx": 256,
                          "large": 72,
                          "largex": 96,
                          "largexx": 128,
                          "medium": 64,
                          "micro": 16,
                          "small": 32,
                          "standard": 48,
                          "tiny": 24,
                        },
                        "overrides": Object {
                          "MuiAvatar": Object {
                            "colorDefault": Object {
                              "color": "#333333",
                            },
                          },
                          "MuiBadge": Object {
                            "badge": Object {
                              "padding": "0 4px",
                            },
                          },
                          "MuiButton": Object {
                            "outlinedPrimary": Object {
                              "color": "#333333",
                            },
                            "outlinedSecondary": Object {
                              "color": "#333333",
                            },
                            "root": Object {
                              "fontSize": "0.875rem",
                              "minHeight": "40px",
                              "padding": "8px 16px",
                            },
                            "sizeLarge": Object {
                              "fontSize": "0.875rem",
                              "minHeight": "48px",
                            },
                            "sizeSmall": Object {
                              "fontSize": "0.875rem",
                              "minHeight": "32px",
                            },
                            "textPrimary": Object {
                              "color": "#333333",
                            },
                          },
                          "MuiChip": Object {
                            "clickableColorPrimary": Object {
                              "&:hover": Object {
                                "backgroundColor": "#EF8426",
                              },
                            },
                            "clickableColorSecondary": Object {
                              "&:hover": Object {
                                "backgroundColor": "#EF8426",
                              },
                            },
                            "deleteIcon": Object {
                              "&:hover": Object {
                                "color": "#000000",
                              },
                              "color": "rgba(0, 0, 0, 0.8)",
                              "fontSize": "24px",
                              "height": "24px",
                              "width": "24px",
                            },
                            "deleteIconColorPrimary": Object {
                              "&:hover": Object {
                                "color": "#FFFFFF",
                              },
                              "color": "rgba(255, 255, 255, 0.8)",
                            },
                            "deleteIconColorSecondary": Object {
                              "&:hover": Object {
                                "color": "#FFFFFF",
                              },
                              "color": "rgba(255, 255, 255, 0.8)",
                            },
                            "deleteIconSmall": Object {
                              "fontSize": "16px",
                              "height": "16px",
                              "width": "16px",
                            },
                            "icon": Object {
                              "fontSize": "24px",
                            },
                            "iconSmall": Object {
                              "fontSize": "16px",
                              "height": "16px",
                              "marginTop": "1px",
                              "width": "16px",
                            },
                            "outlined": Object {
                              "borderColor": "rgba(0, 0, 0, 0.12)",
                              "color": "#000000",
                            },
                            "outlinedPrimary": Object {
                              "color": "#000000",
                            },
                            "outlinedSecondary": Object {
                              "color": "#000000",
                            },
                            "root": Object {
                              "& $avatar": Object {
                                "backgroundColor": "rgba(0, 0, 0, 0.24)",
                                "color": "#333333",
                              },
                              "&$disabled": Object {
                                "opacity": 0.4,
                              },
                              "backgroundColor": "rgba(0, 0, 0, 0.12)",
                              "color": "#333333",
                              "fontSize": "0.875rem",
                            },
                          },
                          "MuiExpansionPanel": Object {
                            "root": Object {
                              "&$disabled": Object {
                                "backgroundColor": "#FFFFFF",
                                "opacity": 0.32,
                              },
                              "&$expanded": Object {
                                "borderColor": "#F4AB34",
                              },
                              "border": "transparent 1px solid",
                            },
                          },
                          "MuiExpansionPanelSummary": Object {
                            "root": Object {
                              "&$disabled": Object {
                                "opacity": 1,
                              },
                              "alignItems": "flex-start",
                              "marginTop": "8px",
                            },
                          },
                          "MuiFormLabel": Object {
                            "formControl": Object {
                              "marginTop": "-4px",
                              "transform": "none",
                            },
                            "root": Object {
                              "&.Mui-focused": Object {
                                "color": "#777777",
                                "fontSize": "0.875rem",
                              },
                              "fontSize": "0.875rem",
                            },
                          },
                          "MuiIconButton": Object {
                            "root": Object {
                              "color": "#333333",
                              "padding": "8px",
                            },
                            "sizeSmall": Object {
                              "padding": "4px",
                            },
                          },
                          "MuiInputAdornment": Object {
                            "root": Object {
                              "position": "absolute",
                              "right": "0",
                            },
                          },
                          "MuiInputBase": Object {
                            "input": Object {
                              "&.Mui-disabled": Object {
                                "&:hover": Object {
                                  "boxShadow": "#333333 0 0 0 1px",
                                },
                                "opacity": 0.24,
                              },
                              "&:focus": Object {
                                "boxShadow": "#F4AB34 0 0 0 2px",
                              },
                              "&:focus:not(:read-only)": Object {
                                "boxShadow": "#F4AB34 0 0 0 2px",
                              },
                              "&:hover": Object {
                                "boxShadow": "#777777 0 0 0 1px",
                              },
                              "&:hover:not(:placeholder-shown)": Object {
                                "boxShadow": "#777777 0 0 0 1px",
                              },
                              "&:hover:not(:read-only):not(:disabled):not(:focus)": Object {
                                "boxShadow": "#777777 0 0 0 1px",
                              },
                              "&:not(:placeholder-shown)": Object {
                                "boxShadow": "#333333 0 0 0 1px",
                              },
                              "&:placeholder-shown": Object {
                                "boxShadow": "#BBBBBB 0 0 0 1px",
                              },
                              "borderRadius": "4px",
                              "boxShadow": "#BBBBBB 0 0 0 1px",
                              "color": "#333333",
                              "minHeight": "24px",
                              "padding": "16px 35px 16px 16px",
                            },
                            "root": Object {
                              "&.MuiInput-underline.Mui-disabled:before": Object {
                                "borderBottom": "none",
                              },
                              "&.MuiInput-underline:after": Object {
                                "borderBottom": "none",
                              },
                              "&.MuiInput-underline:before": Object {
                                "borderBottom": "none",
                              },
                              "&.MuiInput-underline:hover:not(.Mui-disabled):before": Object {
                                "borderBottom": "none",
                              },
                              "color": "#333333",
                            },
                          },
                          "MuiInputLabel": Object {
                            "formControl": Object {
                              "marginTop": "-4px",
                              "transform": "none",
                            },
                            "shrink": Object {
                              "marginTop": "-4px",
                              "transform": "none",
                            },
                          },
                          "MuiListItem": Object {
                            "button": Object {
                              "&:hover": Object {
                                "backgroundColor": "rgba(0, 0, 0, 0.04)",
                              },
                            },
                            "root": Object {
                              "&$selected": Object {
                                "&:hover": Object {
                                  "backgroundColor": "rgba(0, 0, 0, 0.04)",
                                },
                                "backgroundColor": "rgba(255, 107, 11, 0.16)",
                              },
                              "&.Mui-disabled": Object {
                                "opacity": 0.32,
                              },
                            },
                          },
                          "MuiTab": Object {
                            "root": Object {
                              "&$disabled": Object {
                                "opacity": 0.24,
                              },
                            },
                            "textColorInherit": Object {
                              "&$disabled": Object {
                                "opacity": 0.24,
                              },
                            },
                            "wrapper": Object {
                              "& > *:first-child": Object {
                                "marginBottom": "2px !important",
                              },
                            },
                          },
                          "MuiTextField": Object {
                            "& .MuiInputLabel": Object {
                              "marginTop": "20px",
                            },
                          },
                          "MuiToolbar": Object {
                            "dense": Object {
                              "@media (min-width: 600px)": Object {
                                "minHeight": "56px",
                              },
                              "minHeight": "56px",
                            },
                            "gutters": Object {
                              "@media (min-width: 600px)": Object {
                                "padding": "0 16px",
                              },
                              "padding": "0 16px",
                            },
                            "regular": Object {
                              "@media (min-width: 600px)": Object {
                                "minHeight": "56px",
                              },
                              "minHeight": "56px",
                            },
                            "root": Object {
                              "@media (min-width: 600px)": Object {
                                "padding": "0 16px",
                              },
                              "padding": "0 16px",
                            },
                          },
                        },
                        "palette": Object {
                          "action": Object {
                            "disabled": "rgba(51, 51, 51, 0.24)",
                          },
                          "background": Object {
                            "default": "#FAFAFA",
                            "defaultContrastText": "#333333",
                            "paper": "#FFFFFF",
                            "paperContrastText": "#333333",
                          },
                          "complementary": Object {
                            "highlight": "#000000",
                            "link": "#227BBD",
                            "linkContrastText": "#FFFFFF",
                            "warning": "#FCC433",
                            "warningContrastText": "#333333",
                          },
                          "error": Object {
                            "contrastText": "#FFFFFF",
                            "main": "#E74627",
                          },
                          "primary": Object {
                            "contrastText": "#333333",
                            "dark": "#EF8426",
                            "light": "#FEFDE8",
                            "main": "#F4AB34",
                          },
                          "secondary": Object {
                            "contrastText": "#000000",
                            "dark": "#FF5808",
                            "light": "#FFF8E1",
                            "main": "#FF6B0B",
                          },
                          "success": Object {
                            "contrastText": "#FFFFFF",
                            "main": "#569A32",
                          },
                          "text": Object {
                            "disabled": "#BBBBBB",
                            "hint": "#BBBBBB",
                            "primary": "#333333",
                            "secondary": "#777777",
                          },
                        },
                        "shadows": Object {
                          "0": "none",
                          "1": "0 1px 1px 0 rgba(0, 0, 0, 0.14)",
                          "12": "0 12px 17px 0 rgba(0, 0, 0, 0.14)",
                          "16": "0 16px 24px 0 rgba(0, 0, 0, 0.14)",
                          "2": "0 2px 2px 0 rgba(0, 0, 0, 0.14)",
                          "24": "0 24px 38px 0 rgba(0, 0, 0, 0.14)",
                          "3": "0 3px 4px 0 rgba(0, 0, 0, 0.14)",
                          "4": "0 4px 5px 0 rgba(0, 0, 0, 0.14)",
                          "6": "0 6px 10px 0 rgba(0, 0, 0, 0.14)",
                          "8": "0 8px 10px 0 rgba(0, 0, 0, 0.14)",
                          "9": "0 9px 12px 0 rgba(0, 0, 0, 0.14)",
                        },
                        "shape": Object {
                          "badgeBorderRadius": 100,
                          "borderRadius": 4,
                        },
                        "sizes": Object {
                          "huge": 96,
                          "hugex": 128,
                          "hugexx": 144,
                          "hugexxx": 192,
                          "large": 64,
                          "largex": 72,
                          "largexx": 80,
                          "largexxx": 88,
                          "medium": 48,
                          "mediumx": 56,
                          "micro": 4,
                          "none": 0,
                          "semi": 32,
                          "semix": 40,
                          "small": 16,
                          "standard": 24,
                          "tiny": 8,
                          "veryhuge": 256,
                        },
                        "spacing": 8,
                        "typography": Object {
                          "body1": Object {
                            "fontSize": "1rem",
                            "fontWeight": 400,
                          },
                          "body2": Object {
                            "fontSize": "0.875rem",
                            "fontWeight": 400,
                          },
                          "button": Object {
                            "fontSize": "0.875rem",
                            "fontWeight": 600,
                          },
                          "caption": Object {
                            "fontSize": "0.75rem",
                            "fontWeight": 400,
                          },
                          "fontFamily": "\\"Roboto\\", sans-serif",
                          "fontFamilyBrand1": "\\"Helvetica Now Display\\"",
                          "fontFamilyBrand2": "\\"Helvetica Now Text\\"",
                          "fontFamilyBrand3": undefined,
                          "fontWeightBold": 700,
                          "fontWeightLight": 300,
                          "fontWeightMedium": 500,
                          "fontWeightRegular": 400,
                          "h1": Object {
                            "fontSize": "6rem",
                            "fontWeight": 300,
                          },
                          "h2": Object {
                            "fontSize": "3.75rem",
                            "fontWeight": 300,
                          },
                          "h3": Object {
                            "fontSize": "3rem",
                            "fontWeight": 400,
                          },
                          "h4": Object {
                            "fontSize": "2.125rem",
                            "fontWeight": 400,
                          },
                          "h5": Object {
                            "fontSize": "1.5rem",
                            "fontWeight": 400,
                          },
                          "h6": Object {
                            "fontSize": "1.25rem",
                            "fontWeight": 600,
                          },
                          "overline": Object {
                            "fontSize": "0.75rem",
                            "fontWeight": 400,
                          },
                          "subtitle1": Object {
                            "fontSize": "1rem",
                            "fontWeight": 400,
                          },
                          "subtitle2": Object {
                            "fontSize": "0.875rem",
                            "fontWeight": 500,
                          },
                        },
                      }
                    }
                    variant="dialog"
                  >
                    <Component
                      DateInputProps={
                        Object {
                          "format": "MMMM do",
                          "inputValue": "February 1st",
                          "onChange": [Function],
                          "openPicker": [Function],
                          "validationError": "",
                        }
                      }
                      InputComponent={[Function]}
                      cancelLabel="Cancel"
                      clearLabel="Clear"
                      clearable={false}
                      format="MMMM do"
                      helperText=""
                      inputProps={
                        Object {
                          "style": Object {
                            "boxShadow": "#569A32 0 0 0 1px",
                          },
                        }
                      }
                      keyboardIcon={
                        <ForwardRef(WithTheme)
                          name="outlined-action-calendar"
                          size="tiny"
                        />
                      }
                      label=""
                      okLabel="OK"
                      onAccept={[Function]}
                      onClear={[Function]}
                      onDismiss={[Function]}
                      onSetToday={[Function]}
                      open={false}
                      required={false}
                      showTodayButton={false}
                      theme={
                        Object {
                          "avatarSizes": Object {
                            "huge": Object {
                              "fontSize": "1.5rem",
                              "size": 80,
                            },
                            "large": Object {
                              "fontSize": "1rem",
                              "size": 48,
                            },
                            "small": Object {
                              "fontSize": ".875rem",
                              "size": 32,
                            },
                            "standard": Object {
                              "fontSize": "1rem",
                              "size": 40,
                            },
                            "tiny": Object {
                              "fontSize": ".625rem",
                              "size": 24,
                            },
                          },
                          "buttonSizes": Object {
                            "large": Object {
                              "minHeight": 48,
                              "paddingBottom": 16,
                              "paddingLeft": 16,
                              "paddingRight": 16,
                              "paddingTop": 16,
                            },
                            "medium": Object {
                              "minHeight": 40,
                              "paddingBottom": 12,
                              "paddingLeft": 16,
                              "paddingRight": 16,
                              "paddingTop": 12,
                            },
                            "small": Object {
                              "minHeight": 32,
                              "paddingBottom": 8,
                              "paddingLeft": 8,
                              "paddingRight": 8,
                              "paddingTop": 8,
                            },
                          },
                          "iconSizes": Object {
                            "huge": 144,
                            "hugex": 192,
                            "hugexx": 256,
                            "large": 72,
                            "largex": 96,
                            "largexx": 128,
                            "medium": 64,
                            "micro": 16,
                            "small": 32,
                            "standard": 48,
                            "tiny": 24,
                          },
                          "overrides": Object {
                            "MuiAvatar": Object {
                              "colorDefault": Object {
                                "color": "#333333",
                              },
                            },
                            "MuiBadge": Object {
                              "badge": Object {
                                "padding": "0 4px",
                              },
                            },
                            "MuiButton": Object {
                              "outlinedPrimary": Object {
                                "color": "#333333",
                              },
                              "outlinedSecondary": Object {
                                "color": "#333333",
                              },
                              "root": Object {
                                "fontSize": "0.875rem",
                                "minHeight": "40px",
                                "padding": "8px 16px",
                              },
                              "sizeLarge": Object {
                                "fontSize": "0.875rem",
                                "minHeight": "48px",
                              },
                              "sizeSmall": Object {
                                "fontSize": "0.875rem",
                                "minHeight": "32px",
                              },
                              "textPrimary": Object {
                                "color": "#333333",
                              },
                            },
                            "MuiChip": Object {
                              "clickableColorPrimary": Object {
                                "&:hover": Object {
                                  "backgroundColor": "#EF8426",
                                },
                              },
                              "clickableColorSecondary": Object {
                                "&:hover": Object {
                                  "backgroundColor": "#EF8426",
                                },
                              },
                              "deleteIcon": Object {
                                "&:hover": Object {
                                  "color": "#000000",
                                },
                                "color": "rgba(0, 0, 0, 0.8)",
                                "fontSize": "24px",
                                "height": "24px",
                                "width": "24px",
                              },
                              "deleteIconColorPrimary": Object {
                                "&:hover": Object {
                                  "color": "#FFFFFF",
                                },
                                "color": "rgba(255, 255, 255, 0.8)",
                              },
                              "deleteIconColorSecondary": Object {
                                "&:hover": Object {
                                  "color": "#FFFFFF",
                                },
                                "color": "rgba(255, 255, 255, 0.8)",
                              },
                              "deleteIconSmall": Object {
                                "fontSize": "16px",
                                "height": "16px",
                                "width": "16px",
                              },
                              "icon": Object {
                                "fontSize": "24px",
                              },
                              "iconSmall": Object {
                                "fontSize": "16px",
                                "height": "16px",
                                "marginTop": "1px",
                                "width": "16px",
                              },
                              "outlined": Object {
                                "borderColor": "rgba(0, 0, 0, 0.12)",
                                "color": "#000000",
                              },
                              "outlinedPrimary": Object {
                                "color": "#000000",
                              },
                              "outlinedSecondary": Object {
                                "color": "#000000",
                              },
                              "root": Object {
                                "& $avatar": Object {
                                  "backgroundColor": "rgba(0, 0, 0, 0.24)",
                                  "color": "#333333",
                                },
                                "&$disabled": Object {
                                  "opacity": 0.4,
                                },
                                "backgroundColor": "rgba(0, 0, 0, 0.12)",
                                "color": "#333333",
                                "fontSize": "0.875rem",
                              },
                            },
                            "MuiExpansionPanel": Object {
                              "root": Object {
                                "&$disabled": Object {
                                  "backgroundColor": "#FFFFFF",
                                  "opacity": 0.32,
                                },
                                "&$expanded": Object {
                                  "borderColor": "#F4AB34",
                                },
                                "border": "transparent 1px solid",
                              },
                            },
                            "MuiExpansionPanelSummary": Object {
                              "root": Object {
                                "&$disabled": Object {
                                  "opacity": 1,
                                },
                                "alignItems": "flex-start",
                                "marginTop": "8px",
                              },
                            },
                            "MuiFormLabel": Object {
                              "formControl": Object {
                                "marginTop": "-4px",
                                "transform": "none",
                              },
                              "root": Object {
                                "&.Mui-focused": Object {
                                  "color": "#777777",
                                  "fontSize": "0.875rem",
                                },
                                "fontSize": "0.875rem",
                              },
                            },
                            "MuiIconButton": Object {
                              "root": Object {
                                "color": "#333333",
                                "padding": "8px",
                              },
                              "sizeSmall": Object {
                                "padding": "4px",
                              },
                            },
                            "MuiInputAdornment": Object {
                              "root": Object {
                                "position": "absolute",
                                "right": "0",
                              },
                            },
                            "MuiInputBase": Object {
                              "input": Object {
                                "&.Mui-disabled": Object {
                                  "&:hover": Object {
                                    "boxShadow": "#333333 0 0 0 1px",
                                  },
                                  "opacity": 0.24,
                                },
                                "&:focus": Object {
                                  "boxShadow": "#F4AB34 0 0 0 2px",
                                },
                                "&:focus:not(:read-only)": Object {
                                  "boxShadow": "#F4AB34 0 0 0 2px",
                                },
                                "&:hover": Object {
                                  "boxShadow": "#777777 0 0 0 1px",
                                },
                                "&:hover:not(:placeholder-shown)": Object {
                                  "boxShadow": "#777777 0 0 0 1px",
                                },
                                "&:hover:not(:read-only):not(:disabled):not(:focus)": Object {
                                  "boxShadow": "#777777 0 0 0 1px",
                                },
                                "&:not(:placeholder-shown)": Object {
                                  "boxShadow": "#333333 0 0 0 1px",
                                },
                                "&:placeholder-shown": Object {
                                  "boxShadow": "#BBBBBB 0 0 0 1px",
                                },
                                "borderRadius": "4px",
                                "boxShadow": "#BBBBBB 0 0 0 1px",
                                "color": "#333333",
                                "minHeight": "24px",
                                "padding": "16px 35px 16px 16px",
                              },
                              "root": Object {
                                "&.MuiInput-underline.Mui-disabled:before": Object {
                                  "borderBottom": "none",
                                },
                                "&.MuiInput-underline:after": Object {
                                  "borderBottom": "none",
                                },
                                "&.MuiInput-underline:before": Object {
                                  "borderBottom": "none",
                                },
                                "&.MuiInput-underline:hover:not(.Mui-disabled):before": Object {
                                  "borderBottom": "none",
                                },
                                "color": "#333333",
                              },
                            },
                            "MuiInputLabel": Object {
                              "formControl": Object {
                                "marginTop": "-4px",
                                "transform": "none",
                              },
                              "shrink": Object {
                                "marginTop": "-4px",
                                "transform": "none",
                              },
                            },
                            "MuiListItem": Object {
                              "button": Object {
                                "&:hover": Object {
                                  "backgroundColor": "rgba(0, 0, 0, 0.04)",
                                },
                              },
                              "root": Object {
                                "&$selected": Object {
                                  "&:hover": Object {
                                    "backgroundColor": "rgba(0, 0, 0, 0.04)",
                                  },
                                  "backgroundColor": "rgba(255, 107, 11, 0.16)",
                                },
                                "&.Mui-disabled": Object {
                                  "opacity": 0.32,
                                },
                              },
                            },
                            "MuiTab": Object {
                              "root": Object {
                                "&$disabled": Object {
                                  "opacity": 0.24,
                                },
                              },
                              "textColorInherit": Object {
                                "&$disabled": Object {
                                  "opacity": 0.24,
                                },
                              },
                              "wrapper": Object {
                                "& > *:first-child": Object {
                                  "marginBottom": "2px !important",
                                },
                              },
                            },
                            "MuiTextField": Object {
                              "& .MuiInputLabel": Object {
                                "marginTop": "20px",
                              },
                            },
                            "MuiToolbar": Object {
                              "dense": Object {
                                "@media (min-width: 600px)": Object {
                                  "minHeight": "56px",
                                },
                                "minHeight": "56px",
                              },
                              "gutters": Object {
                                "@media (min-width: 600px)": Object {
                                  "padding": "0 16px",
                                },
                                "padding": "0 16px",
                              },
                              "regular": Object {
                                "@media (min-width: 600px)": Object {
                                  "minHeight": "56px",
                                },
                                "minHeight": "56px",
                              },
                              "root": Object {
                                "@media (min-width: 600px)": Object {
                                  "padding": "0 16px",
                                },
                                "padding": "0 16px",
                              },
                            },
                          },
                          "palette": Object {
                            "action": Object {
                              "disabled": "rgba(51, 51, 51, 0.24)",
                            },
                            "background": Object {
                              "default": "#FAFAFA",
                              "defaultContrastText": "#333333",
                              "paper": "#FFFFFF",
                              "paperContrastText": "#333333",
                            },
                            "complementary": Object {
                              "highlight": "#000000",
                              "link": "#227BBD",
                              "linkContrastText": "#FFFFFF",
                              "warning": "#FCC433",
                              "warningContrastText": "#333333",
                            },
                            "error": Object {
                              "contrastText": "#FFFFFF",
                              "main": "#E74627",
                            },
                            "primary": Object {
                              "contrastText": "#333333",
                              "dark": "#EF8426",
                              "light": "#FEFDE8",
                              "main": "#F4AB34",
                            },
                            "secondary": Object {
                              "contrastText": "#000000",
                              "dark": "#FF5808",
                              "light": "#FFF8E1",
                              "main": "#FF6B0B",
                            },
                            "success": Object {
                              "contrastText": "#FFFFFF",
                              "main": "#569A32",
                            },
                            "text": Object {
                              "disabled": "#BBBBBB",
                              "hint": "#BBBBBB",
                              "primary": "#333333",
                              "secondary": "#777777",
                            },
                          },
                          "shadows": Object {
                            "0": "none",
                            "1": "0 1px 1px 0 rgba(0, 0, 0, 0.14)",
                            "12": "0 12px 17px 0 rgba(0, 0, 0, 0.14)",
                            "16": "0 16px 24px 0 rgba(0, 0, 0, 0.14)",
                            "2": "0 2px 2px 0 rgba(0, 0, 0, 0.14)",
                            "24": "0 24px 38px 0 rgba(0, 0, 0, 0.14)",
                            "3": "0 3px 4px 0 rgba(0, 0, 0, 0.14)",
                            "4": "0 4px 5px 0 rgba(0, 0, 0, 0.14)",
                            "6": "0 6px 10px 0 rgba(0, 0, 0, 0.14)",
                            "8": "0 8px 10px 0 rgba(0, 0, 0, 0.14)",
                            "9": "0 9px 12px 0 rgba(0, 0, 0, 0.14)",
                          },
                          "shape": Object {
                            "badgeBorderRadius": 100,
                            "borderRadius": 4,
                          },
                          "sizes": Object {
                            "huge": 96,
                            "hugex": 128,
                            "hugexx": 144,
                            "hugexxx": 192,
                            "large": 64,
                            "largex": 72,
                            "largexx": 80,
                            "largexxx": 88,
                            "medium": 48,
                            "mediumx": 56,
                            "micro": 4,
                            "none": 0,
                            "semi": 32,
                            "semix": 40,
                            "small": 16,
                            "standard": 24,
                            "tiny": 8,
                            "veryhuge": 256,
                          },
                          "spacing": 8,
                          "typography": Object {
                            "body1": Object {
                              "fontSize": "1rem",
                              "fontWeight": 400,
                            },
                            "body2": Object {
                              "fontSize": "0.875rem",
                              "fontWeight": 400,
                            },
                            "button": Object {
                              "fontSize": "0.875rem",
                              "fontWeight": 600,
                            },
                            "caption": Object {
                              "fontSize": "0.75rem",
                              "fontWeight": 400,
                            },
                            "fontFamily": "\\"Roboto\\", sans-serif",
                            "fontFamilyBrand1": "\\"Helvetica Now Display\\"",
                            "fontFamilyBrand2": "\\"Helvetica Now Text\\"",
                            "fontFamilyBrand3": undefined,
                            "fontWeightBold": 700,
                            "fontWeightLight": 300,
                            "fontWeightMedium": 500,
                            "fontWeightRegular": 400,
                            "h1": Object {
                              "fontSize": "6rem",
                              "fontWeight": 300,
                            },
                            "h2": Object {
                              "fontSize": "3.75rem",
                              "fontWeight": 300,
                            },
                            "h3": Object {
                              "fontSize": "3rem",
                              "fontWeight": 400,
                            },
                            "h4": Object {
                              "fontSize": "2.125rem",
                              "fontWeight": 400,
                            },
                            "h5": Object {
                              "fontSize": "1.5rem",
                              "fontWeight": 400,
                            },
                            "h6": Object {
                              "fontSize": "1.25rem",
                              "fontWeight": 600,
                            },
                            "overline": Object {
                              "fontSize": "0.75rem",
                              "fontWeight": 400,
                            },
                            "subtitle1": Object {
                              "fontSize": "1rem",
                              "fontWeight": 400,
                            },
                            "subtitle2": Object {
                              "fontSize": "0.875rem",
                              "fontWeight": 500,
                            },
                          },
                        }
                      }
                      todayLabel="Today"
                    >
                      <Component
                        format="MMMM do"
                        helperText=""
                        inputProps={
                          Object {
                            "style": Object {
                              "boxShadow": "#569A32 0 0 0 1px",
                            },
                          }
                        }
                        inputValue="February 1st"
                        keyboardIcon={
                          <ForwardRef(WithTheme)
                            name="outlined-action-calendar"
                            size="tiny"
                          />
                        }
                        label=""
                        onChange={[Function]}
                        openPicker={[Function]}
                        required={false}
                        theme={
                          Object {
                            "avatarSizes": Object {
                              "huge": Object {
                                "fontSize": "1.5rem",
                                "size": 80,
                              },
                              "large": Object {
                                "fontSize": "1rem",
                                "size": 48,
                              },
                              "small": Object {
                                "fontSize": ".875rem",
                                "size": 32,
                              },
                              "standard": Object {
                                "fontSize": "1rem",
                                "size": 40,
                              },
                              "tiny": Object {
                                "fontSize": ".625rem",
                                "size": 24,
                              },
                            },
                            "buttonSizes": Object {
                              "large": Object {
                                "minHeight": 48,
                                "paddingBottom": 16,
                                "paddingLeft": 16,
                                "paddingRight": 16,
                                "paddingTop": 16,
                              },
                              "medium": Object {
                                "minHeight": 40,
                                "paddingBottom": 12,
                                "paddingLeft": 16,
                                "paddingRight": 16,
                                "paddingTop": 12,
                              },
                              "small": Object {
                                "minHeight": 32,
                                "paddingBottom": 8,
                                "paddingLeft": 8,
                                "paddingRight": 8,
                                "paddingTop": 8,
                              },
                            },
                            "iconSizes": Object {
                              "huge": 144,
                              "hugex": 192,
                              "hugexx": 256,
                              "large": 72,
                              "largex": 96,
                              "largexx": 128,
                              "medium": 64,
                              "micro": 16,
                              "small": 32,
                              "standard": 48,
                              "tiny": 24,
                            },
                            "overrides": Object {
                              "MuiAvatar": Object {
                                "colorDefault": Object {
                                  "color": "#333333",
                                },
                              },
                              "MuiBadge": Object {
                                "badge": Object {
                                  "padding": "0 4px",
                                },
                              },
                              "MuiButton": Object {
                                "outlinedPrimary": Object {
                                  "color": "#333333",
                                },
                                "outlinedSecondary": Object {
                                  "color": "#333333",
                                },
                                "root": Object {
                                  "fontSize": "0.875rem",
                                  "minHeight": "40px",
                                  "padding": "8px 16px",
                                },
                                "sizeLarge": Object {
                                  "fontSize": "0.875rem",
                                  "minHeight": "48px",
                                },
                                "sizeSmall": Object {
                                  "fontSize": "0.875rem",
                                  "minHeight": "32px",
                                },
                                "textPrimary": Object {
                                  "color": "#333333",
                                },
                              },
                              "MuiChip": Object {
                                "clickableColorPrimary": Object {
                                  "&:hover": Object {
                                    "backgroundColor": "#EF8426",
                                  },
                                },
                                "clickableColorSecondary": Object {
                                  "&:hover": Object {
                                    "backgroundColor": "#EF8426",
                                  },
                                },
                                "deleteIcon": Object {
                                  "&:hover": Object {
                                    "color": "#000000",
                                  },
                                  "color": "rgba(0, 0, 0, 0.8)",
                                  "fontSize": "24px",
                                  "height": "24px",
                                  "width": "24px",
                                },
                                "deleteIconColorPrimary": Object {
                                  "&:hover": Object {
                                    "color": "#FFFFFF",
                                  },
                                  "color": "rgba(255, 255, 255, 0.8)",
                                },
                                "deleteIconColorSecondary": Object {
                                  "&:hover": Object {
                                    "color": "#FFFFFF",
                                  },
                                  "color": "rgba(255, 255, 255, 0.8)",
                                },
                                "deleteIconSmall": Object {
                                  "fontSize": "16px",
                                  "height": "16px",
                                  "width": "16px",
                                },
                                "icon": Object {
                                  "fontSize": "24px",
                                },
                                "iconSmall": Object {
                                  "fontSize": "16px",
                                  "height": "16px",
                                  "marginTop": "1px",
                                  "width": "16px",
                                },
                                "outlined": Object {
                                  "borderColor": "rgba(0, 0, 0, 0.12)",
                                  "color": "#000000",
                                },
                                "outlinedPrimary": Object {
                                  "color": "#000000",
                                },
                                "outlinedSecondary": Object {
                                  "color": "#000000",
                                },
                                "root": Object {
                                  "& $avatar": Object {
                                    "backgroundColor": "rgba(0, 0, 0, 0.24)",
                                    "color": "#333333",
                                  },
                                  "&$disabled": Object {
                                    "opacity": 0.4,
                                  },
                                  "backgroundColor": "rgba(0, 0, 0, 0.12)",
                                  "color": "#333333",
                                  "fontSize": "0.875rem",
                                },
                              },
                              "MuiExpansionPanel": Object {
                                "root": Object {
                                  "&$disabled": Object {
                                    "backgroundColor": "#FFFFFF",
                                    "opacity": 0.32,
                                  },
                                  "&$expanded": Object {
                                    "borderColor": "#F4AB34",
                                  },
                                  "border": "transparent 1px solid",
                                },
                              },
                              "MuiExpansionPanelSummary": Object {
                                "root": Object {
                                  "&$disabled": Object {
                                    "opacity": 1,
                                  },
                                  "alignItems": "flex-start",
                                  "marginTop": "8px",
                                },
                              },
                              "MuiFormLabel": Object {
                                "formControl": Object {
                                  "marginTop": "-4px",
                                  "transform": "none",
                                },
                                "root": Object {
                                  "&.Mui-focused": Object {
                                    "color": "#777777",
                                    "fontSize": "0.875rem",
                                  },
                                  "fontSize": "0.875rem",
                                },
                              },
                              "MuiIconButton": Object {
                                "root": Object {
                                  "color": "#333333",
                                  "padding": "8px",
                                },
                                "sizeSmall": Object {
                                  "padding": "4px",
                                },
                              },
                              "MuiInputAdornment": Object {
                                "root": Object {
                                  "position": "absolute",
                                  "right": "0",
                                },
                              },
                              "MuiInputBase": Object {
                                "input": Object {
                                  "&.Mui-disabled": Object {
                                    "&:hover": Object {
                                      "boxShadow": "#333333 0 0 0 1px",
                                    },
                                    "opacity": 0.24,
                                  },
                                  "&:focus": Object {
                                    "boxShadow": "#F4AB34 0 0 0 2px",
                                  },
                                  "&:focus:not(:read-only)": Object {
                                    "boxShadow": "#F4AB34 0 0 0 2px",
                                  },
                                  "&:hover": Object {
                                    "boxShadow": "#777777 0 0 0 1px",
                                  },
                                  "&:hover:not(:placeholder-shown)": Object {
                                    "boxShadow": "#777777 0 0 0 1px",
                                  },
                                  "&:hover:not(:read-only):not(:disabled):not(:focus)": Object {
                                    "boxShadow": "#777777 0 0 0 1px",
                                  },
                                  "&:not(:placeholder-shown)": Object {
                                    "boxShadow": "#333333 0 0 0 1px",
                                  },
                                  "&:placeholder-shown": Object {
                                    "boxShadow": "#BBBBBB 0 0 0 1px",
                                  },
                                  "borderRadius": "4px",
                                  "boxShadow": "#BBBBBB 0 0 0 1px",
                                  "color": "#333333",
                                  "minHeight": "24px",
                                  "padding": "16px 35px 16px 16px",
                                },
                                "root": Object {
                                  "&.MuiInput-underline.Mui-disabled:before": Object {
                                    "borderBottom": "none",
                                  },
                                  "&.MuiInput-underline:after": Object {
                                    "borderBottom": "none",
                                  },
                                  "&.MuiInput-underline:before": Object {
                                    "borderBottom": "none",
                                  },
                                  "&.MuiInput-underline:hover:not(.Mui-disabled):before": Object {
                                    "borderBottom": "none",
                                  },
                                  "color": "#333333",
                                },
                              },
                              "MuiInputLabel": Object {
                                "formControl": Object {
                                  "marginTop": "-4px",
                                  "transform": "none",
                                },
                                "shrink": Object {
                                  "marginTop": "-4px",
                                  "transform": "none",
                                },
                              },
                              "MuiListItem": Object {
                                "button": Object {
                                  "&:hover": Object {
                                    "backgroundColor": "rgba(0, 0, 0, 0.04)",
                                  },
                                },
                                "root": Object {
                                  "&$selected": Object {
                                    "&:hover": Object {
                                      "backgroundColor": "rgba(0, 0, 0, 0.04)",
                                    },
                                    "backgroundColor": "rgba(255, 107, 11, 0.16)",
                                  },
                                  "&.Mui-disabled": Object {
                                    "opacity": 0.32,
                                  },
                                },
                              },
                              "MuiTab": Object {
                                "root": Object {
                                  "&$disabled": Object {
                                    "opacity": 0.24,
                                  },
                                },
                                "textColorInherit": Object {
                                  "&$disabled": Object {
                                    "opacity": 0.24,
                                  },
                                },
                                "wrapper": Object {
                                  "& > *:first-child": Object {
                                    "marginBottom": "2px !important",
                                  },
                                },
                              },
                              "MuiTextField": Object {
                                "& .MuiInputLabel": Object {
                                  "marginTop": "20px",
                                },
                              },
                              "MuiToolbar": Object {
                                "dense": Object {
                                  "@media (min-width: 600px)": Object {
                                    "minHeight": "56px",
                                  },
                                  "minHeight": "56px",
                                },
                                "gutters": Object {
                                  "@media (min-width: 600px)": Object {
                                    "padding": "0 16px",
                                  },
                                  "padding": "0 16px",
                                },
                                "regular": Object {
                                  "@media (min-width: 600px)": Object {
                                    "minHeight": "56px",
                                  },
                                  "minHeight": "56px",
                                },
                                "root": Object {
                                  "@media (min-width: 600px)": Object {
                                    "padding": "0 16px",
                                  },
                                  "padding": "0 16px",
                                },
                              },
                            },
                            "palette": Object {
                              "action": Object {
                                "disabled": "rgba(51, 51, 51, 0.24)",
                              },
                              "background": Object {
                                "default": "#FAFAFA",
                                "defaultContrastText": "#333333",
                                "paper": "#FFFFFF",
                                "paperContrastText": "#333333",
                              },
                              "complementary": Object {
                                "highlight": "#000000",
                                "link": "#227BBD",
                                "linkContrastText": "#FFFFFF",
                                "warning": "#FCC433",
                                "warningContrastText": "#333333",
                              },
                              "error": Object {
                                "contrastText": "#FFFFFF",
                                "main": "#E74627",
                              },
                              "primary": Object {
                                "contrastText": "#333333",
                                "dark": "#EF8426",
                                "light": "#FEFDE8",
                                "main": "#F4AB34",
                              },
                              "secondary": Object {
                                "contrastText": "#000000",
                                "dark": "#FF5808",
                                "light": "#FFF8E1",
                                "main": "#FF6B0B",
                              },
                              "success": Object {
                                "contrastText": "#FFFFFF",
                                "main": "#569A32",
                              },
                              "text": Object {
                                "disabled": "#BBBBBB",
                                "hint": "#BBBBBB",
                                "primary": "#333333",
                                "secondary": "#777777",
                              },
                            },
                            "shadows": Object {
                              "0": "none",
                              "1": "0 1px 1px 0 rgba(0, 0, 0, 0.14)",
                              "12": "0 12px 17px 0 rgba(0, 0, 0, 0.14)",
                              "16": "0 16px 24px 0 rgba(0, 0, 0, 0.14)",
                              "2": "0 2px 2px 0 rgba(0, 0, 0, 0.14)",
                              "24": "0 24px 38px 0 rgba(0, 0, 0, 0.14)",
                              "3": "0 3px 4px 0 rgba(0, 0, 0, 0.14)",
                              "4": "0 4px 5px 0 rgba(0, 0, 0, 0.14)",
                              "6": "0 6px 10px 0 rgba(0, 0, 0, 0.14)",
                              "8": "0 8px 10px 0 rgba(0, 0, 0, 0.14)",
                              "9": "0 9px 12px 0 rgba(0, 0, 0, 0.14)",
                            },
                            "shape": Object {
                              "badgeBorderRadius": 100,
                              "borderRadius": 4,
                            },
                            "sizes": Object {
                              "huge": 96,
                              "hugex": 128,
                              "hugexx": 144,
                              "hugexxx": 192,
                              "large": 64,
                              "largex": 72,
                              "largexx": 80,
                              "largexxx": 88,
                              "medium": 48,
                              "mediumx": 56,
                              "micro": 4,
                              "none": 0,
                              "semi": 32,
                              "semix": 40,
                              "small": 16,
                              "standard": 24,
                              "tiny": 8,
                              "veryhuge": 256,
                            },
                            "spacing": 8,
                            "typography": Object {
                              "body1": Object {
                                "fontSize": "1rem",
                                "fontWeight": 400,
                              },
                              "body2": Object {
                                "fontSize": "0.875rem",
                                "fontWeight": 400,
                              },
                              "button": Object {
                                "fontSize": "0.875rem",
                                "fontWeight": 600,
                              },
                              "caption": Object {
                                "fontSize": "0.75rem",
                                "fontWeight": 400,
                              },
                              "fontFamily": "\\"Roboto\\", sans-serif",
                              "fontFamilyBrand1": "\\"Helvetica Now Display\\"",
                              "fontFamilyBrand2": "\\"Helvetica Now Text\\"",
                              "fontFamilyBrand3": undefined,
                              "fontWeightBold": 700,
                              "fontWeightLight": 300,
                              "fontWeightMedium": 500,
                              "fontWeightRegular": 400,
                              "h1": Object {
                                "fontSize": "6rem",
                                "fontWeight": 300,
                              },
                              "h2": Object {
                                "fontSize": "3.75rem",
                                "fontWeight": 300,
                              },
                              "h3": Object {
                                "fontSize": "3rem",
                                "fontWeight": 400,
                              },
                              "h4": Object {
                                "fontSize": "2.125rem",
                                "fontWeight": 400,
                              },
                              "h5": Object {
                                "fontSize": "1.5rem",
                                "fontWeight": 400,
                              },
                              "h6": Object {
                                "fontSize": "1.25rem",
                                "fontWeight": 600,
                              },
                              "overline": Object {
                                "fontSize": "0.75rem",
                                "fontWeight": 400,
                              },
                              "subtitle1": Object {
                                "fontSize": "1rem",
                                "fontWeight": 400,
                              },
                              "subtitle2": Object {
                                "fontSize": "0.875rem",
                                "fontWeight": 500,
                              },
                            },
                          }
                        }
                        validationError=""
                      >
                        <Rifm
                          format={[Function]}
                          key="____ __"
                          onChange={[Function]}
                          refuse={/\\[\\^\\\\d\\]\\+/gi}
                          value="February 1st"
                        >
                          <WithStyles(ForwardRef(TextField))
                            InputProps={
                              Object {
                                "endAdornment": <ForwardRef(WithStyles)
                                  position="end"
                                >
                                  <ForwardRef(WithStyles)
                                    onClick={[Function]}
                                  >
                                    <ForwardRef(WithTheme)
                                      name="outlined-action-calendar"
                                      size="tiny"
                                    />
                                  </ForwardRef(WithStyles)>
                                </ForwardRef(WithStyles)>,
                              }
                            }
                            error={false}
                            helperText=""
                            inputProps={
                              Object {
                                "style": Object {
                                  "boxShadow": "#569A32 0 0 0 1px",
                                },
                              }
                            }
                            label=""
                            onChange={[Function]}
                            required={false}
                            theme={
                              Object {
                                "avatarSizes": Object {
                                  "huge": Object {
                                    "fontSize": "1.5rem",
                                    "size": 80,
                                  },
                                  "large": Object {
                                    "fontSize": "1rem",
                                    "size": 48,
                                  },
                                  "small": Object {
                                    "fontSize": ".875rem",
                                    "size": 32,
                                  },
                                  "standard": Object {
                                    "fontSize": "1rem",
                                    "size": 40,
                                  },
                                  "tiny": Object {
                                    "fontSize": ".625rem",
                                    "size": 24,
                                  },
                                },
                                "buttonSizes": Object {
                                  "large": Object {
                                    "minHeight": 48,
                                    "paddingBottom": 16,
                                    "paddingLeft": 16,
                                    "paddingRight": 16,
                                    "paddingTop": 16,
                                  },
                                  "medium": Object {
                                    "minHeight": 40,
                                    "paddingBottom": 12,
                                    "paddingLeft": 16,
                                    "paddingRight": 16,
                                    "paddingTop": 12,
                                  },
                                  "small": Object {
                                    "minHeight": 32,
                                    "paddingBottom": 8,
                                    "paddingLeft": 8,
                                    "paddingRight": 8,
                                    "paddingTop": 8,
                                  },
                                },
                                "iconSizes": Object {
                                  "huge": 144,
                                  "hugex": 192,
                                  "hugexx": 256,
                                  "large": 72,
                                  "largex": 96,
                                  "largexx": 128,
                                  "medium": 64,
                                  "micro": 16,
                                  "small": 32,
                                  "standard": 48,
                                  "tiny": 24,
                                },
                                "overrides": Object {
                                  "MuiAvatar": Object {
                                    "colorDefault": Object {
                                      "color": "#333333",
                                    },
                                  },
                                  "MuiBadge": Object {
                                    "badge": Object {
                                      "padding": "0 4px",
                                    },
                                  },
                                  "MuiButton": Object {
                                    "outlinedPrimary": Object {
                                      "color": "#333333",
                                    },
                                    "outlinedSecondary": Object {
                                      "color": "#333333",
                                    },
                                    "root": Object {
                                      "fontSize": "0.875rem",
                                      "minHeight": "40px",
                                      "padding": "8px 16px",
                                    },
                                    "sizeLarge": Object {
                                      "fontSize": "0.875rem",
                                      "minHeight": "48px",
                                    },
                                    "sizeSmall": Object {
                                      "fontSize": "0.875rem",
                                      "minHeight": "32px",
                                    },
                                    "textPrimary": Object {
                                      "color": "#333333",
                                    },
                                  },
                                  "MuiChip": Object {
                                    "clickableColorPrimary": Object {
                                      "&:hover": Object {
                                        "backgroundColor": "#EF8426",
                                      },
                                    },
                                    "clickableColorSecondary": Object {
                                      "&:hover": Object {
                                        "backgroundColor": "#EF8426",
                                      },
                                    },
                                    "deleteIcon": Object {
                                      "&:hover": Object {
                                        "color": "#000000",
                                      },
                                      "color": "rgba(0, 0, 0, 0.8)",
                                      "fontSize": "24px",
                                      "height": "24px",
                                      "width": "24px",
                                    },
                                    "deleteIconColorPrimary": Object {
                                      "&:hover": Object {
                                        "color": "#FFFFFF",
                                      },
                                      "color": "rgba(255, 255, 255, 0.8)",
                                    },
                                    "deleteIconColorSecondary": Object {
                                      "&:hover": Object {
                                        "color": "#FFFFFF",
                                      },
                                      "color": "rgba(255, 255, 255, 0.8)",
                                    },
                                    "deleteIconSmall": Object {
                                      "fontSize": "16px",
                                      "height": "16px",
                                      "width": "16px",
                                    },
                                    "icon": Object {
                                      "fontSize": "24px",
                                    },
                                    "iconSmall": Object {
                                      "fontSize": "16px",
                                      "height": "16px",
                                      "marginTop": "1px",
                                      "width": "16px",
                                    },
                                    "outlined": Object {
                                      "borderColor": "rgba(0, 0, 0, 0.12)",
                                      "color": "#000000",
                                    },
                                    "outlinedPrimary": Object {
                                      "color": "#000000",
                                    },
                                    "outlinedSecondary": Object {
                                      "color": "#000000",
                                    },
                                    "root": Object {
                                      "& $avatar": Object {
                                        "backgroundColor": "rgba(0, 0, 0, 0.24)",
                                        "color": "#333333",
                                      },
                                      "&$disabled": Object {
                                        "opacity": 0.4,
                                      },
                                      "backgroundColor": "rgba(0, 0, 0, 0.12)",
                                      "color": "#333333",
                                      "fontSize": "0.875rem",
                                    },
                                  },
                                  "MuiExpansionPanel": Object {
                                    "root": Object {
                                      "&$disabled": Object {
                                        "backgroundColor": "#FFFFFF",
                                        "opacity": 0.32,
                                      },
                                      "&$expanded": Object {
                                        "borderColor": "#F4AB34",
                                      },
                                      "border": "transparent 1px solid",
                                    },
                                  },
                                  "MuiExpansionPanelSummary": Object {
                                    "root": Object {
                                      "&$disabled": Object {
                                        "opacity": 1,
                                      },
                                      "alignItems": "flex-start",
                                      "marginTop": "8px",
                                    },
                                  },
                                  "MuiFormLabel": Object {
                                    "formControl": Object {
                                      "marginTop": "-4px",
                                      "transform": "none",
                                    },
                                    "root": Object {
                                      "&.Mui-focused": Object {
                                        "color": "#777777",
                                        "fontSize": "0.875rem",
                                      },
                                      "fontSize": "0.875rem",
                                    },
                                  },
                                  "MuiIconButton": Object {
                                    "root": Object {
                                      "color": "#333333",
                                      "padding": "8px",
                                    },
                                    "sizeSmall": Object {
                                      "padding": "4px",
                                    },
                                  },
                                  "MuiInputAdornment": Object {
                                    "root": Object {
                                      "position": "absolute",
                                      "right": "0",
                                    },
                                  },
                                  "MuiInputBase": Object {
                                    "input": Object {
                                      "&.Mui-disabled": Object {
                                        "&:hover": Object {
                                          "boxShadow": "#333333 0 0 0 1px",
                                        },
                                        "opacity": 0.24,
                                      },
                                      "&:focus": Object {
                                        "boxShadow": "#F4AB34 0 0 0 2px",
                                      },
                                      "&:focus:not(:read-only)": Object {
                                        "boxShadow": "#F4AB34 0 0 0 2px",
                                      },
                                      "&:hover": Object {
                                        "boxShadow": "#777777 0 0 0 1px",
                                      },
                                      "&:hover:not(:placeholder-shown)": Object {
                                        "boxShadow": "#777777 0 0 0 1px",
                                      },
                                      "&:hover:not(:read-only):not(:disabled):not(:focus)": Object {
                                        "boxShadow": "#777777 0 0 0 1px",
                                      },
                                      "&:not(:placeholder-shown)": Object {
                                        "boxShadow": "#333333 0 0 0 1px",
                                      },
                                      "&:placeholder-shown": Object {
                                        "boxShadow": "#BBBBBB 0 0 0 1px",
                                      },
                                      "borderRadius": "4px",
                                      "boxShadow": "#BBBBBB 0 0 0 1px",
                                      "color": "#333333",
                                      "minHeight": "24px",
                                      "padding": "16px 35px 16px 16px",
                                    },
                                    "root": Object {
                                      "&.MuiInput-underline.Mui-disabled:before": Object {
                                        "borderBottom": "none",
                                      },
                                      "&.MuiInput-underline:after": Object {
                                        "borderBottom": "none",
                                      },
                                      "&.MuiInput-underline:before": Object {
                                        "borderBottom": "none",
                                      },
                                      "&.MuiInput-underline:hover:not(.Mui-disabled):before": Object {
                                        "borderBottom": "none",
                                      },
                                      "color": "#333333",
                                    },
                                  },
                                  "MuiInputLabel": Object {
                                    "formControl": Object {
                                      "marginTop": "-4px",
                                      "transform": "none",
                                    },
                                    "shrink": Object {
                                      "marginTop": "-4px",
                                      "transform": "none",
                                    },
                                  },
                                  "MuiListItem": Object {
                                    "button": Object {
                                      "&:hover": Object {
                                        "backgroundColor": "rgba(0, 0, 0, 0.04)",
                                      },
                                    },
                                    "root": Object {
                                      "&$selected": Object {
                                        "&:hover": Object {
                                          "backgroundColor": "rgba(0, 0, 0, 0.04)",
                                        },
                                        "backgroundColor": "rgba(255, 107, 11, 0.16)",
                                      },
                                      "&.Mui-disabled": Object {
                                        "opacity": 0.32,
                                      },
                                    },
                                  },
                                  "MuiTab": Object {
                                    "root": Object {
                                      "&$disabled": Object {
                                        "opacity": 0.24,
                                      },
                                    },
                                    "textColorInherit": Object {
                                      "&$disabled": Object {
                                        "opacity": 0.24,
                                      },
                                    },
                                    "wrapper": Object {
                                      "& > *:first-child": Object {
                                        "marginBottom": "2px !important",
                                      },
                                    },
                                  },
                                  "MuiTextField": Object {
                                    "& .MuiInputLabel": Object {
                                      "marginTop": "20px",
                                    },
                                  },
                                  "MuiToolbar": Object {
                                    "dense": Object {
                                      "@media (min-width: 600px)": Object {
                                        "minHeight": "56px",
                                      },
                                      "minHeight": "56px",
                                    },
                                    "gutters": Object {
                                      "@media (min-width: 600px)": Object {
                                        "padding": "0 16px",
                                      },
                                      "padding": "0 16px",
                                    },
                                    "regular": Object {
                                      "@media (min-width: 600px)": Object {
                                        "minHeight": "56px",
                                      },
                                      "minHeight": "56px",
                                    },
                                    "root": Object {
                                      "@media (min-width: 600px)": Object {
                                        "padding": "0 16px",
                                      },
                                      "padding": "0 16px",
                                    },
                                  },
                                },
                                "palette": Object {
                                  "action": Object {
                                    "disabled": "rgba(51, 51, 51, 0.24)",
                                  },
                                  "background": Object {
                                    "default": "#FAFAFA",
                                    "defaultContrastText": "#333333",
                                    "paper": "#FFFFFF",
                                    "paperContrastText": "#333333",
                                  },
                                  "complementary": Object {
                                    "highlight": "#000000",
                                    "link": "#227BBD",
                                    "linkContrastText": "#FFFFFF",
                                    "warning": "#FCC433",
                                    "warningContrastText": "#333333",
                                  },
                                  "error": Object {
                                    "contrastText": "#FFFFFF",
                                    "main": "#E74627",
                                  },
                                  "primary": Object {
                                    "contrastText": "#333333",
                                    "dark": "#EF8426",
                                    "light": "#FEFDE8",
                                    "main": "#F4AB34",
                                  },
                                  "secondary": Object {
                                    "contrastText": "#000000",
                                    "dark": "#FF5808",
                                    "light": "#FFF8E1",
                                    "main": "#FF6B0B",
                                  },
                                  "success": Object {
                                    "contrastText": "#FFFFFF",
                                    "main": "#569A32",
                                  },
                                  "text": Object {
                                    "disabled": "#BBBBBB",
                                    "hint": "#BBBBBB",
                                    "primary": "#333333",
                                    "secondary": "#777777",
                                  },
                                },
                                "shadows": Object {
                                  "0": "none",
                                  "1": "0 1px 1px 0 rgba(0, 0, 0, 0.14)",
                                  "12": "0 12px 17px 0 rgba(0, 0, 0, 0.14)",
                                  "16": "0 16px 24px 0 rgba(0, 0, 0, 0.14)",
                                  "2": "0 2px 2px 0 rgba(0, 0, 0, 0.14)",
                                  "24": "0 24px 38px 0 rgba(0, 0, 0, 0.14)",
                                  "3": "0 3px 4px 0 rgba(0, 0, 0, 0.14)",
                                  "4": "0 4px 5px 0 rgba(0, 0, 0, 0.14)",
                                  "6": "0 6px 10px 0 rgba(0, 0, 0, 0.14)",
                                  "8": "0 8px 10px 0 rgba(0, 0, 0, 0.14)",
                                  "9": "0 9px 12px 0 rgba(0, 0, 0, 0.14)",
                                },
                                "shape": Object {
                                  "badgeBorderRadius": 100,
                                  "borderRadius": 4,
                                },
                                "sizes": Object {
                                  "huge": 96,
                                  "hugex": 128,
                                  "hugexx": 144,
                                  "hugexxx": 192,
                                  "large": 64,
                                  "largex": 72,
                                  "largexx": 80,
                                  "largexxx": 88,
                                  "medium": 48,
                                  "mediumx": 56,
                                  "micro": 4,
                                  "none": 0,
                                  "semi": 32,
                                  "semix": 40,
                                  "small": 16,
                                  "standard": 24,
                                  "tiny": 8,
                                  "veryhuge": 256,
                                },
                                "spacing": 8,
                                "typography": Object {
                                  "body1": Object {
                                    "fontSize": "1rem",
                                    "fontWeight": 400,
                                  },
                                  "body2": Object {
                                    "fontSize": "0.875rem",
                                    "fontWeight": 400,
                                  },
                                  "button": Object {
                                    "fontSize": "0.875rem",
                                    "fontWeight": 600,
                                  },
                                  "caption": Object {
                                    "fontSize": "0.75rem",
                                    "fontWeight": 400,
                                  },
                                  "fontFamily": "\\"Roboto\\", sans-serif",
                                  "fontFamilyBrand1": "\\"Helvetica Now Display\\"",
                                  "fontFamilyBrand2": "\\"Helvetica Now Text\\"",
                                  "fontFamilyBrand3": undefined,
                                  "fontWeightBold": 700,
                                  "fontWeightLight": 300,
                                  "fontWeightMedium": 500,
                                  "fontWeightRegular": 400,
                                  "h1": Object {
                                    "fontSize": "6rem",
                                    "fontWeight": 300,
                                  },
                                  "h2": Object {
                                    "fontSize": "3.75rem",
                                    "fontWeight": 300,
                                  },
                                  "h3": Object {
                                    "fontSize": "3rem",
                                    "fontWeight": 400,
                                  },
                                  "h4": Object {
                                    "fontSize": "2.125rem",
                                    "fontWeight": 400,
                                  },
                                  "h5": Object {
                                    "fontSize": "1.5rem",
                                    "fontWeight": 400,
                                  },
                                  "h6": Object {
                                    "fontSize": "1.25rem",
                                    "fontWeight": 600,
                                  },
                                  "overline": Object {
                                    "fontSize": "0.75rem",
                                    "fontWeight": 400,
                                  },
                                  "subtitle1": Object {
                                    "fontSize": "1rem",
                                    "fontWeight": 400,
                                  },
                                  "subtitle2": Object {
                                    "fontSize": "0.875rem",
                                    "fontWeight": 500,
                                  },
                                },
                              }
                            }
                            value="February 1st"
                          >
                            <ForwardRef(TextField)
                              InputProps={
                                Object {
                                  "endAdornment": <ForwardRef(WithStyles)
                                    position="end"
                                  >
                                    <ForwardRef(WithStyles)
                                      onClick={[Function]}
                                    >
                                      <ForwardRef(WithTheme)
                                        name="outlined-action-calendar"
                                        size="tiny"
                                      />
                                    </ForwardRef(WithStyles)>
                                  </ForwardRef(WithStyles)>,
                                }
                              }
                              classes={
                                Object {
                                  "root": "MuiTextField-root",
                                }
                              }
                              error={false}
                              helperText=""
                              inputProps={
                                Object {
                                  "style": Object {
                                    "boxShadow": "#569A32 0 0 0 1px",
                                  },
                                }
                              }
                              label=""
                              onChange={[Function]}
                              required={false}
                              theme={
                                Object {
                                  "avatarSizes": Object {
                                    "huge": Object {
                                      "fontSize": "1.5rem",
                                      "size": 80,
                                    },
                                    "large": Object {
                                      "fontSize": "1rem",
                                      "size": 48,
                                    },
                                    "small": Object {
                                      "fontSize": ".875rem",
                                      "size": 32,
                                    },
                                    "standard": Object {
                                      "fontSize": "1rem",
                                      "size": 40,
                                    },
                                    "tiny": Object {
                                      "fontSize": ".625rem",
                                      "size": 24,
                                    },
                                  },
                                  "buttonSizes": Object {
                                    "large": Object {
                                      "minHeight": 48,
                                      "paddingBottom": 16,
                                      "paddingLeft": 16,
                                      "paddingRight": 16,
                                      "paddingTop": 16,
                                    },
                                    "medium": Object {
                                      "minHeight": 40,
                                      "paddingBottom": 12,
                                      "paddingLeft": 16,
                                      "paddingRight": 16,
                                      "paddingTop": 12,
                                    },
                                    "small": Object {
                                      "minHeight": 32,
                                      "paddingBottom": 8,
                                      "paddingLeft": 8,
                                      "paddingRight": 8,
                                      "paddingTop": 8,
                                    },
                                  },
                                  "iconSizes": Object {
                                    "huge": 144,
                                    "hugex": 192,
                                    "hugexx": 256,
                                    "large": 72,
                                    "largex": 96,
                                    "largexx": 128,
                                    "medium": 64,
                                    "micro": 16,
                                    "small": 32,
                                    "standard": 48,
                                    "tiny": 24,
                                  },
                                  "overrides": Object {
                                    "MuiAvatar": Object {
                                      "colorDefault": Object {
                                        "color": "#333333",
                                      },
                                    },
                                    "MuiBadge": Object {
                                      "badge": Object {
                                        "padding": "0 4px",
                                      },
                                    },
                                    "MuiButton": Object {
                                      "outlinedPrimary": Object {
                                        "color": "#333333",
                                      },
                                      "outlinedSecondary": Object {
                                        "color": "#333333",
                                      },
                                      "root": Object {
                                        "fontSize": "0.875rem",
                                        "minHeight": "40px",
                                        "padding": "8px 16px",
                                      },
                                      "sizeLarge": Object {
                                        "fontSize": "0.875rem",
                                        "minHeight": "48px",
                                      },
                                      "sizeSmall": Object {
                                        "fontSize": "0.875rem",
                                        "minHeight": "32px",
                                      },
                                      "textPrimary": Object {
                                        "color": "#333333",
                                      },
                                    },
                                    "MuiChip": Object {
                                      "clickableColorPrimary": Object {
                                        "&:hover": Object {
                                          "backgroundColor": "#EF8426",
                                        },
                                      },
                                      "clickableColorSecondary": Object {
                                        "&:hover": Object {
                                          "backgroundColor": "#EF8426",
                                        },
                                      },
                                      "deleteIcon": Object {
                                        "&:hover": Object {
                                          "color": "#000000",
                                        },
                                        "color": "rgba(0, 0, 0, 0.8)",
                                        "fontSize": "24px",
                                        "height": "24px",
                                        "width": "24px",
                                      },
                                      "deleteIconColorPrimary": Object {
                                        "&:hover": Object {
                                          "color": "#FFFFFF",
                                        },
                                        "color": "rgba(255, 255, 255, 0.8)",
                                      },
                                      "deleteIconColorSecondary": Object {
                                        "&:hover": Object {
                                          "color": "#FFFFFF",
                                        },
                                        "color": "rgba(255, 255, 255, 0.8)",
                                      },
                                      "deleteIconSmall": Object {
                                        "fontSize": "16px",
                                        "height": "16px",
                                        "width": "16px",
                                      },
                                      "icon": Object {
                                        "fontSize": "24px",
                                      },
                                      "iconSmall": Object {
                                        "fontSize": "16px",
                                        "height": "16px",
                                        "marginTop": "1px",
                                        "width": "16px",
                                      },
                                      "outlined": Object {
                                        "borderColor": "rgba(0, 0, 0, 0.12)",
                                        "color": "#000000",
                                      },
                                      "outlinedPrimary": Object {
                                        "color": "#000000",
                                      },
                                      "outlinedSecondary": Object {
                                        "color": "#000000",
                                      },
                                      "root": Object {
                                        "& $avatar": Object {
                                          "backgroundColor": "rgba(0, 0, 0, 0.24)",
                                          "color": "#333333",
                                        },
                                        "&$disabled": Object {
                                          "opacity": 0.4,
                                        },
                                        "backgroundColor": "rgba(0, 0, 0, 0.12)",
                                        "color": "#333333",
                                        "fontSize": "0.875rem",
                                      },
                                    },
                                    "MuiExpansionPanel": Object {
                                      "root": Object {
                                        "&$disabled": Object {
                                          "backgroundColor": "#FFFFFF",
                                          "opacity": 0.32,
                                        },
                                        "&$expanded": Object {
                                          "borderColor": "#F4AB34",
                                        },
                                        "border": "transparent 1px solid",
                                      },
                                    },
                                    "MuiExpansionPanelSummary": Object {
                                      "root": Object {
                                        "&$disabled": Object {
                                          "opacity": 1,
                                        },
                                        "alignItems": "flex-start",
                                        "marginTop": "8px",
                                      },
                                    },
                                    "MuiFormLabel": Object {
                                      "formControl": Object {
                                        "marginTop": "-4px",
                                        "transform": "none",
                                      },
                                      "root": Object {
                                        "&.Mui-focused": Object {
                                          "color": "#777777",
                                          "fontSize": "0.875rem",
                                        },
                                        "fontSize": "0.875rem",
                                      },
                                    },
                                    "MuiIconButton": Object {
                                      "root": Object {
                                        "color": "#333333",
                                        "padding": "8px",
                                      },
                                      "sizeSmall": Object {
                                        "padding": "4px",
                                      },
                                    },
                                    "MuiInputAdornment": Object {
                                      "root": Object {
                                        "position": "absolute",
                                        "right": "0",
                                      },
                                    },
                                    "MuiInputBase": Object {
                                      "input": Object {
                                        "&.Mui-disabled": Object {
                                          "&:hover": Object {
                                            "boxShadow": "#333333 0 0 0 1px",
                                          },
                                          "opacity": 0.24,
                                        },
                                        "&:focus": Object {
                                          "boxShadow": "#F4AB34 0 0 0 2px",
                                        },
                                        "&:focus:not(:read-only)": Object {
                                          "boxShadow": "#F4AB34 0 0 0 2px",
                                        },
                                        "&:hover": Object {
                                          "boxShadow": "#777777 0 0 0 1px",
                                        },
                                        "&:hover:not(:placeholder-shown)": Object {
                                          "boxShadow": "#777777 0 0 0 1px",
                                        },
                                        "&:hover:not(:read-only):not(:disabled):not(:focus)": Object {
                                          "boxShadow": "#777777 0 0 0 1px",
                                        },
                                        "&:not(:placeholder-shown)": Object {
                                          "boxShadow": "#333333 0 0 0 1px",
                                        },
                                        "&:placeholder-shown": Object {
                                          "boxShadow": "#BBBBBB 0 0 0 1px",
                                        },
                                        "borderRadius": "4px",
                                        "boxShadow": "#BBBBBB 0 0 0 1px",
                                        "color": "#333333",
                                        "minHeight": "24px",
                                        "padding": "16px 35px 16px 16px",
                                      },
                                      "root": Object {
                                        "&.MuiInput-underline.Mui-disabled:before": Object {
                                          "borderBottom": "none",
                                        },
                                        "&.MuiInput-underline:after": Object {
                                          "borderBottom": "none",
                                        },
                                        "&.MuiInput-underline:before": Object {
                                          "borderBottom": "none",
                                        },
                                        "&.MuiInput-underline:hover:not(.Mui-disabled):before": Object {
                                          "borderBottom": "none",
                                        },
                                        "color": "#333333",
                                      },
                                    },
                                    "MuiInputLabel": Object {
                                      "formControl": Object {
                                        "marginTop": "-4px",
                                        "transform": "none",
                                      },
                                      "shrink": Object {
                                        "marginTop": "-4px",
                                        "transform": "none",
                                      },
                                    },
                                    "MuiListItem": Object {
                                      "button": Object {
                                        "&:hover": Object {
                                          "backgroundColor": "rgba(0, 0, 0, 0.04)",
                                        },
                                      },
                                      "root": Object {
                                        "&$selected": Object {
                                          "&:hover": Object {
                                            "backgroundColor": "rgba(0, 0, 0, 0.04)",
                                          },
                                          "backgroundColor": "rgba(255, 107, 11, 0.16)",
                                        },
                                        "&.Mui-disabled": Object {
                                          "opacity": 0.32,
                                        },
                                      },
                                    },
                                    "MuiTab": Object {
                                      "root": Object {
                                        "&$disabled": Object {
                                          "opacity": 0.24,
                                        },
                                      },
                                      "textColorInherit": Object {
                                        "&$disabled": Object {
                                          "opacity": 0.24,
                                        },
                                      },
                                      "wrapper": Object {
                                        "& > *:first-child": Object {
                                          "marginBottom": "2px !important",
                                        },
                                      },
                                    },
                                    "MuiTextField": Object {
                                      "& .MuiInputLabel": Object {
                                        "marginTop": "20px",
                                      },
                                    },
                                    "MuiToolbar": Object {
                                      "dense": Object {
                                        "@media (min-width: 600px)": Object {
                                          "minHeight": "56px",
                                        },
                                        "minHeight": "56px",
                                      },
                                      "gutters": Object {
                                        "@media (min-width: 600px)": Object {
                                          "padding": "0 16px",
                                        },
                                        "padding": "0 16px",
                                      },
                                      "regular": Object {
                                        "@media (min-width: 600px)": Object {
                                          "minHeight": "56px",
                                        },
                                        "minHeight": "56px",
                                      },
                                      "root": Object {
                                        "@media (min-width: 600px)": Object {
                                          "padding": "0 16px",
                                        },
                                        "padding": "0 16px",
                                      },
                                    },
                                  },
                                  "palette": Object {
                                    "action": Object {
                                      "disabled": "rgba(51, 51, 51, 0.24)",
                                    },
                                    "background": Object {
                                      "default": "#FAFAFA",
                                      "defaultContrastText": "#333333",
                                      "paper": "#FFFFFF",
                                      "paperContrastText": "#333333",
                                    },
                                    "complementary": Object {
                                      "highlight": "#000000",
                                      "link": "#227BBD",
                                      "linkContrastText": "#FFFFFF",
                                      "warning": "#FCC433",
                                      "warningContrastText": "#333333",
                                    },
                                    "error": Object {
                                      "contrastText": "#FFFFFF",
                                      "main": "#E74627",
                                    },
                                    "primary": Object {
                                      "contrastText": "#333333",
                                      "dark": "#EF8426",
                                      "light": "#FEFDE8",
                                      "main": "#F4AB34",
                                    },
                                    "secondary": Object {
                                      "contrastText": "#000000",
                                      "dark": "#FF5808",
                                      "light": "#FFF8E1",
                                      "main": "#FF6B0B",
                                    },
                                    "success": Object {
                                      "contrastText": "#FFFFFF",
                                      "main": "#569A32",
                                    },
                                    "text": Object {
                                      "disabled": "#BBBBBB",
                                      "hint": "#BBBBBB",
                                      "primary": "#333333",
                                      "secondary": "#777777",
                                    },
                                  },
                                  "shadows": Object {
                                    "0": "none",
                                    "1": "0 1px 1px 0 rgba(0, 0, 0, 0.14)",
                                    "12": "0 12px 17px 0 rgba(0, 0, 0, 0.14)",
                                    "16": "0 16px 24px 0 rgba(0, 0, 0, 0.14)",
                                    "2": "0 2px 2px 0 rgba(0, 0, 0, 0.14)",
                                    "24": "0 24px 38px 0 rgba(0, 0, 0, 0.14)",
                                    "3": "0 3px 4px 0 rgba(0, 0, 0, 0.14)",
                                    "4": "0 4px 5px 0 rgba(0, 0, 0, 0.14)",
                                    "6": "0 6px 10px 0 rgba(0, 0, 0, 0.14)",
                                    "8": "0 8px 10px 0 rgba(0, 0, 0, 0.14)",
                                    "9": "0 9px 12px 0 rgba(0, 0, 0, 0.14)",
                                  },
                                  "shape": Object {
                                    "badgeBorderRadius": 100,
                                    "borderRadius": 4,
                                  },
                                  "sizes": Object {
                                    "huge": 96,
                                    "hugex": 128,
                                    "hugexx": 144,
                                    "hugexxx": 192,
                                    "large": 64,
                                    "largex": 72,
                                    "largexx": 80,
                                    "largexxx": 88,
                                    "medium": 48,
                                    "mediumx": 56,
                                    "micro": 4,
                                    "none": 0,
                                    "semi": 32,
                                    "semix": 40,
                                    "small": 16,
                                    "standard": 24,
                                    "tiny": 8,
                                    "veryhuge": 256,
                                  },
                                  "spacing": 8,
                                  "typography": Object {
                                    "body1": Object {
                                      "fontSize": "1rem",
                                      "fontWeight": 400,
                                    },
                                    "body2": Object {
                                      "fontSize": "0.875rem",
                                      "fontWeight": 400,
                                    },
                                    "button": Object {
                                      "fontSize": "0.875rem",
                                      "fontWeight": 600,
                                    },
                                    "caption": Object {
                                      "fontSize": "0.75rem",
                                      "fontWeight": 400,
                                    },
                                    "fontFamily": "\\"Roboto\\", sans-serif",
                                    "fontFamilyBrand1": "\\"Helvetica Now Display\\"",
                                    "fontFamilyBrand2": "\\"Helvetica Now Text\\"",
                                    "fontFamilyBrand3": undefined,
                                    "fontWeightBold": 700,
                                    "fontWeightLight": 300,
                                    "fontWeightMedium": 500,
                                    "fontWeightRegular": 400,
                                    "h1": Object {
                                      "fontSize": "6rem",
                                      "fontWeight": 300,
                                    },
                                    "h2": Object {
                                      "fontSize": "3.75rem",
                                      "fontWeight": 300,
                                    },
                                    "h3": Object {
                                      "fontSize": "3rem",
                                      "fontWeight": 400,
                                    },
                                    "h4": Object {
                                      "fontSize": "2.125rem",
                                      "fontWeight": 400,
                                    },
                                    "h5": Object {
                                      "fontSize": "1.5rem",
                                      "fontWeight": 400,
                                    },
                                    "h6": Object {
                                      "fontSize": "1.25rem",
                                      "fontWeight": 600,
                                    },
                                    "overline": Object {
                                      "fontSize": "0.75rem",
                                      "fontWeight": 400,
                                    },
                                    "subtitle1": Object {
                                      "fontSize": "1rem",
                                      "fontWeight": 400,
                                    },
                                    "subtitle2": Object {
                                      "fontSize": "0.875rem",
                                      "fontWeight": 500,
                                    },
                                  },
                                }
                              }
                              value="February 1st"
                            >
                              <WithStyles(ForwardRef(FormControl))
                                className="MuiTextField-root"
                                color="primary"
                                disabled={false}
                                error={false}
                                fullWidth={false}
                                required={false}
                                theme={
                                  Object {
                                    "avatarSizes": Object {
                                      "huge": Object {
                                        "fontSize": "1.5rem",
                                        "size": 80,
                                      },
                                      "large": Object {
                                        "fontSize": "1rem",
                                        "size": 48,
                                      },
                                      "small": Object {
                                        "fontSize": ".875rem",
                                        "size": 32,
                                      },
                                      "standard": Object {
                                        "fontSize": "1rem",
                                        "size": 40,
                                      },
                                      "tiny": Object {
                                        "fontSize": ".625rem",
                                        "size": 24,
                                      },
                                    },
                                    "buttonSizes": Object {
                                      "large": Object {
                                        "minHeight": 48,
                                        "paddingBottom": 16,
                                        "paddingLeft": 16,
                                        "paddingRight": 16,
                                        "paddingTop": 16,
                                      },
                                      "medium": Object {
                                        "minHeight": 40,
                                        "paddingBottom": 12,
                                        "paddingLeft": 16,
                                        "paddingRight": 16,
                                        "paddingTop": 12,
                                      },
                                      "small": Object {
                                        "minHeight": 32,
                                        "paddingBottom": 8,
                                        "paddingLeft": 8,
                                        "paddingRight": 8,
                                        "paddingTop": 8,
                                      },
                                    },
                                    "iconSizes": Object {
                                      "huge": 144,
                                      "hugex": 192,
                                      "hugexx": 256,
                                      "large": 72,
                                      "largex": 96,
                                      "largexx": 128,
                                      "medium": 64,
                                      "micro": 16,
                                      "small": 32,
                                      "standard": 48,
                                      "tiny": 24,
                                    },
                                    "overrides": Object {
                                      "MuiAvatar": Object {
                                        "colorDefault": Object {
                                          "color": "#333333",
                                        },
                                      },
                                      "MuiBadge": Object {
                                        "badge": Object {
                                          "padding": "0 4px",
                                        },
                                      },
                                      "MuiButton": Object {
                                        "outlinedPrimary": Object {
                                          "color": "#333333",
                                        },
                                        "outlinedSecondary": Object {
                                          "color": "#333333",
                                        },
                                        "root": Object {
                                          "fontSize": "0.875rem",
                                          "minHeight": "40px",
                                          "padding": "8px 16px",
                                        },
                                        "sizeLarge": Object {
                                          "fontSize": "0.875rem",
                                          "minHeight": "48px",
                                        },
                                        "sizeSmall": Object {
                                          "fontSize": "0.875rem",
                                          "minHeight": "32px",
                                        },
                                        "textPrimary": Object {
                                          "color": "#333333",
                                        },
                                      },
                                      "MuiChip": Object {
                                        "clickableColorPrimary": Object {
                                          "&:hover": Object {
                                            "backgroundColor": "#EF8426",
                                          },
                                        },
                                        "clickableColorSecondary": Object {
                                          "&:hover": Object {
                                            "backgroundColor": "#EF8426",
                                          },
                                        },
                                        "deleteIcon": Object {
                                          "&:hover": Object {
                                            "color": "#000000",
                                          },
                                          "color": "rgba(0, 0, 0, 0.8)",
                                          "fontSize": "24px",
                                          "height": "24px",
                                          "width": "24px",
                                        },
                                        "deleteIconColorPrimary": Object {
                                          "&:hover": Object {
                                            "color": "#FFFFFF",
                                          },
                                          "color": "rgba(255, 255, 255, 0.8)",
                                        },
                                        "deleteIconColorSecondary": Object {
                                          "&:hover": Object {
                                            "color": "#FFFFFF",
                                          },
                                          "color": "rgba(255, 255, 255, 0.8)",
                                        },
                                        "deleteIconSmall": Object {
                                          "fontSize": "16px",
                                          "height": "16px",
                                          "width": "16px",
                                        },
                                        "icon": Object {
                                          "fontSize": "24px",
                                        },
                                        "iconSmall": Object {
                                          "fontSize": "16px",
                                          "height": "16px",
                                          "marginTop": "1px",
                                          "width": "16px",
                                        },
                                        "outlined": Object {
                                          "borderColor": "rgba(0, 0, 0, 0.12)",
                                          "color": "#000000",
                                        },
                                        "outlinedPrimary": Object {
                                          "color": "#000000",
                                        },
                                        "outlinedSecondary": Object {
                                          "color": "#000000",
                                        },
                                        "root": Object {
                                          "& $avatar": Object {
                                            "backgroundColor": "rgba(0, 0, 0, 0.24)",
                                            "color": "#333333",
                                          },
                                          "&$disabled": Object {
                                            "opacity": 0.4,
                                          },
                                          "backgroundColor": "rgba(0, 0, 0, 0.12)",
                                          "color": "#333333",
                                          "fontSize": "0.875rem",
                                        },
                                      },
                                      "MuiExpansionPanel": Object {
                                        "root": Object {
                                          "&$disabled": Object {
                                            "backgroundColor": "#FFFFFF",
                                            "opacity": 0.32,
                                          },
                                          "&$expanded": Object {
                                            "borderColor": "#F4AB34",
                                          },
                                          "border": "transparent 1px solid",
                                        },
                                      },
                                      "MuiExpansionPanelSummary": Object {
                                        "root": Object {
                                          "&$disabled": Object {
                                            "opacity": 1,
                                          },
                                          "alignItems": "flex-start",
                                          "marginTop": "8px",
                                        },
                                      },
                                      "MuiFormLabel": Object {
                                        "formControl": Object {
                                          "marginTop": "-4px",
                                          "transform": "none",
                                        },
                                        "root": Object {
                                          "&.Mui-focused": Object {
                                            "color": "#777777",
                                            "fontSize": "0.875rem",
                                          },
                                          "fontSize": "0.875rem",
                                        },
                                      },
                                      "MuiIconButton": Object {
                                        "root": Object {
                                          "color": "#333333",
                                          "padding": "8px",
                                        },
                                        "sizeSmall": Object {
                                          "padding": "4px",
                                        },
                                      },
                                      "MuiInputAdornment": Object {
                                        "root": Object {
                                          "position": "absolute",
                                          "right": "0",
                                        },
                                      },
                                      "MuiInputBase": Object {
                                        "input": Object {
                                          "&.Mui-disabled": Object {
                                            "&:hover": Object {
                                              "boxShadow": "#333333 0 0 0 1px",
                                            },
                                            "opacity": 0.24,
                                          },
                                          "&:focus": Object {
                                            "boxShadow": "#F4AB34 0 0 0 2px",
                                          },
                                          "&:focus:not(:read-only)": Object {
                                            "boxShadow": "#F4AB34 0 0 0 2px",
                                          },
                                          "&:hover": Object {
                                            "boxShadow": "#777777 0 0 0 1px",
                                          },
                                          "&:hover:not(:placeholder-shown)": Object {
                                            "boxShadow": "#777777 0 0 0 1px",
                                          },
                                          "&:hover:not(:read-only):not(:disabled):not(:focus)": Object {
                                            "boxShadow": "#777777 0 0 0 1px",
                                          },
                                          "&:not(:placeholder-shown)": Object {
                                            "boxShadow": "#333333 0 0 0 1px",
                                          },
                                          "&:placeholder-shown": Object {
                                            "boxShadow": "#BBBBBB 0 0 0 1px",
                                          },
                                          "borderRadius": "4px",
                                          "boxShadow": "#BBBBBB 0 0 0 1px",
                                          "color": "#333333",
                                          "minHeight": "24px",
                                          "padding": "16px 35px 16px 16px",
                                        },
                                        "root": Object {
                                          "&.MuiInput-underline.Mui-disabled:before": Object {
                                            "borderBottom": "none",
                                          },
                                          "&.MuiInput-underline:after": Object {
                                            "borderBottom": "none",
                                          },
                                          "&.MuiInput-underline:before": Object {
                                            "borderBottom": "none",
                                          },
                                          "&.MuiInput-underline:hover:not(.Mui-disabled):before": Object {
                                            "borderBottom": "none",
                                          },
                                          "color": "#333333",
                                        },
                                      },
                                      "MuiInputLabel": Object {
                                        "formControl": Object {
                                          "marginTop": "-4px",
                                          "transform": "none",
                                        },
                                        "shrink": Object {
                                          "marginTop": "-4px",
                                          "transform": "none",
                                        },
                                      },
                                      "MuiListItem": Object {
                                        "button": Object {
                                          "&:hover": Object {
                                            "backgroundColor": "rgba(0, 0, 0, 0.04)",
                                          },
                                        },
                                        "root": Object {
                                          "&$selected": Object {
                                            "&:hover": Object {
                                              "backgroundColor": "rgba(0, 0, 0, 0.04)",
                                            },
                                            "backgroundColor": "rgba(255, 107, 11, 0.16)",
                                          },
                                          "&.Mui-disabled": Object {
                                            "opacity": 0.32,
                                          },
                                        },
                                      },
                                      "MuiTab": Object {
                                        "root": Object {
                                          "&$disabled": Object {
                                            "opacity": 0.24,
                                          },
                                        },
                                        "textColorInherit": Object {
                                          "&$disabled": Object {
                                            "opacity": 0.24,
                                          },
                                        },
                                        "wrapper": Object {
                                          "& > *:first-child": Object {
                                            "marginBottom": "2px !important",
                                          },
                                        },
                                      },
                                      "MuiTextField": Object {
                                        "& .MuiInputLabel": Object {
                                          "marginTop": "20px",
                                        },
                                      },
                                      "MuiToolbar": Object {
                                        "dense": Object {
                                          "@media (min-width: 600px)": Object {
                                            "minHeight": "56px",
                                          },
                                          "minHeight": "56px",
                                        },
                                        "gutters": Object {
                                          "@media (min-width: 600px)": Object {
                                            "padding": "0 16px",
                                          },
                                          "padding": "0 16px",
                                        },
                                        "regular": Object {
                                          "@media (min-width: 600px)": Object {
                                            "minHeight": "56px",
                                          },
                                          "minHeight": "56px",
                                        },
                                        "root": Object {
                                          "@media (min-width: 600px)": Object {
                                            "padding": "0 16px",
                                          },
                                          "padding": "0 16px",
                                        },
                                      },
                                    },
                                    "palette": Object {
                                      "action": Object {
                                        "disabled": "rgba(51, 51, 51, 0.24)",
                                      },
                                      "background": Object {
                                        "default": "#FAFAFA",
                                        "defaultContrastText": "#333333",
                                        "paper": "#FFFFFF",
                                        "paperContrastText": "#333333",
                                      },
                                      "complementary": Object {
                                        "highlight": "#000000",
                                        "link": "#227BBD",
                                        "linkContrastText": "#FFFFFF",
                                        "warning": "#FCC433",
                                        "warningContrastText": "#333333",
                                      },
                                      "error": Object {
                                        "contrastText": "#FFFFFF",
                                        "main": "#E74627",
                                      },
                                      "primary": Object {
                                        "contrastText": "#333333",
                                        "dark": "#EF8426",
                                        "light": "#FEFDE8",
                                        "main": "#F4AB34",
                                      },
                                      "secondary": Object {
                                        "contrastText": "#000000",
                                        "dark": "#FF5808",
                                        "light": "#FFF8E1",
                                        "main": "#FF6B0B",
                                      },
                                      "success": Object {
                                        "contrastText": "#FFFFFF",
                                        "main": "#569A32",
                                      },
                                      "text": Object {
                                        "disabled": "#BBBBBB",
                                        "hint": "#BBBBBB",
                                        "primary": "#333333",
                                        "secondary": "#777777",
                                      },
                                    },
                                    "shadows": Object {
                                      "0": "none",
                                      "1": "0 1px 1px 0 rgba(0, 0, 0, 0.14)",
                                      "12": "0 12px 17px 0 rgba(0, 0, 0, 0.14)",
                                      "16": "0 16px 24px 0 rgba(0, 0, 0, 0.14)",
                                      "2": "0 2px 2px 0 rgba(0, 0, 0, 0.14)",
                                      "24": "0 24px 38px 0 rgba(0, 0, 0, 0.14)",
                                      "3": "0 3px 4px 0 rgba(0, 0, 0, 0.14)",
                                      "4": "0 4px 5px 0 rgba(0, 0, 0, 0.14)",
                                      "6": "0 6px 10px 0 rgba(0, 0, 0, 0.14)",
                                      "8": "0 8px 10px 0 rgba(0, 0, 0, 0.14)",
                                      "9": "0 9px 12px 0 rgba(0, 0, 0, 0.14)",
                                    },
                                    "shape": Object {
                                      "badgeBorderRadius": 100,
                                      "borderRadius": 4,
                                    },
                                    "sizes": Object {
                                      "huge": 96,
                                      "hugex": 128,
                                      "hugexx": 144,
                                      "hugexxx": 192,
                                      "large": 64,
                                      "largex": 72,
                                      "largexx": 80,
                                      "largexxx": 88,
                                      "medium": 48,
                                      "mediumx": 56,
                                      "micro": 4,
                                      "none": 0,
                                      "semi": 32,
                                      "semix": 40,
                                      "small": 16,
                                      "standard": 24,
                                      "tiny": 8,
                                      "veryhuge": 256,
                                    },
                                    "spacing": 8,
                                    "typography": Object {
                                      "body1": Object {
                                        "fontSize": "1rem",
                                        "fontWeight": 400,
                                      },
                                      "body2": Object {
                                        "fontSize": "0.875rem",
                                        "fontWeight": 400,
                                      },
                                      "button": Object {
                                        "fontSize": "0.875rem",
                                        "fontWeight": 600,
                                      },
                                      "caption": Object {
                                        "fontSize": "0.75rem",
                                        "fontWeight": 400,
                                      },
                                      "fontFamily": "\\"Roboto\\", sans-serif",
                                      "fontFamilyBrand1": "\\"Helvetica Now Display\\"",
                                      "fontFamilyBrand2": "\\"Helvetica Now Text\\"",
                                      "fontFamilyBrand3": undefined,
                                      "fontWeightBold": 700,
                                      "fontWeightLight": 300,
                                      "fontWeightMedium": 500,
                                      "fontWeightRegular": 400,
                                      "h1": Object {
                                        "fontSize": "6rem",
                                        "fontWeight": 300,
                                      },
                                      "h2": Object {
                                        "fontSize": "3.75rem",
                                        "fontWeight": 300,
                                      },
                                      "h3": Object {
                                        "fontSize": "3rem",
                                        "fontWeight": 400,
                                      },
                                      "h4": Object {
                                        "fontSize": "2.125rem",
                                        "fontWeight": 400,
                                      },
                                      "h5": Object {
                                        "fontSize": "1.5rem",
                                        "fontWeight": 400,
                                      },
                                      "h6": Object {
                                        "fontSize": "1.25rem",
                                        "fontWeight": 600,
                                      },
                                      "overline": Object {
                                        "fontSize": "0.75rem",
                                        "fontWeight": 400,
                                      },
                                      "subtitle1": Object {
                                        "fontSize": "1rem",
                                        "fontWeight": 400,
                                      },
                                      "subtitle2": Object {
                                        "fontSize": "0.875rem",
                                        "fontWeight": 500,
                                      },
                                    },
                                  }
                                }
                                variant="standard"
                              >
                                <ForwardRef(FormControl)
                                  className="MuiTextField-root"
                                  classes={
                                    Object {
                                      "fullWidth": "MuiFormControl-fullWidth",
                                      "marginDense": "MuiFormControl-marginDense",
                                      "marginNormal": "MuiFormControl-marginNormal",
                                      "root": "MuiFormControl-root",
                                    }
                                  }
                                  color="primary"
                                  disabled={false}
                                  error={false}
                                  fullWidth={false}
                                  required={false}
                                  theme={
                                    Object {
                                      "avatarSizes": Object {
                                        "huge": Object {
                                          "fontSize": "1.5rem",
                                          "size": 80,
                                        },
                                        "large": Object {
                                          "fontSize": "1rem",
                                          "size": 48,
                                        },
                                        "small": Object {
                                          "fontSize": ".875rem",
                                          "size": 32,
                                        },
                                        "standard": Object {
                                          "fontSize": "1rem",
                                          "size": 40,
                                        },
                                        "tiny": Object {
                                          "fontSize": ".625rem",
                                          "size": 24,
                                        },
                                      },
                                      "buttonSizes": Object {
                                        "large": Object {
                                          "minHeight": 48,
                                          "paddingBottom": 16,
                                          "paddingLeft": 16,
                                          "paddingRight": 16,
                                          "paddingTop": 16,
                                        },
                                        "medium": Object {
                                          "minHeight": 40,
                                          "paddingBottom": 12,
                                          "paddingLeft": 16,
                                          "paddingRight": 16,
                                          "paddingTop": 12,
                                        },
                                        "small": Object {
                                          "minHeight": 32,
                                          "paddingBottom": 8,
                                          "paddingLeft": 8,
                                          "paddingRight": 8,
                                          "paddingTop": 8,
                                        },
                                      },
                                      "iconSizes": Object {
                                        "huge": 144,
                                        "hugex": 192,
                                        "hugexx": 256,
                                        "large": 72,
                                        "largex": 96,
                                        "largexx": 128,
                                        "medium": 64,
                                        "micro": 16,
                                        "small": 32,
                                        "standard": 48,
                                        "tiny": 24,
                                      },
                                      "overrides": Object {
                                        "MuiAvatar": Object {
                                          "colorDefault": Object {
                                            "color": "#333333",
                                          },
                                        },
                                        "MuiBadge": Object {
                                          "badge": Object {
                                            "padding": "0 4px",
                                          },
                                        },
                                        "MuiButton": Object {
                                          "outlinedPrimary": Object {
                                            "color": "#333333",
                                          },
                                          "outlinedSecondary": Object {
                                            "color": "#333333",
                                          },
                                          "root": Object {
                                            "fontSize": "0.875rem",
                                            "minHeight": "40px",
                                            "padding": "8px 16px",
                                          },
                                          "sizeLarge": Object {
                                            "fontSize": "0.875rem",
                                            "minHeight": "48px",
                                          },
                                          "sizeSmall": Object {
                                            "fontSize": "0.875rem",
                                            "minHeight": "32px",
                                          },
                                          "textPrimary": Object {
                                            "color": "#333333",
                                          },
                                        },
                                        "MuiChip": Object {
                                          "clickableColorPrimary": Object {
                                            "&:hover": Object {
                                              "backgroundColor": "#EF8426",
                                            },
                                          },
                                          "clickableColorSecondary": Object {
                                            "&:hover": Object {
                                              "backgroundColor": "#EF8426",
                                            },
                                          },
                                          "deleteIcon": Object {
                                            "&:hover": Object {
                                              "color": "#000000",
                                            },
                                            "color": "rgba(0, 0, 0, 0.8)",
                                            "fontSize": "24px",
                                            "height": "24px",
                                            "width": "24px",
                                          },
                                          "deleteIconColorPrimary": Object {
                                            "&:hover": Object {
                                              "color": "#FFFFFF",
                                            },
                                            "color": "rgba(255, 255, 255, 0.8)",
                                          },
                                          "deleteIconColorSecondary": Object {
                                            "&:hover": Object {
                                              "color": "#FFFFFF",
                                            },
                                            "color": "rgba(255, 255, 255, 0.8)",
                                          },
                                          "deleteIconSmall": Object {
                                            "fontSize": "16px",
                                            "height": "16px",
                                            "width": "16px",
                                          },
                                          "icon": Object {
                                            "fontSize": "24px",
                                          },
                                          "iconSmall": Object {
                                            "fontSize": "16px",
                                            "height": "16px",
                                            "marginTop": "1px",
                                            "width": "16px",
                                          },
                                          "outlined": Object {
                                            "borderColor": "rgba(0, 0, 0, 0.12)",
                                            "color": "#000000",
                                          },
                                          "outlinedPrimary": Object {
                                            "color": "#000000",
                                          },
                                          "outlinedSecondary": Object {
                                            "color": "#000000",
                                          },
                                          "root": Object {
                                            "& $avatar": Object {
                                              "backgroundColor": "rgba(0, 0, 0, 0.24)",
                                              "color": "#333333",
                                            },
                                            "&$disabled": Object {
                                              "opacity": 0.4,
                                            },
                                            "backgroundColor": "rgba(0, 0, 0, 0.12)",
                                            "color": "#333333",
                                            "fontSize": "0.875rem",
                                          },
                                        },
                                        "MuiExpansionPanel": Object {
                                          "root": Object {
                                            "&$disabled": Object {
                                              "backgroundColor": "#FFFFFF",
                                              "opacity": 0.32,
                                            },
                                            "&$expanded": Object {
                                              "borderColor": "#F4AB34",
                                            },
                                            "border": "transparent 1px solid",
                                          },
                                        },
                                        "MuiExpansionPanelSummary": Object {
                                          "root": Object {
                                            "&$disabled": Object {
                                              "opacity": 1,
                                            },
                                            "alignItems": "flex-start",
                                            "marginTop": "8px",
                                          },
                                        },
                                        "MuiFormLabel": Object {
                                          "formControl": Object {
                                            "marginTop": "-4px",
                                            "transform": "none",
                                          },
                                          "root": Object {
                                            "&.Mui-focused": Object {
                                              "color": "#777777",
                                              "fontSize": "0.875rem",
                                            },
                                            "fontSize": "0.875rem",
                                          },
                                        },
                                        "MuiIconButton": Object {
                                          "root": Object {
                                            "color": "#333333",
                                            "padding": "8px",
                                          },
                                          "sizeSmall": Object {
                                            "padding": "4px",
                                          },
                                        },
                                        "MuiInputAdornment": Object {
                                          "root": Object {
                                            "position": "absolute",
                                            "right": "0",
                                          },
                                        },
                                        "MuiInputBase": Object {
                                          "input": Object {
                                            "&.Mui-disabled": Object {
                                              "&:hover": Object {
                                                "boxShadow": "#333333 0 0 0 1px",
                                              },
                                              "opacity": 0.24,
                                            },
                                            "&:focus": Object {
                                              "boxShadow": "#F4AB34 0 0 0 2px",
                                            },
                                            "&:focus:not(:read-only)": Object {
                                              "boxShadow": "#F4AB34 0 0 0 2px",
                                            },
                                            "&:hover": Object {
                                              "boxShadow": "#777777 0 0 0 1px",
                                            },
                                            "&:hover:not(:placeholder-shown)": Object {
                                              "boxShadow": "#777777 0 0 0 1px",
                                            },
                                            "&:hover:not(:read-only):not(:disabled):not(:focus)": Object {
                                              "boxShadow": "#777777 0 0 0 1px",
                                            },
                                            "&:not(:placeholder-shown)": Object {
                                              "boxShadow": "#333333 0 0 0 1px",
                                            },
                                            "&:placeholder-shown": Object {
                                              "boxShadow": "#BBBBBB 0 0 0 1px",
                                            },
                                            "borderRadius": "4px",
                                            "boxShadow": "#BBBBBB 0 0 0 1px",
                                            "color": "#333333",
                                            "minHeight": "24px",
                                            "padding": "16px 35px 16px 16px",
                                          },
                                          "root": Object {
                                            "&.MuiInput-underline.Mui-disabled:before": Object {
                                              "borderBottom": "none",
                                            },
                                            "&.MuiInput-underline:after": Object {
                                              "borderBottom": "none",
                                            },
                                            "&.MuiInput-underline:before": Object {
                                              "borderBottom": "none",
                                            },
                                            "&.MuiInput-underline:hover:not(.Mui-disabled):before": Object {
                                              "borderBottom": "none",
                                            },
                                            "color": "#333333",
                                          },
                                        },
                                        "MuiInputLabel": Object {
                                          "formControl": Object {
                                            "marginTop": "-4px",
                                            "transform": "none",
                                          },
                                          "shrink": Object {
                                            "marginTop": "-4px",
                                            "transform": "none",
                                          },
                                        },
                                        "MuiListItem": Object {
                                          "button": Object {
                                            "&:hover": Object {
                                              "backgroundColor": "rgba(0, 0, 0, 0.04)",
                                            },
                                          },
                                          "root": Object {
                                            "&$selected": Object {
                                              "&:hover": Object {
                                                "backgroundColor": "rgba(0, 0, 0, 0.04)",
                                              },
                                              "backgroundColor": "rgba(255, 107, 11, 0.16)",
                                            },
                                            "&.Mui-disabled": Object {
                                              "opacity": 0.32,
                                            },
                                          },
                                        },
                                        "MuiTab": Object {
                                          "root": Object {
                                            "&$disabled": Object {
                                              "opacity": 0.24,
                                            },
                                          },
                                          "textColorInherit": Object {
                                            "&$disabled": Object {
                                              "opacity": 0.24,
                                            },
                                          },
                                          "wrapper": Object {
                                            "& > *:first-child": Object {
                                              "marginBottom": "2px !important",
                                            },
                                          },
                                        },
                                        "MuiTextField": Object {
                                          "& .MuiInputLabel": Object {
                                            "marginTop": "20px",
                                          },
                                        },
                                        "MuiToolbar": Object {
                                          "dense": Object {
                                            "@media (min-width: 600px)": Object {
                                              "minHeight": "56px",
                                            },
                                            "minHeight": "56px",
                                          },
                                          "gutters": Object {
                                            "@media (min-width: 600px)": Object {
                                              "padding": "0 16px",
                                            },
                                            "padding": "0 16px",
                                          },
                                          "regular": Object {
                                            "@media (min-width: 600px)": Object {
                                              "minHeight": "56px",
                                            },
                                            "minHeight": "56px",
                                          },
                                          "root": Object {
                                            "@media (min-width: 600px)": Object {
                                              "padding": "0 16px",
                                            },
                                            "padding": "0 16px",
                                          },
                                        },
                                      },
                                      "palette": Object {
                                        "action": Object {
                                          "disabled": "rgba(51, 51, 51, 0.24)",
                                        },
                                        "background": Object {
                                          "default": "#FAFAFA",
                                          "defaultContrastText": "#333333",
                                          "paper": "#FFFFFF",
                                          "paperContrastText": "#333333",
                                        },
                                        "complementary": Object {
                                          "highlight": "#000000",
                                          "link": "#227BBD",
                                          "linkContrastText": "#FFFFFF",
                                          "warning": "#FCC433",
                                          "warningContrastText": "#333333",
                                        },
                                        "error": Object {
                                          "contrastText": "#FFFFFF",
                                          "main": "#E74627",
                                        },
                                        "primary": Object {
                                          "contrastText": "#333333",
                                          "dark": "#EF8426",
                                          "light": "#FEFDE8",
                                          "main": "#F4AB34",
                                        },
                                        "secondary": Object {
                                          "contrastText": "#000000",
                                          "dark": "#FF5808",
                                          "light": "#FFF8E1",
                                          "main": "#FF6B0B",
                                        },
                                        "success": Object {
                                          "contrastText": "#FFFFFF",
                                          "main": "#569A32",
                                        },
                                        "text": Object {
                                          "disabled": "#BBBBBB",
                                          "hint": "#BBBBBB",
                                          "primary": "#333333",
                                          "secondary": "#777777",
                                        },
                                      },
                                      "shadows": Object {
                                        "0": "none",
                                        "1": "0 1px 1px 0 rgba(0, 0, 0, 0.14)",
                                        "12": "0 12px 17px 0 rgba(0, 0, 0, 0.14)",
                                        "16": "0 16px 24px 0 rgba(0, 0, 0, 0.14)",
                                        "2": "0 2px 2px 0 rgba(0, 0, 0, 0.14)",
                                        "24": "0 24px 38px 0 rgba(0, 0, 0, 0.14)",
                                        "3": "0 3px 4px 0 rgba(0, 0, 0, 0.14)",
                                        "4": "0 4px 5px 0 rgba(0, 0, 0, 0.14)",
                                        "6": "0 6px 10px 0 rgba(0, 0, 0, 0.14)",
                                        "8": "0 8px 10px 0 rgba(0, 0, 0, 0.14)",
                                        "9": "0 9px 12px 0 rgba(0, 0, 0, 0.14)",
                                      },
                                      "shape": Object {
                                        "badgeBorderRadius": 100,
                                        "borderRadius": 4,
                                      },
                                      "sizes": Object {
                                        "huge": 96,
                                        "hugex": 128,
                                        "hugexx": 144,
                                        "hugexxx": 192,
                                        "large": 64,
                                        "largex": 72,
                                        "largexx": 80,
                                        "largexxx": 88,
                                        "medium": 48,
                                        "mediumx": 56,
                                        "micro": 4,
                                        "none": 0,
                                        "semi": 32,
                                        "semix": 40,
                                        "small": 16,
                                        "standard": 24,
                                        "tiny": 8,
                                        "veryhuge": 256,
                                      },
                                      "spacing": 8,
                                      "typography": Object {
                                        "body1": Object {
                                          "fontSize": "1rem",
                                          "fontWeight": 400,
                                        },
                                        "body2": Object {
                                          "fontSize": "0.875rem",
                                          "fontWeight": 400,
                                        },
                                        "button": Object {
                                          "fontSize": "0.875rem",
                                          "fontWeight": 600,
                                        },
                                        "caption": Object {
                                          "fontSize": "0.75rem",
                                          "fontWeight": 400,
                                        },
                                        "fontFamily": "\\"Roboto\\", sans-serif",
                                        "fontFamilyBrand1": "\\"Helvetica Now Display\\"",
                                        "fontFamilyBrand2": "\\"Helvetica Now Text\\"",
                                        "fontFamilyBrand3": undefined,
                                        "fontWeightBold": 700,
                                        "fontWeightLight": 300,
                                        "fontWeightMedium": 500,
                                        "fontWeightRegular": 400,
                                        "h1": Object {
                                          "fontSize": "6rem",
                                          "fontWeight": 300,
                                        },
                                        "h2": Object {
                                          "fontSize": "3.75rem",
                                          "fontWeight": 300,
                                        },
                                        "h3": Object {
                                          "fontSize": "3rem",
                                          "fontWeight": 400,
                                        },
                                        "h4": Object {
                                          "fontSize": "2.125rem",
                                          "fontWeight": 400,
                                        },
                                        "h5": Object {
                                          "fontSize": "1.5rem",
                                          "fontWeight": 400,
                                        },
                                        "h6": Object {
                                          "fontSize": "1.25rem",
                                          "fontWeight": 600,
                                        },
                                        "overline": Object {
                                          "fontSize": "0.75rem",
                                          "fontWeight": 400,
                                        },
                                        "subtitle1": Object {
                                          "fontSize": "1rem",
                                          "fontWeight": 400,
                                        },
                                        "subtitle2": Object {
                                          "fontSize": "0.875rem",
                                          "fontWeight": 500,
                                        },
                                      },
                                    }
                                  }
                                  variant="standard"
                                >
                                  <div
                                    className="MuiFormControl-root MuiTextField-root"
                                    theme={
                                      Object {
                                        "avatarSizes": Object {
                                          "huge": Object {
                                            "fontSize": "1.5rem",
                                            "size": 80,
                                          },
                                          "large": Object {
                                            "fontSize": "1rem",
                                            "size": 48,
                                          },
                                          "small": Object {
                                            "fontSize": ".875rem",
                                            "size": 32,
                                          },
                                          "standard": Object {
                                            "fontSize": "1rem",
                                            "size": 40,
                                          },
                                          "tiny": Object {
                                            "fontSize": ".625rem",
                                            "size": 24,
                                          },
                                        },
                                        "buttonSizes": Object {
                                          "large": Object {
                                            "minHeight": 48,
                                            "paddingBottom": 16,
                                            "paddingLeft": 16,
                                            "paddingRight": 16,
                                            "paddingTop": 16,
                                          },
                                          "medium": Object {
                                            "minHeight": 40,
                                            "paddingBottom": 12,
                                            "paddingLeft": 16,
                                            "paddingRight": 16,
                                            "paddingTop": 12,
                                          },
                                          "small": Object {
                                            "minHeight": 32,
                                            "paddingBottom": 8,
                                            "paddingLeft": 8,
                                            "paddingRight": 8,
                                            "paddingTop": 8,
                                          },
                                        },
                                        "iconSizes": Object {
                                          "huge": 144,
                                          "hugex": 192,
                                          "hugexx": 256,
                                          "large": 72,
                                          "largex": 96,
                                          "largexx": 128,
                                          "medium": 64,
                                          "micro": 16,
                                          "small": 32,
                                          "standard": 48,
                                          "tiny": 24,
                                        },
                                        "overrides": Object {
                                          "MuiAvatar": Object {
                                            "colorDefault": Object {
                                              "color": "#333333",
                                            },
                                          },
                                          "MuiBadge": Object {
                                            "badge": Object {
                                              "padding": "0 4px",
                                            },
                                          },
                                          "MuiButton": Object {
                                            "outlinedPrimary": Object {
                                              "color": "#333333",
                                            },
                                            "outlinedSecondary": Object {
                                              "color": "#333333",
                                            },
                                            "root": Object {
                                              "fontSize": "0.875rem",
                                              "minHeight": "40px",
                                              "padding": "8px 16px",
                                            },
                                            "sizeLarge": Object {
                                              "fontSize": "0.875rem",
                                              "minHeight": "48px",
                                            },
                                            "sizeSmall": Object {
                                              "fontSize": "0.875rem",
                                              "minHeight": "32px",
                                            },
                                            "textPrimary": Object {
                                              "color": "#333333",
                                            },
                                          },
                                          "MuiChip": Object {
                                            "clickableColorPrimary": Object {
                                              "&:hover": Object {
                                                "backgroundColor": "#EF8426",
                                              },
                                            },
                                            "clickableColorSecondary": Object {
                                              "&:hover": Object {
                                                "backgroundColor": "#EF8426",
                                              },
                                            },
                                            "deleteIcon": Object {
                                              "&:hover": Object {
                                                "color": "#000000",
                                              },
                                              "color": "rgba(0, 0, 0, 0.8)",
                                              "fontSize": "24px",
                                              "height": "24px",
                                              "width": "24px",
                                            },
                                            "deleteIconColorPrimary": Object {
                                              "&:hover": Object {
                                                "color": "#FFFFFF",
                                              },
                                              "color": "rgba(255, 255, 255, 0.8)",
                                            },
                                            "deleteIconColorSecondary": Object {
                                              "&:hover": Object {
                                                "color": "#FFFFFF",
                                              },
                                              "color": "rgba(255, 255, 255, 0.8)",
                                            },
                                            "deleteIconSmall": Object {
                                              "fontSize": "16px",
                                              "height": "16px",
                                              "width": "16px",
                                            },
                                            "icon": Object {
                                              "fontSize": "24px",
                                            },
                                            "iconSmall": Object {
                                              "fontSize": "16px",
                                              "height": "16px",
                                              "marginTop": "1px",
                                              "width": "16px",
                                            },
                                            "outlined": Object {
                                              "borderColor": "rgba(0, 0, 0, 0.12)",
                                              "color": "#000000",
                                            },
                                            "outlinedPrimary": Object {
                                              "color": "#000000",
                                            },
                                            "outlinedSecondary": Object {
                                              "color": "#000000",
                                            },
                                            "root": Object {
                                              "& $avatar": Object {
                                                "backgroundColor": "rgba(0, 0, 0, 0.24)",
                                                "color": "#333333",
                                              },
                                              "&$disabled": Object {
                                                "opacity": 0.4,
                                              },
                                              "backgroundColor": "rgba(0, 0, 0, 0.12)",
                                              "color": "#333333",
                                              "fontSize": "0.875rem",
                                            },
                                          },
                                          "MuiExpansionPanel": Object {
                                            "root": Object {
                                              "&$disabled": Object {
                                                "backgroundColor": "#FFFFFF",
                                                "opacity": 0.32,
                                              },
                                              "&$expanded": Object {
                                                "borderColor": "#F4AB34",
                                              },
                                              "border": "transparent 1px solid",
                                            },
                                          },
                                          "MuiExpansionPanelSummary": Object {
                                            "root": Object {
                                              "&$disabled": Object {
                                                "opacity": 1,
                                              },
                                              "alignItems": "flex-start",
                                              "marginTop": "8px",
                                            },
                                          },
                                          "MuiFormLabel": Object {
                                            "formControl": Object {
                                              "marginTop": "-4px",
                                              "transform": "none",
                                            },
                                            "root": Object {
                                              "&.Mui-focused": Object {
                                                "color": "#777777",
                                                "fontSize": "0.875rem",
                                              },
                                              "fontSize": "0.875rem",
                                            },
                                          },
                                          "MuiIconButton": Object {
                                            "root": Object {
                                              "color": "#333333",
                                              "padding": "8px",
                                            },
                                            "sizeSmall": Object {
                                              "padding": "4px",
                                            },
                                          },
                                          "MuiInputAdornment": Object {
                                            "root": Object {
                                              "position": "absolute",
                                              "right": "0",
                                            },
                                          },
                                          "MuiInputBase": Object {
                                            "input": Object {
                                              "&.Mui-disabled": Object {
                                                "&:hover": Object {
                                                  "boxShadow": "#333333 0 0 0 1px",
                                                },
                                                "opacity": 0.24,
                                              },
                                              "&:focus": Object {
                                                "boxShadow": "#F4AB34 0 0 0 2px",
                                              },
                                              "&:focus:not(:read-only)": Object {
                                                "boxShadow": "#F4AB34 0 0 0 2px",
                                              },
                                              "&:hover": Object {
                                                "boxShadow": "#777777 0 0 0 1px",
                                              },
                                              "&:hover:not(:placeholder-shown)": Object {
                                                "boxShadow": "#777777 0 0 0 1px",
                                              },
                                              "&:hover:not(:read-only):not(:disabled):not(:focus)": Object {
                                                "boxShadow": "#777777 0 0 0 1px",
                                              },
                                              "&:not(:placeholder-shown)": Object {
                                                "boxShadow": "#333333 0 0 0 1px",
                                              },
                                              "&:placeholder-shown": Object {
                                                "boxShadow": "#BBBBBB 0 0 0 1px",
                                              },
                                              "borderRadius": "4px",
                                              "boxShadow": "#BBBBBB 0 0 0 1px",
                                              "color": "#333333",
                                              "minHeight": "24px",
                                              "padding": "16px 35px 16px 16px",
                                            },
                                            "root": Object {
                                              "&.MuiInput-underline.Mui-disabled:before": Object {
                                                "borderBottom": "none",
                                              },
                                              "&.MuiInput-underline:after": Object {
                                                "borderBottom": "none",
                                              },
                                              "&.MuiInput-underline:before": Object {
                                                "borderBottom": "none",
                                              },
                                              "&.MuiInput-underline:hover:not(.Mui-disabled):before": Object {
                                                "borderBottom": "none",
                                              },
                                              "color": "#333333",
                                            },
                                          },
                                          "MuiInputLabel": Object {
                                            "formControl": Object {
                                              "marginTop": "-4px",
                                              "transform": "none",
                                            },
                                            "shrink": Object {
                                              "marginTop": "-4px",
                                              "transform": "none",
                                            },
                                          },
                                          "MuiListItem": Object {
                                            "button": Object {
                                              "&:hover": Object {
                                                "backgroundColor": "rgba(0, 0, 0, 0.04)",
                                              },
                                            },
                                            "root": Object {
                                              "&$selected": Object {
                                                "&:hover": Object {
                                                  "backgroundColor": "rgba(0, 0, 0, 0.04)",
                                                },
                                                "backgroundColor": "rgba(255, 107, 11, 0.16)",
                                              },
                                              "&.Mui-disabled": Object {
                                                "opacity": 0.32,
                                              },
                                            },
                                          },
                                          "MuiTab": Object {
                                            "root": Object {
                                              "&$disabled": Object {
                                                "opacity": 0.24,
                                              },
                                            },
                                            "textColorInherit": Object {
                                              "&$disabled": Object {
                                                "opacity": 0.24,
                                              },
                                            },
                                            "wrapper": Object {
                                              "& > *:first-child": Object {
                                                "marginBottom": "2px !important",
                                              },
                                            },
                                          },
                                          "MuiTextField": Object {
                                            "& .MuiInputLabel": Object {
                                              "marginTop": "20px",
                                            },
                                          },
                                          "MuiToolbar": Object {
                                            "dense": Object {
                                              "@media (min-width: 600px)": Object {
                                                "minHeight": "56px",
                                              },
                                              "minHeight": "56px",
                                            },
                                            "gutters": Object {
                                              "@media (min-width: 600px)": Object {
                                                "padding": "0 16px",
                                              },
                                              "padding": "0 16px",
                                            },
                                            "regular": Object {
                                              "@media (min-width: 600px)": Object {
                                                "minHeight": "56px",
                                              },
                                              "minHeight": "56px",
                                            },
                                            "root": Object {
                                              "@media (min-width: 600px)": Object {
                                                "padding": "0 16px",
                                              },
                                              "padding": "0 16px",
                                            },
                                          },
                                        },
                                        "palette": Object {
                                          "action": Object {
                                            "disabled": "rgba(51, 51, 51, 0.24)",
                                          },
                                          "background": Object {
                                            "default": "#FAFAFA",
                                            "defaultContrastText": "#333333",
                                            "paper": "#FFFFFF",
                                            "paperContrastText": "#333333",
                                          },
                                          "complementary": Object {
                                            "highlight": "#000000",
                                            "link": "#227BBD",
                                            "linkContrastText": "#FFFFFF",
                                            "warning": "#FCC433",
                                            "warningContrastText": "#333333",
                                          },
                                          "error": Object {
                                            "contrastText": "#FFFFFF",
                                            "main": "#E74627",
                                          },
                                          "primary": Object {
                                            "contrastText": "#333333",
                                            "dark": "#EF8426",
                                            "light": "#FEFDE8",
                                            "main": "#F4AB34",
                                          },
                                          "secondary": Object {
                                            "contrastText": "#000000",
                                            "dark": "#FF5808",
                                            "light": "#FFF8E1",
                                            "main": "#FF6B0B",
                                          },
                                          "success": Object {
                                            "contrastText": "#FFFFFF",
                                            "main": "#569A32",
                                          },
                                          "text": Object {
                                            "disabled": "#BBBBBB",
                                            "hint": "#BBBBBB",
                                            "primary": "#333333",
                                            "secondary": "#777777",
                                          },
                                        },
                                        "shadows": Object {
                                          "0": "none",
                                          "1": "0 1px 1px 0 rgba(0, 0, 0, 0.14)",
                                          "12": "0 12px 17px 0 rgba(0, 0, 0, 0.14)",
                                          "16": "0 16px 24px 0 rgba(0, 0, 0, 0.14)",
                                          "2": "0 2px 2px 0 rgba(0, 0, 0, 0.14)",
                                          "24": "0 24px 38px 0 rgba(0, 0, 0, 0.14)",
                                          "3": "0 3px 4px 0 rgba(0, 0, 0, 0.14)",
                                          "4": "0 4px 5px 0 rgba(0, 0, 0, 0.14)",
                                          "6": "0 6px 10px 0 rgba(0, 0, 0, 0.14)",
                                          "8": "0 8px 10px 0 rgba(0, 0, 0, 0.14)",
                                          "9": "0 9px 12px 0 rgba(0, 0, 0, 0.14)",
                                        },
                                        "shape": Object {
                                          "badgeBorderRadius": 100,
                                          "borderRadius": 4,
                                        },
                                        "sizes": Object {
                                          "huge": 96,
                                          "hugex": 128,
                                          "hugexx": 144,
                                          "hugexxx": 192,
                                          "large": 64,
                                          "largex": 72,
                                          "largexx": 80,
                                          "largexxx": 88,
                                          "medium": 48,
                                          "mediumx": 56,
                                          "micro": 4,
                                          "none": 0,
                                          "semi": 32,
                                          "semix": 40,
                                          "small": 16,
                                          "standard": 24,
                                          "tiny": 8,
                                          "veryhuge": 256,
                                        },
                                        "spacing": 8,
                                        "typography": Object {
                                          "body1": Object {
                                            "fontSize": "1rem",
                                            "fontWeight": 400,
                                          },
                                          "body2": Object {
                                            "fontSize": "0.875rem",
                                            "fontWeight": 400,
                                          },
                                          "button": Object {
                                            "fontSize": "0.875rem",
                                            "fontWeight": 600,
                                          },
                                          "caption": Object {
                                            "fontSize": "0.75rem",
                                            "fontWeight": 400,
                                          },
                                          "fontFamily": "\\"Roboto\\", sans-serif",
                                          "fontFamilyBrand1": "\\"Helvetica Now Display\\"",
                                          "fontFamilyBrand2": "\\"Helvetica Now Text\\"",
                                          "fontFamilyBrand3": undefined,
                                          "fontWeightBold": 700,
                                          "fontWeightLight": 300,
                                          "fontWeightMedium": 500,
                                          "fontWeightRegular": 400,
                                          "h1": Object {
                                            "fontSize": "6rem",
                                            "fontWeight": 300,
                                          },
                                          "h2": Object {
                                            "fontSize": "3.75rem",
                                            "fontWeight": 300,
                                          },
                                          "h3": Object {
                                            "fontSize": "3rem",
                                            "fontWeight": 400,
                                          },
                                          "h4": Object {
                                            "fontSize": "2.125rem",
                                            "fontWeight": 400,
                                          },
                                          "h5": Object {
                                            "fontSize": "1.5rem",
                                            "fontWeight": 400,
                                          },
                                          "h6": Object {
                                            "fontSize": "1.25rem",
                                            "fontWeight": 600,
                                          },
                                          "overline": Object {
                                            "fontSize": "0.75rem",
                                            "fontWeight": 400,
                                          },
                                          "subtitle1": Object {
                                            "fontSize": "1rem",
                                            "fontWeight": 400,
                                          },
                                          "subtitle2": Object {
                                            "fontSize": "0.875rem",
                                            "fontWeight": 500,
                                          },
                                        },
                                      }
                                    }
                                  >
                                    <WithStyles(ForwardRef(Input))
                                      autoFocus={false}
                                      endAdornment={
                                        <ForwardRef(WithStyles)
                                          position="end"
                                        >
                                          <ForwardRef(WithStyles)
                                            onClick={[Function]}
                                          >
                                            <ForwardRef(WithTheme)
                                              name="outlined-action-calendar"
                                              size="tiny"
                                            />
                                          </ForwardRef(WithStyles)>
                                        </ForwardRef(WithStyles)>
                                      }
                                      fullWidth={false}
                                      inputProps={
                                        Object {
                                          "style": Object {
                                            "boxShadow": "#569A32 0 0 0 1px",
                                          },
                                        }
                                      }
                                      multiline={false}
                                      onChange={[Function]}
                                      value="February 1st"
                                    >
                                      <ForwardRef(Input)
                                        autoFocus={false}
                                        classes={
                                          Object {
                                            "colorSecondary": "MuiInput-colorSecondary",
                                            "disabled": "Mui-disabled",
                                            "error": "Mui-error",
                                            "focused": "Mui-focused",
                                            "formControl": "MuiInput-formControl",
                                            "fullWidth": "MuiInput-fullWidth",
                                            "input": "MuiInput-input",
                                            "inputMarginDense": "MuiInput-inputMarginDense",
                                            "inputMultiline": "MuiInput-inputMultiline",
                                            "inputTypeSearch": "MuiInput-inputTypeSearch",
                                            "marginDense": "MuiInput-marginDense",
                                            "multiline": "MuiInput-multiline",
                                            "root": "MuiInput-root",
                                            "underline": "MuiInput-underline",
                                          }
                                        }
                                        endAdornment={
                                          <ForwardRef(WithStyles)
                                            position="end"
                                          >
                                            <ForwardRef(WithStyles)
                                              onClick={[Function]}
                                            >
                                              <ForwardRef(WithTheme)
                                                name="outlined-action-calendar"
                                                size="tiny"
                                              />
                                            </ForwardRef(WithStyles)>
                                          </ForwardRef(WithStyles)>
                                        }
                                        fullWidth={false}
                                        inputProps={
                                          Object {
                                            "style": Object {
                                              "boxShadow": "#569A32 0 0 0 1px",
                                            },
                                          }
                                        }
                                        multiline={false}
                                        onChange={[Function]}
                                        value="February 1st"
                                      >
                                        <WithStyles(ForwardRef(InputBase))
                                          autoFocus={false}
                                          classes={
                                            Object {
                                              "colorSecondary": "MuiInput-colorSecondary",
                                              "disabled": "Mui-disabled",
                                              "error": "Mui-error",
                                              "focused": "Mui-focused",
                                              "formControl": "MuiInput-formControl",
                                              "fullWidth": "MuiInput-fullWidth",
                                              "input": "MuiInput-input",
                                              "inputMarginDense": "MuiInput-inputMarginDense",
                                              "inputMultiline": "MuiInput-inputMultiline",
                                              "inputTypeSearch": "MuiInput-inputTypeSearch",
                                              "marginDense": "MuiInput-marginDense",
                                              "multiline": "MuiInput-multiline",
                                              "root": "MuiInput-root MuiInput-underline",
                                              "underline": null,
                                            }
                                          }
                                          endAdornment={
                                            <ForwardRef(WithStyles)
                                              position="end"
                                            >
                                              <ForwardRef(WithStyles)
                                                onClick={[Function]}
                                              >
                                                <ForwardRef(WithTheme)
                                                  name="outlined-action-calendar"
                                                  size="tiny"
                                                />
                                              </ForwardRef(WithStyles)>
                                            </ForwardRef(WithStyles)>
                                          }
                                          fullWidth={false}
                                          inputComponent="input"
                                          inputProps={
                                            Object {
                                              "style": Object {
                                                "boxShadow": "#569A32 0 0 0 1px",
                                              },
                                            }
                                          }
                                          multiline={false}
                                          onChange={[Function]}
                                          type="text"
                                          value="February 1st"
                                        >
                                          <ForwardRef(InputBase)
                                            autoFocus={false}
                                            classes={
                                              Object {
                                                "adornedEnd": "MuiInputBase-adornedEnd",
                                                "adornedStart": "MuiInputBase-adornedStart",
                                                "colorSecondary": "MuiInputBase-colorSecondary MuiInput-colorSecondary",
                                                "disabled": "Mui-disabled Mui-disabled",
                                                "error": "Mui-error Mui-error",
                                                "focused": "Mui-focused Mui-focused",
                                                "formControl": "MuiInputBase-formControl MuiInput-formControl",
                                                "fullWidth": "MuiInputBase-fullWidth MuiInput-fullWidth",
                                                "input": "MuiInputBase-input MuiInput-input",
                                                "inputAdornedEnd": "MuiInputBase-inputAdornedEnd",
                                                "inputAdornedStart": "MuiInputBase-inputAdornedStart",
                                                "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                                "inputMarginDense": "MuiInputBase-inputMarginDense MuiInput-inputMarginDense",
                                                "inputMultiline": "MuiInputBase-inputMultiline MuiInput-inputMultiline",
                                                "inputTypeSearch": "MuiInputBase-inputTypeSearch MuiInput-inputTypeSearch",
                                                "marginDense": "MuiInputBase-marginDense MuiInput-marginDense",
                                                "multiline": "MuiInputBase-multiline MuiInput-multiline",
                                                "root": "MuiInputBase-root MuiInput-root MuiInput-underline",
                                              }
                                            }
                                            endAdornment={
                                              <ForwardRef(WithStyles)
                                                position="end"
                                              >
                                                <ForwardRef(WithStyles)
                                                  onClick={[Function]}
                                                >
                                                  <ForwardRef(WithTheme)
                                                    name="outlined-action-calendar"
                                                    size="tiny"
                                                  />
                                                </ForwardRef(WithStyles)>
                                              </ForwardRef(WithStyles)>
                                            }
                                            fullWidth={false}
                                            inputComponent="input"
                                            inputProps={
                                              Object {
                                                "style": Object {
                                                  "boxShadow": "#569A32 0 0 0 1px",
                                                },
                                              }
                                            }
                                            multiline={false}
                                            onChange={[Function]}
                                            type="text"
                                            value="February 1st"
                                          >
                                            <div
                                              className="MuiInputBase-root MuiInput-root MuiInput-underline MuiInputBase-formControl MuiInput-formControl MuiInputBase-adornedEnd"
                                              onClick={[Function]}
                                            >
                                              <input
                                                aria-invalid={false}
                                                autoFocus={false}
                                                className="MuiInputBase-input MuiInput-input MuiInputBase-inputAdornedEnd"
                                                disabled={false}
                                                onAnimationStart={[Function]}
                                                onBlur={[Function]}
                                                onChange={[Function]}
                                                onFocus={[Function]}
                                                required={false}
                                                style={
                                                  Object {
                                                    "boxShadow": "#569A32 0 0 0 1px",
                                                  }
                                                }
                                                type="text"
                                                value="February 1st"
                                              />
                                              <WithStyles(ForwardRef(InputAdornment))
                                                position="end"
                                              >
                                                <ForwardRef(InputAdornment)
                                                  classes={
                                                    Object {
                                                      "disablePointerEvents": "MuiInputAdornment-disablePointerEvents",
                                                      "filled": "MuiInputAdornment-filled",
                                                      "hiddenLabel": "MuiInputAdornment-hiddenLabel",
                                                      "marginDense": "MuiInputAdornment-marginDense",
                                                      "positionEnd": "MuiInputAdornment-positionEnd",
                                                      "positionStart": "MuiInputAdornment-positionStart",
                                                      "root": "MuiInputAdornment-root",
                                                    }
                                                  }
                                                  position="end"
                                                >
                                                  <div
                                                    className="MuiInputAdornment-root MuiInputAdornment-positionEnd"
                                                  >
                                                    <WithStyles(ForwardRef(IconButton))
                                                      onClick={[Function]}
                                                    >
                                                      <ForwardRef(IconButton)
                                                        classes={
                                                          Object {
                                                            "colorInherit": "MuiIconButton-colorInherit",
                                                            "colorPrimary": "MuiIconButton-colorPrimary",
                                                            "colorSecondary": "MuiIconButton-colorSecondary",
                                                            "disabled": "Mui-disabled",
                                                            "edgeEnd": "MuiIconButton-edgeEnd",
                                                            "edgeStart": "MuiIconButton-edgeStart",
                                                            "label": "MuiIconButton-label",
                                                            "root": "MuiIconButton-root",
                                                            "sizeSmall": "MuiIconButton-sizeSmall",
                                                          }
                                                        }
                                                        onClick={[Function]}
                                                      >
                                                        <WithStyles(ForwardRef(ButtonBase))
                                                          centerRipple={true}
                                                          className="MuiIconButton-root"
                                                          disabled={false}
                                                          focusRipple={true}
                                                          onClick={[Function]}
                                                        >
                                                          <ForwardRef(ButtonBase)
                                                            centerRipple={true}
                                                            className="MuiIconButton-root"
                                                            classes={
                                                              Object {
                                                                "disabled": "Mui-disabled",
                                                                "focusVisible": "Mui-focusVisible",
                                                                "root": "MuiButtonBase-root",
                                                              }
                                                            }
                                                            disabled={false}
                                                            focusRipple={true}
                                                            onClick={[Function]}
                                                          >
                                                            <button
                                                              className="MuiButtonBase-root MuiIconButton-root"
                                                              disabled={false}
                                                              onBlur={[Function]}
                                                              onClick={[Function]}
                                                              onDragLeave={[Function]}
                                                              onFocus={[Function]}
                                                              onKeyDown={[Function]}
                                                              onKeyUp={[Function]}
                                                              onMouseDown={[Function]}
                                                              onMouseLeave={[Function]}
                                                              onMouseUp={[Function]}
                                                              onTouchEnd={[Function]}
                                                              onTouchMove={[Function]}
                                                              onTouchStart={[Function]}
                                                              tabIndex={0}
                                                              type="button"
                                                            >
                                                              <span
                                                                className="MuiIconButton-label"
                                                              >
                                                                <WithTheme(ForwardRef)
                                                                  name="outlined-action-calendar"
                                                                  size="tiny"
                                                                >
                                                                  <ForwardRef
                                                                    name="outlined-action-calendar"
                                                                    size="tiny"
                                                                  >
                                                                    <styled.i
                                                                      className="natds-icons natds-icons-outlined-action-calendar undefined"
                                                                      size="tiny"
                                                                    >
                                                                      <StyledComponent
                                                                        className="natds-icons natds-icons-outlined-action-calendar undefined"
                                                                        forwardedComponent={
                                                                          Object {
                                                                            "$$typeof": Symbol(react.forward_ref),
                                                                            "attrs": Array [],
                                                                            "componentStyle": ComponentStyle {
                                                                              "componentId": "sc-bdVaJa",
                                                                              "isStatic": false,
                                                                              "lastClassName": "jWbhAs",
                                                                              "rules": Array [
                                                                                "
  font-size: ",
                                                                                [Function],
                                                                                ";
",
                                                                              ],
                                                                            },
                                                                            "displayName": "styled.i",
                                                                            "foldedComponentIds": Array [],
                                                                            "render": [Function],
                                                                            "styledComponentId": "sc-bdVaJa",
                                                                            "target": "i",
                                                                            "toString": [Function],
                                                                            "warnTooManyClasses": [Function],
                                                                            "withComponent": [Function],
                                                                          }
                                                                        }
                                                                        forwardedRef={null}
                                                                        size="tiny"
                                                                      >
                                                                        <i
                                                                          className="sc-bdVaJa jWbhAs natds-icons natds-icons-outlined-action-calendar undefined"
                                                                          size="tiny"
                                                                        />
                                                                      </StyledComponent>
                                                                    </styled.i>
                                                                  </ForwardRef>
                                                                </WithTheme(ForwardRef)>
                                                              </span>
                                                              <NoSsr>
                                                                <WithStyles(memo)
                                                                  center={true}
                                                                >
                                                                  <ForwardRef(TouchRipple)
                                                                    center={true}
                                                                    classes={
                                                                      Object {
                                                                        "child": "MuiTouchRipple-child",
                                                                        "childLeaving": "MuiTouchRipple-childLeaving",
                                                                        "childPulsate": "MuiTouchRipple-childPulsate",
                                                                        "ripple": "MuiTouchRipple-ripple",
                                                                        "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                        "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                        "root": "MuiTouchRipple-root",
                                                                      }
                                                                    }
                                                                  >
                                                                    <span
                                                                      className="MuiTouchRipple-root"
                                                                    >
                                                                      <TransitionGroup
                                                                        childFactory={[Function]}
                                                                        component={null}
                                                                        exit={true}
                                                                      />
                                                                    </span>
                                                                  </ForwardRef(TouchRipple)>
                                                                </WithStyles(memo)>
                                                              </NoSsr>
                                                            </button>
                                                          </ForwardRef(ButtonBase)>
                                                        </WithStyles(ForwardRef(ButtonBase))>
                                                      </ForwardRef(IconButton)>
                                                    </WithStyles(ForwardRef(IconButton))>
                                                  </div>
                                                </ForwardRef(InputAdornment)>
                                              </WithStyles(ForwardRef(InputAdornment))>
                                            </div>
                                          </ForwardRef(InputBase)>
                                        </WithStyles(ForwardRef(InputBase))>
                                      </ForwardRef(Input)>
                                    </WithStyles(ForwardRef(Input))>
                                  </div>
                                </ForwardRef(FormControl)>
                              </WithStyles(ForwardRef(FormControl))>
                            </ForwardRef(TextField)>
                          </WithStyles(ForwardRef(TextField))>
                        </Rifm>
                      </Component>
                      <WithStyles(ModalDialog)
                        cancelLabel="Cancel"
                        clearLabel="Clear"
                        clearable={false}
                        okLabel="OK"
                        onAccept={[Function]}
                        onClear={[Function]}
                        onDismiss={[Function]}
                        onSetToday={[Function]}
                        open={false}
                        showTodayButton={false}
                        todayLabel="Today"
                      >
                        <ModalDialog
                          cancelLabel="Cancel"
                          classes={
                            Object {
                              "dialog": "MuiPickersModal-dialog",
                              "dialogRoot": "MuiPickersModal-dialogRoot",
                              "dialogRootWider": "MuiPickersModal-dialogRootWider",
                              "withAdditionalAction": "MuiPickersModal-withAdditionalAction",
                            }
                          }
                          clearLabel="Clear"
                          clearable={false}
                          okLabel="OK"
                          onAccept={[Function]}
                          onClear={[Function]}
                          onDismiss={[Function]}
                          onSetToday={[Function]}
                          open={false}
                          showTodayButton={false}
                          todayLabel="Today"
                        >
                          <WithStyles(ForwardRef(Dialog))
                            classes={
                              Object {
                                "paper": "MuiPickersModal-dialogRoot",
                              }
                            }
                            onClose={[Function]}
                            open={false}
                            role="dialog"
                          >
                            <ForwardRef(Dialog)
                              classes={
                                Object {
                                  "container": "MuiDialog-container",
                                  "paper": "MuiDialog-paper MuiPickersModal-dialogRoot",
                                  "paperFullScreen": "MuiDialog-paperFullScreen",
                                  "paperFullWidth": "MuiDialog-paperFullWidth",
                                  "paperScrollBody": "MuiDialog-paperScrollBody",
                                  "paperScrollPaper": "MuiDialog-paperScrollPaper",
                                  "paperWidthFalse": "MuiDialog-paperWidthFalse",
                                  "paperWidthLg": "MuiDialog-paperWidthLg",
                                  "paperWidthMd": "MuiDialog-paperWidthMd",
                                  "paperWidthSm": "MuiDialog-paperWidthSm",
                                  "paperWidthXl": "MuiDialog-paperWidthXl",
                                  "paperWidthXs": "MuiDialog-paperWidthXs",
                                  "root": "MuiDialog-root",
                                  "scrollBody": "MuiDialog-scrollBody",
                                  "scrollPaper": "MuiDialog-scrollPaper",
                                }
                              }
                              onClose={[Function]}
                              open={false}
                              role="dialog"
                            >
                              <ForwardRef(Modal)
                                BackdropComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "Naked": Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "propTypes": Object {
                                        "children": [Function],
                                        "className": [Function],
                                        "classes": [Function],
                                        "invisible": [Function],
                                        "open": [Function],
                                        "transitionDuration": [Function],
                                      },
                                      "render": [Function],
                                    },
                                    "displayName": "WithStyles(ForwardRef(Backdrop))",
                                    "options": Object {
                                      "defaultTheme": Object {
                                        "breakpoints": Object {
                                          "between": [Function],
                                          "down": [Function],
                                          "keys": Array [
                                            "xs",
                                            "sm",
                                            "md",
                                            "lg",
                                            "xl",
                                          ],
                                          "only": [Function],
                                          "up": [Function],
                                          "values": Object {
                                            "lg": 1280,
                                            "md": 960,
                                            "sm": 600,
                                            "xl": 1920,
                                            "xs": 0,
                                          },
                                          "width": [Function],
                                        },
                                        "direction": "ltr",
                                        "mixins": Object {
                                          "gutters": [Function],
                                          "toolbar": Object {
                                            "@media (min-width:0px) and (orientation: landscape)": Object {
                                              "minHeight": 48,
                                            },
                                            "@media (min-width:600px)": Object {
                                              "minHeight": 64,
                                            },
                                            "minHeight": 56,
                                          },
                                        },
                                        "overrides": Object {},
                                        "palette": Object {
                                          "action": Object {
                                            "active": "rgba(0, 0, 0, 0.54)",
                                            "disabled": "rgba(0, 0, 0, 0.26)",
                                            "disabledBackground": "rgba(0, 0, 0, 0.12)",
                                            "hover": "rgba(0, 0, 0, 0.08)",
                                            "hoverOpacity": 0.08,
                                            "selected": "rgba(0, 0, 0, 0.14)",
                                          },
                                          "augmentColor": [Function],
                                          "background": Object {
                                            "default": "#fafafa",
                                            "paper": "#fff",
                                          },
                                          "common": Object {
                                            "black": "#000",
                                            "white": "#fff",
                                          },
                                          "contrastThreshold": 3,
                                          "divider": "rgba(0, 0, 0, 0.12)",
                                          "error": Object {
                                            "contrastText": "#fff",
                                            "dark": "#d32f2f",
                                            "light": "#e57373",
                                            "main": "#f44336",
                                          },
                                          "getContrastText": [Function],
                                          "grey": Object {
                                            "100": "#f5f5f5",
                                            "200": "#eeeeee",
                                            "300": "#e0e0e0",
                                            "400": "#bdbdbd",
                                            "50": "#fafafa",
                                            "500": "#9e9e9e",
                                            "600": "#757575",
                                            "700": "#616161",
                                            "800": "#424242",
                                            "900": "#212121",
                                            "A100": "#d5d5d5",
                                            "A200": "#aaaaaa",
                                            "A400": "#303030",
                                            "A700": "#616161",
                                          },
                                          "info": Object {
                                            "contrastText": "#fff",
                                            "dark": "#1976d2",
                                            "light": "#64b5f6",
                                            "main": "#2196f3",
                                          },
                                          "primary": Object {
                                            "contrastText": "#fff",
                                            "dark": "#303f9f",
                                            "light": "#7986cb",
                                            "main": "#3f51b5",
                                          },
                                          "secondary": Object {
                                            "contrastText": "#fff",
                                            "dark": "#c51162",
                                            "light": "#ff4081",
                                            "main": "#f50057",
                                          },
                                          "success": Object {
                                            "contrastText": "rgba(0, 0, 0, 0.87)",
                                            "dark": "#388e3c",
                                            "light": "#81c784",
                                            "main": "#4caf50",
                                          },
                                          "text": Object {
                                            "disabled": "rgba(0, 0, 0, 0.38)",
                                            "hint": "rgba(0, 0, 0, 0.38)",
                                            "primary": "rgba(0, 0, 0, 0.87)",
                                            "secondary": "rgba(0, 0, 0, 0.54)",
                                          },
                                          "tonalOffset": 0.2,
                                          "type": "light",
                                          "warning": Object {
                                            "contrastText": "rgba(0, 0, 0, 0.87)",
                                            "dark": "#f57c00",
                                            "light": "#ffb74d",
                                            "main": "#ff9800",
                                          },
                                        },
                                        "props": Object {},
                                        "shadows": Array [
                                          "none",
                                          "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                          "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                          "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                          "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                          "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                          "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                          "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                          "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                          "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                          "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                          "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                          "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                          "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                          "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                          "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                          "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                          "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                          "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                          "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                          "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                          "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                          "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                          "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                          "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                                        ],
                                        "shape": Object {
                                          "borderRadius": 4,
                                        },
                                        "spacing": [Function],
                                        "transitions": Object {
                                          "create": [Function],
                                          "duration": Object {
                                            "complex": 375,
                                            "enteringScreen": 225,
                                            "leavingScreen": 195,
                                            "short": 250,
                                            "shorter": 200,
                                            "shortest": 150,
                                            "standard": 300,
                                          },
                                          "easing": Object {
                                            "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                            "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                            "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                            "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                                          },
                                          "getAutoHeightDuration": [Function],
                                        },
                                        "typography": Object {
                                          "body1": Object {
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": "1rem",
                                            "fontWeight": 400,
                                            "letterSpacing": "0.00938em",
                                            "lineHeight": 1.5,
                                          },
                                          "body2": Object {
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": "0.875rem",
                                            "fontWeight": 400,
                                            "letterSpacing": "0.01071em",
                                            "lineHeight": 1.43,
                                          },
                                          "button": Object {
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": "0.875rem",
                                            "fontWeight": 500,
                                            "letterSpacing": "0.02857em",
                                            "lineHeight": 1.75,
                                            "textTransform": "uppercase",
                                          },
                                          "caption": Object {
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": "0.75rem",
                                            "fontWeight": 400,
                                            "letterSpacing": "0.03333em",
                                            "lineHeight": 1.66,
                                          },
                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                          "fontSize": 14,
                                          "fontWeightBold": 700,
                                          "fontWeightLight": 300,
                                          "fontWeightMedium": 500,
                                          "fontWeightRegular": 400,
                                          "h1": Object {
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": "6rem",
                                            "fontWeight": 300,
                                            "letterSpacing": "-0.01562em",
                                            "lineHeight": 1.167,
                                          },
                                          "h2": Object {
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": "3.75rem",
                                            "fontWeight": 300,
                                            "letterSpacing": "-0.00833em",
                                            "lineHeight": 1.2,
                                          },
                                          "h3": Object {
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": "3rem",
                                            "fontWeight": 400,
                                            "letterSpacing": "0em",
                                            "lineHeight": 1.167,
                                          },
                                          "h4": Object {
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": "2.125rem",
                                            "fontWeight": 400,
                                            "letterSpacing": "0.00735em",
                                            "lineHeight": 1.235,
                                          },
                                          "h5": Object {
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": "1.5rem",
                                            "fontWeight": 400,
                                            "letterSpacing": "0em",
                                            "lineHeight": 1.334,
                                          },
                                          "h6": Object {
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": "1.25rem",
                                            "fontWeight": 500,
                                            "letterSpacing": "0.0075em",
                                            "lineHeight": 1.6,
                                          },
                                          "htmlFontSize": 16,
                                          "overline": Object {
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": "0.75rem",
                                            "fontWeight": 400,
                                            "letterSpacing": "0.08333em",
                                            "lineHeight": 2.66,
                                            "textTransform": "uppercase",
                                          },
                                          "pxToRem": [Function],
                                          "round": [Function],
                                          "subtitle1": Object {
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": "1rem",
                                            "fontWeight": 400,
                                            "letterSpacing": "0.00938em",
                                            "lineHeight": 1.75,
                                          },
                                          "subtitle2": Object {
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": "0.875rem",
                                            "fontWeight": 500,
                                            "letterSpacing": "0.00714em",
                                            "lineHeight": 1.57,
                                          },
                                        },
                                        "zIndex": Object {
                                          "appBar": 1100,
                                          "drawer": 1200,
                                          "mobileStepper": 1000,
                                          "modal": 1300,
                                          "snackbar": 1400,
                                          "speedDial": 1050,
                                          "tooltip": 1500,
                                        },
                                      },
                                      "name": "MuiBackdrop",
                                    },
                                    "propTypes": Object {
                                      "classes": [Function],
                                      "innerRef": [Function],
                                    },
                                    "render": [Function],
                                    "useStyles": [Function],
                                  }
                                }
                                BackdropProps={
                                  Object {
                                    "transitionDuration": Object {
                                      "enter": 225,
                                      "exit": 195,
                                    },
                                  }
                                }
                                className="MuiDialog-root"
                                closeAfterTransition={true}
                                disableBackdropClick={false}
                                disableEscapeKeyDown={false}
                                onClose={[Function]}
                                open={false}
                                role="dialog"
                              />
                            </ForwardRef(Dialog)>
                          </WithStyles(ForwardRef(Dialog))>
                        </ModalDialog>
                      </WithStyles(ModalDialog)>
                    </Component>
                  </Component>
                </PickerWithState>
              </div>
            </StyledComponent>
          </styled.div>
        </Component>
      </ForwardRef>
    </WithTheme(ForwardRef)>
  </Component>
</Component>
`;
